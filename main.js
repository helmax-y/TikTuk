(() => {
  var __create = Object.create;
  var __defProp = Object.defineProperty;
  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
  var __getOwnPropNames = Object.getOwnPropertyNames;
  var __getProtoOf = Object.getPrototypeOf;
  var __hasOwnProp = Object.prototype.hasOwnProperty;
  var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
  var __commonJS = (cb, mod) => function __require() {
    return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
  };
  var __reExport = (target, module, copyDefault, desc) => {
    if (module && typeof module === "object" || typeof module === "function") {
      for (let key of __getOwnPropNames(module))
        if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
          __defProp(target, key, { get: () => module[key], enumerable: !(desc = __getOwnPropDesc(module, key)) || desc.enumerable });
    }
    return target;
  };
  var __toESM = (module, isNodeMode) => {
    return __reExport(__markAsModule(__defProp(module != null ? __create(__getProtoOf(module)) : {}, "default", !isNodeMode && module && module.__esModule ? { get: () => module.default, enumerable: true } : { value: module, enumerable: true })), module);
  };

  // node_modules/object-assign/index.js
  var require_object_assign = __commonJS({
    "node_modules/object-assign/index.js"(exports, module) {
      "use strict";
      var getOwnPropertySymbols = Object.getOwnPropertySymbols;
      var hasOwnProperty = Object.prototype.hasOwnProperty;
      var propIsEnumerable = Object.prototype.propertyIsEnumerable;
      function toObject(val) {
        if (val === null || val === void 0) {
          throw new TypeError("Object.assign cannot be called with null or undefined");
        }
        return Object(val);
      }
      function shouldUseNative() {
        try {
          if (!Object.assign) {
            return false;
          }
          var test1 = new String("abc");
          test1[5] = "de";
          if (Object.getOwnPropertyNames(test1)[0] === "5") {
            return false;
          }
          var test2 = {};
          for (var i2 = 0; i2 < 10; i2++) {
            test2["_" + String.fromCharCode(i2)] = i2;
          }
          var order2 = Object.getOwnPropertyNames(test2).map(function(n2) {
            return test2[n2];
          });
          if (order2.join("") !== "0123456789") {
            return false;
          }
          var test3 = {};
          "abcdefghijklmnopqrst".split("").forEach(function(letter) {
            test3[letter] = letter;
          });
          if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") {
            return false;
          }
          return true;
        } catch (err) {
          return false;
        }
      }
      module.exports = shouldUseNative() ? Object.assign : function(target, source) {
        var from;
        var to = toObject(target);
        var symbols;
        for (var s2 = 1; s2 < arguments.length; s2++) {
          from = Object(arguments[s2]);
          for (var key in from) {
            if (hasOwnProperty.call(from, key)) {
              to[key] = from[key];
            }
          }
          if (getOwnPropertySymbols) {
            symbols = getOwnPropertySymbols(from);
            for (var i2 = 0; i2 < symbols.length; i2++) {
              if (propIsEnumerable.call(from, symbols[i2])) {
                to[symbols[i2]] = from[symbols[i2]];
              }
            }
          }
        }
        return to;
      };
    }
  });

  // node_modules/react/cjs/react.development.js
  var require_react_development = __commonJS({
    "node_modules/react/cjs/react.development.js"(exports) {
      "use strict";
      if (true) {
        (function() {
          "use strict";
          var _assign = require_object_assign();
          var ReactVersion = "17.0.2";
          var REACT_ELEMENT_TYPE = 60103;
          var REACT_PORTAL_TYPE = 60106;
          exports.Fragment = 60107;
          exports.StrictMode = 60108;
          exports.Profiler = 60114;
          var REACT_PROVIDER_TYPE = 60109;
          var REACT_CONTEXT_TYPE = 60110;
          var REACT_FORWARD_REF_TYPE = 60112;
          exports.Suspense = 60113;
          var REACT_SUSPENSE_LIST_TYPE = 60120;
          var REACT_MEMO_TYPE = 60115;
          var REACT_LAZY_TYPE = 60116;
          var REACT_BLOCK_TYPE = 60121;
          var REACT_SERVER_BLOCK_TYPE = 60122;
          var REACT_FUNDAMENTAL_TYPE = 60117;
          var REACT_SCOPE_TYPE = 60119;
          var REACT_OPAQUE_ID_TYPE = 60128;
          var REACT_DEBUG_TRACING_MODE_TYPE = 60129;
          var REACT_OFFSCREEN_TYPE = 60130;
          var REACT_LEGACY_HIDDEN_TYPE = 60131;
          if (typeof Symbol === "function" && Symbol.for) {
            var symbolFor = Symbol.for;
            REACT_ELEMENT_TYPE = symbolFor("react.element");
            REACT_PORTAL_TYPE = symbolFor("react.portal");
            exports.Fragment = symbolFor("react.fragment");
            exports.StrictMode = symbolFor("react.strict_mode");
            exports.Profiler = symbolFor("react.profiler");
            REACT_PROVIDER_TYPE = symbolFor("react.provider");
            REACT_CONTEXT_TYPE = symbolFor("react.context");
            REACT_FORWARD_REF_TYPE = symbolFor("react.forward_ref");
            exports.Suspense = symbolFor("react.suspense");
            REACT_SUSPENSE_LIST_TYPE = symbolFor("react.suspense_list");
            REACT_MEMO_TYPE = symbolFor("react.memo");
            REACT_LAZY_TYPE = symbolFor("react.lazy");
            REACT_BLOCK_TYPE = symbolFor("react.block");
            REACT_SERVER_BLOCK_TYPE = symbolFor("react.server.block");
            REACT_FUNDAMENTAL_TYPE = symbolFor("react.fundamental");
            REACT_SCOPE_TYPE = symbolFor("react.scope");
            REACT_OPAQUE_ID_TYPE = symbolFor("react.opaque.id");
            REACT_DEBUG_TRACING_MODE_TYPE = symbolFor("react.debug_trace_mode");
            REACT_OFFSCREEN_TYPE = symbolFor("react.offscreen");
            REACT_LEGACY_HIDDEN_TYPE = symbolFor("react.legacy_hidden");
          }
          var MAYBE_ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
          var FAUX_ITERATOR_SYMBOL = "@@iterator";
          function getIteratorFn(maybeIterable) {
            if (maybeIterable === null || typeof maybeIterable !== "object") {
              return null;
            }
            var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
            if (typeof maybeIterator === "function") {
              return maybeIterator;
            }
            return null;
          }
          var ReactCurrentDispatcher = {
            current: null
          };
          var ReactCurrentBatchConfig = {
            transition: 0
          };
          var ReactCurrentOwner = {
            current: null
          };
          var ReactDebugCurrentFrame = {};
          var currentExtraStackFrame = null;
          function setExtraStackFrame(stack) {
            {
              currentExtraStackFrame = stack;
            }
          }
          {
            ReactDebugCurrentFrame.setExtraStackFrame = function(stack) {
              {
                currentExtraStackFrame = stack;
              }
            };
            ReactDebugCurrentFrame.getCurrentStack = null;
            ReactDebugCurrentFrame.getStackAddendum = function() {
              var stack = "";
              if (currentExtraStackFrame) {
                stack += currentExtraStackFrame;
              }
              var impl = ReactDebugCurrentFrame.getCurrentStack;
              if (impl) {
                stack += impl() || "";
              }
              return stack;
            };
          }
          var IsSomeRendererActing = {
            current: false
          };
          var ReactSharedInternals = {
            ReactCurrentDispatcher,
            ReactCurrentBatchConfig,
            ReactCurrentOwner,
            IsSomeRendererActing,
            assign: _assign
          };
          {
            ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;
          }
          function warn(format) {
            {
              for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                args[_key - 1] = arguments[_key];
              }
              printWarning("warn", format, args);
            }
          }
          function error(format) {
            {
              for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                args[_key2 - 1] = arguments[_key2];
              }
              printWarning("error", format, args);
            }
          }
          function printWarning(level, format, args) {
            {
              var ReactDebugCurrentFrame2 = ReactSharedInternals.ReactDebugCurrentFrame;
              var stack = ReactDebugCurrentFrame2.getStackAddendum();
              if (stack !== "") {
                format += "%s";
                args = args.concat([stack]);
              }
              var argsWithFormat = args.map(function(item) {
                return "" + item;
              });
              argsWithFormat.unshift("Warning: " + format);
              Function.prototype.apply.call(console[level], console, argsWithFormat);
            }
          }
          var didWarnStateUpdateForUnmountedComponent = {};
          function warnNoop(publicInstance, callerName) {
            {
              var _constructor = publicInstance.constructor;
              var componentName = _constructor && (_constructor.displayName || _constructor.name) || "ReactClass";
              var warningKey = componentName + "." + callerName;
              if (didWarnStateUpdateForUnmountedComponent[warningKey]) {
                return;
              }
              error("Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.", callerName, componentName);
              didWarnStateUpdateForUnmountedComponent[warningKey] = true;
            }
          }
          var ReactNoopUpdateQueue = {
            isMounted: function(publicInstance) {
              return false;
            },
            enqueueForceUpdate: function(publicInstance, callback, callerName) {
              warnNoop(publicInstance, "forceUpdate");
            },
            enqueueReplaceState: function(publicInstance, completeState, callback, callerName) {
              warnNoop(publicInstance, "replaceState");
            },
            enqueueSetState: function(publicInstance, partialState, callback, callerName) {
              warnNoop(publicInstance, "setState");
            }
          };
          var emptyObject = {};
          {
            Object.freeze(emptyObject);
          }
          function Component(props, context, updater) {
            this.props = props;
            this.context = context;
            this.refs = emptyObject;
            this.updater = updater || ReactNoopUpdateQueue;
          }
          Component.prototype.isReactComponent = {};
          Component.prototype.setState = function(partialState, callback) {
            if (!(typeof partialState === "object" || typeof partialState === "function" || partialState == null)) {
              {
                throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
              }
            }
            this.updater.enqueueSetState(this, partialState, callback, "setState");
          };
          Component.prototype.forceUpdate = function(callback) {
            this.updater.enqueueForceUpdate(this, callback, "forceUpdate");
          };
          {
            var deprecatedAPIs = {
              isMounted: ["isMounted", "Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks."],
              replaceState: ["replaceState", "Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236)."]
            };
            var defineDeprecationWarning = function(methodName, info) {
              Object.defineProperty(Component.prototype, methodName, {
                get: function() {
                  warn("%s(...) is deprecated in plain JavaScript React classes. %s", info[0], info[1]);
                  return void 0;
                }
              });
            };
            for (var fnName in deprecatedAPIs) {
              if (deprecatedAPIs.hasOwnProperty(fnName)) {
                defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
              }
            }
          }
          function ComponentDummy() {
          }
          ComponentDummy.prototype = Component.prototype;
          function PureComponent(props, context, updater) {
            this.props = props;
            this.context = context;
            this.refs = emptyObject;
            this.updater = updater || ReactNoopUpdateQueue;
          }
          var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
          pureComponentPrototype.constructor = PureComponent;
          _assign(pureComponentPrototype, Component.prototype);
          pureComponentPrototype.isPureReactComponent = true;
          function createRef() {
            var refObject = {
              current: null
            };
            {
              Object.seal(refObject);
            }
            return refObject;
          }
          function getWrappedName(outerType, innerType, wrapperName) {
            var functionName = innerType.displayName || innerType.name || "";
            return outerType.displayName || (functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName);
          }
          function getContextName(type) {
            return type.displayName || "Context";
          }
          function getComponentName(type) {
            if (type == null) {
              return null;
            }
            {
              if (typeof type.tag === "number") {
                error("Received an unexpected object in getComponentName(). This is likely a bug in React. Please file an issue.");
              }
            }
            if (typeof type === "function") {
              return type.displayName || type.name || null;
            }
            if (typeof type === "string") {
              return type;
            }
            switch (type) {
              case exports.Fragment:
                return "Fragment";
              case REACT_PORTAL_TYPE:
                return "Portal";
              case exports.Profiler:
                return "Profiler";
              case exports.StrictMode:
                return "StrictMode";
              case exports.Suspense:
                return "Suspense";
              case REACT_SUSPENSE_LIST_TYPE:
                return "SuspenseList";
            }
            if (typeof type === "object") {
              switch (type.$$typeof) {
                case REACT_CONTEXT_TYPE:
                  var context = type;
                  return getContextName(context) + ".Consumer";
                case REACT_PROVIDER_TYPE:
                  var provider = type;
                  return getContextName(provider._context) + ".Provider";
                case REACT_FORWARD_REF_TYPE:
                  return getWrappedName(type, type.render, "ForwardRef");
                case REACT_MEMO_TYPE:
                  return getComponentName(type.type);
                case REACT_BLOCK_TYPE:
                  return getComponentName(type._render);
                case REACT_LAZY_TYPE: {
                  var lazyComponent = type;
                  var payload = lazyComponent._payload;
                  var init = lazyComponent._init;
                  try {
                    return getComponentName(init(payload));
                  } catch (x2) {
                    return null;
                  }
                }
              }
            }
            return null;
          }
          var hasOwnProperty = Object.prototype.hasOwnProperty;
          var RESERVED_PROPS = {
            key: true,
            ref: true,
            __self: true,
            __source: true
          };
          var specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;
          {
            didWarnAboutStringRefs = {};
          }
          function hasValidRef(config) {
            {
              if (hasOwnProperty.call(config, "ref")) {
                var getter = Object.getOwnPropertyDescriptor(config, "ref").get;
                if (getter && getter.isReactWarning) {
                  return false;
                }
              }
            }
            return config.ref !== void 0;
          }
          function hasValidKey(config) {
            {
              if (hasOwnProperty.call(config, "key")) {
                var getter = Object.getOwnPropertyDescriptor(config, "key").get;
                if (getter && getter.isReactWarning) {
                  return false;
                }
              }
            }
            return config.key !== void 0;
          }
          function defineKeyPropWarningGetter(props, displayName) {
            var warnAboutAccessingKey = function() {
              {
                if (!specialPropKeyWarningShown) {
                  specialPropKeyWarningShown = true;
                  error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
                }
              }
            };
            warnAboutAccessingKey.isReactWarning = true;
            Object.defineProperty(props, "key", {
              get: warnAboutAccessingKey,
              configurable: true
            });
          }
          function defineRefPropWarningGetter(props, displayName) {
            var warnAboutAccessingRef = function() {
              {
                if (!specialPropRefWarningShown) {
                  specialPropRefWarningShown = true;
                  error("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
                }
              }
            };
            warnAboutAccessingRef.isReactWarning = true;
            Object.defineProperty(props, "ref", {
              get: warnAboutAccessingRef,
              configurable: true
            });
          }
          function warnIfStringRefCannotBeAutoConverted(config) {
            {
              if (typeof config.ref === "string" && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {
                var componentName = getComponentName(ReactCurrentOwner.current.type);
                if (!didWarnAboutStringRefs[componentName]) {
                  error('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', componentName, config.ref);
                  didWarnAboutStringRefs[componentName] = true;
                }
              }
            }
          }
          var ReactElement = function(type, key, ref, self2, source, owner, props) {
            var element = {
              $$typeof: REACT_ELEMENT_TYPE,
              type,
              key,
              ref,
              props,
              _owner: owner
            };
            {
              element._store = {};
              Object.defineProperty(element._store, "validated", {
                configurable: false,
                enumerable: false,
                writable: true,
                value: false
              });
              Object.defineProperty(element, "_self", {
                configurable: false,
                enumerable: false,
                writable: false,
                value: self2
              });
              Object.defineProperty(element, "_source", {
                configurable: false,
                enumerable: false,
                writable: false,
                value: source
              });
              if (Object.freeze) {
                Object.freeze(element.props);
                Object.freeze(element);
              }
            }
            return element;
          };
          function createElement3(type, config, children) {
            var propName;
            var props = {};
            var key = null;
            var ref = null;
            var self2 = null;
            var source = null;
            if (config != null) {
              if (hasValidRef(config)) {
                ref = config.ref;
                {
                  warnIfStringRefCannotBeAutoConverted(config);
                }
              }
              if (hasValidKey(config)) {
                key = "" + config.key;
              }
              self2 = config.__self === void 0 ? null : config.__self;
              source = config.__source === void 0 ? null : config.__source;
              for (propName in config) {
                if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
                  props[propName] = config[propName];
                }
              }
            }
            var childrenLength = arguments.length - 2;
            if (childrenLength === 1) {
              props.children = children;
            } else if (childrenLength > 1) {
              var childArray = Array(childrenLength);
              for (var i2 = 0; i2 < childrenLength; i2++) {
                childArray[i2] = arguments[i2 + 2];
              }
              {
                if (Object.freeze) {
                  Object.freeze(childArray);
                }
              }
              props.children = childArray;
            }
            if (type && type.defaultProps) {
              var defaultProps2 = type.defaultProps;
              for (propName in defaultProps2) {
                if (props[propName] === void 0) {
                  props[propName] = defaultProps2[propName];
                }
              }
            }
            {
              if (key || ref) {
                var displayName = typeof type === "function" ? type.displayName || type.name || "Unknown" : type;
                if (key) {
                  defineKeyPropWarningGetter(props, displayName);
                }
                if (ref) {
                  defineRefPropWarningGetter(props, displayName);
                }
              }
            }
            return ReactElement(type, key, ref, self2, source, ReactCurrentOwner.current, props);
          }
          function cloneAndReplaceKey(oldElement, newKey) {
            var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
            return newElement;
          }
          function cloneElement4(element, config, children) {
            if (!!(element === null || element === void 0)) {
              {
                throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + element + ".");
              }
            }
            var propName;
            var props = _assign({}, element.props);
            var key = element.key;
            var ref = element.ref;
            var self2 = element._self;
            var source = element._source;
            var owner = element._owner;
            if (config != null) {
              if (hasValidRef(config)) {
                ref = config.ref;
                owner = ReactCurrentOwner.current;
              }
              if (hasValidKey(config)) {
                key = "" + config.key;
              }
              var defaultProps2;
              if (element.type && element.type.defaultProps) {
                defaultProps2 = element.type.defaultProps;
              }
              for (propName in config) {
                if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
                  if (config[propName] === void 0 && defaultProps2 !== void 0) {
                    props[propName] = defaultProps2[propName];
                  } else {
                    props[propName] = config[propName];
                  }
                }
              }
            }
            var childrenLength = arguments.length - 2;
            if (childrenLength === 1) {
              props.children = children;
            } else if (childrenLength > 1) {
              var childArray = Array(childrenLength);
              for (var i2 = 0; i2 < childrenLength; i2++) {
                childArray[i2] = arguments[i2 + 2];
              }
              props.children = childArray;
            }
            return ReactElement(element.type, key, ref, self2, source, owner, props);
          }
          function isValidElement4(object) {
            return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
          }
          var SEPARATOR = ".";
          var SUBSEPARATOR = ":";
          function escape(key) {
            var escapeRegex = /[=:]/g;
            var escaperLookup = {
              "=": "=0",
              ":": "=2"
            };
            var escapedString = key.replace(escapeRegex, function(match) {
              return escaperLookup[match];
            });
            return "$" + escapedString;
          }
          var didWarnAboutMaps = false;
          var userProvidedKeyEscapeRegex = /\/+/g;
          function escapeUserProvidedKey(text) {
            return text.replace(userProvidedKeyEscapeRegex, "$&/");
          }
          function getElementKey(element, index2) {
            if (typeof element === "object" && element !== null && element.key != null) {
              return escape("" + element.key);
            }
            return index2.toString(36);
          }
          function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {
            var type = typeof children;
            if (type === "undefined" || type === "boolean") {
              children = null;
            }
            var invokeCallback = false;
            if (children === null) {
              invokeCallback = true;
            } else {
              switch (type) {
                case "string":
                case "number":
                  invokeCallback = true;
                  break;
                case "object":
                  switch (children.$$typeof) {
                    case REACT_ELEMENT_TYPE:
                    case REACT_PORTAL_TYPE:
                      invokeCallback = true;
                  }
              }
            }
            if (invokeCallback) {
              var _child = children;
              var mappedChild = callback(_child);
              var childKey = nameSoFar === "" ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;
              if (Array.isArray(mappedChild)) {
                var escapedChildKey = "";
                if (childKey != null) {
                  escapedChildKey = escapeUserProvidedKey(childKey) + "/";
                }
                mapIntoArray(mappedChild, array, escapedChildKey, "", function(c2) {
                  return c2;
                });
              } else if (mappedChild != null) {
                if (isValidElement4(mappedChild)) {
                  mappedChild = cloneAndReplaceKey(mappedChild, escapedPrefix + (mappedChild.key && (!_child || _child.key !== mappedChild.key) ? escapeUserProvidedKey("" + mappedChild.key) + "/" : "") + childKey);
                }
                array.push(mappedChild);
              }
              return 1;
            }
            var child;
            var nextName;
            var subtreeCount = 0;
            var nextNamePrefix = nameSoFar === "" ? SEPARATOR : nameSoFar + SUBSEPARATOR;
            if (Array.isArray(children)) {
              for (var i2 = 0; i2 < children.length; i2++) {
                child = children[i2];
                nextName = nextNamePrefix + getElementKey(child, i2);
                subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
              }
            } else {
              var iteratorFn = getIteratorFn(children);
              if (typeof iteratorFn === "function") {
                var iterableChildren = children;
                {
                  if (iteratorFn === iterableChildren.entries) {
                    if (!didWarnAboutMaps) {
                      warn("Using Maps as children is not supported. Use an array of keyed ReactElements instead.");
                    }
                    didWarnAboutMaps = true;
                  }
                }
                var iterator = iteratorFn.call(iterableChildren);
                var step;
                var ii = 0;
                while (!(step = iterator.next()).done) {
                  child = step.value;
                  nextName = nextNamePrefix + getElementKey(child, ii++);
                  subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
                }
              } else if (type === "object") {
                var childrenString = "" + children;
                {
                  {
                    throw Error("Objects are not valid as a React child (found: " + (childrenString === "[object Object]" ? "object with keys {" + Object.keys(children).join(", ") + "}" : childrenString) + "). If you meant to render a collection of children, use an array instead.");
                  }
                }
              }
            }
            return subtreeCount;
          }
          function mapChildren(children, func, context) {
            if (children == null) {
              return children;
            }
            var result = [];
            var count = 0;
            mapIntoArray(children, result, "", "", function(child) {
              return func.call(context, child, count++);
            });
            return result;
          }
          function countChildren(children) {
            var n2 = 0;
            mapChildren(children, function() {
              n2++;
            });
            return n2;
          }
          function forEachChildren(children, forEachFunc, forEachContext) {
            mapChildren(children, function() {
              forEachFunc.apply(this, arguments);
            }, forEachContext);
          }
          function toArray(children) {
            return mapChildren(children, function(child) {
              return child;
            }) || [];
          }
          function onlyChild(children) {
            if (!isValidElement4(children)) {
              {
                throw Error("React.Children.only expected to receive a single React element child.");
              }
            }
            return children;
          }
          function createContext3(defaultValue, calculateChangedBits) {
            if (calculateChangedBits === void 0) {
              calculateChangedBits = null;
            } else {
              {
                if (calculateChangedBits !== null && typeof calculateChangedBits !== "function") {
                  error("createContext: Expected the optional second argument to be a function. Instead received: %s", calculateChangedBits);
                }
              }
            }
            var context = {
              $$typeof: REACT_CONTEXT_TYPE,
              _calculateChangedBits: calculateChangedBits,
              _currentValue: defaultValue,
              _currentValue2: defaultValue,
              _threadCount: 0,
              Provider: null,
              Consumer: null
            };
            context.Provider = {
              $$typeof: REACT_PROVIDER_TYPE,
              _context: context
            };
            var hasWarnedAboutUsingNestedContextConsumers = false;
            var hasWarnedAboutUsingConsumerProvider = false;
            var hasWarnedAboutDisplayNameOnConsumer = false;
            {
              var Consumer = {
                $$typeof: REACT_CONTEXT_TYPE,
                _context: context,
                _calculateChangedBits: context._calculateChangedBits
              };
              Object.defineProperties(Consumer, {
                Provider: {
                  get: function() {
                    if (!hasWarnedAboutUsingConsumerProvider) {
                      hasWarnedAboutUsingConsumerProvider = true;
                      error("Rendering <Context.Consumer.Provider> is not supported and will be removed in a future major release. Did you mean to render <Context.Provider> instead?");
                    }
                    return context.Provider;
                  },
                  set: function(_Provider) {
                    context.Provider = _Provider;
                  }
                },
                _currentValue: {
                  get: function() {
                    return context._currentValue;
                  },
                  set: function(_currentValue) {
                    context._currentValue = _currentValue;
                  }
                },
                _currentValue2: {
                  get: function() {
                    return context._currentValue2;
                  },
                  set: function(_currentValue2) {
                    context._currentValue2 = _currentValue2;
                  }
                },
                _threadCount: {
                  get: function() {
                    return context._threadCount;
                  },
                  set: function(_threadCount) {
                    context._threadCount = _threadCount;
                  }
                },
                Consumer: {
                  get: function() {
                    if (!hasWarnedAboutUsingNestedContextConsumers) {
                      hasWarnedAboutUsingNestedContextConsumers = true;
                      error("Rendering <Context.Consumer.Consumer> is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?");
                    }
                    return context.Consumer;
                  }
                },
                displayName: {
                  get: function() {
                    return context.displayName;
                  },
                  set: function(displayName) {
                    if (!hasWarnedAboutDisplayNameOnConsumer) {
                      warn("Setting `displayName` on Context.Consumer has no effect. You should set it directly on the context with Context.displayName = '%s'.", displayName);
                      hasWarnedAboutDisplayNameOnConsumer = true;
                    }
                  }
                }
              });
              context.Consumer = Consumer;
            }
            {
              context._currentRenderer = null;
              context._currentRenderer2 = null;
            }
            return context;
          }
          var Uninitialized = -1;
          var Pending = 0;
          var Resolved = 1;
          var Rejected = 2;
          function lazyInitializer(payload) {
            if (payload._status === Uninitialized) {
              var ctor = payload._result;
              var thenable = ctor();
              var pending = payload;
              pending._status = Pending;
              pending._result = thenable;
              thenable.then(function(moduleObject) {
                if (payload._status === Pending) {
                  var defaultExport = moduleObject.default;
                  {
                    if (defaultExport === void 0) {
                      error("lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))", moduleObject);
                    }
                  }
                  var resolved = payload;
                  resolved._status = Resolved;
                  resolved._result = defaultExport;
                }
              }, function(error2) {
                if (payload._status === Pending) {
                  var rejected = payload;
                  rejected._status = Rejected;
                  rejected._result = error2;
                }
              });
            }
            if (payload._status === Resolved) {
              return payload._result;
            } else {
              throw payload._result;
            }
          }
          function lazy(ctor) {
            var payload = {
              _status: -1,
              _result: ctor
            };
            var lazyType = {
              $$typeof: REACT_LAZY_TYPE,
              _payload: payload,
              _init: lazyInitializer
            };
            {
              var defaultProps2;
              var propTypes;
              Object.defineProperties(lazyType, {
                defaultProps: {
                  configurable: true,
                  get: function() {
                    return defaultProps2;
                  },
                  set: function(newDefaultProps) {
                    error("React.lazy(...): It is not supported to assign `defaultProps` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it.");
                    defaultProps2 = newDefaultProps;
                    Object.defineProperty(lazyType, "defaultProps", {
                      enumerable: true
                    });
                  }
                },
                propTypes: {
                  configurable: true,
                  get: function() {
                    return propTypes;
                  },
                  set: function(newPropTypes) {
                    error("React.lazy(...): It is not supported to assign `propTypes` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it.");
                    propTypes = newPropTypes;
                    Object.defineProperty(lazyType, "propTypes", {
                      enumerable: true
                    });
                  }
                }
              });
            }
            return lazyType;
          }
          function forwardRef16(render) {
            {
              if (render != null && render.$$typeof === REACT_MEMO_TYPE) {
                error("forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...)).");
              } else if (typeof render !== "function") {
                error("forwardRef requires a render function but was given %s.", render === null ? "null" : typeof render);
              } else {
                if (render.length !== 0 && render.length !== 2) {
                  error("forwardRef render functions accept exactly two parameters: props and ref. %s", render.length === 1 ? "Did you forget to use the ref parameter?" : "Any additional parameter will be undefined.");
                }
              }
              if (render != null) {
                if (render.defaultProps != null || render.propTypes != null) {
                  error("forwardRef render functions do not support propTypes or defaultProps. Did you accidentally pass a React component?");
                }
              }
            }
            var elementType = {
              $$typeof: REACT_FORWARD_REF_TYPE,
              render
            };
            {
              var ownName;
              Object.defineProperty(elementType, "displayName", {
                enumerable: false,
                configurable: true,
                get: function() {
                  return ownName;
                },
                set: function(name) {
                  ownName = name;
                  if (render.displayName == null) {
                    render.displayName = name;
                  }
                }
              });
            }
            return elementType;
          }
          var enableScopeAPI = false;
          function isValidElementType(type) {
            if (typeof type === "string" || typeof type === "function") {
              return true;
            }
            if (type === exports.Fragment || type === exports.Profiler || type === REACT_DEBUG_TRACING_MODE_TYPE || type === exports.StrictMode || type === exports.Suspense || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_LEGACY_HIDDEN_TYPE || enableScopeAPI) {
              return true;
            }
            if (typeof type === "object" && type !== null) {
              if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_BLOCK_TYPE || type[0] === REACT_SERVER_BLOCK_TYPE) {
                return true;
              }
            }
            return false;
          }
          function memo2(type, compare) {
            {
              if (!isValidElementType(type)) {
                error("memo: The first argument must be a component. Instead received: %s", type === null ? "null" : typeof type);
              }
            }
            var elementType = {
              $$typeof: REACT_MEMO_TYPE,
              type,
              compare: compare === void 0 ? null : compare
            };
            {
              var ownName;
              Object.defineProperty(elementType, "displayName", {
                enumerable: false,
                configurable: true,
                get: function() {
                  return ownName;
                },
                set: function(name) {
                  ownName = name;
                  if (type.displayName == null) {
                    type.displayName = name;
                  }
                }
              });
            }
            return elementType;
          }
          function resolveDispatcher() {
            var dispatcher = ReactCurrentDispatcher.current;
            if (!(dispatcher !== null)) {
              {
                throw Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.");
              }
            }
            return dispatcher;
          }
          function useContext3(Context, unstable_observedBits) {
            var dispatcher = resolveDispatcher();
            {
              if (unstable_observedBits !== void 0) {
                error("useContext() second argument is reserved for future use in React. Passing it is not supported. You passed: %s.%s", unstable_observedBits, typeof unstable_observedBits === "number" && Array.isArray(arguments[2]) ? "\n\nDid you call array.map(useContext)? Calling Hooks inside a loop is not supported. Learn more at https://reactjs.org/link/rules-of-hooks" : "");
              }
              if (Context._context !== void 0) {
                var realContext = Context._context;
                if (realContext.Consumer === Context) {
                  error("Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be removed in a future major release. Did you mean to call useContext(Context) instead?");
                } else if (realContext.Provider === Context) {
                  error("Calling useContext(Context.Provider) is not supported. Did you mean to call useContext(Context) instead?");
                }
              }
            }
            return dispatcher.useContext(Context, unstable_observedBits);
          }
          function useState11(initialState) {
            var dispatcher = resolveDispatcher();
            return dispatcher.useState(initialState);
          }
          function useReducer(reducer, initialArg, init) {
            var dispatcher = resolveDispatcher();
            return dispatcher.useReducer(reducer, initialArg, init);
          }
          function useRef8(initialValue) {
            var dispatcher = resolveDispatcher();
            return dispatcher.useRef(initialValue);
          }
          function useEffect12(create, deps) {
            var dispatcher = resolveDispatcher();
            return dispatcher.useEffect(create, deps);
          }
          function useLayoutEffect3(create, deps) {
            var dispatcher = resolveDispatcher();
            return dispatcher.useLayoutEffect(create, deps);
          }
          function useCallback6(callback, deps) {
            var dispatcher = resolveDispatcher();
            return dispatcher.useCallback(callback, deps);
          }
          function useMemo3(create, deps) {
            var dispatcher = resolveDispatcher();
            return dispatcher.useMemo(create, deps);
          }
          function useImperativeHandle3(ref, create, deps) {
            var dispatcher = resolveDispatcher();
            return dispatcher.useImperativeHandle(ref, create, deps);
          }
          function useDebugValue2(value, formatterFn) {
            {
              var dispatcher = resolveDispatcher();
              return dispatcher.useDebugValue(value, formatterFn);
            }
          }
          var disabledDepth = 0;
          var prevLog;
          var prevInfo;
          var prevWarn;
          var prevError;
          var prevGroup;
          var prevGroupCollapsed;
          var prevGroupEnd;
          function disabledLog() {
          }
          disabledLog.__reactDisabledLog = true;
          function disableLogs() {
            {
              if (disabledDepth === 0) {
                prevLog = console.log;
                prevInfo = console.info;
                prevWarn = console.warn;
                prevError = console.error;
                prevGroup = console.group;
                prevGroupCollapsed = console.groupCollapsed;
                prevGroupEnd = console.groupEnd;
                var props = {
                  configurable: true,
                  enumerable: true,
                  value: disabledLog,
                  writable: true
                };
                Object.defineProperties(console, {
                  info: props,
                  log: props,
                  warn: props,
                  error: props,
                  group: props,
                  groupCollapsed: props,
                  groupEnd: props
                });
              }
              disabledDepth++;
            }
          }
          function reenableLogs() {
            {
              disabledDepth--;
              if (disabledDepth === 0) {
                var props = {
                  configurable: true,
                  enumerable: true,
                  writable: true
                };
                Object.defineProperties(console, {
                  log: _assign({}, props, {
                    value: prevLog
                  }),
                  info: _assign({}, props, {
                    value: prevInfo
                  }),
                  warn: _assign({}, props, {
                    value: prevWarn
                  }),
                  error: _assign({}, props, {
                    value: prevError
                  }),
                  group: _assign({}, props, {
                    value: prevGroup
                  }),
                  groupCollapsed: _assign({}, props, {
                    value: prevGroupCollapsed
                  }),
                  groupEnd: _assign({}, props, {
                    value: prevGroupEnd
                  })
                });
              }
              if (disabledDepth < 0) {
                error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
              }
            }
          }
          var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;
          var prefix;
          function describeBuiltInComponentFrame(name, source, ownerFn) {
            {
              if (prefix === void 0) {
                try {
                  throw Error();
                } catch (x2) {
                  var match = x2.stack.trim().match(/\n( *(at )?)/);
                  prefix = match && match[1] || "";
                }
              }
              return "\n" + prefix + name;
            }
          }
          var reentry = false;
          var componentFrameCache;
          {
            var PossiblyWeakMap = typeof WeakMap === "function" ? WeakMap : Map;
            componentFrameCache = new PossiblyWeakMap();
          }
          function describeNativeComponentFrame(fn, construct) {
            if (!fn || reentry) {
              return "";
            }
            {
              var frame = componentFrameCache.get(fn);
              if (frame !== void 0) {
                return frame;
              }
            }
            var control;
            reentry = true;
            var previousPrepareStackTrace = Error.prepareStackTrace;
            Error.prepareStackTrace = void 0;
            var previousDispatcher;
            {
              previousDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = null;
              disableLogs();
            }
            try {
              if (construct) {
                var Fake = function() {
                  throw Error();
                };
                Object.defineProperty(Fake.prototype, "props", {
                  set: function() {
                    throw Error();
                  }
                });
                if (typeof Reflect === "object" && Reflect.construct) {
                  try {
                    Reflect.construct(Fake, []);
                  } catch (x2) {
                    control = x2;
                  }
                  Reflect.construct(fn, [], Fake);
                } else {
                  try {
                    Fake.call();
                  } catch (x2) {
                    control = x2;
                  }
                  fn.call(Fake.prototype);
                }
              } else {
                try {
                  throw Error();
                } catch (x2) {
                  control = x2;
                }
                fn();
              }
            } catch (sample) {
              if (sample && control && typeof sample.stack === "string") {
                var sampleLines = sample.stack.split("\n");
                var controlLines = control.stack.split("\n");
                var s2 = sampleLines.length - 1;
                var c2 = controlLines.length - 1;
                while (s2 >= 1 && c2 >= 0 && sampleLines[s2] !== controlLines[c2]) {
                  c2--;
                }
                for (; s2 >= 1 && c2 >= 0; s2--, c2--) {
                  if (sampleLines[s2] !== controlLines[c2]) {
                    if (s2 !== 1 || c2 !== 1) {
                      do {
                        s2--;
                        c2--;
                        if (c2 < 0 || sampleLines[s2] !== controlLines[c2]) {
                          var _frame = "\n" + sampleLines[s2].replace(" at new ", " at ");
                          {
                            if (typeof fn === "function") {
                              componentFrameCache.set(fn, _frame);
                            }
                          }
                          return _frame;
                        }
                      } while (s2 >= 1 && c2 >= 0);
                    }
                    break;
                  }
                }
              }
            } finally {
              reentry = false;
              {
                ReactCurrentDispatcher$1.current = previousDispatcher;
                reenableLogs();
              }
              Error.prepareStackTrace = previousPrepareStackTrace;
            }
            var name = fn ? fn.displayName || fn.name : "";
            var syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
            {
              if (typeof fn === "function") {
                componentFrameCache.set(fn, syntheticFrame);
              }
            }
            return syntheticFrame;
          }
          function describeFunctionComponentFrame(fn, source, ownerFn) {
            {
              return describeNativeComponentFrame(fn, false);
            }
          }
          function shouldConstruct(Component2) {
            var prototype = Component2.prototype;
            return !!(prototype && prototype.isReactComponent);
          }
          function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
            if (type == null) {
              return "";
            }
            if (typeof type === "function") {
              {
                return describeNativeComponentFrame(type, shouldConstruct(type));
              }
            }
            if (typeof type === "string") {
              return describeBuiltInComponentFrame(type);
            }
            switch (type) {
              case exports.Suspense:
                return describeBuiltInComponentFrame("Suspense");
              case REACT_SUSPENSE_LIST_TYPE:
                return describeBuiltInComponentFrame("SuspenseList");
            }
            if (typeof type === "object") {
              switch (type.$$typeof) {
                case REACT_FORWARD_REF_TYPE:
                  return describeFunctionComponentFrame(type.render);
                case REACT_MEMO_TYPE:
                  return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
                case REACT_BLOCK_TYPE:
                  return describeFunctionComponentFrame(type._render);
                case REACT_LAZY_TYPE: {
                  var lazyComponent = type;
                  var payload = lazyComponent._payload;
                  var init = lazyComponent._init;
                  try {
                    return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
                  } catch (x2) {
                  }
                }
              }
            }
            return "";
          }
          var loggedTypeFailures = {};
          var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
          function setCurrentlyValidatingElement(element) {
            {
              if (element) {
                var owner = element._owner;
                var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
                ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
              } else {
                ReactDebugCurrentFrame$1.setExtraStackFrame(null);
              }
            }
          }
          function checkPropTypes(typeSpecs, values2, location, componentName, element) {
            {
              var has = Function.call.bind(Object.prototype.hasOwnProperty);
              for (var typeSpecName in typeSpecs) {
                if (has(typeSpecs, typeSpecName)) {
                  var error$1 = void 0;
                  try {
                    if (typeof typeSpecs[typeSpecName] !== "function") {
                      var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                      err.name = "Invariant Violation";
                      throw err;
                    }
                    error$1 = typeSpecs[typeSpecName](values2, typeSpecName, componentName, location, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
                  } catch (ex) {
                    error$1 = ex;
                  }
                  if (error$1 && !(error$1 instanceof Error)) {
                    setCurrentlyValidatingElement(element);
                    error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location, typeSpecName, typeof error$1);
                    setCurrentlyValidatingElement(null);
                  }
                  if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                    loggedTypeFailures[error$1.message] = true;
                    setCurrentlyValidatingElement(element);
                    error("Failed %s type: %s", location, error$1.message);
                    setCurrentlyValidatingElement(null);
                  }
                }
              }
            }
          }
          function setCurrentlyValidatingElement$1(element) {
            {
              if (element) {
                var owner = element._owner;
                var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
                setExtraStackFrame(stack);
              } else {
                setExtraStackFrame(null);
              }
            }
          }
          var propTypesMisspellWarningShown;
          {
            propTypesMisspellWarningShown = false;
          }
          function getDeclarationErrorAddendum() {
            if (ReactCurrentOwner.current) {
              var name = getComponentName(ReactCurrentOwner.current.type);
              if (name) {
                return "\n\nCheck the render method of `" + name + "`.";
              }
            }
            return "";
          }
          function getSourceInfoErrorAddendum(source) {
            if (source !== void 0) {
              var fileName = source.fileName.replace(/^.*[\\\/]/, "");
              var lineNumber = source.lineNumber;
              return "\n\nCheck your code at " + fileName + ":" + lineNumber + ".";
            }
            return "";
          }
          function getSourceInfoErrorAddendumForProps(elementProps) {
            if (elementProps !== null && elementProps !== void 0) {
              return getSourceInfoErrorAddendum(elementProps.__source);
            }
            return "";
          }
          var ownerHasKeyUseWarning = {};
          function getCurrentComponentErrorInfo(parentType) {
            var info = getDeclarationErrorAddendum();
            if (!info) {
              var parentName = typeof parentType === "string" ? parentType : parentType.displayName || parentType.name;
              if (parentName) {
                info = "\n\nCheck the top-level render call using <" + parentName + ">.";
              }
            }
            return info;
          }
          function validateExplicitKey(element, parentType) {
            if (!element._store || element._store.validated || element.key != null) {
              return;
            }
            element._store.validated = true;
            var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
            if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
              return;
            }
            ownerHasKeyUseWarning[currentComponentErrorInfo] = true;
            var childOwner = "";
            if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
              childOwner = " It was passed a child from " + getComponentName(element._owner.type) + ".";
            }
            {
              setCurrentlyValidatingElement$1(element);
              error('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);
              setCurrentlyValidatingElement$1(null);
            }
          }
          function validateChildKeys(node, parentType) {
            if (typeof node !== "object") {
              return;
            }
            if (Array.isArray(node)) {
              for (var i2 = 0; i2 < node.length; i2++) {
                var child = node[i2];
                if (isValidElement4(child)) {
                  validateExplicitKey(child, parentType);
                }
              }
            } else if (isValidElement4(node)) {
              if (node._store) {
                node._store.validated = true;
              }
            } else if (node) {
              var iteratorFn = getIteratorFn(node);
              if (typeof iteratorFn === "function") {
                if (iteratorFn !== node.entries) {
                  var iterator = iteratorFn.call(node);
                  var step;
                  while (!(step = iterator.next()).done) {
                    if (isValidElement4(step.value)) {
                      validateExplicitKey(step.value, parentType);
                    }
                  }
                }
              }
            }
          }
          function validatePropTypes(element) {
            {
              var type = element.type;
              if (type === null || type === void 0 || typeof type === "string") {
                return;
              }
              var propTypes;
              if (typeof type === "function") {
                propTypes = type.propTypes;
              } else if (typeof type === "object" && (type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_MEMO_TYPE)) {
                propTypes = type.propTypes;
              } else {
                return;
              }
              if (propTypes) {
                var name = getComponentName(type);
                checkPropTypes(propTypes, element.props, "prop", name, element);
              } else if (type.PropTypes !== void 0 && !propTypesMisspellWarningShown) {
                propTypesMisspellWarningShown = true;
                var _name = getComponentName(type);
                error("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", _name || "Unknown");
              }
              if (typeof type.getDefaultProps === "function" && !type.getDefaultProps.isReactClassApproved) {
                error("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
              }
            }
          }
          function validateFragmentProps(fragment) {
            {
              var keys = Object.keys(fragment.props);
              for (var i2 = 0; i2 < keys.length; i2++) {
                var key = keys[i2];
                if (key !== "children" && key !== "key") {
                  setCurrentlyValidatingElement$1(fragment);
                  error("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", key);
                  setCurrentlyValidatingElement$1(null);
                  break;
                }
              }
              if (fragment.ref !== null) {
                setCurrentlyValidatingElement$1(fragment);
                error("Invalid attribute `ref` supplied to `React.Fragment`.");
                setCurrentlyValidatingElement$1(null);
              }
            }
          }
          function createElementWithValidation(type, props, children) {
            var validType = isValidElementType(type);
            if (!validType) {
              var info = "";
              if (type === void 0 || typeof type === "object" && type !== null && Object.keys(type).length === 0) {
                info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
              }
              var sourceInfo = getSourceInfoErrorAddendumForProps(props);
              if (sourceInfo) {
                info += sourceInfo;
              } else {
                info += getDeclarationErrorAddendum();
              }
              var typeString;
              if (type === null) {
                typeString = "null";
              } else if (Array.isArray(type)) {
                typeString = "array";
              } else if (type !== void 0 && type.$$typeof === REACT_ELEMENT_TYPE) {
                typeString = "<" + (getComponentName(type.type) || "Unknown") + " />";
                info = " Did you accidentally export a JSX literal instead of a component?";
              } else {
                typeString = typeof type;
              }
              {
                error("React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", typeString, info);
              }
            }
            var element = createElement3.apply(this, arguments);
            if (element == null) {
              return element;
            }
            if (validType) {
              for (var i2 = 2; i2 < arguments.length; i2++) {
                validateChildKeys(arguments[i2], type);
              }
            }
            if (type === exports.Fragment) {
              validateFragmentProps(element);
            } else {
              validatePropTypes(element);
            }
            return element;
          }
          var didWarnAboutDeprecatedCreateFactory = false;
          function createFactoryWithValidation(type) {
            var validatedFactory = createElementWithValidation.bind(null, type);
            validatedFactory.type = type;
            {
              if (!didWarnAboutDeprecatedCreateFactory) {
                didWarnAboutDeprecatedCreateFactory = true;
                warn("React.createFactory() is deprecated and will be removed in a future major release. Consider using JSX or use React.createElement() directly instead.");
              }
              Object.defineProperty(validatedFactory, "type", {
                enumerable: false,
                get: function() {
                  warn("Factory.type is deprecated. Access the class directly before passing it to createFactory.");
                  Object.defineProperty(this, "type", {
                    value: type
                  });
                  return type;
                }
              });
            }
            return validatedFactory;
          }
          function cloneElementWithValidation(element, props, children) {
            var newElement = cloneElement4.apply(this, arguments);
            for (var i2 = 2; i2 < arguments.length; i2++) {
              validateChildKeys(arguments[i2], newElement.type);
            }
            validatePropTypes(newElement);
            return newElement;
          }
          {
            try {
              var frozenObject = Object.freeze({});
              /* @__PURE__ */ new Map([[frozenObject, null]]);
              /* @__PURE__ */ new Set([frozenObject]);
            } catch (e2) {
            }
          }
          var createElement$1 = createElementWithValidation;
          var cloneElement$1 = cloneElementWithValidation;
          var createFactory = createFactoryWithValidation;
          var Children4 = {
            map: mapChildren,
            forEach: forEachChildren,
            count: countChildren,
            toArray,
            only: onlyChild
          };
          exports.Children = Children4;
          exports.Component = Component;
          exports.PureComponent = PureComponent;
          exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;
          exports.cloneElement = cloneElement$1;
          exports.createContext = createContext3;
          exports.createElement = createElement$1;
          exports.createFactory = createFactory;
          exports.createRef = createRef;
          exports.forwardRef = forwardRef16;
          exports.isValidElement = isValidElement4;
          exports.lazy = lazy;
          exports.memo = memo2;
          exports.useCallback = useCallback6;
          exports.useContext = useContext3;
          exports.useDebugValue = useDebugValue2;
          exports.useEffect = useEffect12;
          exports.useImperativeHandle = useImperativeHandle3;
          exports.useLayoutEffect = useLayoutEffect3;
          exports.useMemo = useMemo3;
          exports.useReducer = useReducer;
          exports.useRef = useRef8;
          exports.useState = useState11;
          exports.version = ReactVersion;
        })();
      }
    }
  });

  // node_modules/react/index.js
  var require_react = __commonJS({
    "node_modules/react/index.js"(exports, module) {
      "use strict";
      if (false) {
        module.exports = null;
      } else {
        module.exports = require_react_development();
      }
    }
  });

  // node_modules/scheduler/cjs/scheduler.development.js
  var require_scheduler_development = __commonJS({
    "node_modules/scheduler/cjs/scheduler.development.js"(exports) {
      "use strict";
      if (true) {
        (function() {
          "use strict";
          var enableSchedulerDebugging = false;
          var enableProfiling = false;
          var requestHostCallback;
          var requestHostTimeout;
          var cancelHostTimeout;
          var requestPaint;
          var hasPerformanceNow = typeof performance === "object" && typeof performance.now === "function";
          if (hasPerformanceNow) {
            var localPerformance = performance;
            exports.unstable_now = function() {
              return localPerformance.now();
            };
          } else {
            var localDate = Date;
            var initialTime = localDate.now();
            exports.unstable_now = function() {
              return localDate.now() - initialTime;
            };
          }
          if (typeof window === "undefined" || typeof MessageChannel !== "function") {
            var _callback = null;
            var _timeoutID = null;
            var _flushCallback = function() {
              if (_callback !== null) {
                try {
                  var currentTime = exports.unstable_now();
                  var hasRemainingTime = true;
                  _callback(hasRemainingTime, currentTime);
                  _callback = null;
                } catch (e2) {
                  setTimeout(_flushCallback, 0);
                  throw e2;
                }
              }
            };
            requestHostCallback = function(cb) {
              if (_callback !== null) {
                setTimeout(requestHostCallback, 0, cb);
              } else {
                _callback = cb;
                setTimeout(_flushCallback, 0);
              }
            };
            requestHostTimeout = function(cb, ms) {
              _timeoutID = setTimeout(cb, ms);
            };
            cancelHostTimeout = function() {
              clearTimeout(_timeoutID);
            };
            exports.unstable_shouldYield = function() {
              return false;
            };
            requestPaint = exports.unstable_forceFrameRate = function() {
            };
          } else {
            var _setTimeout = window.setTimeout;
            var _clearTimeout = window.clearTimeout;
            if (typeof console !== "undefined") {
              var requestAnimationFrame = window.requestAnimationFrame;
              var cancelAnimationFrame = window.cancelAnimationFrame;
              if (typeof requestAnimationFrame !== "function") {
                console["error"]("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");
              }
              if (typeof cancelAnimationFrame !== "function") {
                console["error"]("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");
              }
            }
            var isMessageLoopRunning = false;
            var scheduledHostCallback = null;
            var taskTimeoutID = -1;
            var yieldInterval = 5;
            var deadline = 0;
            {
              exports.unstable_shouldYield = function() {
                return exports.unstable_now() >= deadline;
              };
              requestPaint = function() {
              };
            }
            exports.unstable_forceFrameRate = function(fps) {
              if (fps < 0 || fps > 125) {
                console["error"]("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported");
                return;
              }
              if (fps > 0) {
                yieldInterval = Math.floor(1e3 / fps);
              } else {
                yieldInterval = 5;
              }
            };
            var performWorkUntilDeadline = function() {
              if (scheduledHostCallback !== null) {
                var currentTime = exports.unstable_now();
                deadline = currentTime + yieldInterval;
                var hasTimeRemaining = true;
                try {
                  var hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);
                  if (!hasMoreWork) {
                    isMessageLoopRunning = false;
                    scheduledHostCallback = null;
                  } else {
                    port.postMessage(null);
                  }
                } catch (error) {
                  port.postMessage(null);
                  throw error;
                }
              } else {
                isMessageLoopRunning = false;
              }
            };
            var channel = new MessageChannel();
            var port = channel.port2;
            channel.port1.onmessage = performWorkUntilDeadline;
            requestHostCallback = function(callback) {
              scheduledHostCallback = callback;
              if (!isMessageLoopRunning) {
                isMessageLoopRunning = true;
                port.postMessage(null);
              }
            };
            requestHostTimeout = function(callback, ms) {
              taskTimeoutID = _setTimeout(function() {
                callback(exports.unstable_now());
              }, ms);
            };
            cancelHostTimeout = function() {
              _clearTimeout(taskTimeoutID);
              taskTimeoutID = -1;
            };
          }
          function push(heap, node) {
            var index2 = heap.length;
            heap.push(node);
            siftUp(heap, node, index2);
          }
          function peek(heap) {
            var first = heap[0];
            return first === void 0 ? null : first;
          }
          function pop(heap) {
            var first = heap[0];
            if (first !== void 0) {
              var last = heap.pop();
              if (last !== first) {
                heap[0] = last;
                siftDown(heap, last, 0);
              }
              return first;
            } else {
              return null;
            }
          }
          function siftUp(heap, node, i2) {
            var index2 = i2;
            while (true) {
              var parentIndex = index2 - 1 >>> 1;
              var parent = heap[parentIndex];
              if (parent !== void 0 && compare(parent, node) > 0) {
                heap[parentIndex] = node;
                heap[index2] = parent;
                index2 = parentIndex;
              } else {
                return;
              }
            }
          }
          function siftDown(heap, node, i2) {
            var index2 = i2;
            var length = heap.length;
            while (index2 < length) {
              var leftIndex = (index2 + 1) * 2 - 1;
              var left = heap[leftIndex];
              var rightIndex = leftIndex + 1;
              var right = heap[rightIndex];
              if (left !== void 0 && compare(left, node) < 0) {
                if (right !== void 0 && compare(right, left) < 0) {
                  heap[index2] = right;
                  heap[rightIndex] = node;
                  index2 = rightIndex;
                } else {
                  heap[index2] = left;
                  heap[leftIndex] = node;
                  index2 = leftIndex;
                }
              } else if (right !== void 0 && compare(right, node) < 0) {
                heap[index2] = right;
                heap[rightIndex] = node;
                index2 = rightIndex;
              } else {
                return;
              }
            }
          }
          function compare(a2, b2) {
            var diff = a2.sortIndex - b2.sortIndex;
            return diff !== 0 ? diff : a2.id - b2.id;
          }
          var ImmediatePriority = 1;
          var UserBlockingPriority = 2;
          var NormalPriority = 3;
          var LowPriority = 4;
          var IdlePriority = 5;
          function markTaskErrored(task, ms) {
          }
          var maxSigned31BitInt = 1073741823;
          var IMMEDIATE_PRIORITY_TIMEOUT = -1;
          var USER_BLOCKING_PRIORITY_TIMEOUT = 250;
          var NORMAL_PRIORITY_TIMEOUT = 5e3;
          var LOW_PRIORITY_TIMEOUT = 1e4;
          var IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt;
          var taskQueue = [];
          var timerQueue = [];
          var taskIdCounter = 1;
          var currentTask = null;
          var currentPriorityLevel = NormalPriority;
          var isPerformingWork = false;
          var isHostCallbackScheduled = false;
          var isHostTimeoutScheduled = false;
          function advanceTimers(currentTime) {
            var timer = peek(timerQueue);
            while (timer !== null) {
              if (timer.callback === null) {
                pop(timerQueue);
              } else if (timer.startTime <= currentTime) {
                pop(timerQueue);
                timer.sortIndex = timer.expirationTime;
                push(taskQueue, timer);
              } else {
                return;
              }
              timer = peek(timerQueue);
            }
          }
          function handleTimeout(currentTime) {
            isHostTimeoutScheduled = false;
            advanceTimers(currentTime);
            if (!isHostCallbackScheduled) {
              if (peek(taskQueue) !== null) {
                isHostCallbackScheduled = true;
                requestHostCallback(flushWork);
              } else {
                var firstTimer = peek(timerQueue);
                if (firstTimer !== null) {
                  requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
                }
              }
            }
          }
          function flushWork(hasTimeRemaining, initialTime2) {
            isHostCallbackScheduled = false;
            if (isHostTimeoutScheduled) {
              isHostTimeoutScheduled = false;
              cancelHostTimeout();
            }
            isPerformingWork = true;
            var previousPriorityLevel = currentPriorityLevel;
            try {
              if (enableProfiling) {
                try {
                  return workLoop(hasTimeRemaining, initialTime2);
                } catch (error) {
                  if (currentTask !== null) {
                    var currentTime = exports.unstable_now();
                    markTaskErrored(currentTask, currentTime);
                    currentTask.isQueued = false;
                  }
                  throw error;
                }
              } else {
                return workLoop(hasTimeRemaining, initialTime2);
              }
            } finally {
              currentTask = null;
              currentPriorityLevel = previousPriorityLevel;
              isPerformingWork = false;
            }
          }
          function workLoop(hasTimeRemaining, initialTime2) {
            var currentTime = initialTime2;
            advanceTimers(currentTime);
            currentTask = peek(taskQueue);
            while (currentTask !== null && !enableSchedulerDebugging) {
              if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || exports.unstable_shouldYield())) {
                break;
              }
              var callback = currentTask.callback;
              if (typeof callback === "function") {
                currentTask.callback = null;
                currentPriorityLevel = currentTask.priorityLevel;
                var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;
                var continuationCallback = callback(didUserCallbackTimeout);
                currentTime = exports.unstable_now();
                if (typeof continuationCallback === "function") {
                  currentTask.callback = continuationCallback;
                } else {
                  if (currentTask === peek(taskQueue)) {
                    pop(taskQueue);
                  }
                }
                advanceTimers(currentTime);
              } else {
                pop(taskQueue);
              }
              currentTask = peek(taskQueue);
            }
            if (currentTask !== null) {
              return true;
            } else {
              var firstTimer = peek(timerQueue);
              if (firstTimer !== null) {
                requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
              }
              return false;
            }
          }
          function unstable_runWithPriority(priorityLevel, eventHandler) {
            switch (priorityLevel) {
              case ImmediatePriority:
              case UserBlockingPriority:
              case NormalPriority:
              case LowPriority:
              case IdlePriority:
                break;
              default:
                priorityLevel = NormalPriority;
            }
            var previousPriorityLevel = currentPriorityLevel;
            currentPriorityLevel = priorityLevel;
            try {
              return eventHandler();
            } finally {
              currentPriorityLevel = previousPriorityLevel;
            }
          }
          function unstable_next(eventHandler) {
            var priorityLevel;
            switch (currentPriorityLevel) {
              case ImmediatePriority:
              case UserBlockingPriority:
              case NormalPriority:
                priorityLevel = NormalPriority;
                break;
              default:
                priorityLevel = currentPriorityLevel;
                break;
            }
            var previousPriorityLevel = currentPriorityLevel;
            currentPriorityLevel = priorityLevel;
            try {
              return eventHandler();
            } finally {
              currentPriorityLevel = previousPriorityLevel;
            }
          }
          function unstable_wrapCallback(callback) {
            var parentPriorityLevel = currentPriorityLevel;
            return function() {
              var previousPriorityLevel = currentPriorityLevel;
              currentPriorityLevel = parentPriorityLevel;
              try {
                return callback.apply(this, arguments);
              } finally {
                currentPriorityLevel = previousPriorityLevel;
              }
            };
          }
          function unstable_scheduleCallback(priorityLevel, callback, options) {
            var currentTime = exports.unstable_now();
            var startTime;
            if (typeof options === "object" && options !== null) {
              var delay = options.delay;
              if (typeof delay === "number" && delay > 0) {
                startTime = currentTime + delay;
              } else {
                startTime = currentTime;
              }
            } else {
              startTime = currentTime;
            }
            var timeout2;
            switch (priorityLevel) {
              case ImmediatePriority:
                timeout2 = IMMEDIATE_PRIORITY_TIMEOUT;
                break;
              case UserBlockingPriority:
                timeout2 = USER_BLOCKING_PRIORITY_TIMEOUT;
                break;
              case IdlePriority:
                timeout2 = IDLE_PRIORITY_TIMEOUT;
                break;
              case LowPriority:
                timeout2 = LOW_PRIORITY_TIMEOUT;
                break;
              case NormalPriority:
              default:
                timeout2 = NORMAL_PRIORITY_TIMEOUT;
                break;
            }
            var expirationTime = startTime + timeout2;
            var newTask = {
              id: taskIdCounter++,
              callback,
              priorityLevel,
              startTime,
              expirationTime,
              sortIndex: -1
            };
            if (startTime > currentTime) {
              newTask.sortIndex = startTime;
              push(timerQueue, newTask);
              if (peek(taskQueue) === null && newTask === peek(timerQueue)) {
                if (isHostTimeoutScheduled) {
                  cancelHostTimeout();
                } else {
                  isHostTimeoutScheduled = true;
                }
                requestHostTimeout(handleTimeout, startTime - currentTime);
              }
            } else {
              newTask.sortIndex = expirationTime;
              push(taskQueue, newTask);
              if (!isHostCallbackScheduled && !isPerformingWork) {
                isHostCallbackScheduled = true;
                requestHostCallback(flushWork);
              }
            }
            return newTask;
          }
          function unstable_pauseExecution() {
          }
          function unstable_continueExecution() {
            if (!isHostCallbackScheduled && !isPerformingWork) {
              isHostCallbackScheduled = true;
              requestHostCallback(flushWork);
            }
          }
          function unstable_getFirstCallbackNode() {
            return peek(taskQueue);
          }
          function unstable_cancelCallback(task) {
            task.callback = null;
          }
          function unstable_getCurrentPriorityLevel() {
            return currentPriorityLevel;
          }
          var unstable_requestPaint = requestPaint;
          var unstable_Profiling = null;
          exports.unstable_IdlePriority = IdlePriority;
          exports.unstable_ImmediatePriority = ImmediatePriority;
          exports.unstable_LowPriority = LowPriority;
          exports.unstable_NormalPriority = NormalPriority;
          exports.unstable_Profiling = unstable_Profiling;
          exports.unstable_UserBlockingPriority = UserBlockingPriority;
          exports.unstable_cancelCallback = unstable_cancelCallback;
          exports.unstable_continueExecution = unstable_continueExecution;
          exports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;
          exports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;
          exports.unstable_next = unstable_next;
          exports.unstable_pauseExecution = unstable_pauseExecution;
          exports.unstable_requestPaint = unstable_requestPaint;
          exports.unstable_runWithPriority = unstable_runWithPriority;
          exports.unstable_scheduleCallback = unstable_scheduleCallback;
          exports.unstable_wrapCallback = unstable_wrapCallback;
        })();
      }
    }
  });

  // node_modules/scheduler/index.js
  var require_scheduler = __commonJS({
    "node_modules/scheduler/index.js"(exports, module) {
      "use strict";
      if (false) {
        module.exports = null;
      } else {
        module.exports = require_scheduler_development();
      }
    }
  });

  // node_modules/scheduler/cjs/scheduler-tracing.development.js
  var require_scheduler_tracing_development = __commonJS({
    "node_modules/scheduler/cjs/scheduler-tracing.development.js"(exports) {
      "use strict";
      if (true) {
        (function() {
          "use strict";
          var DEFAULT_THREAD_ID = 0;
          var interactionIDCounter = 0;
          var threadIDCounter = 0;
          exports.__interactionsRef = null;
          exports.__subscriberRef = null;
          {
            exports.__interactionsRef = {
              current: /* @__PURE__ */ new Set()
            };
            exports.__subscriberRef = {
              current: null
            };
          }
          function unstable_clear(callback) {
            var prevInteractions = exports.__interactionsRef.current;
            exports.__interactionsRef.current = /* @__PURE__ */ new Set();
            try {
              return callback();
            } finally {
              exports.__interactionsRef.current = prevInteractions;
            }
          }
          function unstable_getCurrent() {
            {
              return exports.__interactionsRef.current;
            }
          }
          function unstable_getThreadID() {
            return ++threadIDCounter;
          }
          function unstable_trace(name, timestamp, callback) {
            var threadID = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : DEFAULT_THREAD_ID;
            var interaction = {
              __count: 1,
              id: interactionIDCounter++,
              name,
              timestamp
            };
            var prevInteractions = exports.__interactionsRef.current;
            var interactions = new Set(prevInteractions);
            interactions.add(interaction);
            exports.__interactionsRef.current = interactions;
            var subscriber = exports.__subscriberRef.current;
            var returnValue;
            try {
              if (subscriber !== null) {
                subscriber.onInteractionTraced(interaction);
              }
            } finally {
              try {
                if (subscriber !== null) {
                  subscriber.onWorkStarted(interactions, threadID);
                }
              } finally {
                try {
                  returnValue = callback();
                } finally {
                  exports.__interactionsRef.current = prevInteractions;
                  try {
                    if (subscriber !== null) {
                      subscriber.onWorkStopped(interactions, threadID);
                    }
                  } finally {
                    interaction.__count--;
                    if (subscriber !== null && interaction.__count === 0) {
                      subscriber.onInteractionScheduledWorkCompleted(interaction);
                    }
                  }
                }
              }
            }
            return returnValue;
          }
          function unstable_wrap(callback) {
            var threadID = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : DEFAULT_THREAD_ID;
            var wrappedInteractions = exports.__interactionsRef.current;
            var subscriber = exports.__subscriberRef.current;
            if (subscriber !== null) {
              subscriber.onWorkScheduled(wrappedInteractions, threadID);
            }
            wrappedInteractions.forEach(function(interaction) {
              interaction.__count++;
            });
            var hasRun = false;
            function wrapped() {
              var prevInteractions = exports.__interactionsRef.current;
              exports.__interactionsRef.current = wrappedInteractions;
              subscriber = exports.__subscriberRef.current;
              try {
                var returnValue;
                try {
                  if (subscriber !== null) {
                    subscriber.onWorkStarted(wrappedInteractions, threadID);
                  }
                } finally {
                  try {
                    returnValue = callback.apply(void 0, arguments);
                  } finally {
                    exports.__interactionsRef.current = prevInteractions;
                    if (subscriber !== null) {
                      subscriber.onWorkStopped(wrappedInteractions, threadID);
                    }
                  }
                }
                return returnValue;
              } finally {
                if (!hasRun) {
                  hasRun = true;
                  wrappedInteractions.forEach(function(interaction) {
                    interaction.__count--;
                    if (subscriber !== null && interaction.__count === 0) {
                      subscriber.onInteractionScheduledWorkCompleted(interaction);
                    }
                  });
                }
              }
            }
            wrapped.cancel = function cancel() {
              subscriber = exports.__subscriberRef.current;
              try {
                if (subscriber !== null) {
                  subscriber.onWorkCanceled(wrappedInteractions, threadID);
                }
              } finally {
                wrappedInteractions.forEach(function(interaction) {
                  interaction.__count--;
                  if (subscriber && interaction.__count === 0) {
                    subscriber.onInteractionScheduledWorkCompleted(interaction);
                  }
                });
              }
            };
            return wrapped;
          }
          var subscribers = null;
          {
            subscribers = /* @__PURE__ */ new Set();
          }
          function unstable_subscribe(subscriber) {
            {
              subscribers.add(subscriber);
              if (subscribers.size === 1) {
                exports.__subscriberRef.current = {
                  onInteractionScheduledWorkCompleted,
                  onInteractionTraced,
                  onWorkCanceled,
                  onWorkScheduled,
                  onWorkStarted,
                  onWorkStopped
                };
              }
            }
          }
          function unstable_unsubscribe(subscriber) {
            {
              subscribers.delete(subscriber);
              if (subscribers.size === 0) {
                exports.__subscriberRef.current = null;
              }
            }
          }
          function onInteractionTraced(interaction) {
            var didCatchError = false;
            var caughtError = null;
            subscribers.forEach(function(subscriber) {
              try {
                subscriber.onInteractionTraced(interaction);
              } catch (error) {
                if (!didCatchError) {
                  didCatchError = true;
                  caughtError = error;
                }
              }
            });
            if (didCatchError) {
              throw caughtError;
            }
          }
          function onInteractionScheduledWorkCompleted(interaction) {
            var didCatchError = false;
            var caughtError = null;
            subscribers.forEach(function(subscriber) {
              try {
                subscriber.onInteractionScheduledWorkCompleted(interaction);
              } catch (error) {
                if (!didCatchError) {
                  didCatchError = true;
                  caughtError = error;
                }
              }
            });
            if (didCatchError) {
              throw caughtError;
            }
          }
          function onWorkScheduled(interactions, threadID) {
            var didCatchError = false;
            var caughtError = null;
            subscribers.forEach(function(subscriber) {
              try {
                subscriber.onWorkScheduled(interactions, threadID);
              } catch (error) {
                if (!didCatchError) {
                  didCatchError = true;
                  caughtError = error;
                }
              }
            });
            if (didCatchError) {
              throw caughtError;
            }
          }
          function onWorkStarted(interactions, threadID) {
            var didCatchError = false;
            var caughtError = null;
            subscribers.forEach(function(subscriber) {
              try {
                subscriber.onWorkStarted(interactions, threadID);
              } catch (error) {
                if (!didCatchError) {
                  didCatchError = true;
                  caughtError = error;
                }
              }
            });
            if (didCatchError) {
              throw caughtError;
            }
          }
          function onWorkStopped(interactions, threadID) {
            var didCatchError = false;
            var caughtError = null;
            subscribers.forEach(function(subscriber) {
              try {
                subscriber.onWorkStopped(interactions, threadID);
              } catch (error) {
                if (!didCatchError) {
                  didCatchError = true;
                  caughtError = error;
                }
              }
            });
            if (didCatchError) {
              throw caughtError;
            }
          }
          function onWorkCanceled(interactions, threadID) {
            var didCatchError = false;
            var caughtError = null;
            subscribers.forEach(function(subscriber) {
              try {
                subscriber.onWorkCanceled(interactions, threadID);
              } catch (error) {
                if (!didCatchError) {
                  didCatchError = true;
                  caughtError = error;
                }
              }
            });
            if (didCatchError) {
              throw caughtError;
            }
          }
          exports.unstable_clear = unstable_clear;
          exports.unstable_getCurrent = unstable_getCurrent;
          exports.unstable_getThreadID = unstable_getThreadID;
          exports.unstable_subscribe = unstable_subscribe;
          exports.unstable_trace = unstable_trace;
          exports.unstable_unsubscribe = unstable_unsubscribe;
          exports.unstable_wrap = unstable_wrap;
        })();
      }
    }
  });

  // node_modules/scheduler/tracing.js
  var require_tracing = __commonJS({
    "node_modules/scheduler/tracing.js"(exports, module) {
      "use strict";
      if (false) {
        module.exports = null;
      } else {
        module.exports = require_scheduler_tracing_development();
      }
    }
  });

  // node_modules/react-dom/cjs/react-dom.development.js
  var require_react_dom_development = __commonJS({
    "node_modules/react-dom/cjs/react-dom.development.js"(exports) {
      "use strict";
      if (true) {
        (function() {
          "use strict";
          var React40 = require_react();
          var _assign = require_object_assign();
          var Scheduler = require_scheduler();
          var tracing = require_tracing();
          var ReactSharedInternals = React40.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
          function warn(format) {
            {
              for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                args[_key - 1] = arguments[_key];
              }
              printWarning("warn", format, args);
            }
          }
          function error(format) {
            {
              for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                args[_key2 - 1] = arguments[_key2];
              }
              printWarning("error", format, args);
            }
          }
          function printWarning(level, format, args) {
            {
              var ReactDebugCurrentFrame2 = ReactSharedInternals.ReactDebugCurrentFrame;
              var stack = ReactDebugCurrentFrame2.getStackAddendum();
              if (stack !== "") {
                format += "%s";
                args = args.concat([stack]);
              }
              var argsWithFormat = args.map(function(item) {
                return "" + item;
              });
              argsWithFormat.unshift("Warning: " + format);
              Function.prototype.apply.call(console[level], console, argsWithFormat);
            }
          }
          if (!React40) {
            {
              throw Error("ReactDOM was loaded before React. Make sure you load the React package before loading ReactDOM.");
            }
          }
          var FunctionComponent = 0;
          var ClassComponent = 1;
          var IndeterminateComponent = 2;
          var HostRoot = 3;
          var HostPortal = 4;
          var HostComponent = 5;
          var HostText = 6;
          var Fragment3 = 7;
          var Mode = 8;
          var ContextConsumer = 9;
          var ContextProvider = 10;
          var ForwardRef = 11;
          var Profiler = 12;
          var SuspenseComponent = 13;
          var MemoComponent = 14;
          var SimpleMemoComponent = 15;
          var LazyComponent = 16;
          var IncompleteClassComponent = 17;
          var DehydratedFragment = 18;
          var SuspenseListComponent = 19;
          var FundamentalComponent = 20;
          var ScopeComponent = 21;
          var Block = 22;
          var OffscreenComponent = 23;
          var LegacyHiddenComponent = 24;
          var enableProfilerTimer = true;
          var enableFundamentalAPI = false;
          var enableNewReconciler = false;
          var warnAboutStringRefs = false;
          var allNativeEvents = /* @__PURE__ */ new Set();
          var registrationNameDependencies = {};
          var possibleRegistrationNames = {};
          function registerTwoPhaseEvent(registrationName, dependencies) {
            registerDirectEvent(registrationName, dependencies);
            registerDirectEvent(registrationName + "Capture", dependencies);
          }
          function registerDirectEvent(registrationName, dependencies) {
            {
              if (registrationNameDependencies[registrationName]) {
                error("EventRegistry: More than one plugin attempted to publish the same registration name, `%s`.", registrationName);
              }
            }
            registrationNameDependencies[registrationName] = dependencies;
            {
              var lowerCasedName = registrationName.toLowerCase();
              possibleRegistrationNames[lowerCasedName] = registrationName;
              if (registrationName === "onDoubleClick") {
                possibleRegistrationNames.ondblclick = registrationName;
              }
            }
            for (var i2 = 0; i2 < dependencies.length; i2++) {
              allNativeEvents.add(dependencies[i2]);
            }
          }
          var canUseDOM = !!(typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined");
          var RESERVED = 0;
          var STRING = 1;
          var BOOLEANISH_STRING = 2;
          var BOOLEAN = 3;
          var OVERLOADED_BOOLEAN = 4;
          var NUMERIC = 5;
          var POSITIVE_NUMERIC = 6;
          var ATTRIBUTE_NAME_START_CHAR = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
          var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040";
          var ROOT_ATTRIBUTE_NAME = "data-reactroot";
          var VALID_ATTRIBUTE_NAME_REGEX = new RegExp("^[" + ATTRIBUTE_NAME_START_CHAR + "][" + ATTRIBUTE_NAME_CHAR + "]*$");
          var hasOwnProperty = Object.prototype.hasOwnProperty;
          var illegalAttributeNameCache = {};
          var validatedAttributeNameCache = {};
          function isAttributeNameSafe(attributeName) {
            if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) {
              return true;
            }
            if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) {
              return false;
            }
            if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
              validatedAttributeNameCache[attributeName] = true;
              return true;
            }
            illegalAttributeNameCache[attributeName] = true;
            {
              error("Invalid attribute name: `%s`", attributeName);
            }
            return false;
          }
          function shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag) {
            if (propertyInfo !== null) {
              return propertyInfo.type === RESERVED;
            }
            if (isCustomComponentTag) {
              return false;
            }
            if (name.length > 2 && (name[0] === "o" || name[0] === "O") && (name[1] === "n" || name[1] === "N")) {
              return true;
            }
            return false;
          }
          function shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {
            if (propertyInfo !== null && propertyInfo.type === RESERVED) {
              return false;
            }
            switch (typeof value) {
              case "function":
              case "symbol":
                return true;
              case "boolean": {
                if (isCustomComponentTag) {
                  return false;
                }
                if (propertyInfo !== null) {
                  return !propertyInfo.acceptsBooleans;
                } else {
                  var prefix2 = name.toLowerCase().slice(0, 5);
                  return prefix2 !== "data-" && prefix2 !== "aria-";
                }
              }
              default:
                return false;
            }
          }
          function shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag) {
            if (value === null || typeof value === "undefined") {
              return true;
            }
            if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag)) {
              return true;
            }
            if (isCustomComponentTag) {
              return false;
            }
            if (propertyInfo !== null) {
              switch (propertyInfo.type) {
                case BOOLEAN:
                  return !value;
                case OVERLOADED_BOOLEAN:
                  return value === false;
                case NUMERIC:
                  return isNaN(value);
                case POSITIVE_NUMERIC:
                  return isNaN(value) || value < 1;
              }
            }
            return false;
          }
          function getPropertyInfo(name) {
            return properties.hasOwnProperty(name) ? properties[name] : null;
          }
          function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace, sanitizeURL2, removeEmptyString) {
            this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;
            this.attributeName = attributeName;
            this.attributeNamespace = attributeNamespace;
            this.mustUseProperty = mustUseProperty;
            this.propertyName = name;
            this.type = type;
            this.sanitizeURL = sanitizeURL2;
            this.removeEmptyString = removeEmptyString;
          }
          var properties = {};
          var reservedProps = [
            "children",
            "dangerouslySetInnerHTML",
            "defaultValue",
            "defaultChecked",
            "innerHTML",
            "suppressContentEditableWarning",
            "suppressHydrationWarning",
            "style"
          ];
          reservedProps.forEach(function(name) {
            properties[name] = new PropertyInfoRecord(name, RESERVED, false, name, null, false, false);
          });
          [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(_ref) {
            var name = _ref[0], attributeName = _ref[1];
            properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, null, false, false);
          });
          ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(name) {
            properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, name.toLowerCase(), null, false, false);
          });
          ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(name) {
            properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, name, null, false, false);
          });
          [
            "allowFullScreen",
            "async",
            "autoFocus",
            "autoPlay",
            "controls",
            "default",
            "defer",
            "disabled",
            "disablePictureInPicture",
            "disableRemotePlayback",
            "formNoValidate",
            "hidden",
            "loop",
            "noModule",
            "noValidate",
            "open",
            "playsInline",
            "readOnly",
            "required",
            "reversed",
            "scoped",
            "seamless",
            "itemScope"
          ].forEach(function(name) {
            properties[name] = new PropertyInfoRecord(name, BOOLEAN, false, name.toLowerCase(), null, false, false);
          });
          [
            "checked",
            "multiple",
            "muted",
            "selected"
          ].forEach(function(name) {
            properties[name] = new PropertyInfoRecord(name, BOOLEAN, true, name, null, false, false);
          });
          [
            "capture",
            "download"
          ].forEach(function(name) {
            properties[name] = new PropertyInfoRecord(name, OVERLOADED_BOOLEAN, false, name, null, false, false);
          });
          [
            "cols",
            "rows",
            "size",
            "span"
          ].forEach(function(name) {
            properties[name] = new PropertyInfoRecord(name, POSITIVE_NUMERIC, false, name, null, false, false);
          });
          ["rowSpan", "start"].forEach(function(name) {
            properties[name] = new PropertyInfoRecord(name, NUMERIC, false, name.toLowerCase(), null, false, false);
          });
          var CAMELIZE = /[\-\:]([a-z])/g;
          var capitalize2 = function(token) {
            return token[1].toUpperCase();
          };
          [
            "accent-height",
            "alignment-baseline",
            "arabic-form",
            "baseline-shift",
            "cap-height",
            "clip-path",
            "clip-rule",
            "color-interpolation",
            "color-interpolation-filters",
            "color-profile",
            "color-rendering",
            "dominant-baseline",
            "enable-background",
            "fill-opacity",
            "fill-rule",
            "flood-color",
            "flood-opacity",
            "font-family",
            "font-size",
            "font-size-adjust",
            "font-stretch",
            "font-style",
            "font-variant",
            "font-weight",
            "glyph-name",
            "glyph-orientation-horizontal",
            "glyph-orientation-vertical",
            "horiz-adv-x",
            "horiz-origin-x",
            "image-rendering",
            "letter-spacing",
            "lighting-color",
            "marker-end",
            "marker-mid",
            "marker-start",
            "overline-position",
            "overline-thickness",
            "paint-order",
            "panose-1",
            "pointer-events",
            "rendering-intent",
            "shape-rendering",
            "stop-color",
            "stop-opacity",
            "strikethrough-position",
            "strikethrough-thickness",
            "stroke-dasharray",
            "stroke-dashoffset",
            "stroke-linecap",
            "stroke-linejoin",
            "stroke-miterlimit",
            "stroke-opacity",
            "stroke-width",
            "text-anchor",
            "text-decoration",
            "text-rendering",
            "underline-position",
            "underline-thickness",
            "unicode-bidi",
            "unicode-range",
            "units-per-em",
            "v-alphabetic",
            "v-hanging",
            "v-ideographic",
            "v-mathematical",
            "vector-effect",
            "vert-adv-y",
            "vert-origin-x",
            "vert-origin-y",
            "word-spacing",
            "writing-mode",
            "xmlns:xlink",
            "x-height"
          ].forEach(function(attributeName) {
            var name = attributeName.replace(CAMELIZE, capitalize2);
            properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, null, false, false);
          });
          [
            "xlink:actuate",
            "xlink:arcrole",
            "xlink:role",
            "xlink:show",
            "xlink:title",
            "xlink:type"
          ].forEach(function(attributeName) {
            var name = attributeName.replace(CAMELIZE, capitalize2);
            properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, "http://www.w3.org/1999/xlink", false, false);
          });
          [
            "xml:base",
            "xml:lang",
            "xml:space"
          ].forEach(function(attributeName) {
            var name = attributeName.replace(CAMELIZE, capitalize2);
            properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, "http://www.w3.org/XML/1998/namespace", false, false);
          });
          ["tabIndex", "crossOrigin"].forEach(function(attributeName) {
            properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, attributeName.toLowerCase(), null, false, false);
          });
          var xlinkHref = "xlinkHref";
          properties[xlinkHref] = new PropertyInfoRecord("xlinkHref", STRING, false, "xlink:href", "http://www.w3.org/1999/xlink", true, false);
          ["src", "href", "action", "formAction"].forEach(function(attributeName) {
            properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, attributeName.toLowerCase(), null, true, true);
          });
          var isJavaScriptProtocol = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i;
          var didWarn = false;
          function sanitizeURL(url) {
            {
              if (!didWarn && isJavaScriptProtocol.test(url)) {
                didWarn = true;
                error("A future version of React will block javascript: URLs as a security precaution. Use event handlers instead if you can. If you need to generate unsafe HTML try using dangerouslySetInnerHTML instead. React was passed %s.", JSON.stringify(url));
              }
            }
          }
          function getValueForProperty(node, name, expected, propertyInfo) {
            {
              if (propertyInfo.mustUseProperty) {
                var propertyName = propertyInfo.propertyName;
                return node[propertyName];
              } else {
                if (propertyInfo.sanitizeURL) {
                  sanitizeURL("" + expected);
                }
                var attributeName = propertyInfo.attributeName;
                var stringValue = null;
                if (propertyInfo.type === OVERLOADED_BOOLEAN) {
                  if (node.hasAttribute(attributeName)) {
                    var value = node.getAttribute(attributeName);
                    if (value === "") {
                      return true;
                    }
                    if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
                      return value;
                    }
                    if (value === "" + expected) {
                      return expected;
                    }
                    return value;
                  }
                } else if (node.hasAttribute(attributeName)) {
                  if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
                    return node.getAttribute(attributeName);
                  }
                  if (propertyInfo.type === BOOLEAN) {
                    return expected;
                  }
                  stringValue = node.getAttribute(attributeName);
                }
                if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
                  return stringValue === null ? expected : stringValue;
                } else if (stringValue === "" + expected) {
                  return expected;
                } else {
                  return stringValue;
                }
              }
            }
          }
          function getValueForAttribute(node, name, expected) {
            {
              if (!isAttributeNameSafe(name)) {
                return;
              }
              if (isOpaqueHydratingObject(expected)) {
                return expected;
              }
              if (!node.hasAttribute(name)) {
                return expected === void 0 ? void 0 : null;
              }
              var value = node.getAttribute(name);
              if (value === "" + expected) {
                return expected;
              }
              return value;
            }
          }
          function setValueForProperty(node, name, value, isCustomComponentTag) {
            var propertyInfo = getPropertyInfo(name);
            if (shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag)) {
              return;
            }
            if (shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag)) {
              value = null;
            }
            if (isCustomComponentTag || propertyInfo === null) {
              if (isAttributeNameSafe(name)) {
                var _attributeName = name;
                if (value === null) {
                  node.removeAttribute(_attributeName);
                } else {
                  node.setAttribute(_attributeName, "" + value);
                }
              }
              return;
            }
            var mustUseProperty = propertyInfo.mustUseProperty;
            if (mustUseProperty) {
              var propertyName = propertyInfo.propertyName;
              if (value === null) {
                var type = propertyInfo.type;
                node[propertyName] = type === BOOLEAN ? false : "";
              } else {
                node[propertyName] = value;
              }
              return;
            }
            var attributeName = propertyInfo.attributeName, attributeNamespace = propertyInfo.attributeNamespace;
            if (value === null) {
              node.removeAttribute(attributeName);
            } else {
              var _type = propertyInfo.type;
              var attributeValue;
              if (_type === BOOLEAN || _type === OVERLOADED_BOOLEAN && value === true) {
                attributeValue = "";
              } else {
                {
                  attributeValue = "" + value;
                }
                if (propertyInfo.sanitizeURL) {
                  sanitizeURL(attributeValue.toString());
                }
              }
              if (attributeNamespace) {
                node.setAttributeNS(attributeNamespace, attributeName, attributeValue);
              } else {
                node.setAttribute(attributeName, attributeValue);
              }
            }
          }
          var REACT_ELEMENT_TYPE = 60103;
          var REACT_PORTAL_TYPE = 60106;
          var REACT_FRAGMENT_TYPE = 60107;
          var REACT_STRICT_MODE_TYPE = 60108;
          var REACT_PROFILER_TYPE = 60114;
          var REACT_PROVIDER_TYPE = 60109;
          var REACT_CONTEXT_TYPE = 60110;
          var REACT_FORWARD_REF_TYPE = 60112;
          var REACT_SUSPENSE_TYPE = 60113;
          var REACT_SUSPENSE_LIST_TYPE = 60120;
          var REACT_MEMO_TYPE = 60115;
          var REACT_LAZY_TYPE = 60116;
          var REACT_BLOCK_TYPE = 60121;
          var REACT_SERVER_BLOCK_TYPE = 60122;
          var REACT_FUNDAMENTAL_TYPE = 60117;
          var REACT_SCOPE_TYPE = 60119;
          var REACT_OPAQUE_ID_TYPE = 60128;
          var REACT_DEBUG_TRACING_MODE_TYPE = 60129;
          var REACT_OFFSCREEN_TYPE = 60130;
          var REACT_LEGACY_HIDDEN_TYPE = 60131;
          if (typeof Symbol === "function" && Symbol.for) {
            var symbolFor = Symbol.for;
            REACT_ELEMENT_TYPE = symbolFor("react.element");
            REACT_PORTAL_TYPE = symbolFor("react.portal");
            REACT_FRAGMENT_TYPE = symbolFor("react.fragment");
            REACT_STRICT_MODE_TYPE = symbolFor("react.strict_mode");
            REACT_PROFILER_TYPE = symbolFor("react.profiler");
            REACT_PROVIDER_TYPE = symbolFor("react.provider");
            REACT_CONTEXT_TYPE = symbolFor("react.context");
            REACT_FORWARD_REF_TYPE = symbolFor("react.forward_ref");
            REACT_SUSPENSE_TYPE = symbolFor("react.suspense");
            REACT_SUSPENSE_LIST_TYPE = symbolFor("react.suspense_list");
            REACT_MEMO_TYPE = symbolFor("react.memo");
            REACT_LAZY_TYPE = symbolFor("react.lazy");
            REACT_BLOCK_TYPE = symbolFor("react.block");
            REACT_SERVER_BLOCK_TYPE = symbolFor("react.server.block");
            REACT_FUNDAMENTAL_TYPE = symbolFor("react.fundamental");
            REACT_SCOPE_TYPE = symbolFor("react.scope");
            REACT_OPAQUE_ID_TYPE = symbolFor("react.opaque.id");
            REACT_DEBUG_TRACING_MODE_TYPE = symbolFor("react.debug_trace_mode");
            REACT_OFFSCREEN_TYPE = symbolFor("react.offscreen");
            REACT_LEGACY_HIDDEN_TYPE = symbolFor("react.legacy_hidden");
          }
          var MAYBE_ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
          var FAUX_ITERATOR_SYMBOL = "@@iterator";
          function getIteratorFn(maybeIterable) {
            if (maybeIterable === null || typeof maybeIterable !== "object") {
              return null;
            }
            var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
            if (typeof maybeIterator === "function") {
              return maybeIterator;
            }
            return null;
          }
          var disabledDepth = 0;
          var prevLog;
          var prevInfo;
          var prevWarn;
          var prevError;
          var prevGroup;
          var prevGroupCollapsed;
          var prevGroupEnd;
          function disabledLog() {
          }
          disabledLog.__reactDisabledLog = true;
          function disableLogs() {
            {
              if (disabledDepth === 0) {
                prevLog = console.log;
                prevInfo = console.info;
                prevWarn = console.warn;
                prevError = console.error;
                prevGroup = console.group;
                prevGroupCollapsed = console.groupCollapsed;
                prevGroupEnd = console.groupEnd;
                var props = {
                  configurable: true,
                  enumerable: true,
                  value: disabledLog,
                  writable: true
                };
                Object.defineProperties(console, {
                  info: props,
                  log: props,
                  warn: props,
                  error: props,
                  group: props,
                  groupCollapsed: props,
                  groupEnd: props
                });
              }
              disabledDepth++;
            }
          }
          function reenableLogs() {
            {
              disabledDepth--;
              if (disabledDepth === 0) {
                var props = {
                  configurable: true,
                  enumerable: true,
                  writable: true
                };
                Object.defineProperties(console, {
                  log: _assign({}, props, {
                    value: prevLog
                  }),
                  info: _assign({}, props, {
                    value: prevInfo
                  }),
                  warn: _assign({}, props, {
                    value: prevWarn
                  }),
                  error: _assign({}, props, {
                    value: prevError
                  }),
                  group: _assign({}, props, {
                    value: prevGroup
                  }),
                  groupCollapsed: _assign({}, props, {
                    value: prevGroupCollapsed
                  }),
                  groupEnd: _assign({}, props, {
                    value: prevGroupEnd
                  })
                });
              }
              if (disabledDepth < 0) {
                error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
              }
            }
          }
          var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
          var prefix;
          function describeBuiltInComponentFrame(name, source, ownerFn) {
            {
              if (prefix === void 0) {
                try {
                  throw Error();
                } catch (x2) {
                  var match = x2.stack.trim().match(/\n( *(at )?)/);
                  prefix = match && match[1] || "";
                }
              }
              return "\n" + prefix + name;
            }
          }
          var reentry = false;
          var componentFrameCache;
          {
            var PossiblyWeakMap = typeof WeakMap === "function" ? WeakMap : Map;
            componentFrameCache = new PossiblyWeakMap();
          }
          function describeNativeComponentFrame(fn, construct) {
            if (!fn || reentry) {
              return "";
            }
            {
              var frame = componentFrameCache.get(fn);
              if (frame !== void 0) {
                return frame;
              }
            }
            var control;
            reentry = true;
            var previousPrepareStackTrace = Error.prepareStackTrace;
            Error.prepareStackTrace = void 0;
            var previousDispatcher;
            {
              previousDispatcher = ReactCurrentDispatcher.current;
              ReactCurrentDispatcher.current = null;
              disableLogs();
            }
            try {
              if (construct) {
                var Fake = function() {
                  throw Error();
                };
                Object.defineProperty(Fake.prototype, "props", {
                  set: function() {
                    throw Error();
                  }
                });
                if (typeof Reflect === "object" && Reflect.construct) {
                  try {
                    Reflect.construct(Fake, []);
                  } catch (x2) {
                    control = x2;
                  }
                  Reflect.construct(fn, [], Fake);
                } else {
                  try {
                    Fake.call();
                  } catch (x2) {
                    control = x2;
                  }
                  fn.call(Fake.prototype);
                }
              } else {
                try {
                  throw Error();
                } catch (x2) {
                  control = x2;
                }
                fn();
              }
            } catch (sample) {
              if (sample && control && typeof sample.stack === "string") {
                var sampleLines = sample.stack.split("\n");
                var controlLines = control.stack.split("\n");
                var s2 = sampleLines.length - 1;
                var c2 = controlLines.length - 1;
                while (s2 >= 1 && c2 >= 0 && sampleLines[s2] !== controlLines[c2]) {
                  c2--;
                }
                for (; s2 >= 1 && c2 >= 0; s2--, c2--) {
                  if (sampleLines[s2] !== controlLines[c2]) {
                    if (s2 !== 1 || c2 !== 1) {
                      do {
                        s2--;
                        c2--;
                        if (c2 < 0 || sampleLines[s2] !== controlLines[c2]) {
                          var _frame = "\n" + sampleLines[s2].replace(" at new ", " at ");
                          {
                            if (typeof fn === "function") {
                              componentFrameCache.set(fn, _frame);
                            }
                          }
                          return _frame;
                        }
                      } while (s2 >= 1 && c2 >= 0);
                    }
                    break;
                  }
                }
              }
            } finally {
              reentry = false;
              {
                ReactCurrentDispatcher.current = previousDispatcher;
                reenableLogs();
              }
              Error.prepareStackTrace = previousPrepareStackTrace;
            }
            var name = fn ? fn.displayName || fn.name : "";
            var syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
            {
              if (typeof fn === "function") {
                componentFrameCache.set(fn, syntheticFrame);
              }
            }
            return syntheticFrame;
          }
          function describeClassComponentFrame(ctor, source, ownerFn) {
            {
              return describeNativeComponentFrame(ctor, true);
            }
          }
          function describeFunctionComponentFrame(fn, source, ownerFn) {
            {
              return describeNativeComponentFrame(fn, false);
            }
          }
          function shouldConstruct(Component) {
            var prototype = Component.prototype;
            return !!(prototype && prototype.isReactComponent);
          }
          function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
            if (type == null) {
              return "";
            }
            if (typeof type === "function") {
              {
                return describeNativeComponentFrame(type, shouldConstruct(type));
              }
            }
            if (typeof type === "string") {
              return describeBuiltInComponentFrame(type);
            }
            switch (type) {
              case REACT_SUSPENSE_TYPE:
                return describeBuiltInComponentFrame("Suspense");
              case REACT_SUSPENSE_LIST_TYPE:
                return describeBuiltInComponentFrame("SuspenseList");
            }
            if (typeof type === "object") {
              switch (type.$$typeof) {
                case REACT_FORWARD_REF_TYPE:
                  return describeFunctionComponentFrame(type.render);
                case REACT_MEMO_TYPE:
                  return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
                case REACT_BLOCK_TYPE:
                  return describeFunctionComponentFrame(type._render);
                case REACT_LAZY_TYPE: {
                  var lazyComponent = type;
                  var payload = lazyComponent._payload;
                  var init = lazyComponent._init;
                  try {
                    return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
                  } catch (x2) {
                  }
                }
              }
            }
            return "";
          }
          function describeFiber(fiber) {
            var owner = fiber._debugOwner ? fiber._debugOwner.type : null;
            var source = fiber._debugSource;
            switch (fiber.tag) {
              case HostComponent:
                return describeBuiltInComponentFrame(fiber.type);
              case LazyComponent:
                return describeBuiltInComponentFrame("Lazy");
              case SuspenseComponent:
                return describeBuiltInComponentFrame("Suspense");
              case SuspenseListComponent:
                return describeBuiltInComponentFrame("SuspenseList");
              case FunctionComponent:
              case IndeterminateComponent:
              case SimpleMemoComponent:
                return describeFunctionComponentFrame(fiber.type);
              case ForwardRef:
                return describeFunctionComponentFrame(fiber.type.render);
              case Block:
                return describeFunctionComponentFrame(fiber.type._render);
              case ClassComponent:
                return describeClassComponentFrame(fiber.type);
              default:
                return "";
            }
          }
          function getStackByFiberInDevAndProd(workInProgress2) {
            try {
              var info = "";
              var node = workInProgress2;
              do {
                info += describeFiber(node);
                node = node.return;
              } while (node);
              return info;
            } catch (x2) {
              return "\nError generating stack: " + x2.message + "\n" + x2.stack;
            }
          }
          function getWrappedName(outerType, innerType, wrapperName) {
            var functionName = innerType.displayName || innerType.name || "";
            return outerType.displayName || (functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName);
          }
          function getContextName(type) {
            return type.displayName || "Context";
          }
          function getComponentName(type) {
            if (type == null) {
              return null;
            }
            {
              if (typeof type.tag === "number") {
                error("Received an unexpected object in getComponentName(). This is likely a bug in React. Please file an issue.");
              }
            }
            if (typeof type === "function") {
              return type.displayName || type.name || null;
            }
            if (typeof type === "string") {
              return type;
            }
            switch (type) {
              case REACT_FRAGMENT_TYPE:
                return "Fragment";
              case REACT_PORTAL_TYPE:
                return "Portal";
              case REACT_PROFILER_TYPE:
                return "Profiler";
              case REACT_STRICT_MODE_TYPE:
                return "StrictMode";
              case REACT_SUSPENSE_TYPE:
                return "Suspense";
              case REACT_SUSPENSE_LIST_TYPE:
                return "SuspenseList";
            }
            if (typeof type === "object") {
              switch (type.$$typeof) {
                case REACT_CONTEXT_TYPE:
                  var context = type;
                  return getContextName(context) + ".Consumer";
                case REACT_PROVIDER_TYPE:
                  var provider = type;
                  return getContextName(provider._context) + ".Provider";
                case REACT_FORWARD_REF_TYPE:
                  return getWrappedName(type, type.render, "ForwardRef");
                case REACT_MEMO_TYPE:
                  return getComponentName(type.type);
                case REACT_BLOCK_TYPE:
                  return getComponentName(type._render);
                case REACT_LAZY_TYPE: {
                  var lazyComponent = type;
                  var payload = lazyComponent._payload;
                  var init = lazyComponent._init;
                  try {
                    return getComponentName(init(payload));
                  } catch (x2) {
                    return null;
                  }
                }
              }
            }
            return null;
          }
          var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
          var current = null;
          var isRendering = false;
          function getCurrentFiberOwnerNameInDevOrNull() {
            {
              if (current === null) {
                return null;
              }
              var owner = current._debugOwner;
              if (owner !== null && typeof owner !== "undefined") {
                return getComponentName(owner.type);
              }
            }
            return null;
          }
          function getCurrentFiberStackInDev() {
            {
              if (current === null) {
                return "";
              }
              return getStackByFiberInDevAndProd(current);
            }
          }
          function resetCurrentFiber() {
            {
              ReactDebugCurrentFrame.getCurrentStack = null;
              current = null;
              isRendering = false;
            }
          }
          function setCurrentFiber(fiber) {
            {
              ReactDebugCurrentFrame.getCurrentStack = getCurrentFiberStackInDev;
              current = fiber;
              isRendering = false;
            }
          }
          function setIsRendering(rendering) {
            {
              isRendering = rendering;
            }
          }
          function getIsRendering() {
            {
              return isRendering;
            }
          }
          function toString(value) {
            return "" + value;
          }
          function getToStringValue(value) {
            switch (typeof value) {
              case "boolean":
              case "number":
              case "object":
              case "string":
              case "undefined":
                return value;
              default:
                return "";
            }
          }
          var hasReadOnlyValue = {
            button: true,
            checkbox: true,
            image: true,
            hidden: true,
            radio: true,
            reset: true,
            submit: true
          };
          function checkControlledValueProps(tagName, props) {
            {
              if (!(hasReadOnlyValue[props.type] || props.onChange || props.onInput || props.readOnly || props.disabled || props.value == null)) {
                error("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.");
              }
              if (!(props.onChange || props.readOnly || props.disabled || props.checked == null)) {
                error("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.");
              }
            }
          }
          function isCheckable(elem) {
            var type = elem.type;
            var nodeName = elem.nodeName;
            return nodeName && nodeName.toLowerCase() === "input" && (type === "checkbox" || type === "radio");
          }
          function getTracker(node) {
            return node._valueTracker;
          }
          function detachTracker(node) {
            node._valueTracker = null;
          }
          function getValueFromNode(node) {
            var value = "";
            if (!node) {
              return value;
            }
            if (isCheckable(node)) {
              value = node.checked ? "true" : "false";
            } else {
              value = node.value;
            }
            return value;
          }
          function trackValueOnNode(node) {
            var valueField = isCheckable(node) ? "checked" : "value";
            var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);
            var currentValue = "" + node[valueField];
            if (node.hasOwnProperty(valueField) || typeof descriptor === "undefined" || typeof descriptor.get !== "function" || typeof descriptor.set !== "function") {
              return;
            }
            var get2 = descriptor.get, set2 = descriptor.set;
            Object.defineProperty(node, valueField, {
              configurable: true,
              get: function() {
                return get2.call(this);
              },
              set: function(value) {
                currentValue = "" + value;
                set2.call(this, value);
              }
            });
            Object.defineProperty(node, valueField, {
              enumerable: descriptor.enumerable
            });
            var tracker = {
              getValue: function() {
                return currentValue;
              },
              setValue: function(value) {
                currentValue = "" + value;
              },
              stopTracking: function() {
                detachTracker(node);
                delete node[valueField];
              }
            };
            return tracker;
          }
          function track(node) {
            if (getTracker(node)) {
              return;
            }
            node._valueTracker = trackValueOnNode(node);
          }
          function updateValueIfChanged(node) {
            if (!node) {
              return false;
            }
            var tracker = getTracker(node);
            if (!tracker) {
              return true;
            }
            var lastValue = tracker.getValue();
            var nextValue = getValueFromNode(node);
            if (nextValue !== lastValue) {
              tracker.setValue(nextValue);
              return true;
            }
            return false;
          }
          function getActiveElement(doc) {
            doc = doc || (typeof document !== "undefined" ? document : void 0);
            if (typeof doc === "undefined") {
              return null;
            }
            try {
              return doc.activeElement || doc.body;
            } catch (e2) {
              return doc.body;
            }
          }
          var didWarnValueDefaultValue = false;
          var didWarnCheckedDefaultChecked = false;
          var didWarnControlledToUncontrolled = false;
          var didWarnUncontrolledToControlled = false;
          function isControlled(props) {
            var usesChecked = props.type === "checkbox" || props.type === "radio";
            return usesChecked ? props.checked != null : props.value != null;
          }
          function getHostProps(element, props) {
            var node = element;
            var checked = props.checked;
            var hostProps = _assign({}, props, {
              defaultChecked: void 0,
              defaultValue: void 0,
              value: void 0,
              checked: checked != null ? checked : node._wrapperState.initialChecked
            });
            return hostProps;
          }
          function initWrapperState(element, props) {
            {
              checkControlledValueProps("input", props);
              if (props.checked !== void 0 && props.defaultChecked !== void 0 && !didWarnCheckedDefaultChecked) {
                error("%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || "A component", props.type);
                didWarnCheckedDefaultChecked = true;
              }
              if (props.value !== void 0 && props.defaultValue !== void 0 && !didWarnValueDefaultValue) {
                error("%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || "A component", props.type);
                didWarnValueDefaultValue = true;
              }
            }
            var node = element;
            var defaultValue = props.defaultValue == null ? "" : props.defaultValue;
            node._wrapperState = {
              initialChecked: props.checked != null ? props.checked : props.defaultChecked,
              initialValue: getToStringValue(props.value != null ? props.value : defaultValue),
              controlled: isControlled(props)
            };
          }
          function updateChecked(element, props) {
            var node = element;
            var checked = props.checked;
            if (checked != null) {
              setValueForProperty(node, "checked", checked, false);
            }
          }
          function updateWrapper(element, props) {
            var node = element;
            {
              var controlled = isControlled(props);
              if (!node._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
                error("A component is changing an uncontrolled input to be controlled. This is likely caused by the value changing from undefined to a defined value, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components");
                didWarnUncontrolledToControlled = true;
              }
              if (node._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
                error("A component is changing a controlled input to be uncontrolled. This is likely caused by the value changing from a defined to undefined, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components");
                didWarnControlledToUncontrolled = true;
              }
            }
            updateChecked(element, props);
            var value = getToStringValue(props.value);
            var type = props.type;
            if (value != null) {
              if (type === "number") {
                if (value === 0 && node.value === "" || node.value != value) {
                  node.value = toString(value);
                }
              } else if (node.value !== toString(value)) {
                node.value = toString(value);
              }
            } else if (type === "submit" || type === "reset") {
              node.removeAttribute("value");
              return;
            }
            {
              if (props.hasOwnProperty("value")) {
                setDefaultValue(node, props.type, value);
              } else if (props.hasOwnProperty("defaultValue")) {
                setDefaultValue(node, props.type, getToStringValue(props.defaultValue));
              }
            }
            {
              if (props.checked == null && props.defaultChecked != null) {
                node.defaultChecked = !!props.defaultChecked;
              }
            }
          }
          function postMountWrapper(element, props, isHydrating2) {
            var node = element;
            if (props.hasOwnProperty("value") || props.hasOwnProperty("defaultValue")) {
              var type = props.type;
              var isButton = type === "submit" || type === "reset";
              if (isButton && (props.value === void 0 || props.value === null)) {
                return;
              }
              var initialValue = toString(node._wrapperState.initialValue);
              if (!isHydrating2) {
                {
                  if (initialValue !== node.value) {
                    node.value = initialValue;
                  }
                }
              }
              {
                node.defaultValue = initialValue;
              }
            }
            var name = node.name;
            if (name !== "") {
              node.name = "";
            }
            {
              node.defaultChecked = !node.defaultChecked;
              node.defaultChecked = !!node._wrapperState.initialChecked;
            }
            if (name !== "") {
              node.name = name;
            }
          }
          function restoreControlledState(element, props) {
            var node = element;
            updateWrapper(node, props);
            updateNamedCousins(node, props);
          }
          function updateNamedCousins(rootNode, props) {
            var name = props.name;
            if (props.type === "radio" && name != null) {
              var queryRoot = rootNode;
              while (queryRoot.parentNode) {
                queryRoot = queryRoot.parentNode;
              }
              var group = queryRoot.querySelectorAll("input[name=" + JSON.stringify("" + name) + '][type="radio"]');
              for (var i2 = 0; i2 < group.length; i2++) {
                var otherNode = group[i2];
                if (otherNode === rootNode || otherNode.form !== rootNode.form) {
                  continue;
                }
                var otherProps = getFiberCurrentPropsFromNode(otherNode);
                if (!otherProps) {
                  {
                    throw Error("ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.");
                  }
                }
                updateValueIfChanged(otherNode);
                updateWrapper(otherNode, otherProps);
              }
            }
          }
          function setDefaultValue(node, type, value) {
            if (type !== "number" || getActiveElement(node.ownerDocument) !== node) {
              if (value == null) {
                node.defaultValue = toString(node._wrapperState.initialValue);
              } else if (node.defaultValue !== toString(value)) {
                node.defaultValue = toString(value);
              }
            }
          }
          var didWarnSelectedSetOnOption = false;
          var didWarnInvalidChild = false;
          function flattenChildren(children) {
            var content = "";
            React40.Children.forEach(children, function(child) {
              if (child == null) {
                return;
              }
              content += child;
            });
            return content;
          }
          function validateProps(element, props) {
            {
              if (typeof props.children === "object" && props.children !== null) {
                React40.Children.forEach(props.children, function(child) {
                  if (child == null) {
                    return;
                  }
                  if (typeof child === "string" || typeof child === "number") {
                    return;
                  }
                  if (typeof child.type !== "string") {
                    return;
                  }
                  if (!didWarnInvalidChild) {
                    didWarnInvalidChild = true;
                    error("Only strings and numbers are supported as <option> children.");
                  }
                });
              }
              if (props.selected != null && !didWarnSelectedSetOnOption) {
                error("Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>.");
                didWarnSelectedSetOnOption = true;
              }
            }
          }
          function postMountWrapper$1(element, props) {
            if (props.value != null) {
              element.setAttribute("value", toString(getToStringValue(props.value)));
            }
          }
          function getHostProps$1(element, props) {
            var hostProps = _assign({
              children: void 0
            }, props);
            var content = flattenChildren(props.children);
            if (content) {
              hostProps.children = content;
            }
            return hostProps;
          }
          var didWarnValueDefaultValue$1;
          {
            didWarnValueDefaultValue$1 = false;
          }
          function getDeclarationErrorAddendum() {
            var ownerName = getCurrentFiberOwnerNameInDevOrNull();
            if (ownerName) {
              return "\n\nCheck the render method of `" + ownerName + "`.";
            }
            return "";
          }
          var valuePropNames = ["value", "defaultValue"];
          function checkSelectPropTypes(props) {
            {
              checkControlledValueProps("select", props);
              for (var i2 = 0; i2 < valuePropNames.length; i2++) {
                var propName = valuePropNames[i2];
                if (props[propName] == null) {
                  continue;
                }
                var isArray2 = Array.isArray(props[propName]);
                if (props.multiple && !isArray2) {
                  error("The `%s` prop supplied to <select> must be an array if `multiple` is true.%s", propName, getDeclarationErrorAddendum());
                } else if (!props.multiple && isArray2) {
                  error("The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.%s", propName, getDeclarationErrorAddendum());
                }
              }
            }
          }
          function updateOptions(node, multiple, propValue, setDefaultSelected) {
            var options2 = node.options;
            if (multiple) {
              var selectedValues = propValue;
              var selectedValue = {};
              for (var i2 = 0; i2 < selectedValues.length; i2++) {
                selectedValue["$" + selectedValues[i2]] = true;
              }
              for (var _i = 0; _i < options2.length; _i++) {
                var selected = selectedValue.hasOwnProperty("$" + options2[_i].value);
                if (options2[_i].selected !== selected) {
                  options2[_i].selected = selected;
                }
                if (selected && setDefaultSelected) {
                  options2[_i].defaultSelected = true;
                }
              }
            } else {
              var _selectedValue = toString(getToStringValue(propValue));
              var defaultSelected = null;
              for (var _i2 = 0; _i2 < options2.length; _i2++) {
                if (options2[_i2].value === _selectedValue) {
                  options2[_i2].selected = true;
                  if (setDefaultSelected) {
                    options2[_i2].defaultSelected = true;
                  }
                  return;
                }
                if (defaultSelected === null && !options2[_i2].disabled) {
                  defaultSelected = options2[_i2];
                }
              }
              if (defaultSelected !== null) {
                defaultSelected.selected = true;
              }
            }
          }
          function getHostProps$2(element, props) {
            return _assign({}, props, {
              value: void 0
            });
          }
          function initWrapperState$1(element, props) {
            var node = element;
            {
              checkSelectPropTypes(props);
            }
            node._wrapperState = {
              wasMultiple: !!props.multiple
            };
            {
              if (props.value !== void 0 && props.defaultValue !== void 0 && !didWarnValueDefaultValue$1) {
                error("Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://reactjs.org/link/controlled-components");
                didWarnValueDefaultValue$1 = true;
              }
            }
          }
          function postMountWrapper$2(element, props) {
            var node = element;
            node.multiple = !!props.multiple;
            var value = props.value;
            if (value != null) {
              updateOptions(node, !!props.multiple, value, false);
            } else if (props.defaultValue != null) {
              updateOptions(node, !!props.multiple, props.defaultValue, true);
            }
          }
          function postUpdateWrapper(element, props) {
            var node = element;
            var wasMultiple = node._wrapperState.wasMultiple;
            node._wrapperState.wasMultiple = !!props.multiple;
            var value = props.value;
            if (value != null) {
              updateOptions(node, !!props.multiple, value, false);
            } else if (wasMultiple !== !!props.multiple) {
              if (props.defaultValue != null) {
                updateOptions(node, !!props.multiple, props.defaultValue, true);
              } else {
                updateOptions(node, !!props.multiple, props.multiple ? [] : "", false);
              }
            }
          }
          function restoreControlledState$1(element, props) {
            var node = element;
            var value = props.value;
            if (value != null) {
              updateOptions(node, !!props.multiple, value, false);
            }
          }
          var didWarnValDefaultVal = false;
          function getHostProps$3(element, props) {
            var node = element;
            if (!(props.dangerouslySetInnerHTML == null)) {
              {
                throw Error("`dangerouslySetInnerHTML` does not make sense on <textarea>.");
              }
            }
            var hostProps = _assign({}, props, {
              value: void 0,
              defaultValue: void 0,
              children: toString(node._wrapperState.initialValue)
            });
            return hostProps;
          }
          function initWrapperState$2(element, props) {
            var node = element;
            {
              checkControlledValueProps("textarea", props);
              if (props.value !== void 0 && props.defaultValue !== void 0 && !didWarnValDefaultVal) {
                error("%s contains a textarea with both value and defaultValue props. Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || "A component");
                didWarnValDefaultVal = true;
              }
            }
            var initialValue = props.value;
            if (initialValue == null) {
              var children = props.children, defaultValue = props.defaultValue;
              if (children != null) {
                {
                  error("Use the `defaultValue` or `value` props instead of setting children on <textarea>.");
                }
                {
                  if (!(defaultValue == null)) {
                    {
                      throw Error("If you supply `defaultValue` on a <textarea>, do not pass children.");
                    }
                  }
                  if (Array.isArray(children)) {
                    if (!(children.length <= 1)) {
                      {
                        throw Error("<textarea> can only have at most one child.");
                      }
                    }
                    children = children[0];
                  }
                  defaultValue = children;
                }
              }
              if (defaultValue == null) {
                defaultValue = "";
              }
              initialValue = defaultValue;
            }
            node._wrapperState = {
              initialValue: getToStringValue(initialValue)
            };
          }
          function updateWrapper$1(element, props) {
            var node = element;
            var value = getToStringValue(props.value);
            var defaultValue = getToStringValue(props.defaultValue);
            if (value != null) {
              var newValue = toString(value);
              if (newValue !== node.value) {
                node.value = newValue;
              }
              if (props.defaultValue == null && node.defaultValue !== newValue) {
                node.defaultValue = newValue;
              }
            }
            if (defaultValue != null) {
              node.defaultValue = toString(defaultValue);
            }
          }
          function postMountWrapper$3(element, props) {
            var node = element;
            var textContent = node.textContent;
            if (textContent === node._wrapperState.initialValue) {
              if (textContent !== "" && textContent !== null) {
                node.value = textContent;
              }
            }
          }
          function restoreControlledState$2(element, props) {
            updateWrapper$1(element, props);
          }
          var HTML_NAMESPACE = "http://www.w3.org/1999/xhtml";
          var MATH_NAMESPACE = "http://www.w3.org/1998/Math/MathML";
          var SVG_NAMESPACE = "http://www.w3.org/2000/svg";
          var Namespaces = {
            html: HTML_NAMESPACE,
            mathml: MATH_NAMESPACE,
            svg: SVG_NAMESPACE
          };
          function getIntrinsicNamespace(type) {
            switch (type) {
              case "svg":
                return SVG_NAMESPACE;
              case "math":
                return MATH_NAMESPACE;
              default:
                return HTML_NAMESPACE;
            }
          }
          function getChildNamespace(parentNamespace, type) {
            if (parentNamespace == null || parentNamespace === HTML_NAMESPACE) {
              return getIntrinsicNamespace(type);
            }
            if (parentNamespace === SVG_NAMESPACE && type === "foreignObject") {
              return HTML_NAMESPACE;
            }
            return parentNamespace;
          }
          var createMicrosoftUnsafeLocalFunction = function(func) {
            if (typeof MSApp !== "undefined" && MSApp.execUnsafeLocalFunction) {
              return function(arg0, arg1, arg2, arg3) {
                MSApp.execUnsafeLocalFunction(function() {
                  return func(arg0, arg1, arg2, arg3);
                });
              };
            } else {
              return func;
            }
          };
          var reusableSVGContainer;
          var setInnerHTML = createMicrosoftUnsafeLocalFunction(function(node, html) {
            if (node.namespaceURI === Namespaces.svg) {
              if (!("innerHTML" in node)) {
                reusableSVGContainer = reusableSVGContainer || document.createElement("div");
                reusableSVGContainer.innerHTML = "<svg>" + html.valueOf().toString() + "</svg>";
                var svgNode = reusableSVGContainer.firstChild;
                while (node.firstChild) {
                  node.removeChild(node.firstChild);
                }
                while (svgNode.firstChild) {
                  node.appendChild(svgNode.firstChild);
                }
                return;
              }
            }
            node.innerHTML = html;
          });
          var ELEMENT_NODE = 1;
          var TEXT_NODE = 3;
          var COMMENT_NODE = 8;
          var DOCUMENT_NODE = 9;
          var DOCUMENT_FRAGMENT_NODE = 11;
          var setTextContent = function(node, text) {
            if (text) {
              var firstChild = node.firstChild;
              if (firstChild && firstChild === node.lastChild && firstChild.nodeType === TEXT_NODE) {
                firstChild.nodeValue = text;
                return;
              }
            }
            node.textContent = text;
          };
          var shorthandToLonghand = {
            animation: ["animationDelay", "animationDirection", "animationDuration", "animationFillMode", "animationIterationCount", "animationName", "animationPlayState", "animationTimingFunction"],
            background: ["backgroundAttachment", "backgroundClip", "backgroundColor", "backgroundImage", "backgroundOrigin", "backgroundPositionX", "backgroundPositionY", "backgroundRepeat", "backgroundSize"],
            backgroundPosition: ["backgroundPositionX", "backgroundPositionY"],
            border: ["borderBottomColor", "borderBottomStyle", "borderBottomWidth", "borderImageOutset", "borderImageRepeat", "borderImageSlice", "borderImageSource", "borderImageWidth", "borderLeftColor", "borderLeftStyle", "borderLeftWidth", "borderRightColor", "borderRightStyle", "borderRightWidth", "borderTopColor", "borderTopStyle", "borderTopWidth"],
            borderBlockEnd: ["borderBlockEndColor", "borderBlockEndStyle", "borderBlockEndWidth"],
            borderBlockStart: ["borderBlockStartColor", "borderBlockStartStyle", "borderBlockStartWidth"],
            borderBottom: ["borderBottomColor", "borderBottomStyle", "borderBottomWidth"],
            borderColor: ["borderBottomColor", "borderLeftColor", "borderRightColor", "borderTopColor"],
            borderImage: ["borderImageOutset", "borderImageRepeat", "borderImageSlice", "borderImageSource", "borderImageWidth"],
            borderInlineEnd: ["borderInlineEndColor", "borderInlineEndStyle", "borderInlineEndWidth"],
            borderInlineStart: ["borderInlineStartColor", "borderInlineStartStyle", "borderInlineStartWidth"],
            borderLeft: ["borderLeftColor", "borderLeftStyle", "borderLeftWidth"],
            borderRadius: ["borderBottomLeftRadius", "borderBottomRightRadius", "borderTopLeftRadius", "borderTopRightRadius"],
            borderRight: ["borderRightColor", "borderRightStyle", "borderRightWidth"],
            borderStyle: ["borderBottomStyle", "borderLeftStyle", "borderRightStyle", "borderTopStyle"],
            borderTop: ["borderTopColor", "borderTopStyle", "borderTopWidth"],
            borderWidth: ["borderBottomWidth", "borderLeftWidth", "borderRightWidth", "borderTopWidth"],
            columnRule: ["columnRuleColor", "columnRuleStyle", "columnRuleWidth"],
            columns: ["columnCount", "columnWidth"],
            flex: ["flexBasis", "flexGrow", "flexShrink"],
            flexFlow: ["flexDirection", "flexWrap"],
            font: ["fontFamily", "fontFeatureSettings", "fontKerning", "fontLanguageOverride", "fontSize", "fontSizeAdjust", "fontStretch", "fontStyle", "fontVariant", "fontVariantAlternates", "fontVariantCaps", "fontVariantEastAsian", "fontVariantLigatures", "fontVariantNumeric", "fontVariantPosition", "fontWeight", "lineHeight"],
            fontVariant: ["fontVariantAlternates", "fontVariantCaps", "fontVariantEastAsian", "fontVariantLigatures", "fontVariantNumeric", "fontVariantPosition"],
            gap: ["columnGap", "rowGap"],
            grid: ["gridAutoColumns", "gridAutoFlow", "gridAutoRows", "gridTemplateAreas", "gridTemplateColumns", "gridTemplateRows"],
            gridArea: ["gridColumnEnd", "gridColumnStart", "gridRowEnd", "gridRowStart"],
            gridColumn: ["gridColumnEnd", "gridColumnStart"],
            gridColumnGap: ["columnGap"],
            gridGap: ["columnGap", "rowGap"],
            gridRow: ["gridRowEnd", "gridRowStart"],
            gridRowGap: ["rowGap"],
            gridTemplate: ["gridTemplateAreas", "gridTemplateColumns", "gridTemplateRows"],
            listStyle: ["listStyleImage", "listStylePosition", "listStyleType"],
            margin: ["marginBottom", "marginLeft", "marginRight", "marginTop"],
            marker: ["markerEnd", "markerMid", "markerStart"],
            mask: ["maskClip", "maskComposite", "maskImage", "maskMode", "maskOrigin", "maskPositionX", "maskPositionY", "maskRepeat", "maskSize"],
            maskPosition: ["maskPositionX", "maskPositionY"],
            outline: ["outlineColor", "outlineStyle", "outlineWidth"],
            overflow: ["overflowX", "overflowY"],
            padding: ["paddingBottom", "paddingLeft", "paddingRight", "paddingTop"],
            placeContent: ["alignContent", "justifyContent"],
            placeItems: ["alignItems", "justifyItems"],
            placeSelf: ["alignSelf", "justifySelf"],
            textDecoration: ["textDecorationColor", "textDecorationLine", "textDecorationStyle"],
            textEmphasis: ["textEmphasisColor", "textEmphasisStyle"],
            transition: ["transitionDelay", "transitionDuration", "transitionProperty", "transitionTimingFunction"],
            wordWrap: ["overflowWrap"]
          };
          var isUnitlessNumber = {
            animationIterationCount: true,
            borderImageOutset: true,
            borderImageSlice: true,
            borderImageWidth: true,
            boxFlex: true,
            boxFlexGroup: true,
            boxOrdinalGroup: true,
            columnCount: true,
            columns: true,
            flex: true,
            flexGrow: true,
            flexPositive: true,
            flexShrink: true,
            flexNegative: true,
            flexOrder: true,
            gridArea: true,
            gridRow: true,
            gridRowEnd: true,
            gridRowSpan: true,
            gridRowStart: true,
            gridColumn: true,
            gridColumnEnd: true,
            gridColumnSpan: true,
            gridColumnStart: true,
            fontWeight: true,
            lineClamp: true,
            lineHeight: true,
            opacity: true,
            order: true,
            orphans: true,
            tabSize: true,
            widows: true,
            zIndex: true,
            zoom: true,
            fillOpacity: true,
            floodOpacity: true,
            stopOpacity: true,
            strokeDasharray: true,
            strokeDashoffset: true,
            strokeMiterlimit: true,
            strokeOpacity: true,
            strokeWidth: true
          };
          function prefixKey(prefix2, key) {
            return prefix2 + key.charAt(0).toUpperCase() + key.substring(1);
          }
          var prefixes = ["Webkit", "ms", "Moz", "O"];
          Object.keys(isUnitlessNumber).forEach(function(prop) {
            prefixes.forEach(function(prefix2) {
              isUnitlessNumber[prefixKey(prefix2, prop)] = isUnitlessNumber[prop];
            });
          });
          function dangerousStyleValue(name, value, isCustomProperty) {
            var isEmpty = value == null || typeof value === "boolean" || value === "";
            if (isEmpty) {
              return "";
            }
            if (!isCustomProperty && typeof value === "number" && value !== 0 && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) {
              return value + "px";
            }
            return ("" + value).trim();
          }
          var uppercasePattern = /([A-Z])/g;
          var msPattern = /^ms-/;
          function hyphenateStyleName(name) {
            return name.replace(uppercasePattern, "-$1").toLowerCase().replace(msPattern, "-ms-");
          }
          var warnValidStyle = function() {
          };
          {
            var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
            var msPattern$1 = /^-ms-/;
            var hyphenPattern = /-(.)/g;
            var badStyleValueWithSemicolonPattern = /;\s*$/;
            var warnedStyleNames = {};
            var warnedStyleValues = {};
            var warnedForNaNValue = false;
            var warnedForInfinityValue = false;
            var camelize = function(string) {
              return string.replace(hyphenPattern, function(_3, character) {
                return character.toUpperCase();
              });
            };
            var warnHyphenatedStyleName = function(name) {
              if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
                return;
              }
              warnedStyleNames[name] = true;
              error("Unsupported style property %s. Did you mean %s?", name, camelize(name.replace(msPattern$1, "ms-")));
            };
            var warnBadVendoredStyleName = function(name) {
              if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
                return;
              }
              warnedStyleNames[name] = true;
              error("Unsupported vendor-prefixed style property %s. Did you mean %s?", name, name.charAt(0).toUpperCase() + name.slice(1));
            };
            var warnStyleValueWithSemicolon = function(name, value) {
              if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
                return;
              }
              warnedStyleValues[value] = true;
              error(`Style property values shouldn't contain a semicolon. Try "%s: %s" instead.`, name, value.replace(badStyleValueWithSemicolonPattern, ""));
            };
            var warnStyleValueIsNaN = function(name, value) {
              if (warnedForNaNValue) {
                return;
              }
              warnedForNaNValue = true;
              error("`NaN` is an invalid value for the `%s` css style property.", name);
            };
            var warnStyleValueIsInfinity = function(name, value) {
              if (warnedForInfinityValue) {
                return;
              }
              warnedForInfinityValue = true;
              error("`Infinity` is an invalid value for the `%s` css style property.", name);
            };
            warnValidStyle = function(name, value) {
              if (name.indexOf("-") > -1) {
                warnHyphenatedStyleName(name);
              } else if (badVendoredStyleNamePattern.test(name)) {
                warnBadVendoredStyleName(name);
              } else if (badStyleValueWithSemicolonPattern.test(value)) {
                warnStyleValueWithSemicolon(name, value);
              }
              if (typeof value === "number") {
                if (isNaN(value)) {
                  warnStyleValueIsNaN(name, value);
                } else if (!isFinite(value)) {
                  warnStyleValueIsInfinity(name, value);
                }
              }
            };
          }
          var warnValidStyle$1 = warnValidStyle;
          function createDangerousStringForStyles(styles2) {
            {
              var serialized = "";
              var delimiter = "";
              for (var styleName in styles2) {
                if (!styles2.hasOwnProperty(styleName)) {
                  continue;
                }
                var styleValue = styles2[styleName];
                if (styleValue != null) {
                  var isCustomProperty = styleName.indexOf("--") === 0;
                  serialized += delimiter + (isCustomProperty ? styleName : hyphenateStyleName(styleName)) + ":";
                  serialized += dangerousStyleValue(styleName, styleValue, isCustomProperty);
                  delimiter = ";";
                }
              }
              return serialized || null;
            }
          }
          function setValueForStyles(node, styles2) {
            var style2 = node.style;
            for (var styleName in styles2) {
              if (!styles2.hasOwnProperty(styleName)) {
                continue;
              }
              var isCustomProperty = styleName.indexOf("--") === 0;
              {
                if (!isCustomProperty) {
                  warnValidStyle$1(styleName, styles2[styleName]);
                }
              }
              var styleValue = dangerousStyleValue(styleName, styles2[styleName], isCustomProperty);
              if (styleName === "float") {
                styleName = "cssFloat";
              }
              if (isCustomProperty) {
                style2.setProperty(styleName, styleValue);
              } else {
                style2[styleName] = styleValue;
              }
            }
          }
          function isValueEmpty(value) {
            return value == null || typeof value === "boolean" || value === "";
          }
          function expandShorthandMap(styles2) {
            var expanded = {};
            for (var key in styles2) {
              var longhands = shorthandToLonghand[key] || [key];
              for (var i2 = 0; i2 < longhands.length; i2++) {
                expanded[longhands[i2]] = key;
              }
            }
            return expanded;
          }
          function validateShorthandPropertyCollisionInDev(styleUpdates, nextStyles) {
            {
              if (!nextStyles) {
                return;
              }
              var expandedUpdates = expandShorthandMap(styleUpdates);
              var expandedStyles = expandShorthandMap(nextStyles);
              var warnedAbout = {};
              for (var key in expandedUpdates) {
                var originalKey = expandedUpdates[key];
                var correctOriginalKey = expandedStyles[key];
                if (correctOriginalKey && originalKey !== correctOriginalKey) {
                  var warningKey = originalKey + "," + correctOriginalKey;
                  if (warnedAbout[warningKey]) {
                    continue;
                  }
                  warnedAbout[warningKey] = true;
                  error("%s a style property during rerender (%s) when a conflicting property is set (%s) can lead to styling bugs. To avoid this, don't mix shorthand and non-shorthand properties for the same value; instead, replace the shorthand with separate values.", isValueEmpty(styleUpdates[originalKey]) ? "Removing" : "Updating", originalKey, correctOriginalKey);
                }
              }
            }
          }
          var omittedCloseTags = {
            area: true,
            base: true,
            br: true,
            col: true,
            embed: true,
            hr: true,
            img: true,
            input: true,
            keygen: true,
            link: true,
            meta: true,
            param: true,
            source: true,
            track: true,
            wbr: true
          };
          var voidElementTags = _assign({
            menuitem: true
          }, omittedCloseTags);
          var HTML = "__html";
          function assertValidProps(tag, props) {
            if (!props) {
              return;
            }
            if (voidElementTags[tag]) {
              if (!(props.children == null && props.dangerouslySetInnerHTML == null)) {
                {
                  throw Error(tag + " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
                }
              }
            }
            if (props.dangerouslySetInnerHTML != null) {
              if (!(props.children == null)) {
                {
                  throw Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
                }
              }
              if (!(typeof props.dangerouslySetInnerHTML === "object" && HTML in props.dangerouslySetInnerHTML)) {
                {
                  throw Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
                }
              }
            }
            {
              if (!props.suppressContentEditableWarning && props.contentEditable && props.children != null) {
                error("A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional.");
              }
            }
            if (!(props.style == null || typeof props.style === "object")) {
              {
                throw Error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.");
              }
            }
          }
          function isCustomComponent(tagName, props) {
            if (tagName.indexOf("-") === -1) {
              return typeof props.is === "string";
            }
            switch (tagName) {
              case "annotation-xml":
              case "color-profile":
              case "font-face":
              case "font-face-src":
              case "font-face-uri":
              case "font-face-format":
              case "font-face-name":
              case "missing-glyph":
                return false;
              default:
                return true;
            }
          }
          var possibleStandardNames = {
            accept: "accept",
            acceptcharset: "acceptCharset",
            "accept-charset": "acceptCharset",
            accesskey: "accessKey",
            action: "action",
            allowfullscreen: "allowFullScreen",
            alt: "alt",
            as: "as",
            async: "async",
            autocapitalize: "autoCapitalize",
            autocomplete: "autoComplete",
            autocorrect: "autoCorrect",
            autofocus: "autoFocus",
            autoplay: "autoPlay",
            autosave: "autoSave",
            capture: "capture",
            cellpadding: "cellPadding",
            cellspacing: "cellSpacing",
            challenge: "challenge",
            charset: "charSet",
            checked: "checked",
            children: "children",
            cite: "cite",
            class: "className",
            classid: "classID",
            classname: "className",
            cols: "cols",
            colspan: "colSpan",
            content: "content",
            contenteditable: "contentEditable",
            contextmenu: "contextMenu",
            controls: "controls",
            controlslist: "controlsList",
            coords: "coords",
            crossorigin: "crossOrigin",
            dangerouslysetinnerhtml: "dangerouslySetInnerHTML",
            data: "data",
            datetime: "dateTime",
            default: "default",
            defaultchecked: "defaultChecked",
            defaultvalue: "defaultValue",
            defer: "defer",
            dir: "dir",
            disabled: "disabled",
            disablepictureinpicture: "disablePictureInPicture",
            disableremoteplayback: "disableRemotePlayback",
            download: "download",
            draggable: "draggable",
            enctype: "encType",
            enterkeyhint: "enterKeyHint",
            for: "htmlFor",
            form: "form",
            formmethod: "formMethod",
            formaction: "formAction",
            formenctype: "formEncType",
            formnovalidate: "formNoValidate",
            formtarget: "formTarget",
            frameborder: "frameBorder",
            headers: "headers",
            height: "height",
            hidden: "hidden",
            high: "high",
            href: "href",
            hreflang: "hrefLang",
            htmlfor: "htmlFor",
            httpequiv: "httpEquiv",
            "http-equiv": "httpEquiv",
            icon: "icon",
            id: "id",
            innerhtml: "innerHTML",
            inputmode: "inputMode",
            integrity: "integrity",
            is: "is",
            itemid: "itemID",
            itemprop: "itemProp",
            itemref: "itemRef",
            itemscope: "itemScope",
            itemtype: "itemType",
            keyparams: "keyParams",
            keytype: "keyType",
            kind: "kind",
            label: "label",
            lang: "lang",
            list: "list",
            loop: "loop",
            low: "low",
            manifest: "manifest",
            marginwidth: "marginWidth",
            marginheight: "marginHeight",
            max: "max",
            maxlength: "maxLength",
            media: "media",
            mediagroup: "mediaGroup",
            method: "method",
            min: "min",
            minlength: "minLength",
            multiple: "multiple",
            muted: "muted",
            name: "name",
            nomodule: "noModule",
            nonce: "nonce",
            novalidate: "noValidate",
            open: "open",
            optimum: "optimum",
            pattern: "pattern",
            placeholder: "placeholder",
            playsinline: "playsInline",
            poster: "poster",
            preload: "preload",
            profile: "profile",
            radiogroup: "radioGroup",
            readonly: "readOnly",
            referrerpolicy: "referrerPolicy",
            rel: "rel",
            required: "required",
            reversed: "reversed",
            role: "role",
            rows: "rows",
            rowspan: "rowSpan",
            sandbox: "sandbox",
            scope: "scope",
            scoped: "scoped",
            scrolling: "scrolling",
            seamless: "seamless",
            selected: "selected",
            shape: "shape",
            size: "size",
            sizes: "sizes",
            span: "span",
            spellcheck: "spellCheck",
            src: "src",
            srcdoc: "srcDoc",
            srclang: "srcLang",
            srcset: "srcSet",
            start: "start",
            step: "step",
            style: "style",
            summary: "summary",
            tabindex: "tabIndex",
            target: "target",
            title: "title",
            type: "type",
            usemap: "useMap",
            value: "value",
            width: "width",
            wmode: "wmode",
            wrap: "wrap",
            about: "about",
            accentheight: "accentHeight",
            "accent-height": "accentHeight",
            accumulate: "accumulate",
            additive: "additive",
            alignmentbaseline: "alignmentBaseline",
            "alignment-baseline": "alignmentBaseline",
            allowreorder: "allowReorder",
            alphabetic: "alphabetic",
            amplitude: "amplitude",
            arabicform: "arabicForm",
            "arabic-form": "arabicForm",
            ascent: "ascent",
            attributename: "attributeName",
            attributetype: "attributeType",
            autoreverse: "autoReverse",
            azimuth: "azimuth",
            basefrequency: "baseFrequency",
            baselineshift: "baselineShift",
            "baseline-shift": "baselineShift",
            baseprofile: "baseProfile",
            bbox: "bbox",
            begin: "begin",
            bias: "bias",
            by: "by",
            calcmode: "calcMode",
            capheight: "capHeight",
            "cap-height": "capHeight",
            clip: "clip",
            clippath: "clipPath",
            "clip-path": "clipPath",
            clippathunits: "clipPathUnits",
            cliprule: "clipRule",
            "clip-rule": "clipRule",
            color: "color",
            colorinterpolation: "colorInterpolation",
            "color-interpolation": "colorInterpolation",
            colorinterpolationfilters: "colorInterpolationFilters",
            "color-interpolation-filters": "colorInterpolationFilters",
            colorprofile: "colorProfile",
            "color-profile": "colorProfile",
            colorrendering: "colorRendering",
            "color-rendering": "colorRendering",
            contentscripttype: "contentScriptType",
            contentstyletype: "contentStyleType",
            cursor: "cursor",
            cx: "cx",
            cy: "cy",
            d: "d",
            datatype: "datatype",
            decelerate: "decelerate",
            descent: "descent",
            diffuseconstant: "diffuseConstant",
            direction: "direction",
            display: "display",
            divisor: "divisor",
            dominantbaseline: "dominantBaseline",
            "dominant-baseline": "dominantBaseline",
            dur: "dur",
            dx: "dx",
            dy: "dy",
            edgemode: "edgeMode",
            elevation: "elevation",
            enablebackground: "enableBackground",
            "enable-background": "enableBackground",
            end: "end",
            exponent: "exponent",
            externalresourcesrequired: "externalResourcesRequired",
            fill: "fill",
            fillopacity: "fillOpacity",
            "fill-opacity": "fillOpacity",
            fillrule: "fillRule",
            "fill-rule": "fillRule",
            filter: "filter",
            filterres: "filterRes",
            filterunits: "filterUnits",
            floodopacity: "floodOpacity",
            "flood-opacity": "floodOpacity",
            floodcolor: "floodColor",
            "flood-color": "floodColor",
            focusable: "focusable",
            fontfamily: "fontFamily",
            "font-family": "fontFamily",
            fontsize: "fontSize",
            "font-size": "fontSize",
            fontsizeadjust: "fontSizeAdjust",
            "font-size-adjust": "fontSizeAdjust",
            fontstretch: "fontStretch",
            "font-stretch": "fontStretch",
            fontstyle: "fontStyle",
            "font-style": "fontStyle",
            fontvariant: "fontVariant",
            "font-variant": "fontVariant",
            fontweight: "fontWeight",
            "font-weight": "fontWeight",
            format: "format",
            from: "from",
            fx: "fx",
            fy: "fy",
            g1: "g1",
            g2: "g2",
            glyphname: "glyphName",
            "glyph-name": "glyphName",
            glyphorientationhorizontal: "glyphOrientationHorizontal",
            "glyph-orientation-horizontal": "glyphOrientationHorizontal",
            glyphorientationvertical: "glyphOrientationVertical",
            "glyph-orientation-vertical": "glyphOrientationVertical",
            glyphref: "glyphRef",
            gradienttransform: "gradientTransform",
            gradientunits: "gradientUnits",
            hanging: "hanging",
            horizadvx: "horizAdvX",
            "horiz-adv-x": "horizAdvX",
            horizoriginx: "horizOriginX",
            "horiz-origin-x": "horizOriginX",
            ideographic: "ideographic",
            imagerendering: "imageRendering",
            "image-rendering": "imageRendering",
            in2: "in2",
            in: "in",
            inlist: "inlist",
            intercept: "intercept",
            k1: "k1",
            k2: "k2",
            k3: "k3",
            k4: "k4",
            k: "k",
            kernelmatrix: "kernelMatrix",
            kernelunitlength: "kernelUnitLength",
            kerning: "kerning",
            keypoints: "keyPoints",
            keysplines: "keySplines",
            keytimes: "keyTimes",
            lengthadjust: "lengthAdjust",
            letterspacing: "letterSpacing",
            "letter-spacing": "letterSpacing",
            lightingcolor: "lightingColor",
            "lighting-color": "lightingColor",
            limitingconeangle: "limitingConeAngle",
            local: "local",
            markerend: "markerEnd",
            "marker-end": "markerEnd",
            markerheight: "markerHeight",
            markermid: "markerMid",
            "marker-mid": "markerMid",
            markerstart: "markerStart",
            "marker-start": "markerStart",
            markerunits: "markerUnits",
            markerwidth: "markerWidth",
            mask: "mask",
            maskcontentunits: "maskContentUnits",
            maskunits: "maskUnits",
            mathematical: "mathematical",
            mode: "mode",
            numoctaves: "numOctaves",
            offset: "offset",
            opacity: "opacity",
            operator: "operator",
            order: "order",
            orient: "orient",
            orientation: "orientation",
            origin: "origin",
            overflow: "overflow",
            overlineposition: "overlinePosition",
            "overline-position": "overlinePosition",
            overlinethickness: "overlineThickness",
            "overline-thickness": "overlineThickness",
            paintorder: "paintOrder",
            "paint-order": "paintOrder",
            panose1: "panose1",
            "panose-1": "panose1",
            pathlength: "pathLength",
            patterncontentunits: "patternContentUnits",
            patterntransform: "patternTransform",
            patternunits: "patternUnits",
            pointerevents: "pointerEvents",
            "pointer-events": "pointerEvents",
            points: "points",
            pointsatx: "pointsAtX",
            pointsaty: "pointsAtY",
            pointsatz: "pointsAtZ",
            prefix: "prefix",
            preservealpha: "preserveAlpha",
            preserveaspectratio: "preserveAspectRatio",
            primitiveunits: "primitiveUnits",
            property: "property",
            r: "r",
            radius: "radius",
            refx: "refX",
            refy: "refY",
            renderingintent: "renderingIntent",
            "rendering-intent": "renderingIntent",
            repeatcount: "repeatCount",
            repeatdur: "repeatDur",
            requiredextensions: "requiredExtensions",
            requiredfeatures: "requiredFeatures",
            resource: "resource",
            restart: "restart",
            result: "result",
            results: "results",
            rotate: "rotate",
            rx: "rx",
            ry: "ry",
            scale: "scale",
            security: "security",
            seed: "seed",
            shaperendering: "shapeRendering",
            "shape-rendering": "shapeRendering",
            slope: "slope",
            spacing: "spacing",
            specularconstant: "specularConstant",
            specularexponent: "specularExponent",
            speed: "speed",
            spreadmethod: "spreadMethod",
            startoffset: "startOffset",
            stddeviation: "stdDeviation",
            stemh: "stemh",
            stemv: "stemv",
            stitchtiles: "stitchTiles",
            stopcolor: "stopColor",
            "stop-color": "stopColor",
            stopopacity: "stopOpacity",
            "stop-opacity": "stopOpacity",
            strikethroughposition: "strikethroughPosition",
            "strikethrough-position": "strikethroughPosition",
            strikethroughthickness: "strikethroughThickness",
            "strikethrough-thickness": "strikethroughThickness",
            string: "string",
            stroke: "stroke",
            strokedasharray: "strokeDasharray",
            "stroke-dasharray": "strokeDasharray",
            strokedashoffset: "strokeDashoffset",
            "stroke-dashoffset": "strokeDashoffset",
            strokelinecap: "strokeLinecap",
            "stroke-linecap": "strokeLinecap",
            strokelinejoin: "strokeLinejoin",
            "stroke-linejoin": "strokeLinejoin",
            strokemiterlimit: "strokeMiterlimit",
            "stroke-miterlimit": "strokeMiterlimit",
            strokewidth: "strokeWidth",
            "stroke-width": "strokeWidth",
            strokeopacity: "strokeOpacity",
            "stroke-opacity": "strokeOpacity",
            suppresscontenteditablewarning: "suppressContentEditableWarning",
            suppresshydrationwarning: "suppressHydrationWarning",
            surfacescale: "surfaceScale",
            systemlanguage: "systemLanguage",
            tablevalues: "tableValues",
            targetx: "targetX",
            targety: "targetY",
            textanchor: "textAnchor",
            "text-anchor": "textAnchor",
            textdecoration: "textDecoration",
            "text-decoration": "textDecoration",
            textlength: "textLength",
            textrendering: "textRendering",
            "text-rendering": "textRendering",
            to: "to",
            transform: "transform",
            typeof: "typeof",
            u1: "u1",
            u2: "u2",
            underlineposition: "underlinePosition",
            "underline-position": "underlinePosition",
            underlinethickness: "underlineThickness",
            "underline-thickness": "underlineThickness",
            unicode: "unicode",
            unicodebidi: "unicodeBidi",
            "unicode-bidi": "unicodeBidi",
            unicoderange: "unicodeRange",
            "unicode-range": "unicodeRange",
            unitsperem: "unitsPerEm",
            "units-per-em": "unitsPerEm",
            unselectable: "unselectable",
            valphabetic: "vAlphabetic",
            "v-alphabetic": "vAlphabetic",
            values: "values",
            vectoreffect: "vectorEffect",
            "vector-effect": "vectorEffect",
            version: "version",
            vertadvy: "vertAdvY",
            "vert-adv-y": "vertAdvY",
            vertoriginx: "vertOriginX",
            "vert-origin-x": "vertOriginX",
            vertoriginy: "vertOriginY",
            "vert-origin-y": "vertOriginY",
            vhanging: "vHanging",
            "v-hanging": "vHanging",
            videographic: "vIdeographic",
            "v-ideographic": "vIdeographic",
            viewbox: "viewBox",
            viewtarget: "viewTarget",
            visibility: "visibility",
            vmathematical: "vMathematical",
            "v-mathematical": "vMathematical",
            vocab: "vocab",
            widths: "widths",
            wordspacing: "wordSpacing",
            "word-spacing": "wordSpacing",
            writingmode: "writingMode",
            "writing-mode": "writingMode",
            x1: "x1",
            x2: "x2",
            x: "x",
            xchannelselector: "xChannelSelector",
            xheight: "xHeight",
            "x-height": "xHeight",
            xlinkactuate: "xlinkActuate",
            "xlink:actuate": "xlinkActuate",
            xlinkarcrole: "xlinkArcrole",
            "xlink:arcrole": "xlinkArcrole",
            xlinkhref: "xlinkHref",
            "xlink:href": "xlinkHref",
            xlinkrole: "xlinkRole",
            "xlink:role": "xlinkRole",
            xlinkshow: "xlinkShow",
            "xlink:show": "xlinkShow",
            xlinktitle: "xlinkTitle",
            "xlink:title": "xlinkTitle",
            xlinktype: "xlinkType",
            "xlink:type": "xlinkType",
            xmlbase: "xmlBase",
            "xml:base": "xmlBase",
            xmllang: "xmlLang",
            "xml:lang": "xmlLang",
            xmlns: "xmlns",
            "xml:space": "xmlSpace",
            xmlnsxlink: "xmlnsXlink",
            "xmlns:xlink": "xmlnsXlink",
            xmlspace: "xmlSpace",
            y1: "y1",
            y2: "y2",
            y: "y",
            ychannelselector: "yChannelSelector",
            z: "z",
            zoomandpan: "zoomAndPan"
          };
          var ariaProperties = {
            "aria-current": 0,
            "aria-details": 0,
            "aria-disabled": 0,
            "aria-hidden": 0,
            "aria-invalid": 0,
            "aria-keyshortcuts": 0,
            "aria-label": 0,
            "aria-roledescription": 0,
            "aria-autocomplete": 0,
            "aria-checked": 0,
            "aria-expanded": 0,
            "aria-haspopup": 0,
            "aria-level": 0,
            "aria-modal": 0,
            "aria-multiline": 0,
            "aria-multiselectable": 0,
            "aria-orientation": 0,
            "aria-placeholder": 0,
            "aria-pressed": 0,
            "aria-readonly": 0,
            "aria-required": 0,
            "aria-selected": 0,
            "aria-sort": 0,
            "aria-valuemax": 0,
            "aria-valuemin": 0,
            "aria-valuenow": 0,
            "aria-valuetext": 0,
            "aria-atomic": 0,
            "aria-busy": 0,
            "aria-live": 0,
            "aria-relevant": 0,
            "aria-dropeffect": 0,
            "aria-grabbed": 0,
            "aria-activedescendant": 0,
            "aria-colcount": 0,
            "aria-colindex": 0,
            "aria-colspan": 0,
            "aria-controls": 0,
            "aria-describedby": 0,
            "aria-errormessage": 0,
            "aria-flowto": 0,
            "aria-labelledby": 0,
            "aria-owns": 0,
            "aria-posinset": 0,
            "aria-rowcount": 0,
            "aria-rowindex": 0,
            "aria-rowspan": 0,
            "aria-setsize": 0
          };
          var warnedProperties = {};
          var rARIA = new RegExp("^(aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$");
          var rARIACamel = new RegExp("^(aria)[A-Z][" + ATTRIBUTE_NAME_CHAR + "]*$");
          var hasOwnProperty$1 = Object.prototype.hasOwnProperty;
          function validateProperty(tagName, name) {
            {
              if (hasOwnProperty$1.call(warnedProperties, name) && warnedProperties[name]) {
                return true;
              }
              if (rARIACamel.test(name)) {
                var ariaName = "aria-" + name.slice(4).toLowerCase();
                var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null;
                if (correctName == null) {
                  error("Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.", name);
                  warnedProperties[name] = true;
                  return true;
                }
                if (name !== correctName) {
                  error("Invalid ARIA attribute `%s`. Did you mean `%s`?", name, correctName);
                  warnedProperties[name] = true;
                  return true;
                }
              }
              if (rARIA.test(name)) {
                var lowerCasedName = name.toLowerCase();
                var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null;
                if (standardName == null) {
                  warnedProperties[name] = true;
                  return false;
                }
                if (name !== standardName) {
                  error("Unknown ARIA attribute `%s`. Did you mean `%s`?", name, standardName);
                  warnedProperties[name] = true;
                  return true;
                }
              }
            }
            return true;
          }
          function warnInvalidARIAProps(type, props) {
            {
              var invalidProps = [];
              for (var key in props) {
                var isValid = validateProperty(type, key);
                if (!isValid) {
                  invalidProps.push(key);
                }
              }
              var unknownPropString = invalidProps.map(function(prop) {
                return "`" + prop + "`";
              }).join(", ");
              if (invalidProps.length === 1) {
                error("Invalid aria prop %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type);
              } else if (invalidProps.length > 1) {
                error("Invalid aria props %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type);
              }
            }
          }
          function validateProperties(type, props) {
            if (isCustomComponent(type, props)) {
              return;
            }
            warnInvalidARIAProps(type, props);
          }
          var didWarnValueNull = false;
          function validateProperties$1(type, props) {
            {
              if (type !== "input" && type !== "textarea" && type !== "select") {
                return;
              }
              if (props != null && props.value === null && !didWarnValueNull) {
                didWarnValueNull = true;
                if (type === "select" && props.multiple) {
                  error("`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.", type);
                } else {
                  error("`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.", type);
                }
              }
            }
          }
          var validateProperty$1 = function() {
          };
          {
            var warnedProperties$1 = {};
            var _hasOwnProperty = Object.prototype.hasOwnProperty;
            var EVENT_NAME_REGEX = /^on./;
            var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;
            var rARIA$1 = new RegExp("^(aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$");
            var rARIACamel$1 = new RegExp("^(aria)[A-Z][" + ATTRIBUTE_NAME_CHAR + "]*$");
            validateProperty$1 = function(tagName, name, value, eventRegistry) {
              if (_hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) {
                return true;
              }
              var lowerCasedName = name.toLowerCase();
              if (lowerCasedName === "onfocusin" || lowerCasedName === "onfocusout") {
                error("React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React.");
                warnedProperties$1[name] = true;
                return true;
              }
              if (eventRegistry != null) {
                var registrationNameDependencies2 = eventRegistry.registrationNameDependencies, possibleRegistrationNames2 = eventRegistry.possibleRegistrationNames;
                if (registrationNameDependencies2.hasOwnProperty(name)) {
                  return true;
                }
                var registrationName = possibleRegistrationNames2.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames2[lowerCasedName] : null;
                if (registrationName != null) {
                  error("Invalid event handler property `%s`. Did you mean `%s`?", name, registrationName);
                  warnedProperties$1[name] = true;
                  return true;
                }
                if (EVENT_NAME_REGEX.test(name)) {
                  error("Unknown event handler property `%s`. It will be ignored.", name);
                  warnedProperties$1[name] = true;
                  return true;
                }
              } else if (EVENT_NAME_REGEX.test(name)) {
                if (INVALID_EVENT_NAME_REGEX.test(name)) {
                  error("Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.", name);
                }
                warnedProperties$1[name] = true;
                return true;
              }
              if (rARIA$1.test(name) || rARIACamel$1.test(name)) {
                return true;
              }
              if (lowerCasedName === "innerhtml") {
                error("Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`.");
                warnedProperties$1[name] = true;
                return true;
              }
              if (lowerCasedName === "aria") {
                error("The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead.");
                warnedProperties$1[name] = true;
                return true;
              }
              if (lowerCasedName === "is" && value !== null && value !== void 0 && typeof value !== "string") {
                error("Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.", typeof value);
                warnedProperties$1[name] = true;
                return true;
              }
              if (typeof value === "number" && isNaN(value)) {
                error("Received NaN for the `%s` attribute. If this is expected, cast the value to a string.", name);
                warnedProperties$1[name] = true;
                return true;
              }
              var propertyInfo = getPropertyInfo(name);
              var isReserved = propertyInfo !== null && propertyInfo.type === RESERVED;
              if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
                var standardName = possibleStandardNames[lowerCasedName];
                if (standardName !== name) {
                  error("Invalid DOM property `%s`. Did you mean `%s`?", name, standardName);
                  warnedProperties$1[name] = true;
                  return true;
                }
              } else if (!isReserved && name !== lowerCasedName) {
                error("React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.", name, lowerCasedName);
                warnedProperties$1[name] = true;
                return true;
              }
              if (typeof value === "boolean" && shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
                if (value) {
                  error('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.', value, name, name, value, name);
                } else {
                  error('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name);
                }
                warnedProperties$1[name] = true;
                return true;
              }
              if (isReserved) {
                return true;
              }
              if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
                warnedProperties$1[name] = true;
                return false;
              }
              if ((value === "false" || value === "true") && propertyInfo !== null && propertyInfo.type === BOOLEAN) {
                error("Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?", value, name, value === "false" ? "The browser will interpret it as a truthy value." : 'Although this works, it will not work as expected if you pass the string "false".', name, value);
                warnedProperties$1[name] = true;
                return true;
              }
              return true;
            };
          }
          var warnUnknownProperties = function(type, props, eventRegistry) {
            {
              var unknownProps = [];
              for (var key in props) {
                var isValid = validateProperty$1(type, key, props[key], eventRegistry);
                if (!isValid) {
                  unknownProps.push(key);
                }
              }
              var unknownPropString = unknownProps.map(function(prop) {
                return "`" + prop + "`";
              }).join(", ");
              if (unknownProps.length === 1) {
                error("Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type);
              } else if (unknownProps.length > 1) {
                error("Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type);
              }
            }
          };
          function validateProperties$2(type, props, eventRegistry) {
            if (isCustomComponent(type, props)) {
              return;
            }
            warnUnknownProperties(type, props, eventRegistry);
          }
          var IS_EVENT_HANDLE_NON_MANAGED_NODE = 1;
          var IS_NON_DELEGATED = 1 << 1;
          var IS_CAPTURE_PHASE = 1 << 2;
          var IS_REPLAYED = 1 << 4;
          var SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS = IS_EVENT_HANDLE_NON_MANAGED_NODE | IS_NON_DELEGATED | IS_CAPTURE_PHASE;
          function getEventTarget(nativeEvent) {
            var target = nativeEvent.target || nativeEvent.srcElement || window;
            if (target.correspondingUseElement) {
              target = target.correspondingUseElement;
            }
            return target.nodeType === TEXT_NODE ? target.parentNode : target;
          }
          var restoreImpl = null;
          var restoreTarget = null;
          var restoreQueue = null;
          function restoreStateOfTarget(target) {
            var internalInstance = getInstanceFromNode(target);
            if (!internalInstance) {
              return;
            }
            if (!(typeof restoreImpl === "function")) {
              {
                throw Error("setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
            var stateNode = internalInstance.stateNode;
            if (stateNode) {
              var _props = getFiberCurrentPropsFromNode(stateNode);
              restoreImpl(internalInstance.stateNode, internalInstance.type, _props);
            }
          }
          function setRestoreImplementation(impl) {
            restoreImpl = impl;
          }
          function enqueueStateRestore(target) {
            if (restoreTarget) {
              if (restoreQueue) {
                restoreQueue.push(target);
              } else {
                restoreQueue = [target];
              }
            } else {
              restoreTarget = target;
            }
          }
          function needsStateRestore() {
            return restoreTarget !== null || restoreQueue !== null;
          }
          function restoreStateIfNeeded() {
            if (!restoreTarget) {
              return;
            }
            var target = restoreTarget;
            var queuedTargets = restoreQueue;
            restoreTarget = null;
            restoreQueue = null;
            restoreStateOfTarget(target);
            if (queuedTargets) {
              for (var i2 = 0; i2 < queuedTargets.length; i2++) {
                restoreStateOfTarget(queuedTargets[i2]);
              }
            }
          }
          var batchedUpdatesImpl = function(fn, bookkeeping) {
            return fn(bookkeeping);
          };
          var discreteUpdatesImpl = function(fn, a2, b2, c2, d2) {
            return fn(a2, b2, c2, d2);
          };
          var flushDiscreteUpdatesImpl = function() {
          };
          var batchedEventUpdatesImpl = batchedUpdatesImpl;
          var isInsideEventHandler = false;
          var isBatchingEventUpdates = false;
          function finishEventHandler() {
            var controlledComponentsHavePendingUpdates = needsStateRestore();
            if (controlledComponentsHavePendingUpdates) {
              flushDiscreteUpdatesImpl();
              restoreStateIfNeeded();
            }
          }
          function batchedUpdates(fn, bookkeeping) {
            if (isInsideEventHandler) {
              return fn(bookkeeping);
            }
            isInsideEventHandler = true;
            try {
              return batchedUpdatesImpl(fn, bookkeeping);
            } finally {
              isInsideEventHandler = false;
              finishEventHandler();
            }
          }
          function batchedEventUpdates(fn, a2, b2) {
            if (isBatchingEventUpdates) {
              return fn(a2, b2);
            }
            isBatchingEventUpdates = true;
            try {
              return batchedEventUpdatesImpl(fn, a2, b2);
            } finally {
              isBatchingEventUpdates = false;
              finishEventHandler();
            }
          }
          function discreteUpdates(fn, a2, b2, c2, d2) {
            var prevIsInsideEventHandler = isInsideEventHandler;
            isInsideEventHandler = true;
            try {
              return discreteUpdatesImpl(fn, a2, b2, c2, d2);
            } finally {
              isInsideEventHandler = prevIsInsideEventHandler;
              if (!isInsideEventHandler) {
                finishEventHandler();
              }
            }
          }
          function flushDiscreteUpdatesIfNeeded(timeStamp) {
            {
              if (!isInsideEventHandler) {
                flushDiscreteUpdatesImpl();
              }
            }
          }
          function setBatchingImplementation(_batchedUpdatesImpl, _discreteUpdatesImpl, _flushDiscreteUpdatesImpl, _batchedEventUpdatesImpl) {
            batchedUpdatesImpl = _batchedUpdatesImpl;
            discreteUpdatesImpl = _discreteUpdatesImpl;
            flushDiscreteUpdatesImpl = _flushDiscreteUpdatesImpl;
            batchedEventUpdatesImpl = _batchedEventUpdatesImpl;
          }
          function isInteractive(tag) {
            return tag === "button" || tag === "input" || tag === "select" || tag === "textarea";
          }
          function shouldPreventMouseEvent(name, type, props) {
            switch (name) {
              case "onClick":
              case "onClickCapture":
              case "onDoubleClick":
              case "onDoubleClickCapture":
              case "onMouseDown":
              case "onMouseDownCapture":
              case "onMouseMove":
              case "onMouseMoveCapture":
              case "onMouseUp":
              case "onMouseUpCapture":
              case "onMouseEnter":
                return !!(props.disabled && isInteractive(type));
              default:
                return false;
            }
          }
          function getListener(inst, registrationName) {
            var stateNode = inst.stateNode;
            if (stateNode === null) {
              return null;
            }
            var props = getFiberCurrentPropsFromNode(stateNode);
            if (props === null) {
              return null;
            }
            var listener = props[registrationName];
            if (shouldPreventMouseEvent(registrationName, inst.type, props)) {
              return null;
            }
            if (!(!listener || typeof listener === "function")) {
              {
                throw Error("Expected `" + registrationName + "` listener to be a function, instead got a value of `" + typeof listener + "` type.");
              }
            }
            return listener;
          }
          var passiveBrowserEventsSupported = false;
          if (canUseDOM) {
            try {
              var options = {};
              Object.defineProperty(options, "passive", {
                get: function() {
                  passiveBrowserEventsSupported = true;
                }
              });
              window.addEventListener("test", options, options);
              window.removeEventListener("test", options, options);
            } catch (e2) {
              passiveBrowserEventsSupported = false;
            }
          }
          function invokeGuardedCallbackProd(name, func, context, a2, b2, c2, d2, e2, f2) {
            var funcArgs = Array.prototype.slice.call(arguments, 3);
            try {
              func.apply(context, funcArgs);
            } catch (error2) {
              this.onError(error2);
            }
          }
          var invokeGuardedCallbackImpl = invokeGuardedCallbackProd;
          {
            if (typeof window !== "undefined" && typeof window.dispatchEvent === "function" && typeof document !== "undefined" && typeof document.createEvent === "function") {
              var fakeNode = document.createElement("react");
              invokeGuardedCallbackImpl = function invokeGuardedCallbackDev(name, func, context, a2, b2, c2, d2, e2, f2) {
                if (!(typeof document !== "undefined")) {
                  {
                    throw Error("The `document` global was defined when React was initialized, but is not defined anymore. This can happen in a test environment if a component schedules an update from an asynchronous callback, but the test has already finished running. To solve this, you can either unmount the component at the end of your test (and ensure that any asynchronous operations get canceled in `componentWillUnmount`), or you can change the test itself to be asynchronous.");
                  }
                }
                var evt = document.createEvent("Event");
                var didCall = false;
                var didError = true;
                var windowEvent = window.event;
                var windowEventDescriptor = Object.getOwnPropertyDescriptor(window, "event");
                function restoreAfterDispatch() {
                  fakeNode.removeEventListener(evtType, callCallback2, false);
                  if (typeof window.event !== "undefined" && window.hasOwnProperty("event")) {
                    window.event = windowEvent;
                  }
                }
                var funcArgs = Array.prototype.slice.call(arguments, 3);
                function callCallback2() {
                  didCall = true;
                  restoreAfterDispatch();
                  func.apply(context, funcArgs);
                  didError = false;
                }
                var error2;
                var didSetError = false;
                var isCrossOriginError = false;
                function handleWindowError(event) {
                  error2 = event.error;
                  didSetError = true;
                  if (error2 === null && event.colno === 0 && event.lineno === 0) {
                    isCrossOriginError = true;
                  }
                  if (event.defaultPrevented) {
                    if (error2 != null && typeof error2 === "object") {
                      try {
                        error2._suppressLogging = true;
                      } catch (inner) {
                      }
                    }
                  }
                }
                var evtType = "react-" + (name ? name : "invokeguardedcallback");
                window.addEventListener("error", handleWindowError);
                fakeNode.addEventListener(evtType, callCallback2, false);
                evt.initEvent(evtType, false, false);
                fakeNode.dispatchEvent(evt);
                if (windowEventDescriptor) {
                  Object.defineProperty(window, "event", windowEventDescriptor);
                }
                if (didCall && didError) {
                  if (!didSetError) {
                    error2 = new Error(`An error was thrown inside one of your components, but React doesn't know what it was. This is likely due to browser flakiness. React does its best to preserve the "Pause on exceptions" behavior of the DevTools, which requires some DEV-mode only tricks. It's possible that these don't work in your browser. Try triggering the error in production mode, or switching to a modern browser. If you suspect that this is actually an issue with React, please file an issue.`);
                  } else if (isCrossOriginError) {
                    error2 = new Error("A cross-origin error was thrown. React doesn't have access to the actual error object in development. See https://reactjs.org/link/crossorigin-error for more information.");
                  }
                  this.onError(error2);
                }
                window.removeEventListener("error", handleWindowError);
                if (!didCall) {
                  restoreAfterDispatch();
                  return invokeGuardedCallbackProd.apply(this, arguments);
                }
              };
            }
          }
          var invokeGuardedCallbackImpl$1 = invokeGuardedCallbackImpl;
          var hasError = false;
          var caughtError = null;
          var hasRethrowError = false;
          var rethrowError = null;
          var reporter = {
            onError: function(error2) {
              hasError = true;
              caughtError = error2;
            }
          };
          function invokeGuardedCallback(name, func, context, a2, b2, c2, d2, e2, f2) {
            hasError = false;
            caughtError = null;
            invokeGuardedCallbackImpl$1.apply(reporter, arguments);
          }
          function invokeGuardedCallbackAndCatchFirstError(name, func, context, a2, b2, c2, d2, e2, f2) {
            invokeGuardedCallback.apply(this, arguments);
            if (hasError) {
              var error2 = clearCaughtError();
              if (!hasRethrowError) {
                hasRethrowError = true;
                rethrowError = error2;
              }
            }
          }
          function rethrowCaughtError() {
            if (hasRethrowError) {
              var error2 = rethrowError;
              hasRethrowError = false;
              rethrowError = null;
              throw error2;
            }
          }
          function hasCaughtError() {
            return hasError;
          }
          function clearCaughtError() {
            if (hasError) {
              var error2 = caughtError;
              hasError = false;
              caughtError = null;
              return error2;
            } else {
              {
                {
                  throw Error("clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.");
                }
              }
            }
          }
          function get(key) {
            return key._reactInternals;
          }
          function has(key) {
            return key._reactInternals !== void 0;
          }
          function set(key, value) {
            key._reactInternals = value;
          }
          var NoFlags = 0;
          var PerformedWork = 1;
          var Placement = 2;
          var Update = 4;
          var PlacementAndUpdate = 6;
          var Deletion = 8;
          var ContentReset = 16;
          var Callback = 32;
          var DidCapture = 64;
          var Ref = 128;
          var Snapshot = 256;
          var Passive = 512;
          var PassiveUnmountPendingDev = 8192;
          var Hydrating = 1024;
          var HydratingAndUpdate = 1028;
          var LifecycleEffectMask = 932;
          var HostEffectMask = 2047;
          var Incomplete = 2048;
          var ShouldCapture = 4096;
          var ForceUpdateForLegacySuspense = 16384;
          var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
          function getNearestMountedFiber(fiber) {
            var node = fiber;
            var nearestMounted = fiber;
            if (!fiber.alternate) {
              var nextNode = node;
              do {
                node = nextNode;
                if ((node.flags & (Placement | Hydrating)) !== NoFlags) {
                  nearestMounted = node.return;
                }
                nextNode = node.return;
              } while (nextNode);
            } else {
              while (node.return) {
                node = node.return;
              }
            }
            if (node.tag === HostRoot) {
              return nearestMounted;
            }
            return null;
          }
          function getSuspenseInstanceFromFiber(fiber) {
            if (fiber.tag === SuspenseComponent) {
              var suspenseState = fiber.memoizedState;
              if (suspenseState === null) {
                var current2 = fiber.alternate;
                if (current2 !== null) {
                  suspenseState = current2.memoizedState;
                }
              }
              if (suspenseState !== null) {
                return suspenseState.dehydrated;
              }
            }
            return null;
          }
          function getContainerFromFiber(fiber) {
            return fiber.tag === HostRoot ? fiber.stateNode.containerInfo : null;
          }
          function isFiberMounted(fiber) {
            return getNearestMountedFiber(fiber) === fiber;
          }
          function isMounted(component) {
            {
              var owner = ReactCurrentOwner.current;
              if (owner !== null && owner.tag === ClassComponent) {
                var ownerFiber = owner;
                var instance = ownerFiber.stateNode;
                if (!instance._warnedAboutRefsInRender) {
                  error("%s is accessing isMounted inside its render() function. render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", getComponentName(ownerFiber.type) || "A component");
                }
                instance._warnedAboutRefsInRender = true;
              }
            }
            var fiber = get(component);
            if (!fiber) {
              return false;
            }
            return getNearestMountedFiber(fiber) === fiber;
          }
          function assertIsMounted(fiber) {
            if (!(getNearestMountedFiber(fiber) === fiber)) {
              {
                throw Error("Unable to find node on an unmounted component.");
              }
            }
          }
          function findCurrentFiberUsingSlowPath(fiber) {
            var alternate = fiber.alternate;
            if (!alternate) {
              var nearestMounted = getNearestMountedFiber(fiber);
              if (!(nearestMounted !== null)) {
                {
                  throw Error("Unable to find node on an unmounted component.");
                }
              }
              if (nearestMounted !== fiber) {
                return null;
              }
              return fiber;
            }
            var a2 = fiber;
            var b2 = alternate;
            while (true) {
              var parentA = a2.return;
              if (parentA === null) {
                break;
              }
              var parentB = parentA.alternate;
              if (parentB === null) {
                var nextParent = parentA.return;
                if (nextParent !== null) {
                  a2 = b2 = nextParent;
                  continue;
                }
                break;
              }
              if (parentA.child === parentB.child) {
                var child = parentA.child;
                while (child) {
                  if (child === a2) {
                    assertIsMounted(parentA);
                    return fiber;
                  }
                  if (child === b2) {
                    assertIsMounted(parentA);
                    return alternate;
                  }
                  child = child.sibling;
                }
                {
                  {
                    throw Error("Unable to find node on an unmounted component.");
                  }
                }
              }
              if (a2.return !== b2.return) {
                a2 = parentA;
                b2 = parentB;
              } else {
                var didFindChild = false;
                var _child = parentA.child;
                while (_child) {
                  if (_child === a2) {
                    didFindChild = true;
                    a2 = parentA;
                    b2 = parentB;
                    break;
                  }
                  if (_child === b2) {
                    didFindChild = true;
                    b2 = parentA;
                    a2 = parentB;
                    break;
                  }
                  _child = _child.sibling;
                }
                if (!didFindChild) {
                  _child = parentB.child;
                  while (_child) {
                    if (_child === a2) {
                      didFindChild = true;
                      a2 = parentB;
                      b2 = parentA;
                      break;
                    }
                    if (_child === b2) {
                      didFindChild = true;
                      b2 = parentB;
                      a2 = parentA;
                      break;
                    }
                    _child = _child.sibling;
                  }
                  if (!didFindChild) {
                    {
                      throw Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.");
                    }
                  }
                }
              }
              if (!(a2.alternate === b2)) {
                {
                  throw Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue.");
                }
              }
            }
            if (!(a2.tag === HostRoot)) {
              {
                throw Error("Unable to find node on an unmounted component.");
              }
            }
            if (a2.stateNode.current === a2) {
              return fiber;
            }
            return alternate;
          }
          function findCurrentHostFiber(parent) {
            var currentParent = findCurrentFiberUsingSlowPath(parent);
            if (!currentParent) {
              return null;
            }
            var node = currentParent;
            while (true) {
              if (node.tag === HostComponent || node.tag === HostText) {
                return node;
              } else if (node.child) {
                node.child.return = node;
                node = node.child;
                continue;
              }
              if (node === currentParent) {
                return null;
              }
              while (!node.sibling) {
                if (!node.return || node.return === currentParent) {
                  return null;
                }
                node = node.return;
              }
              node.sibling.return = node.return;
              node = node.sibling;
            }
            return null;
          }
          function findCurrentHostFiberWithNoPortals(parent) {
            var currentParent = findCurrentFiberUsingSlowPath(parent);
            if (!currentParent) {
              return null;
            }
            var node = currentParent;
            while (true) {
              if (node.tag === HostComponent || node.tag === HostText || enableFundamentalAPI) {
                return node;
              } else if (node.child && node.tag !== HostPortal) {
                node.child.return = node;
                node = node.child;
                continue;
              }
              if (node === currentParent) {
                return null;
              }
              while (!node.sibling) {
                if (!node.return || node.return === currentParent) {
                  return null;
                }
                node = node.return;
              }
              node.sibling.return = node.return;
              node = node.sibling;
            }
            return null;
          }
          function doesFiberContain(parentFiber, childFiber) {
            var node = childFiber;
            var parentFiberAlternate = parentFiber.alternate;
            while (node !== null) {
              if (node === parentFiber || node === parentFiberAlternate) {
                return true;
              }
              node = node.return;
            }
            return false;
          }
          var attemptUserBlockingHydration;
          function setAttemptUserBlockingHydration(fn) {
            attemptUserBlockingHydration = fn;
          }
          var attemptContinuousHydration;
          function setAttemptContinuousHydration(fn) {
            attemptContinuousHydration = fn;
          }
          var attemptHydrationAtCurrentPriority;
          function setAttemptHydrationAtCurrentPriority(fn) {
            attemptHydrationAtCurrentPriority = fn;
          }
          var attemptHydrationAtPriority;
          function setAttemptHydrationAtPriority(fn) {
            attemptHydrationAtPriority = fn;
          }
          var hasScheduledReplayAttempt = false;
          var queuedDiscreteEvents = [];
          var queuedFocus = null;
          var queuedDrag = null;
          var queuedMouse = null;
          var queuedPointers = /* @__PURE__ */ new Map();
          var queuedPointerCaptures = /* @__PURE__ */ new Map();
          var queuedExplicitHydrationTargets = [];
          function hasQueuedDiscreteEvents() {
            return queuedDiscreteEvents.length > 0;
          }
          var discreteReplayableEvents = [
            "mousedown",
            "mouseup",
            "touchcancel",
            "touchend",
            "touchstart",
            "auxclick",
            "dblclick",
            "pointercancel",
            "pointerdown",
            "pointerup",
            "dragend",
            "dragstart",
            "drop",
            "compositionend",
            "compositionstart",
            "keydown",
            "keypress",
            "keyup",
            "input",
            "textInput",
            "copy",
            "cut",
            "paste",
            "click",
            "change",
            "contextmenu",
            "reset",
            "submit"
          ];
          function isReplayableDiscreteEvent(eventType) {
            return discreteReplayableEvents.indexOf(eventType) > -1;
          }
          function createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
            return {
              blockedOn,
              domEventName,
              eventSystemFlags: eventSystemFlags | IS_REPLAYED,
              nativeEvent,
              targetContainers: [targetContainer]
            };
          }
          function queueDiscreteEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
            var queuedEvent = createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent);
            queuedDiscreteEvents.push(queuedEvent);
          }
          function clearIfContinuousEvent(domEventName, nativeEvent) {
            switch (domEventName) {
              case "focusin":
              case "focusout":
                queuedFocus = null;
                break;
              case "dragenter":
              case "dragleave":
                queuedDrag = null;
                break;
              case "mouseover":
              case "mouseout":
                queuedMouse = null;
                break;
              case "pointerover":
              case "pointerout": {
                var pointerId = nativeEvent.pointerId;
                queuedPointers.delete(pointerId);
                break;
              }
              case "gotpointercapture":
              case "lostpointercapture": {
                var _pointerId = nativeEvent.pointerId;
                queuedPointerCaptures.delete(_pointerId);
                break;
              }
            }
          }
          function accumulateOrCreateContinuousQueuedReplayableEvent(existingQueuedEvent, blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
            if (existingQueuedEvent === null || existingQueuedEvent.nativeEvent !== nativeEvent) {
              var queuedEvent = createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent);
              if (blockedOn !== null) {
                var _fiber2 = getInstanceFromNode(blockedOn);
                if (_fiber2 !== null) {
                  attemptContinuousHydration(_fiber2);
                }
              }
              return queuedEvent;
            }
            existingQueuedEvent.eventSystemFlags |= eventSystemFlags;
            var targetContainers = existingQueuedEvent.targetContainers;
            if (targetContainer !== null && targetContainers.indexOf(targetContainer) === -1) {
              targetContainers.push(targetContainer);
            }
            return existingQueuedEvent;
          }
          function queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
            switch (domEventName) {
              case "focusin": {
                var focusEvent = nativeEvent;
                queuedFocus = accumulateOrCreateContinuousQueuedReplayableEvent(queuedFocus, blockedOn, domEventName, eventSystemFlags, targetContainer, focusEvent);
                return true;
              }
              case "dragenter": {
                var dragEvent = nativeEvent;
                queuedDrag = accumulateOrCreateContinuousQueuedReplayableEvent(queuedDrag, blockedOn, domEventName, eventSystemFlags, targetContainer, dragEvent);
                return true;
              }
              case "mouseover": {
                var mouseEvent = nativeEvent;
                queuedMouse = accumulateOrCreateContinuousQueuedReplayableEvent(queuedMouse, blockedOn, domEventName, eventSystemFlags, targetContainer, mouseEvent);
                return true;
              }
              case "pointerover": {
                var pointerEvent = nativeEvent;
                var pointerId = pointerEvent.pointerId;
                queuedPointers.set(pointerId, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointers.get(pointerId) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, pointerEvent));
                return true;
              }
              case "gotpointercapture": {
                var _pointerEvent = nativeEvent;
                var _pointerId2 = _pointerEvent.pointerId;
                queuedPointerCaptures.set(_pointerId2, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointerCaptures.get(_pointerId2) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, _pointerEvent));
                return true;
              }
            }
            return false;
          }
          function attemptExplicitHydrationTarget(queuedTarget) {
            var targetInst = getClosestInstanceFromNode(queuedTarget.target);
            if (targetInst !== null) {
              var nearestMounted = getNearestMountedFiber(targetInst);
              if (nearestMounted !== null) {
                var tag = nearestMounted.tag;
                if (tag === SuspenseComponent) {
                  var instance = getSuspenseInstanceFromFiber(nearestMounted);
                  if (instance !== null) {
                    queuedTarget.blockedOn = instance;
                    attemptHydrationAtPriority(queuedTarget.lanePriority, function() {
                      Scheduler.unstable_runWithPriority(queuedTarget.priority, function() {
                        attemptHydrationAtCurrentPriority(nearestMounted);
                      });
                    });
                    return;
                  }
                } else if (tag === HostRoot) {
                  var root2 = nearestMounted.stateNode;
                  if (root2.hydrate) {
                    queuedTarget.blockedOn = getContainerFromFiber(nearestMounted);
                    return;
                  }
                }
              }
            }
            queuedTarget.blockedOn = null;
          }
          function attemptReplayContinuousQueuedEvent(queuedEvent) {
            if (queuedEvent.blockedOn !== null) {
              return false;
            }
            var targetContainers = queuedEvent.targetContainers;
            while (targetContainers.length > 0) {
              var targetContainer = targetContainers[0];
              var nextBlockedOn = attemptToDispatchEvent(queuedEvent.domEventName, queuedEvent.eventSystemFlags, targetContainer, queuedEvent.nativeEvent);
              if (nextBlockedOn !== null) {
                var _fiber3 = getInstanceFromNode(nextBlockedOn);
                if (_fiber3 !== null) {
                  attemptContinuousHydration(_fiber3);
                }
                queuedEvent.blockedOn = nextBlockedOn;
                return false;
              }
              targetContainers.shift();
            }
            return true;
          }
          function attemptReplayContinuousQueuedEventInMap(queuedEvent, key, map) {
            if (attemptReplayContinuousQueuedEvent(queuedEvent)) {
              map.delete(key);
            }
          }
          function replayUnblockedEvents() {
            hasScheduledReplayAttempt = false;
            while (queuedDiscreteEvents.length > 0) {
              var nextDiscreteEvent = queuedDiscreteEvents[0];
              if (nextDiscreteEvent.blockedOn !== null) {
                var _fiber4 = getInstanceFromNode(nextDiscreteEvent.blockedOn);
                if (_fiber4 !== null) {
                  attemptUserBlockingHydration(_fiber4);
                }
                break;
              }
              var targetContainers = nextDiscreteEvent.targetContainers;
              while (targetContainers.length > 0) {
                var targetContainer = targetContainers[0];
                var nextBlockedOn = attemptToDispatchEvent(nextDiscreteEvent.domEventName, nextDiscreteEvent.eventSystemFlags, targetContainer, nextDiscreteEvent.nativeEvent);
                if (nextBlockedOn !== null) {
                  nextDiscreteEvent.blockedOn = nextBlockedOn;
                  break;
                }
                targetContainers.shift();
              }
              if (nextDiscreteEvent.blockedOn === null) {
                queuedDiscreteEvents.shift();
              }
            }
            if (queuedFocus !== null && attemptReplayContinuousQueuedEvent(queuedFocus)) {
              queuedFocus = null;
            }
            if (queuedDrag !== null && attemptReplayContinuousQueuedEvent(queuedDrag)) {
              queuedDrag = null;
            }
            if (queuedMouse !== null && attemptReplayContinuousQueuedEvent(queuedMouse)) {
              queuedMouse = null;
            }
            queuedPointers.forEach(attemptReplayContinuousQueuedEventInMap);
            queuedPointerCaptures.forEach(attemptReplayContinuousQueuedEventInMap);
          }
          function scheduleCallbackIfUnblocked(queuedEvent, unblocked) {
            if (queuedEvent.blockedOn === unblocked) {
              queuedEvent.blockedOn = null;
              if (!hasScheduledReplayAttempt) {
                hasScheduledReplayAttempt = true;
                Scheduler.unstable_scheduleCallback(Scheduler.unstable_NormalPriority, replayUnblockedEvents);
              }
            }
          }
          function retryIfBlockedOn(unblocked) {
            if (queuedDiscreteEvents.length > 0) {
              scheduleCallbackIfUnblocked(queuedDiscreteEvents[0], unblocked);
              for (var i2 = 1; i2 < queuedDiscreteEvents.length; i2++) {
                var queuedEvent = queuedDiscreteEvents[i2];
                if (queuedEvent.blockedOn === unblocked) {
                  queuedEvent.blockedOn = null;
                }
              }
            }
            if (queuedFocus !== null) {
              scheduleCallbackIfUnblocked(queuedFocus, unblocked);
            }
            if (queuedDrag !== null) {
              scheduleCallbackIfUnblocked(queuedDrag, unblocked);
            }
            if (queuedMouse !== null) {
              scheduleCallbackIfUnblocked(queuedMouse, unblocked);
            }
            var unblock = function(queuedEvent2) {
              return scheduleCallbackIfUnblocked(queuedEvent2, unblocked);
            };
            queuedPointers.forEach(unblock);
            queuedPointerCaptures.forEach(unblock);
            for (var _i = 0; _i < queuedExplicitHydrationTargets.length; _i++) {
              var queuedTarget = queuedExplicitHydrationTargets[_i];
              if (queuedTarget.blockedOn === unblocked) {
                queuedTarget.blockedOn = null;
              }
            }
            while (queuedExplicitHydrationTargets.length > 0) {
              var nextExplicitTarget = queuedExplicitHydrationTargets[0];
              if (nextExplicitTarget.blockedOn !== null) {
                break;
              } else {
                attemptExplicitHydrationTarget(nextExplicitTarget);
                if (nextExplicitTarget.blockedOn === null) {
                  queuedExplicitHydrationTargets.shift();
                }
              }
            }
          }
          var DiscreteEvent = 0;
          var UserBlockingEvent = 1;
          var ContinuousEvent = 2;
          function makePrefixMap(styleProp, eventName) {
            var prefixes2 = {};
            prefixes2[styleProp.toLowerCase()] = eventName.toLowerCase();
            prefixes2["Webkit" + styleProp] = "webkit" + eventName;
            prefixes2["Moz" + styleProp] = "moz" + eventName;
            return prefixes2;
          }
          var vendorPrefixes = {
            animationend: makePrefixMap("Animation", "AnimationEnd"),
            animationiteration: makePrefixMap("Animation", "AnimationIteration"),
            animationstart: makePrefixMap("Animation", "AnimationStart"),
            transitionend: makePrefixMap("Transition", "TransitionEnd")
          };
          var prefixedEventNames = {};
          var style = {};
          if (canUseDOM) {
            style = document.createElement("div").style;
            if (!("AnimationEvent" in window)) {
              delete vendorPrefixes.animationend.animation;
              delete vendorPrefixes.animationiteration.animation;
              delete vendorPrefixes.animationstart.animation;
            }
            if (!("TransitionEvent" in window)) {
              delete vendorPrefixes.transitionend.transition;
            }
          }
          function getVendorPrefixedEventName(eventName) {
            if (prefixedEventNames[eventName]) {
              return prefixedEventNames[eventName];
            } else if (!vendorPrefixes[eventName]) {
              return eventName;
            }
            var prefixMap = vendorPrefixes[eventName];
            for (var styleProp in prefixMap) {
              if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
                return prefixedEventNames[eventName] = prefixMap[styleProp];
              }
            }
            return eventName;
          }
          var ANIMATION_END = getVendorPrefixedEventName("animationend");
          var ANIMATION_ITERATION = getVendorPrefixedEventName("animationiteration");
          var ANIMATION_START = getVendorPrefixedEventName("animationstart");
          var TRANSITION_END = getVendorPrefixedEventName("transitionend");
          var topLevelEventsToReactNames = /* @__PURE__ */ new Map();
          var eventPriorities = /* @__PURE__ */ new Map();
          var discreteEventPairsForSimpleEventPlugin = [
            "cancel",
            "cancel",
            "click",
            "click",
            "close",
            "close",
            "contextmenu",
            "contextMenu",
            "copy",
            "copy",
            "cut",
            "cut",
            "auxclick",
            "auxClick",
            "dblclick",
            "doubleClick",
            "dragend",
            "dragEnd",
            "dragstart",
            "dragStart",
            "drop",
            "drop",
            "focusin",
            "focus",
            "focusout",
            "blur",
            "input",
            "input",
            "invalid",
            "invalid",
            "keydown",
            "keyDown",
            "keypress",
            "keyPress",
            "keyup",
            "keyUp",
            "mousedown",
            "mouseDown",
            "mouseup",
            "mouseUp",
            "paste",
            "paste",
            "pause",
            "pause",
            "play",
            "play",
            "pointercancel",
            "pointerCancel",
            "pointerdown",
            "pointerDown",
            "pointerup",
            "pointerUp",
            "ratechange",
            "rateChange",
            "reset",
            "reset",
            "seeked",
            "seeked",
            "submit",
            "submit",
            "touchcancel",
            "touchCancel",
            "touchend",
            "touchEnd",
            "touchstart",
            "touchStart",
            "volumechange",
            "volumeChange"
          ];
          var otherDiscreteEvents = ["change", "selectionchange", "textInput", "compositionstart", "compositionend", "compositionupdate"];
          var userBlockingPairsForSimpleEventPlugin = ["drag", "drag", "dragenter", "dragEnter", "dragexit", "dragExit", "dragleave", "dragLeave", "dragover", "dragOver", "mousemove", "mouseMove", "mouseout", "mouseOut", "mouseover", "mouseOver", "pointermove", "pointerMove", "pointerout", "pointerOut", "pointerover", "pointerOver", "scroll", "scroll", "toggle", "toggle", "touchmove", "touchMove", "wheel", "wheel"];
          var continuousPairsForSimpleEventPlugin = ["abort", "abort", ANIMATION_END, "animationEnd", ANIMATION_ITERATION, "animationIteration", ANIMATION_START, "animationStart", "canplay", "canPlay", "canplaythrough", "canPlayThrough", "durationchange", "durationChange", "emptied", "emptied", "encrypted", "encrypted", "ended", "ended", "error", "error", "gotpointercapture", "gotPointerCapture", "load", "load", "loadeddata", "loadedData", "loadedmetadata", "loadedMetadata", "loadstart", "loadStart", "lostpointercapture", "lostPointerCapture", "playing", "playing", "progress", "progress", "seeking", "seeking", "stalled", "stalled", "suspend", "suspend", "timeupdate", "timeUpdate", TRANSITION_END, "transitionEnd", "waiting", "waiting"];
          function registerSimplePluginEventsAndSetTheirPriorities(eventTypes, priority) {
            for (var i2 = 0; i2 < eventTypes.length; i2 += 2) {
              var topEvent = eventTypes[i2];
              var event = eventTypes[i2 + 1];
              var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
              var reactName = "on" + capitalizedEvent;
              eventPriorities.set(topEvent, priority);
              topLevelEventsToReactNames.set(topEvent, reactName);
              registerTwoPhaseEvent(reactName, [topEvent]);
            }
          }
          function setEventPriorities(eventTypes, priority) {
            for (var i2 = 0; i2 < eventTypes.length; i2++) {
              eventPriorities.set(eventTypes[i2], priority);
            }
          }
          function getEventPriorityForPluginSystem(domEventName) {
            var priority = eventPriorities.get(domEventName);
            return priority === void 0 ? ContinuousEvent : priority;
          }
          function registerSimpleEvents() {
            registerSimplePluginEventsAndSetTheirPriorities(discreteEventPairsForSimpleEventPlugin, DiscreteEvent);
            registerSimplePluginEventsAndSetTheirPriorities(userBlockingPairsForSimpleEventPlugin, UserBlockingEvent);
            registerSimplePluginEventsAndSetTheirPriorities(continuousPairsForSimpleEventPlugin, ContinuousEvent);
            setEventPriorities(otherDiscreteEvents, DiscreteEvent);
          }
          var Scheduler_now = Scheduler.unstable_now;
          {
            if (!(tracing.__interactionsRef != null && tracing.__interactionsRef.current != null)) {
              {
                throw Error("It is not supported to run the profiling version of a renderer (for example, `react-dom/profiling`) without also replacing the `scheduler/tracing` module with `scheduler/tracing-profiling`. Your bundler might have a setting for aliasing both modules. Learn more at https://reactjs.org/link/profiling");
              }
            }
          }
          var ImmediatePriority = 99;
          var UserBlockingPriority = 98;
          var NormalPriority = 97;
          var LowPriority = 96;
          var IdlePriority = 95;
          var NoPriority = 90;
          var initialTimeMs = Scheduler_now();
          var SyncLanePriority = 15;
          var SyncBatchedLanePriority = 14;
          var InputDiscreteHydrationLanePriority = 13;
          var InputDiscreteLanePriority = 12;
          var InputContinuousHydrationLanePriority = 11;
          var InputContinuousLanePriority = 10;
          var DefaultHydrationLanePriority = 9;
          var DefaultLanePriority = 8;
          var TransitionHydrationPriority = 7;
          var TransitionPriority = 6;
          var RetryLanePriority = 5;
          var SelectiveHydrationLanePriority = 4;
          var IdleHydrationLanePriority = 3;
          var IdleLanePriority = 2;
          var OffscreenLanePriority = 1;
          var NoLanePriority = 0;
          var TotalLanes = 31;
          var NoLanes = 0;
          var NoLane = 0;
          var SyncLane = 1;
          var SyncBatchedLane = 2;
          var InputDiscreteHydrationLane = 4;
          var InputDiscreteLanes = 24;
          var InputContinuousHydrationLane = 32;
          var InputContinuousLanes = 192;
          var DefaultHydrationLane = 256;
          var DefaultLanes = 3584;
          var TransitionHydrationLane = 4096;
          var TransitionLanes = 4186112;
          var RetryLanes = 62914560;
          var SomeRetryLane = 33554432;
          var SelectiveHydrationLane = 67108864;
          var NonIdleLanes = 134217727;
          var IdleHydrationLane = 134217728;
          var IdleLanes = 805306368;
          var OffscreenLane = 1073741824;
          var NoTimestamp = -1;
          function setCurrentUpdateLanePriority(newLanePriority) {
          }
          var return_highestLanePriority = DefaultLanePriority;
          function getHighestPriorityLanes(lanes) {
            if ((SyncLane & lanes) !== NoLanes) {
              return_highestLanePriority = SyncLanePriority;
              return SyncLane;
            }
            if ((SyncBatchedLane & lanes) !== NoLanes) {
              return_highestLanePriority = SyncBatchedLanePriority;
              return SyncBatchedLane;
            }
            if ((InputDiscreteHydrationLane & lanes) !== NoLanes) {
              return_highestLanePriority = InputDiscreteHydrationLanePriority;
              return InputDiscreteHydrationLane;
            }
            var inputDiscreteLanes = InputDiscreteLanes & lanes;
            if (inputDiscreteLanes !== NoLanes) {
              return_highestLanePriority = InputDiscreteLanePriority;
              return inputDiscreteLanes;
            }
            if ((lanes & InputContinuousHydrationLane) !== NoLanes) {
              return_highestLanePriority = InputContinuousHydrationLanePriority;
              return InputContinuousHydrationLane;
            }
            var inputContinuousLanes = InputContinuousLanes & lanes;
            if (inputContinuousLanes !== NoLanes) {
              return_highestLanePriority = InputContinuousLanePriority;
              return inputContinuousLanes;
            }
            if ((lanes & DefaultHydrationLane) !== NoLanes) {
              return_highestLanePriority = DefaultHydrationLanePriority;
              return DefaultHydrationLane;
            }
            var defaultLanes = DefaultLanes & lanes;
            if (defaultLanes !== NoLanes) {
              return_highestLanePriority = DefaultLanePriority;
              return defaultLanes;
            }
            if ((lanes & TransitionHydrationLane) !== NoLanes) {
              return_highestLanePriority = TransitionHydrationPriority;
              return TransitionHydrationLane;
            }
            var transitionLanes = TransitionLanes & lanes;
            if (transitionLanes !== NoLanes) {
              return_highestLanePriority = TransitionPriority;
              return transitionLanes;
            }
            var retryLanes = RetryLanes & lanes;
            if (retryLanes !== NoLanes) {
              return_highestLanePriority = RetryLanePriority;
              return retryLanes;
            }
            if (lanes & SelectiveHydrationLane) {
              return_highestLanePriority = SelectiveHydrationLanePriority;
              return SelectiveHydrationLane;
            }
            if ((lanes & IdleHydrationLane) !== NoLanes) {
              return_highestLanePriority = IdleHydrationLanePriority;
              return IdleHydrationLane;
            }
            var idleLanes = IdleLanes & lanes;
            if (idleLanes !== NoLanes) {
              return_highestLanePriority = IdleLanePriority;
              return idleLanes;
            }
            if ((OffscreenLane & lanes) !== NoLanes) {
              return_highestLanePriority = OffscreenLanePriority;
              return OffscreenLane;
            }
            {
              error("Should have found matching lanes. This is a bug in React.");
            }
            return_highestLanePriority = DefaultLanePriority;
            return lanes;
          }
          function schedulerPriorityToLanePriority(schedulerPriorityLevel) {
            switch (schedulerPriorityLevel) {
              case ImmediatePriority:
                return SyncLanePriority;
              case UserBlockingPriority:
                return InputContinuousLanePriority;
              case NormalPriority:
              case LowPriority:
                return DefaultLanePriority;
              case IdlePriority:
                return IdleLanePriority;
              default:
                return NoLanePriority;
            }
          }
          function lanePriorityToSchedulerPriority(lanePriority) {
            switch (lanePriority) {
              case SyncLanePriority:
              case SyncBatchedLanePriority:
                return ImmediatePriority;
              case InputDiscreteHydrationLanePriority:
              case InputDiscreteLanePriority:
              case InputContinuousHydrationLanePriority:
              case InputContinuousLanePriority:
                return UserBlockingPriority;
              case DefaultHydrationLanePriority:
              case DefaultLanePriority:
              case TransitionHydrationPriority:
              case TransitionPriority:
              case SelectiveHydrationLanePriority:
              case RetryLanePriority:
                return NormalPriority;
              case IdleHydrationLanePriority:
              case IdleLanePriority:
              case OffscreenLanePriority:
                return IdlePriority;
              case NoLanePriority:
                return NoPriority;
              default: {
                {
                  throw Error("Invalid update priority: " + lanePriority + ". This is a bug in React.");
                }
              }
            }
          }
          function getNextLanes(root2, wipLanes) {
            var pendingLanes = root2.pendingLanes;
            if (pendingLanes === NoLanes) {
              return_highestLanePriority = NoLanePriority;
              return NoLanes;
            }
            var nextLanes = NoLanes;
            var nextLanePriority = NoLanePriority;
            var expiredLanes = root2.expiredLanes;
            var suspendedLanes = root2.suspendedLanes;
            var pingedLanes = root2.pingedLanes;
            if (expiredLanes !== NoLanes) {
              nextLanes = expiredLanes;
              nextLanePriority = return_highestLanePriority = SyncLanePriority;
            } else {
              var nonIdlePendingLanes = pendingLanes & NonIdleLanes;
              if (nonIdlePendingLanes !== NoLanes) {
                var nonIdleUnblockedLanes = nonIdlePendingLanes & ~suspendedLanes;
                if (nonIdleUnblockedLanes !== NoLanes) {
                  nextLanes = getHighestPriorityLanes(nonIdleUnblockedLanes);
                  nextLanePriority = return_highestLanePriority;
                } else {
                  var nonIdlePingedLanes = nonIdlePendingLanes & pingedLanes;
                  if (nonIdlePingedLanes !== NoLanes) {
                    nextLanes = getHighestPriorityLanes(nonIdlePingedLanes);
                    nextLanePriority = return_highestLanePriority;
                  }
                }
              } else {
                var unblockedLanes = pendingLanes & ~suspendedLanes;
                if (unblockedLanes !== NoLanes) {
                  nextLanes = getHighestPriorityLanes(unblockedLanes);
                  nextLanePriority = return_highestLanePriority;
                } else {
                  if (pingedLanes !== NoLanes) {
                    nextLanes = getHighestPriorityLanes(pingedLanes);
                    nextLanePriority = return_highestLanePriority;
                  }
                }
              }
            }
            if (nextLanes === NoLanes) {
              return NoLanes;
            }
            nextLanes = pendingLanes & getEqualOrHigherPriorityLanes(nextLanes);
            if (wipLanes !== NoLanes && wipLanes !== nextLanes && (wipLanes & suspendedLanes) === NoLanes) {
              getHighestPriorityLanes(wipLanes);
              var wipLanePriority = return_highestLanePriority;
              if (nextLanePriority <= wipLanePriority) {
                return wipLanes;
              } else {
                return_highestLanePriority = nextLanePriority;
              }
            }
            var entangledLanes = root2.entangledLanes;
            if (entangledLanes !== NoLanes) {
              var entanglements = root2.entanglements;
              var lanes = nextLanes & entangledLanes;
              while (lanes > 0) {
                var index3 = pickArbitraryLaneIndex(lanes);
                var lane = 1 << index3;
                nextLanes |= entanglements[index3];
                lanes &= ~lane;
              }
            }
            return nextLanes;
          }
          function getMostRecentEventTime(root2, lanes) {
            var eventTimes = root2.eventTimes;
            var mostRecentEventTime = NoTimestamp;
            while (lanes > 0) {
              var index3 = pickArbitraryLaneIndex(lanes);
              var lane = 1 << index3;
              var eventTime = eventTimes[index3];
              if (eventTime > mostRecentEventTime) {
                mostRecentEventTime = eventTime;
              }
              lanes &= ~lane;
            }
            return mostRecentEventTime;
          }
          function computeExpirationTime(lane, currentTime) {
            getHighestPriorityLanes(lane);
            var priority = return_highestLanePriority;
            if (priority >= InputContinuousLanePriority) {
              return currentTime + 250;
            } else if (priority >= TransitionPriority) {
              return currentTime + 5e3;
            } else {
              return NoTimestamp;
            }
          }
          function markStarvedLanesAsExpired(root2, currentTime) {
            var pendingLanes = root2.pendingLanes;
            var suspendedLanes = root2.suspendedLanes;
            var pingedLanes = root2.pingedLanes;
            var expirationTimes = root2.expirationTimes;
            var lanes = pendingLanes;
            while (lanes > 0) {
              var index3 = pickArbitraryLaneIndex(lanes);
              var lane = 1 << index3;
              var expirationTime = expirationTimes[index3];
              if (expirationTime === NoTimestamp) {
                if ((lane & suspendedLanes) === NoLanes || (lane & pingedLanes) !== NoLanes) {
                  expirationTimes[index3] = computeExpirationTime(lane, currentTime);
                }
              } else if (expirationTime <= currentTime) {
                root2.expiredLanes |= lane;
              }
              lanes &= ~lane;
            }
          }
          function getLanesToRetrySynchronouslyOnError(root2) {
            var everythingButOffscreen = root2.pendingLanes & ~OffscreenLane;
            if (everythingButOffscreen !== NoLanes) {
              return everythingButOffscreen;
            }
            if (everythingButOffscreen & OffscreenLane) {
              return OffscreenLane;
            }
            return NoLanes;
          }
          function returnNextLanesPriority() {
            return return_highestLanePriority;
          }
          function includesNonIdleWork(lanes) {
            return (lanes & NonIdleLanes) !== NoLanes;
          }
          function includesOnlyRetries(lanes) {
            return (lanes & RetryLanes) === lanes;
          }
          function includesOnlyTransitions(lanes) {
            return (lanes & TransitionLanes) === lanes;
          }
          function findUpdateLane(lanePriority, wipLanes) {
            switch (lanePriority) {
              case NoLanePriority:
                break;
              case SyncLanePriority:
                return SyncLane;
              case SyncBatchedLanePriority:
                return SyncBatchedLane;
              case InputDiscreteLanePriority: {
                var _lane = pickArbitraryLane(InputDiscreteLanes & ~wipLanes);
                if (_lane === NoLane) {
                  return findUpdateLane(InputContinuousLanePriority, wipLanes);
                }
                return _lane;
              }
              case InputContinuousLanePriority: {
                var _lane2 = pickArbitraryLane(InputContinuousLanes & ~wipLanes);
                if (_lane2 === NoLane) {
                  return findUpdateLane(DefaultLanePriority, wipLanes);
                }
                return _lane2;
              }
              case DefaultLanePriority: {
                var _lane3 = pickArbitraryLane(DefaultLanes & ~wipLanes);
                if (_lane3 === NoLane) {
                  _lane3 = pickArbitraryLane(TransitionLanes & ~wipLanes);
                  if (_lane3 === NoLane) {
                    _lane3 = pickArbitraryLane(DefaultLanes);
                  }
                }
                return _lane3;
              }
              case TransitionPriority:
              case RetryLanePriority:
                break;
              case IdleLanePriority:
                var lane = pickArbitraryLane(IdleLanes & ~wipLanes);
                if (lane === NoLane) {
                  lane = pickArbitraryLane(IdleLanes);
                }
                return lane;
            }
            {
              {
                throw Error("Invalid update priority: " + lanePriority + ". This is a bug in React.");
              }
            }
          }
          function findTransitionLane(wipLanes, pendingLanes) {
            var lane = pickArbitraryLane(TransitionLanes & ~pendingLanes);
            if (lane === NoLane) {
              lane = pickArbitraryLane(TransitionLanes & ~wipLanes);
              if (lane === NoLane) {
                lane = pickArbitraryLane(TransitionLanes);
              }
            }
            return lane;
          }
          function findRetryLane(wipLanes) {
            var lane = pickArbitraryLane(RetryLanes & ~wipLanes);
            if (lane === NoLane) {
              lane = pickArbitraryLane(RetryLanes);
            }
            return lane;
          }
          function getHighestPriorityLane(lanes) {
            return lanes & -lanes;
          }
          function getLowestPriorityLane(lanes) {
            var index3 = 31 - clz32(lanes);
            return index3 < 0 ? NoLanes : 1 << index3;
          }
          function getEqualOrHigherPriorityLanes(lanes) {
            return (getLowestPriorityLane(lanes) << 1) - 1;
          }
          function pickArbitraryLane(lanes) {
            return getHighestPriorityLane(lanes);
          }
          function pickArbitraryLaneIndex(lanes) {
            return 31 - clz32(lanes);
          }
          function laneToIndex(lane) {
            return pickArbitraryLaneIndex(lane);
          }
          function includesSomeLane(a2, b2) {
            return (a2 & b2) !== NoLanes;
          }
          function isSubsetOfLanes(set2, subset) {
            return (set2 & subset) === subset;
          }
          function mergeLanes(a2, b2) {
            return a2 | b2;
          }
          function removeLanes(set2, subset) {
            return set2 & ~subset;
          }
          function laneToLanes(lane) {
            return lane;
          }
          function higherPriorityLane(a2, b2) {
            return a2 !== NoLane && a2 < b2 ? a2 : b2;
          }
          function createLaneMap(initial) {
            var laneMap = [];
            for (var i2 = 0; i2 < TotalLanes; i2++) {
              laneMap.push(initial);
            }
            return laneMap;
          }
          function markRootUpdated(root2, updateLane, eventTime) {
            root2.pendingLanes |= updateLane;
            var higherPriorityLanes = updateLane - 1;
            root2.suspendedLanes &= higherPriorityLanes;
            root2.pingedLanes &= higherPriorityLanes;
            var eventTimes = root2.eventTimes;
            var index3 = laneToIndex(updateLane);
            eventTimes[index3] = eventTime;
          }
          function markRootSuspended(root2, suspendedLanes) {
            root2.suspendedLanes |= suspendedLanes;
            root2.pingedLanes &= ~suspendedLanes;
            var expirationTimes = root2.expirationTimes;
            var lanes = suspendedLanes;
            while (lanes > 0) {
              var index3 = pickArbitraryLaneIndex(lanes);
              var lane = 1 << index3;
              expirationTimes[index3] = NoTimestamp;
              lanes &= ~lane;
            }
          }
          function markRootPinged(root2, pingedLanes, eventTime) {
            root2.pingedLanes |= root2.suspendedLanes & pingedLanes;
          }
          function markDiscreteUpdatesExpired(root2) {
            root2.expiredLanes |= InputDiscreteLanes & root2.pendingLanes;
          }
          function hasDiscreteLanes(lanes) {
            return (lanes & InputDiscreteLanes) !== NoLanes;
          }
          function markRootMutableRead(root2, updateLane) {
            root2.mutableReadLanes |= updateLane & root2.pendingLanes;
          }
          function markRootFinished(root2, remainingLanes) {
            var noLongerPendingLanes = root2.pendingLanes & ~remainingLanes;
            root2.pendingLanes = remainingLanes;
            root2.suspendedLanes = 0;
            root2.pingedLanes = 0;
            root2.expiredLanes &= remainingLanes;
            root2.mutableReadLanes &= remainingLanes;
            root2.entangledLanes &= remainingLanes;
            var entanglements = root2.entanglements;
            var eventTimes = root2.eventTimes;
            var expirationTimes = root2.expirationTimes;
            var lanes = noLongerPendingLanes;
            while (lanes > 0) {
              var index3 = pickArbitraryLaneIndex(lanes);
              var lane = 1 << index3;
              entanglements[index3] = NoLanes;
              eventTimes[index3] = NoTimestamp;
              expirationTimes[index3] = NoTimestamp;
              lanes &= ~lane;
            }
          }
          function markRootEntangled(root2, entangledLanes) {
            root2.entangledLanes |= entangledLanes;
            var entanglements = root2.entanglements;
            var lanes = entangledLanes;
            while (lanes > 0) {
              var index3 = pickArbitraryLaneIndex(lanes);
              var lane = 1 << index3;
              entanglements[index3] |= entangledLanes;
              lanes &= ~lane;
            }
          }
          var clz32 = Math.clz32 ? Math.clz32 : clz32Fallback;
          var log = Math.log;
          var LN2 = Math.LN2;
          function clz32Fallback(lanes) {
            if (lanes === 0) {
              return 32;
            }
            return 31 - (log(lanes) / LN2 | 0) | 0;
          }
          var UserBlockingPriority$1 = Scheduler.unstable_UserBlockingPriority, runWithPriority = Scheduler.unstable_runWithPriority;
          var _enabled = true;
          function setEnabled(enabled) {
            _enabled = !!enabled;
          }
          function isEnabled() {
            return _enabled;
          }
          function createEventListenerWrapperWithPriority(targetContainer, domEventName, eventSystemFlags) {
            var eventPriority = getEventPriorityForPluginSystem(domEventName);
            var listenerWrapper;
            switch (eventPriority) {
              case DiscreteEvent:
                listenerWrapper = dispatchDiscreteEvent;
                break;
              case UserBlockingEvent:
                listenerWrapper = dispatchUserBlockingUpdate;
                break;
              case ContinuousEvent:
              default:
                listenerWrapper = dispatchEvent;
                break;
            }
            return listenerWrapper.bind(null, domEventName, eventSystemFlags, targetContainer);
          }
          function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {
            {
              flushDiscreteUpdatesIfNeeded(nativeEvent.timeStamp);
            }
            discreteUpdates(dispatchEvent, domEventName, eventSystemFlags, container, nativeEvent);
          }
          function dispatchUserBlockingUpdate(domEventName, eventSystemFlags, container, nativeEvent) {
            {
              runWithPriority(UserBlockingPriority$1, dispatchEvent.bind(null, domEventName, eventSystemFlags, container, nativeEvent));
            }
          }
          function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
            if (!_enabled) {
              return;
            }
            var allowReplay = true;
            {
              allowReplay = (eventSystemFlags & IS_CAPTURE_PHASE) === 0;
            }
            if (allowReplay && hasQueuedDiscreteEvents() && isReplayableDiscreteEvent(domEventName)) {
              queueDiscreteEvent(null, domEventName, eventSystemFlags, targetContainer, nativeEvent);
              return;
            }
            var blockedOn = attemptToDispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent);
            if (blockedOn === null) {
              if (allowReplay) {
                clearIfContinuousEvent(domEventName, nativeEvent);
              }
              return;
            }
            if (allowReplay) {
              if (isReplayableDiscreteEvent(domEventName)) {
                queueDiscreteEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent);
                return;
              }
              if (queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent)) {
                return;
              }
              clearIfContinuousEvent(domEventName, nativeEvent);
            }
            dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, null, targetContainer);
          }
          function attemptToDispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
            var nativeEventTarget = getEventTarget(nativeEvent);
            var targetInst = getClosestInstanceFromNode(nativeEventTarget);
            if (targetInst !== null) {
              var nearestMounted = getNearestMountedFiber(targetInst);
              if (nearestMounted === null) {
                targetInst = null;
              } else {
                var tag = nearestMounted.tag;
                if (tag === SuspenseComponent) {
                  var instance = getSuspenseInstanceFromFiber(nearestMounted);
                  if (instance !== null) {
                    return instance;
                  }
                  targetInst = null;
                } else if (tag === HostRoot) {
                  var root2 = nearestMounted.stateNode;
                  if (root2.hydrate) {
                    return getContainerFromFiber(nearestMounted);
                  }
                  targetInst = null;
                } else if (nearestMounted !== targetInst) {
                  targetInst = null;
                }
              }
            }
            dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer);
            return null;
          }
          function addEventBubbleListener(target, eventType, listener) {
            target.addEventListener(eventType, listener, false);
            return listener;
          }
          function addEventCaptureListener(target, eventType, listener) {
            target.addEventListener(eventType, listener, true);
            return listener;
          }
          function addEventCaptureListenerWithPassiveFlag(target, eventType, listener, passive) {
            target.addEventListener(eventType, listener, {
              capture: true,
              passive
            });
            return listener;
          }
          function addEventBubbleListenerWithPassiveFlag(target, eventType, listener, passive) {
            target.addEventListener(eventType, listener, {
              passive
            });
            return listener;
          }
          var root = null;
          var startText = null;
          var fallbackText = null;
          function initialize(nativeEventTarget) {
            root = nativeEventTarget;
            startText = getText();
            return true;
          }
          function reset() {
            root = null;
            startText = null;
            fallbackText = null;
          }
          function getData() {
            if (fallbackText) {
              return fallbackText;
            }
            var start;
            var startValue = startText;
            var startLength = startValue.length;
            var end;
            var endValue = getText();
            var endLength = endValue.length;
            for (start = 0; start < startLength; start++) {
              if (startValue[start] !== endValue[start]) {
                break;
              }
            }
            var minEnd = startLength - start;
            for (end = 1; end <= minEnd; end++) {
              if (startValue[startLength - end] !== endValue[endLength - end]) {
                break;
              }
            }
            var sliceTail = end > 1 ? 1 - end : void 0;
            fallbackText = endValue.slice(start, sliceTail);
            return fallbackText;
          }
          function getText() {
            if ("value" in root) {
              return root.value;
            }
            return root.textContent;
          }
          function getEventCharCode(nativeEvent) {
            var charCode;
            var keyCode = nativeEvent.keyCode;
            if ("charCode" in nativeEvent) {
              charCode = nativeEvent.charCode;
              if (charCode === 0 && keyCode === 13) {
                charCode = 13;
              }
            } else {
              charCode = keyCode;
            }
            if (charCode === 10) {
              charCode = 13;
            }
            if (charCode >= 32 || charCode === 13) {
              return charCode;
            }
            return 0;
          }
          function functionThatReturnsTrue() {
            return true;
          }
          function functionThatReturnsFalse() {
            return false;
          }
          function createSyntheticEvent(Interface) {
            function SyntheticBaseEvent(reactName, reactEventType, targetInst, nativeEvent, nativeEventTarget) {
              this._reactName = reactName;
              this._targetInst = targetInst;
              this.type = reactEventType;
              this.nativeEvent = nativeEvent;
              this.target = nativeEventTarget;
              this.currentTarget = null;
              for (var _propName in Interface) {
                if (!Interface.hasOwnProperty(_propName)) {
                  continue;
                }
                var normalize = Interface[_propName];
                if (normalize) {
                  this[_propName] = normalize(nativeEvent);
                } else {
                  this[_propName] = nativeEvent[_propName];
                }
              }
              var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
              if (defaultPrevented) {
                this.isDefaultPrevented = functionThatReturnsTrue;
              } else {
                this.isDefaultPrevented = functionThatReturnsFalse;
              }
              this.isPropagationStopped = functionThatReturnsFalse;
              return this;
            }
            _assign(SyntheticBaseEvent.prototype, {
              preventDefault: function() {
                this.defaultPrevented = true;
                var event = this.nativeEvent;
                if (!event) {
                  return;
                }
                if (event.preventDefault) {
                  event.preventDefault();
                } else if (typeof event.returnValue !== "unknown") {
                  event.returnValue = false;
                }
                this.isDefaultPrevented = functionThatReturnsTrue;
              },
              stopPropagation: function() {
                var event = this.nativeEvent;
                if (!event) {
                  return;
                }
                if (event.stopPropagation) {
                  event.stopPropagation();
                } else if (typeof event.cancelBubble !== "unknown") {
                  event.cancelBubble = true;
                }
                this.isPropagationStopped = functionThatReturnsTrue;
              },
              persist: function() {
              },
              isPersistent: functionThatReturnsTrue
            });
            return SyntheticBaseEvent;
          }
          var EventInterface = {
            eventPhase: 0,
            bubbles: 0,
            cancelable: 0,
            timeStamp: function(event) {
              return event.timeStamp || Date.now();
            },
            defaultPrevented: 0,
            isTrusted: 0
          };
          var SyntheticEvent = createSyntheticEvent(EventInterface);
          var UIEventInterface = _assign({}, EventInterface, {
            view: 0,
            detail: 0
          });
          var SyntheticUIEvent = createSyntheticEvent(UIEventInterface);
          var lastMovementX;
          var lastMovementY;
          var lastMouseEvent;
          function updateMouseMovementPolyfillState(event) {
            if (event !== lastMouseEvent) {
              if (lastMouseEvent && event.type === "mousemove") {
                lastMovementX = event.screenX - lastMouseEvent.screenX;
                lastMovementY = event.screenY - lastMouseEvent.screenY;
              } else {
                lastMovementX = 0;
                lastMovementY = 0;
              }
              lastMouseEvent = event;
            }
          }
          var MouseEventInterface = _assign({}, UIEventInterface, {
            screenX: 0,
            screenY: 0,
            clientX: 0,
            clientY: 0,
            pageX: 0,
            pageY: 0,
            ctrlKey: 0,
            shiftKey: 0,
            altKey: 0,
            metaKey: 0,
            getModifierState: getEventModifierState,
            button: 0,
            buttons: 0,
            relatedTarget: function(event) {
              if (event.relatedTarget === void 0)
                return event.fromElement === event.srcElement ? event.toElement : event.fromElement;
              return event.relatedTarget;
            },
            movementX: function(event) {
              if ("movementX" in event) {
                return event.movementX;
              }
              updateMouseMovementPolyfillState(event);
              return lastMovementX;
            },
            movementY: function(event) {
              if ("movementY" in event) {
                return event.movementY;
              }
              return lastMovementY;
            }
          });
          var SyntheticMouseEvent = createSyntheticEvent(MouseEventInterface);
          var DragEventInterface = _assign({}, MouseEventInterface, {
            dataTransfer: 0
          });
          var SyntheticDragEvent = createSyntheticEvent(DragEventInterface);
          var FocusEventInterface = _assign({}, UIEventInterface, {
            relatedTarget: 0
          });
          var SyntheticFocusEvent = createSyntheticEvent(FocusEventInterface);
          var AnimationEventInterface = _assign({}, EventInterface, {
            animationName: 0,
            elapsedTime: 0,
            pseudoElement: 0
          });
          var SyntheticAnimationEvent = createSyntheticEvent(AnimationEventInterface);
          var ClipboardEventInterface = _assign({}, EventInterface, {
            clipboardData: function(event) {
              return "clipboardData" in event ? event.clipboardData : window.clipboardData;
            }
          });
          var SyntheticClipboardEvent = createSyntheticEvent(ClipboardEventInterface);
          var CompositionEventInterface = _assign({}, EventInterface, {
            data: 0
          });
          var SyntheticCompositionEvent = createSyntheticEvent(CompositionEventInterface);
          var SyntheticInputEvent = SyntheticCompositionEvent;
          var normalizeKey = {
            Esc: "Escape",
            Spacebar: " ",
            Left: "ArrowLeft",
            Up: "ArrowUp",
            Right: "ArrowRight",
            Down: "ArrowDown",
            Del: "Delete",
            Win: "OS",
            Menu: "ContextMenu",
            Apps: "ContextMenu",
            Scroll: "ScrollLock",
            MozPrintableKey: "Unidentified"
          };
          var translateToKey = {
            "8": "Backspace",
            "9": "Tab",
            "12": "Clear",
            "13": "Enter",
            "16": "Shift",
            "17": "Control",
            "18": "Alt",
            "19": "Pause",
            "20": "CapsLock",
            "27": "Escape",
            "32": " ",
            "33": "PageUp",
            "34": "PageDown",
            "35": "End",
            "36": "Home",
            "37": "ArrowLeft",
            "38": "ArrowUp",
            "39": "ArrowRight",
            "40": "ArrowDown",
            "45": "Insert",
            "46": "Delete",
            "112": "F1",
            "113": "F2",
            "114": "F3",
            "115": "F4",
            "116": "F5",
            "117": "F6",
            "118": "F7",
            "119": "F8",
            "120": "F9",
            "121": "F10",
            "122": "F11",
            "123": "F12",
            "144": "NumLock",
            "145": "ScrollLock",
            "224": "Meta"
          };
          function getEventKey(nativeEvent) {
            if (nativeEvent.key) {
              var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
              if (key !== "Unidentified") {
                return key;
              }
            }
            if (nativeEvent.type === "keypress") {
              var charCode = getEventCharCode(nativeEvent);
              return charCode === 13 ? "Enter" : String.fromCharCode(charCode);
            }
            if (nativeEvent.type === "keydown" || nativeEvent.type === "keyup") {
              return translateToKey[nativeEvent.keyCode] || "Unidentified";
            }
            return "";
          }
          var modifierKeyToProp = {
            Alt: "altKey",
            Control: "ctrlKey",
            Meta: "metaKey",
            Shift: "shiftKey"
          };
          function modifierStateGetter(keyArg) {
            var syntheticEvent = this;
            var nativeEvent = syntheticEvent.nativeEvent;
            if (nativeEvent.getModifierState) {
              return nativeEvent.getModifierState(keyArg);
            }
            var keyProp = modifierKeyToProp[keyArg];
            return keyProp ? !!nativeEvent[keyProp] : false;
          }
          function getEventModifierState(nativeEvent) {
            return modifierStateGetter;
          }
          var KeyboardEventInterface = _assign({}, UIEventInterface, {
            key: getEventKey,
            code: 0,
            location: 0,
            ctrlKey: 0,
            shiftKey: 0,
            altKey: 0,
            metaKey: 0,
            repeat: 0,
            locale: 0,
            getModifierState: getEventModifierState,
            charCode: function(event) {
              if (event.type === "keypress") {
                return getEventCharCode(event);
              }
              return 0;
            },
            keyCode: function(event) {
              if (event.type === "keydown" || event.type === "keyup") {
                return event.keyCode;
              }
              return 0;
            },
            which: function(event) {
              if (event.type === "keypress") {
                return getEventCharCode(event);
              }
              if (event.type === "keydown" || event.type === "keyup") {
                return event.keyCode;
              }
              return 0;
            }
          });
          var SyntheticKeyboardEvent = createSyntheticEvent(KeyboardEventInterface);
          var PointerEventInterface = _assign({}, MouseEventInterface, {
            pointerId: 0,
            width: 0,
            height: 0,
            pressure: 0,
            tangentialPressure: 0,
            tiltX: 0,
            tiltY: 0,
            twist: 0,
            pointerType: 0,
            isPrimary: 0
          });
          var SyntheticPointerEvent = createSyntheticEvent(PointerEventInterface);
          var TouchEventInterface = _assign({}, UIEventInterface, {
            touches: 0,
            targetTouches: 0,
            changedTouches: 0,
            altKey: 0,
            metaKey: 0,
            ctrlKey: 0,
            shiftKey: 0,
            getModifierState: getEventModifierState
          });
          var SyntheticTouchEvent = createSyntheticEvent(TouchEventInterface);
          var TransitionEventInterface = _assign({}, EventInterface, {
            propertyName: 0,
            elapsedTime: 0,
            pseudoElement: 0
          });
          var SyntheticTransitionEvent = createSyntheticEvent(TransitionEventInterface);
          var WheelEventInterface = _assign({}, MouseEventInterface, {
            deltaX: function(event) {
              return "deltaX" in event ? event.deltaX : "wheelDeltaX" in event ? -event.wheelDeltaX : 0;
            },
            deltaY: function(event) {
              return "deltaY" in event ? event.deltaY : "wheelDeltaY" in event ? -event.wheelDeltaY : "wheelDelta" in event ? -event.wheelDelta : 0;
            },
            deltaZ: 0,
            deltaMode: 0
          });
          var SyntheticWheelEvent = createSyntheticEvent(WheelEventInterface);
          var END_KEYCODES = [9, 13, 27, 32];
          var START_KEYCODE = 229;
          var canUseCompositionEvent = canUseDOM && "CompositionEvent" in window;
          var documentMode = null;
          if (canUseDOM && "documentMode" in document) {
            documentMode = document.documentMode;
          }
          var canUseTextInputEvent = canUseDOM && "TextEvent" in window && !documentMode;
          var useFallbackCompositionData = canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);
          var SPACEBAR_CODE = 32;
          var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);
          function registerEvents() {
            registerTwoPhaseEvent("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]);
            registerTwoPhaseEvent("onCompositionEnd", ["compositionend", "focusout", "keydown", "keypress", "keyup", "mousedown"]);
            registerTwoPhaseEvent("onCompositionStart", ["compositionstart", "focusout", "keydown", "keypress", "keyup", "mousedown"]);
            registerTwoPhaseEvent("onCompositionUpdate", ["compositionupdate", "focusout", "keydown", "keypress", "keyup", "mousedown"]);
          }
          var hasSpaceKeypress = false;
          function isKeypressCommand(nativeEvent) {
            return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) && !(nativeEvent.ctrlKey && nativeEvent.altKey);
          }
          function getCompositionEventType(domEventName) {
            switch (domEventName) {
              case "compositionstart":
                return "onCompositionStart";
              case "compositionend":
                return "onCompositionEnd";
              case "compositionupdate":
                return "onCompositionUpdate";
            }
          }
          function isFallbackCompositionStart(domEventName, nativeEvent) {
            return domEventName === "keydown" && nativeEvent.keyCode === START_KEYCODE;
          }
          function isFallbackCompositionEnd(domEventName, nativeEvent) {
            switch (domEventName) {
              case "keyup":
                return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
              case "keydown":
                return nativeEvent.keyCode !== START_KEYCODE;
              case "keypress":
              case "mousedown":
              case "focusout":
                return true;
              default:
                return false;
            }
          }
          function getDataFromCustomEvent(nativeEvent) {
            var detail = nativeEvent.detail;
            if (typeof detail === "object" && "data" in detail) {
              return detail.data;
            }
            return null;
          }
          function isUsingKoreanIME(nativeEvent) {
            return nativeEvent.locale === "ko";
          }
          var isComposing = false;
          function extractCompositionEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget) {
            var eventType;
            var fallbackData;
            if (canUseCompositionEvent) {
              eventType = getCompositionEventType(domEventName);
            } else if (!isComposing) {
              if (isFallbackCompositionStart(domEventName, nativeEvent)) {
                eventType = "onCompositionStart";
              }
            } else if (isFallbackCompositionEnd(domEventName, nativeEvent)) {
              eventType = "onCompositionEnd";
            }
            if (!eventType) {
              return null;
            }
            if (useFallbackCompositionData && !isUsingKoreanIME(nativeEvent)) {
              if (!isComposing && eventType === "onCompositionStart") {
                isComposing = initialize(nativeEventTarget);
              } else if (eventType === "onCompositionEnd") {
                if (isComposing) {
                  fallbackData = getData();
                }
              }
            }
            var listeners = accumulateTwoPhaseListeners(targetInst, eventType);
            if (listeners.length > 0) {
              var event = new SyntheticCompositionEvent(eventType, domEventName, null, nativeEvent, nativeEventTarget);
              dispatchQueue.push({
                event,
                listeners
              });
              if (fallbackData) {
                event.data = fallbackData;
              } else {
                var customData = getDataFromCustomEvent(nativeEvent);
                if (customData !== null) {
                  event.data = customData;
                }
              }
            }
          }
          function getNativeBeforeInputChars(domEventName, nativeEvent) {
            switch (domEventName) {
              case "compositionend":
                return getDataFromCustomEvent(nativeEvent);
              case "keypress":
                var which = nativeEvent.which;
                if (which !== SPACEBAR_CODE) {
                  return null;
                }
                hasSpaceKeypress = true;
                return SPACEBAR_CHAR;
              case "textInput":
                var chars = nativeEvent.data;
                if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
                  return null;
                }
                return chars;
              default:
                return null;
            }
          }
          function getFallbackBeforeInputChars(domEventName, nativeEvent) {
            if (isComposing) {
              if (domEventName === "compositionend" || !canUseCompositionEvent && isFallbackCompositionEnd(domEventName, nativeEvent)) {
                var chars = getData();
                reset();
                isComposing = false;
                return chars;
              }
              return null;
            }
            switch (domEventName) {
              case "paste":
                return null;
              case "keypress":
                if (!isKeypressCommand(nativeEvent)) {
                  if (nativeEvent.char && nativeEvent.char.length > 1) {
                    return nativeEvent.char;
                  } else if (nativeEvent.which) {
                    return String.fromCharCode(nativeEvent.which);
                  }
                }
                return null;
              case "compositionend":
                return useFallbackCompositionData && !isUsingKoreanIME(nativeEvent) ? null : nativeEvent.data;
              default:
                return null;
            }
          }
          function extractBeforeInputEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget) {
            var chars;
            if (canUseTextInputEvent) {
              chars = getNativeBeforeInputChars(domEventName, nativeEvent);
            } else {
              chars = getFallbackBeforeInputChars(domEventName, nativeEvent);
            }
            if (!chars) {
              return null;
            }
            var listeners = accumulateTwoPhaseListeners(targetInst, "onBeforeInput");
            if (listeners.length > 0) {
              var event = new SyntheticInputEvent("onBeforeInput", "beforeinput", null, nativeEvent, nativeEventTarget);
              dispatchQueue.push({
                event,
                listeners
              });
              event.data = chars;
            }
          }
          function extractEvents(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
            extractCompositionEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
            extractBeforeInputEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
          }
          var supportedInputTypes = {
            color: true,
            date: true,
            datetime: true,
            "datetime-local": true,
            email: true,
            month: true,
            number: true,
            password: true,
            range: true,
            search: true,
            tel: true,
            text: true,
            time: true,
            url: true,
            week: true
          };
          function isTextInputElement(elem) {
            var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
            if (nodeName === "input") {
              return !!supportedInputTypes[elem.type];
            }
            if (nodeName === "textarea") {
              return true;
            }
            return false;
          }
          function isEventSupported(eventNameSuffix) {
            if (!canUseDOM) {
              return false;
            }
            var eventName = "on" + eventNameSuffix;
            var isSupported = eventName in document;
            if (!isSupported) {
              var element = document.createElement("div");
              element.setAttribute(eventName, "return;");
              isSupported = typeof element[eventName] === "function";
            }
            return isSupported;
          }
          function registerEvents$1() {
            registerTwoPhaseEvent("onChange", ["change", "click", "focusin", "focusout", "input", "keydown", "keyup", "selectionchange"]);
          }
          function createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, target) {
            enqueueStateRestore(target);
            var listeners = accumulateTwoPhaseListeners(inst, "onChange");
            if (listeners.length > 0) {
              var event = new SyntheticEvent("onChange", "change", null, nativeEvent, target);
              dispatchQueue.push({
                event,
                listeners
              });
            }
          }
          var activeElement = null;
          var activeElementInst = null;
          function shouldUseChangeEvent(elem) {
            var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
            return nodeName === "select" || nodeName === "input" && elem.type === "file";
          }
          function manualDispatchChangeEvent(nativeEvent) {
            var dispatchQueue = [];
            createAndAccumulateChangeEvent(dispatchQueue, activeElementInst, nativeEvent, getEventTarget(nativeEvent));
            batchedUpdates(runEventInBatch, dispatchQueue);
          }
          function runEventInBatch(dispatchQueue) {
            processDispatchQueue(dispatchQueue, 0);
          }
          function getInstIfValueChanged(targetInst) {
            var targetNode = getNodeFromInstance(targetInst);
            if (updateValueIfChanged(targetNode)) {
              return targetInst;
            }
          }
          function getTargetInstForChangeEvent(domEventName, targetInst) {
            if (domEventName === "change") {
              return targetInst;
            }
          }
          var isInputEventSupported = false;
          if (canUseDOM) {
            isInputEventSupported = isEventSupported("input") && (!document.documentMode || document.documentMode > 9);
          }
          function startWatchingForValueChange(target, targetInst) {
            activeElement = target;
            activeElementInst = targetInst;
            activeElement.attachEvent("onpropertychange", handlePropertyChange);
          }
          function stopWatchingForValueChange() {
            if (!activeElement) {
              return;
            }
            activeElement.detachEvent("onpropertychange", handlePropertyChange);
            activeElement = null;
            activeElementInst = null;
          }
          function handlePropertyChange(nativeEvent) {
            if (nativeEvent.propertyName !== "value") {
              return;
            }
            if (getInstIfValueChanged(activeElementInst)) {
              manualDispatchChangeEvent(nativeEvent);
            }
          }
          function handleEventsForInputEventPolyfill(domEventName, target, targetInst) {
            if (domEventName === "focusin") {
              stopWatchingForValueChange();
              startWatchingForValueChange(target, targetInst);
            } else if (domEventName === "focusout") {
              stopWatchingForValueChange();
            }
          }
          function getTargetInstForInputEventPolyfill(domEventName, targetInst) {
            if (domEventName === "selectionchange" || domEventName === "keyup" || domEventName === "keydown") {
              return getInstIfValueChanged(activeElementInst);
            }
          }
          function shouldUseClickEvent(elem) {
            var nodeName = elem.nodeName;
            return nodeName && nodeName.toLowerCase() === "input" && (elem.type === "checkbox" || elem.type === "radio");
          }
          function getTargetInstForClickEvent(domEventName, targetInst) {
            if (domEventName === "click") {
              return getInstIfValueChanged(targetInst);
            }
          }
          function getTargetInstForInputOrChangeEvent(domEventName, targetInst) {
            if (domEventName === "input" || domEventName === "change") {
              return getInstIfValueChanged(targetInst);
            }
          }
          function handleControlledInputBlur(node) {
            var state = node._wrapperState;
            if (!state || !state.controlled || node.type !== "number") {
              return;
            }
            {
              setDefaultValue(node, "number", node.value);
            }
          }
          function extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
            var targetNode = targetInst ? getNodeFromInstance(targetInst) : window;
            var getTargetInstFunc, handleEventFunc;
            if (shouldUseChangeEvent(targetNode)) {
              getTargetInstFunc = getTargetInstForChangeEvent;
            } else if (isTextInputElement(targetNode)) {
              if (isInputEventSupported) {
                getTargetInstFunc = getTargetInstForInputOrChangeEvent;
              } else {
                getTargetInstFunc = getTargetInstForInputEventPolyfill;
                handleEventFunc = handleEventsForInputEventPolyfill;
              }
            } else if (shouldUseClickEvent(targetNode)) {
              getTargetInstFunc = getTargetInstForClickEvent;
            }
            if (getTargetInstFunc) {
              var inst = getTargetInstFunc(domEventName, targetInst);
              if (inst) {
                createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, nativeEventTarget);
                return;
              }
            }
            if (handleEventFunc) {
              handleEventFunc(domEventName, targetNode, targetInst);
            }
            if (domEventName === "focusout") {
              handleControlledInputBlur(targetNode);
            }
          }
          function registerEvents$2() {
            registerDirectEvent("onMouseEnter", ["mouseout", "mouseover"]);
            registerDirectEvent("onMouseLeave", ["mouseout", "mouseover"]);
            registerDirectEvent("onPointerEnter", ["pointerout", "pointerover"]);
            registerDirectEvent("onPointerLeave", ["pointerout", "pointerover"]);
          }
          function extractEvents$2(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
            var isOverEvent = domEventName === "mouseover" || domEventName === "pointerover";
            var isOutEvent = domEventName === "mouseout" || domEventName === "pointerout";
            if (isOverEvent && (eventSystemFlags & IS_REPLAYED) === 0) {
              var related = nativeEvent.relatedTarget || nativeEvent.fromElement;
              if (related) {
                if (getClosestInstanceFromNode(related) || isContainerMarkedAsRoot(related)) {
                  return;
                }
              }
            }
            if (!isOutEvent && !isOverEvent) {
              return;
            }
            var win;
            if (nativeEventTarget.window === nativeEventTarget) {
              win = nativeEventTarget;
            } else {
              var doc = nativeEventTarget.ownerDocument;
              if (doc) {
                win = doc.defaultView || doc.parentWindow;
              } else {
                win = window;
              }
            }
            var from;
            var to;
            if (isOutEvent) {
              var _related = nativeEvent.relatedTarget || nativeEvent.toElement;
              from = targetInst;
              to = _related ? getClosestInstanceFromNode(_related) : null;
              if (to !== null) {
                var nearestMounted = getNearestMountedFiber(to);
                if (to !== nearestMounted || to.tag !== HostComponent && to.tag !== HostText) {
                  to = null;
                }
              }
            } else {
              from = null;
              to = targetInst;
            }
            if (from === to) {
              return;
            }
            var SyntheticEventCtor = SyntheticMouseEvent;
            var leaveEventType = "onMouseLeave";
            var enterEventType = "onMouseEnter";
            var eventTypePrefix = "mouse";
            if (domEventName === "pointerout" || domEventName === "pointerover") {
              SyntheticEventCtor = SyntheticPointerEvent;
              leaveEventType = "onPointerLeave";
              enterEventType = "onPointerEnter";
              eventTypePrefix = "pointer";
            }
            var fromNode = from == null ? win : getNodeFromInstance(from);
            var toNode = to == null ? win : getNodeFromInstance(to);
            var leave = new SyntheticEventCtor(leaveEventType, eventTypePrefix + "leave", from, nativeEvent, nativeEventTarget);
            leave.target = fromNode;
            leave.relatedTarget = toNode;
            var enter = null;
            var nativeTargetInst = getClosestInstanceFromNode(nativeEventTarget);
            if (nativeTargetInst === targetInst) {
              var enterEvent = new SyntheticEventCtor(enterEventType, eventTypePrefix + "enter", to, nativeEvent, nativeEventTarget);
              enterEvent.target = toNode;
              enterEvent.relatedTarget = fromNode;
              enter = enterEvent;
            }
            accumulateEnterLeaveTwoPhaseListeners(dispatchQueue, leave, enter, from, to);
          }
          function is(x2, y2) {
            return x2 === y2 && (x2 !== 0 || 1 / x2 === 1 / y2) || x2 !== x2 && y2 !== y2;
          }
          var objectIs = typeof Object.is === "function" ? Object.is : is;
          var hasOwnProperty$2 = Object.prototype.hasOwnProperty;
          function shallowEqual(objA, objB) {
            if (objectIs(objA, objB)) {
              return true;
            }
            if (typeof objA !== "object" || objA === null || typeof objB !== "object" || objB === null) {
              return false;
            }
            var keysA = Object.keys(objA);
            var keysB = Object.keys(objB);
            if (keysA.length !== keysB.length) {
              return false;
            }
            for (var i2 = 0; i2 < keysA.length; i2++) {
              if (!hasOwnProperty$2.call(objB, keysA[i2]) || !objectIs(objA[keysA[i2]], objB[keysA[i2]])) {
                return false;
              }
            }
            return true;
          }
          function getLeafNode(node) {
            while (node && node.firstChild) {
              node = node.firstChild;
            }
            return node;
          }
          function getSiblingNode(node) {
            while (node) {
              if (node.nextSibling) {
                return node.nextSibling;
              }
              node = node.parentNode;
            }
          }
          function getNodeForCharacterOffset(root2, offset) {
            var node = getLeafNode(root2);
            var nodeStart = 0;
            var nodeEnd = 0;
            while (node) {
              if (node.nodeType === TEXT_NODE) {
                nodeEnd = nodeStart + node.textContent.length;
                if (nodeStart <= offset && nodeEnd >= offset) {
                  return {
                    node,
                    offset: offset - nodeStart
                  };
                }
                nodeStart = nodeEnd;
              }
              node = getLeafNode(getSiblingNode(node));
            }
          }
          function getOffsets(outerNode) {
            var ownerDocument2 = outerNode.ownerDocument;
            var win = ownerDocument2 && ownerDocument2.defaultView || window;
            var selection = win.getSelection && win.getSelection();
            if (!selection || selection.rangeCount === 0) {
              return null;
            }
            var anchorNode = selection.anchorNode, anchorOffset = selection.anchorOffset, focusNode = selection.focusNode, focusOffset = selection.focusOffset;
            try {
              anchorNode.nodeType;
              focusNode.nodeType;
            } catch (e2) {
              return null;
            }
            return getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset);
          }
          function getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset) {
            var length = 0;
            var start = -1;
            var end = -1;
            var indexWithinAnchor = 0;
            var indexWithinFocus = 0;
            var node = outerNode;
            var parentNode = null;
            outer:
              while (true) {
                var next = null;
                while (true) {
                  if (node === anchorNode && (anchorOffset === 0 || node.nodeType === TEXT_NODE)) {
                    start = length + anchorOffset;
                  }
                  if (node === focusNode && (focusOffset === 0 || node.nodeType === TEXT_NODE)) {
                    end = length + focusOffset;
                  }
                  if (node.nodeType === TEXT_NODE) {
                    length += node.nodeValue.length;
                  }
                  if ((next = node.firstChild) === null) {
                    break;
                  }
                  parentNode = node;
                  node = next;
                }
                while (true) {
                  if (node === outerNode) {
                    break outer;
                  }
                  if (parentNode === anchorNode && ++indexWithinAnchor === anchorOffset) {
                    start = length;
                  }
                  if (parentNode === focusNode && ++indexWithinFocus === focusOffset) {
                    end = length;
                  }
                  if ((next = node.nextSibling) !== null) {
                    break;
                  }
                  node = parentNode;
                  parentNode = node.parentNode;
                }
                node = next;
              }
            if (start === -1 || end === -1) {
              return null;
            }
            return {
              start,
              end
            };
          }
          function setOffsets(node, offsets) {
            var doc = node.ownerDocument || document;
            var win = doc && doc.defaultView || window;
            if (!win.getSelection) {
              return;
            }
            var selection = win.getSelection();
            var length = node.textContent.length;
            var start = Math.min(offsets.start, length);
            var end = offsets.end === void 0 ? start : Math.min(offsets.end, length);
            if (!selection.extend && start > end) {
              var temp = end;
              end = start;
              start = temp;
            }
            var startMarker = getNodeForCharacterOffset(node, start);
            var endMarker = getNodeForCharacterOffset(node, end);
            if (startMarker && endMarker) {
              if (selection.rangeCount === 1 && selection.anchorNode === startMarker.node && selection.anchorOffset === startMarker.offset && selection.focusNode === endMarker.node && selection.focusOffset === endMarker.offset) {
                return;
              }
              var range = doc.createRange();
              range.setStart(startMarker.node, startMarker.offset);
              selection.removeAllRanges();
              if (start > end) {
                selection.addRange(range);
                selection.extend(endMarker.node, endMarker.offset);
              } else {
                range.setEnd(endMarker.node, endMarker.offset);
                selection.addRange(range);
              }
            }
          }
          function isTextNode(node) {
            return node && node.nodeType === TEXT_NODE;
          }
          function containsNode(outerNode, innerNode) {
            if (!outerNode || !innerNode) {
              return false;
            } else if (outerNode === innerNode) {
              return true;
            } else if (isTextNode(outerNode)) {
              return false;
            } else if (isTextNode(innerNode)) {
              return containsNode(outerNode, innerNode.parentNode);
            } else if ("contains" in outerNode) {
              return outerNode.contains(innerNode);
            } else if (outerNode.compareDocumentPosition) {
              return !!(outerNode.compareDocumentPosition(innerNode) & 16);
            } else {
              return false;
            }
          }
          function isInDocument(node) {
            return node && node.ownerDocument && containsNode(node.ownerDocument.documentElement, node);
          }
          function isSameOriginFrame(iframe) {
            try {
              return typeof iframe.contentWindow.location.href === "string";
            } catch (err) {
              return false;
            }
          }
          function getActiveElementDeep() {
            var win = window;
            var element = getActiveElement();
            while (element instanceof win.HTMLIFrameElement) {
              if (isSameOriginFrame(element)) {
                win = element.contentWindow;
              } else {
                return element;
              }
              element = getActiveElement(win.document);
            }
            return element;
          }
          function hasSelectionCapabilities(elem) {
            var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
            return nodeName && (nodeName === "input" && (elem.type === "text" || elem.type === "search" || elem.type === "tel" || elem.type === "url" || elem.type === "password") || nodeName === "textarea" || elem.contentEditable === "true");
          }
          function getSelectionInformation() {
            var focusedElem = getActiveElementDeep();
            return {
              focusedElem,
              selectionRange: hasSelectionCapabilities(focusedElem) ? getSelection(focusedElem) : null
            };
          }
          function restoreSelection(priorSelectionInformation) {
            var curFocusedElem = getActiveElementDeep();
            var priorFocusedElem = priorSelectionInformation.focusedElem;
            var priorSelectionRange = priorSelectionInformation.selectionRange;
            if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
              if (priorSelectionRange !== null && hasSelectionCapabilities(priorFocusedElem)) {
                setSelection(priorFocusedElem, priorSelectionRange);
              }
              var ancestors = [];
              var ancestor = priorFocusedElem;
              while (ancestor = ancestor.parentNode) {
                if (ancestor.nodeType === ELEMENT_NODE) {
                  ancestors.push({
                    element: ancestor,
                    left: ancestor.scrollLeft,
                    top: ancestor.scrollTop
                  });
                }
              }
              if (typeof priorFocusedElem.focus === "function") {
                priorFocusedElem.focus();
              }
              for (var i2 = 0; i2 < ancestors.length; i2++) {
                var info = ancestors[i2];
                info.element.scrollLeft = info.left;
                info.element.scrollTop = info.top;
              }
            }
          }
          function getSelection(input) {
            var selection;
            if ("selectionStart" in input) {
              selection = {
                start: input.selectionStart,
                end: input.selectionEnd
              };
            } else {
              selection = getOffsets(input);
            }
            return selection || {
              start: 0,
              end: 0
            };
          }
          function setSelection(input, offsets) {
            var start = offsets.start;
            var end = offsets.end;
            if (end === void 0) {
              end = start;
            }
            if ("selectionStart" in input) {
              input.selectionStart = start;
              input.selectionEnd = Math.min(end, input.value.length);
            } else {
              setOffsets(input, offsets);
            }
          }
          var skipSelectionChangeEvent = canUseDOM && "documentMode" in document && document.documentMode <= 11;
          function registerEvents$3() {
            registerTwoPhaseEvent("onSelect", ["focusout", "contextmenu", "dragend", "focusin", "keydown", "keyup", "mousedown", "mouseup", "selectionchange"]);
          }
          var activeElement$1 = null;
          var activeElementInst$1 = null;
          var lastSelection = null;
          var mouseDown = false;
          function getSelection$1(node) {
            if ("selectionStart" in node && hasSelectionCapabilities(node)) {
              return {
                start: node.selectionStart,
                end: node.selectionEnd
              };
            } else {
              var win = node.ownerDocument && node.ownerDocument.defaultView || window;
              var selection = win.getSelection();
              return {
                anchorNode: selection.anchorNode,
                anchorOffset: selection.anchorOffset,
                focusNode: selection.focusNode,
                focusOffset: selection.focusOffset
              };
            }
          }
          function getEventTargetDocument(eventTarget) {
            return eventTarget.window === eventTarget ? eventTarget.document : eventTarget.nodeType === DOCUMENT_NODE ? eventTarget : eventTarget.ownerDocument;
          }
          function constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget) {
            var doc = getEventTargetDocument(nativeEventTarget);
            if (mouseDown || activeElement$1 == null || activeElement$1 !== getActiveElement(doc)) {
              return;
            }
            var currentSelection = getSelection$1(activeElement$1);
            if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
              lastSelection = currentSelection;
              var listeners = accumulateTwoPhaseListeners(activeElementInst$1, "onSelect");
              if (listeners.length > 0) {
                var event = new SyntheticEvent("onSelect", "select", null, nativeEvent, nativeEventTarget);
                dispatchQueue.push({
                  event,
                  listeners
                });
                event.target = activeElement$1;
              }
            }
          }
          function extractEvents$3(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
            var targetNode = targetInst ? getNodeFromInstance(targetInst) : window;
            switch (domEventName) {
              case "focusin":
                if (isTextInputElement(targetNode) || targetNode.contentEditable === "true") {
                  activeElement$1 = targetNode;
                  activeElementInst$1 = targetInst;
                  lastSelection = null;
                }
                break;
              case "focusout":
                activeElement$1 = null;
                activeElementInst$1 = null;
                lastSelection = null;
                break;
              case "mousedown":
                mouseDown = true;
                break;
              case "contextmenu":
              case "mouseup":
              case "dragend":
                mouseDown = false;
                constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
                break;
              case "selectionchange":
                if (skipSelectionChangeEvent) {
                  break;
                }
              case "keydown":
              case "keyup":
                constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
            }
          }
          function extractEvents$4(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
            var reactName = topLevelEventsToReactNames.get(domEventName);
            if (reactName === void 0) {
              return;
            }
            var SyntheticEventCtor = SyntheticEvent;
            var reactEventType = domEventName;
            switch (domEventName) {
              case "keypress":
                if (getEventCharCode(nativeEvent) === 0) {
                  return;
                }
              case "keydown":
              case "keyup":
                SyntheticEventCtor = SyntheticKeyboardEvent;
                break;
              case "focusin":
                reactEventType = "focus";
                SyntheticEventCtor = SyntheticFocusEvent;
                break;
              case "focusout":
                reactEventType = "blur";
                SyntheticEventCtor = SyntheticFocusEvent;
                break;
              case "beforeblur":
              case "afterblur":
                SyntheticEventCtor = SyntheticFocusEvent;
                break;
              case "click":
                if (nativeEvent.button === 2) {
                  return;
                }
              case "auxclick":
              case "dblclick":
              case "mousedown":
              case "mousemove":
              case "mouseup":
              case "mouseout":
              case "mouseover":
              case "contextmenu":
                SyntheticEventCtor = SyntheticMouseEvent;
                break;
              case "drag":
              case "dragend":
              case "dragenter":
              case "dragexit":
              case "dragleave":
              case "dragover":
              case "dragstart":
              case "drop":
                SyntheticEventCtor = SyntheticDragEvent;
                break;
              case "touchcancel":
              case "touchend":
              case "touchmove":
              case "touchstart":
                SyntheticEventCtor = SyntheticTouchEvent;
                break;
              case ANIMATION_END:
              case ANIMATION_ITERATION:
              case ANIMATION_START:
                SyntheticEventCtor = SyntheticAnimationEvent;
                break;
              case TRANSITION_END:
                SyntheticEventCtor = SyntheticTransitionEvent;
                break;
              case "scroll":
                SyntheticEventCtor = SyntheticUIEvent;
                break;
              case "wheel":
                SyntheticEventCtor = SyntheticWheelEvent;
                break;
              case "copy":
              case "cut":
              case "paste":
                SyntheticEventCtor = SyntheticClipboardEvent;
                break;
              case "gotpointercapture":
              case "lostpointercapture":
              case "pointercancel":
              case "pointerdown":
              case "pointermove":
              case "pointerout":
              case "pointerover":
              case "pointerup":
                SyntheticEventCtor = SyntheticPointerEvent;
                break;
            }
            var inCapturePhase = (eventSystemFlags & IS_CAPTURE_PHASE) !== 0;
            {
              var accumulateTargetOnly = !inCapturePhase && domEventName === "scroll";
              var _listeners = accumulateSinglePhaseListeners(targetInst, reactName, nativeEvent.type, inCapturePhase, accumulateTargetOnly);
              if (_listeners.length > 0) {
                var _event = new SyntheticEventCtor(reactName, reactEventType, null, nativeEvent, nativeEventTarget);
                dispatchQueue.push({
                  event: _event,
                  listeners: _listeners
                });
              }
            }
          }
          registerSimpleEvents();
          registerEvents$2();
          registerEvents$1();
          registerEvents$3();
          registerEvents();
          function extractEvents$5(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
            extractEvents$4(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
            var shouldProcessPolyfillPlugins = (eventSystemFlags & SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS) === 0;
            if (shouldProcessPolyfillPlugins) {
              extractEvents$2(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
              extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
              extractEvents$3(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
              extractEvents(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
            }
          }
          var mediaEventTypes = ["abort", "canplay", "canplaythrough", "durationchange", "emptied", "encrypted", "ended", "error", "loadeddata", "loadedmetadata", "loadstart", "pause", "play", "playing", "progress", "ratechange", "seeked", "seeking", "stalled", "suspend", "timeupdate", "volumechange", "waiting"];
          var nonDelegatedEvents = new Set(["cancel", "close", "invalid", "load", "scroll", "toggle"].concat(mediaEventTypes));
          function executeDispatch(event, listener, currentTarget) {
            var type = event.type || "unknown-event";
            event.currentTarget = currentTarget;
            invokeGuardedCallbackAndCatchFirstError(type, listener, void 0, event);
            event.currentTarget = null;
          }
          function processDispatchQueueItemsInOrder(event, dispatchListeners, inCapturePhase) {
            var previousInstance;
            if (inCapturePhase) {
              for (var i2 = dispatchListeners.length - 1; i2 >= 0; i2--) {
                var _dispatchListeners$i = dispatchListeners[i2], instance = _dispatchListeners$i.instance, currentTarget = _dispatchListeners$i.currentTarget, listener = _dispatchListeners$i.listener;
                if (instance !== previousInstance && event.isPropagationStopped()) {
                  return;
                }
                executeDispatch(event, listener, currentTarget);
                previousInstance = instance;
              }
            } else {
              for (var _i = 0; _i < dispatchListeners.length; _i++) {
                var _dispatchListeners$_i = dispatchListeners[_i], _instance = _dispatchListeners$_i.instance, _currentTarget = _dispatchListeners$_i.currentTarget, _listener = _dispatchListeners$_i.listener;
                if (_instance !== previousInstance && event.isPropagationStopped()) {
                  return;
                }
                executeDispatch(event, _listener, _currentTarget);
                previousInstance = _instance;
              }
            }
          }
          function processDispatchQueue(dispatchQueue, eventSystemFlags) {
            var inCapturePhase = (eventSystemFlags & IS_CAPTURE_PHASE) !== 0;
            for (var i2 = 0; i2 < dispatchQueue.length; i2++) {
              var _dispatchQueue$i = dispatchQueue[i2], event = _dispatchQueue$i.event, listeners = _dispatchQueue$i.listeners;
              processDispatchQueueItemsInOrder(event, listeners, inCapturePhase);
            }
            rethrowCaughtError();
          }
          function dispatchEventsForPlugins(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer) {
            var nativeEventTarget = getEventTarget(nativeEvent);
            var dispatchQueue = [];
            extractEvents$5(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
            processDispatchQueue(dispatchQueue, eventSystemFlags);
          }
          function listenToNonDelegatedEvent(domEventName, targetElement) {
            var isCapturePhaseListener = false;
            var listenerSet = getEventListenerSet(targetElement);
            var listenerSetKey = getListenerSetKey(domEventName, isCapturePhaseListener);
            if (!listenerSet.has(listenerSetKey)) {
              addTrappedEventListener(targetElement, domEventName, IS_NON_DELEGATED, isCapturePhaseListener);
              listenerSet.add(listenerSetKey);
            }
          }
          var listeningMarker = "_reactListening" + Math.random().toString(36).slice(2);
          function listenToAllSupportedEvents(rootContainerElement) {
            {
              if (rootContainerElement[listeningMarker]) {
                return;
              }
              rootContainerElement[listeningMarker] = true;
              allNativeEvents.forEach(function(domEventName) {
                if (!nonDelegatedEvents.has(domEventName)) {
                  listenToNativeEvent(domEventName, false, rootContainerElement, null);
                }
                listenToNativeEvent(domEventName, true, rootContainerElement, null);
              });
            }
          }
          function listenToNativeEvent(domEventName, isCapturePhaseListener, rootContainerElement, targetElement) {
            var eventSystemFlags = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : 0;
            var target = rootContainerElement;
            if (domEventName === "selectionchange" && rootContainerElement.nodeType !== DOCUMENT_NODE) {
              target = rootContainerElement.ownerDocument;
            }
            if (targetElement !== null && !isCapturePhaseListener && nonDelegatedEvents.has(domEventName)) {
              if (domEventName !== "scroll") {
                return;
              }
              eventSystemFlags |= IS_NON_DELEGATED;
              target = targetElement;
            }
            var listenerSet = getEventListenerSet(target);
            var listenerSetKey = getListenerSetKey(domEventName, isCapturePhaseListener);
            if (!listenerSet.has(listenerSetKey)) {
              if (isCapturePhaseListener) {
                eventSystemFlags |= IS_CAPTURE_PHASE;
              }
              addTrappedEventListener(target, domEventName, eventSystemFlags, isCapturePhaseListener);
              listenerSet.add(listenerSetKey);
            }
          }
          function addTrappedEventListener(targetContainer, domEventName, eventSystemFlags, isCapturePhaseListener, isDeferredListenerForLegacyFBSupport) {
            var listener = createEventListenerWrapperWithPriority(targetContainer, domEventName, eventSystemFlags);
            var isPassiveListener = void 0;
            if (passiveBrowserEventsSupported) {
              if (domEventName === "touchstart" || domEventName === "touchmove" || domEventName === "wheel") {
                isPassiveListener = true;
              }
            }
            targetContainer = targetContainer;
            var unsubscribeListener;
            if (isCapturePhaseListener) {
              if (isPassiveListener !== void 0) {
                unsubscribeListener = addEventCaptureListenerWithPassiveFlag(targetContainer, domEventName, listener, isPassiveListener);
              } else {
                unsubscribeListener = addEventCaptureListener(targetContainer, domEventName, listener);
              }
            } else {
              if (isPassiveListener !== void 0) {
                unsubscribeListener = addEventBubbleListenerWithPassiveFlag(targetContainer, domEventName, listener, isPassiveListener);
              } else {
                unsubscribeListener = addEventBubbleListener(targetContainer, domEventName, listener);
              }
            }
          }
          function isMatchingRootContainer(grandContainer, targetContainer) {
            return grandContainer === targetContainer || grandContainer.nodeType === COMMENT_NODE && grandContainer.parentNode === targetContainer;
          }
          function dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer) {
            var ancestorInst = targetInst;
            if ((eventSystemFlags & IS_EVENT_HANDLE_NON_MANAGED_NODE) === 0 && (eventSystemFlags & IS_NON_DELEGATED) === 0) {
              var targetContainerNode = targetContainer;
              if (targetInst !== null) {
                var node = targetInst;
                mainLoop:
                  while (true) {
                    if (node === null) {
                      return;
                    }
                    var nodeTag = node.tag;
                    if (nodeTag === HostRoot || nodeTag === HostPortal) {
                      var container = node.stateNode.containerInfo;
                      if (isMatchingRootContainer(container, targetContainerNode)) {
                        break;
                      }
                      if (nodeTag === HostPortal) {
                        var grandNode = node.return;
                        while (grandNode !== null) {
                          var grandTag = grandNode.tag;
                          if (grandTag === HostRoot || grandTag === HostPortal) {
                            var grandContainer = grandNode.stateNode.containerInfo;
                            if (isMatchingRootContainer(grandContainer, targetContainerNode)) {
                              return;
                            }
                          }
                          grandNode = grandNode.return;
                        }
                      }
                      while (container !== null) {
                        var parentNode = getClosestInstanceFromNode(container);
                        if (parentNode === null) {
                          return;
                        }
                        var parentTag = parentNode.tag;
                        if (parentTag === HostComponent || parentTag === HostText) {
                          node = ancestorInst = parentNode;
                          continue mainLoop;
                        }
                        container = container.parentNode;
                      }
                    }
                    node = node.return;
                  }
              }
            }
            batchedEventUpdates(function() {
              return dispatchEventsForPlugins(domEventName, eventSystemFlags, nativeEvent, ancestorInst);
            });
          }
          function createDispatchListener(instance, listener, currentTarget) {
            return {
              instance,
              listener,
              currentTarget
            };
          }
          function accumulateSinglePhaseListeners(targetFiber, reactName, nativeEventType, inCapturePhase, accumulateTargetOnly) {
            var captureName = reactName !== null ? reactName + "Capture" : null;
            var reactEventName = inCapturePhase ? captureName : reactName;
            var listeners = [];
            var instance = targetFiber;
            var lastHostComponent = null;
            while (instance !== null) {
              var _instance2 = instance, stateNode = _instance2.stateNode, tag = _instance2.tag;
              if (tag === HostComponent && stateNode !== null) {
                lastHostComponent = stateNode;
                if (reactEventName !== null) {
                  var listener = getListener(instance, reactEventName);
                  if (listener != null) {
                    listeners.push(createDispatchListener(instance, listener, lastHostComponent));
                  }
                }
              }
              if (accumulateTargetOnly) {
                break;
              }
              instance = instance.return;
            }
            return listeners;
          }
          function accumulateTwoPhaseListeners(targetFiber, reactName) {
            var captureName = reactName + "Capture";
            var listeners = [];
            var instance = targetFiber;
            while (instance !== null) {
              var _instance3 = instance, stateNode = _instance3.stateNode, tag = _instance3.tag;
              if (tag === HostComponent && stateNode !== null) {
                var currentTarget = stateNode;
                var captureListener = getListener(instance, captureName);
                if (captureListener != null) {
                  listeners.unshift(createDispatchListener(instance, captureListener, currentTarget));
                }
                var bubbleListener = getListener(instance, reactName);
                if (bubbleListener != null) {
                  listeners.push(createDispatchListener(instance, bubbleListener, currentTarget));
                }
              }
              instance = instance.return;
            }
            return listeners;
          }
          function getParent(inst) {
            if (inst === null) {
              return null;
            }
            do {
              inst = inst.return;
            } while (inst && inst.tag !== HostComponent);
            if (inst) {
              return inst;
            }
            return null;
          }
          function getLowestCommonAncestor(instA, instB) {
            var nodeA = instA;
            var nodeB = instB;
            var depthA = 0;
            for (var tempA = nodeA; tempA; tempA = getParent(tempA)) {
              depthA++;
            }
            var depthB = 0;
            for (var tempB = nodeB; tempB; tempB = getParent(tempB)) {
              depthB++;
            }
            while (depthA - depthB > 0) {
              nodeA = getParent(nodeA);
              depthA--;
            }
            while (depthB - depthA > 0) {
              nodeB = getParent(nodeB);
              depthB--;
            }
            var depth = depthA;
            while (depth--) {
              if (nodeA === nodeB || nodeB !== null && nodeA === nodeB.alternate) {
                return nodeA;
              }
              nodeA = getParent(nodeA);
              nodeB = getParent(nodeB);
            }
            return null;
          }
          function accumulateEnterLeaveListenersForEvent(dispatchQueue, event, target, common2, inCapturePhase) {
            var registrationName = event._reactName;
            var listeners = [];
            var instance = target;
            while (instance !== null) {
              if (instance === common2) {
                break;
              }
              var _instance4 = instance, alternate = _instance4.alternate, stateNode = _instance4.stateNode, tag = _instance4.tag;
              if (alternate !== null && alternate === common2) {
                break;
              }
              if (tag === HostComponent && stateNode !== null) {
                var currentTarget = stateNode;
                if (inCapturePhase) {
                  var captureListener = getListener(instance, registrationName);
                  if (captureListener != null) {
                    listeners.unshift(createDispatchListener(instance, captureListener, currentTarget));
                  }
                } else if (!inCapturePhase) {
                  var bubbleListener = getListener(instance, registrationName);
                  if (bubbleListener != null) {
                    listeners.push(createDispatchListener(instance, bubbleListener, currentTarget));
                  }
                }
              }
              instance = instance.return;
            }
            if (listeners.length !== 0) {
              dispatchQueue.push({
                event,
                listeners
              });
            }
          }
          function accumulateEnterLeaveTwoPhaseListeners(dispatchQueue, leaveEvent, enterEvent, from, to) {
            var common2 = from && to ? getLowestCommonAncestor(from, to) : null;
            if (from !== null) {
              accumulateEnterLeaveListenersForEvent(dispatchQueue, leaveEvent, from, common2, false);
            }
            if (to !== null && enterEvent !== null) {
              accumulateEnterLeaveListenersForEvent(dispatchQueue, enterEvent, to, common2, true);
            }
          }
          function getListenerSetKey(domEventName, capture) {
            return domEventName + "__" + (capture ? "capture" : "bubble");
          }
          var didWarnInvalidHydration = false;
          var DANGEROUSLY_SET_INNER_HTML = "dangerouslySetInnerHTML";
          var SUPPRESS_CONTENT_EDITABLE_WARNING = "suppressContentEditableWarning";
          var SUPPRESS_HYDRATION_WARNING = "suppressHydrationWarning";
          var AUTOFOCUS = "autoFocus";
          var CHILDREN = "children";
          var STYLE = "style";
          var HTML$1 = "__html";
          var HTML_NAMESPACE$1 = Namespaces.html;
          var warnedUnknownTags;
          var suppressHydrationWarning;
          var validatePropertiesInDevelopment;
          var warnForTextDifference;
          var warnForPropDifference;
          var warnForExtraAttributes;
          var warnForInvalidEventListener;
          var canDiffStyleForHydrationWarning;
          var normalizeMarkupForTextOrAttribute;
          var normalizeHTML;
          {
            warnedUnknownTags = {
              dialog: true,
              webview: true
            };
            validatePropertiesInDevelopment = function(type, props) {
              validateProperties(type, props);
              validateProperties$1(type, props);
              validateProperties$2(type, props, {
                registrationNameDependencies,
                possibleRegistrationNames
              });
            };
            canDiffStyleForHydrationWarning = canUseDOM && !document.documentMode;
            var NORMALIZE_NEWLINES_REGEX = /\r\n?/g;
            var NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\u0000|\uFFFD/g;
            normalizeMarkupForTextOrAttribute = function(markup) {
              var markupString = typeof markup === "string" ? markup : "" + markup;
              return markupString.replace(NORMALIZE_NEWLINES_REGEX, "\n").replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, "");
            };
            warnForTextDifference = function(serverText, clientText) {
              if (didWarnInvalidHydration) {
                return;
              }
              var normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);
              var normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);
              if (normalizedServerText === normalizedClientText) {
                return;
              }
              didWarnInvalidHydration = true;
              error('Text content did not match. Server: "%s" Client: "%s"', normalizedServerText, normalizedClientText);
            };
            warnForPropDifference = function(propName, serverValue, clientValue) {
              if (didWarnInvalidHydration) {
                return;
              }
              var normalizedClientValue = normalizeMarkupForTextOrAttribute(clientValue);
              var normalizedServerValue = normalizeMarkupForTextOrAttribute(serverValue);
              if (normalizedServerValue === normalizedClientValue) {
                return;
              }
              didWarnInvalidHydration = true;
              error("Prop `%s` did not match. Server: %s Client: %s", propName, JSON.stringify(normalizedServerValue), JSON.stringify(normalizedClientValue));
            };
            warnForExtraAttributes = function(attributeNames) {
              if (didWarnInvalidHydration) {
                return;
              }
              didWarnInvalidHydration = true;
              var names = [];
              attributeNames.forEach(function(name) {
                names.push(name);
              });
              error("Extra attributes from the server: %s", names);
            };
            warnForInvalidEventListener = function(registrationName, listener) {
              if (listener === false) {
                error("Expected `%s` listener to be a function, instead got `false`.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.", registrationName, registrationName, registrationName);
              } else {
                error("Expected `%s` listener to be a function, instead got a value of `%s` type.", registrationName, typeof listener);
              }
            };
            normalizeHTML = function(parent, html) {
              var testElement = parent.namespaceURI === HTML_NAMESPACE$1 ? parent.ownerDocument.createElement(parent.tagName) : parent.ownerDocument.createElementNS(parent.namespaceURI, parent.tagName);
              testElement.innerHTML = html;
              return testElement.innerHTML;
            };
          }
          function getOwnerDocumentFromRootContainer(rootContainerElement) {
            return rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
          }
          function noop2() {
          }
          function trapClickOnNonInteractiveElement(node) {
            node.onclick = noop2;
          }
          function setInitialDOMProperties(tag, domElement, rootContainerElement, nextProps, isCustomComponentTag) {
            for (var propKey in nextProps) {
              if (!nextProps.hasOwnProperty(propKey)) {
                continue;
              }
              var nextProp = nextProps[propKey];
              if (propKey === STYLE) {
                {
                  if (nextProp) {
                    Object.freeze(nextProp);
                  }
                }
                setValueForStyles(domElement, nextProp);
              } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                var nextHtml = nextProp ? nextProp[HTML$1] : void 0;
                if (nextHtml != null) {
                  setInnerHTML(domElement, nextHtml);
                }
              } else if (propKey === CHILDREN) {
                if (typeof nextProp === "string") {
                  var canSetTextContent = tag !== "textarea" || nextProp !== "";
                  if (canSetTextContent) {
                    setTextContent(domElement, nextProp);
                  }
                } else if (typeof nextProp === "number") {
                  setTextContent(domElement, "" + nextProp);
                }
              } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING)
                ;
              else if (propKey === AUTOFOCUS)
                ;
              else if (registrationNameDependencies.hasOwnProperty(propKey)) {
                if (nextProp != null) {
                  if (typeof nextProp !== "function") {
                    warnForInvalidEventListener(propKey, nextProp);
                  }
                  if (propKey === "onScroll") {
                    listenToNonDelegatedEvent("scroll", domElement);
                  }
                }
              } else if (nextProp != null) {
                setValueForProperty(domElement, propKey, nextProp, isCustomComponentTag);
              }
            }
          }
          function updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag) {
            for (var i2 = 0; i2 < updatePayload.length; i2 += 2) {
              var propKey = updatePayload[i2];
              var propValue = updatePayload[i2 + 1];
              if (propKey === STYLE) {
                setValueForStyles(domElement, propValue);
              } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                setInnerHTML(domElement, propValue);
              } else if (propKey === CHILDREN) {
                setTextContent(domElement, propValue);
              } else {
                setValueForProperty(domElement, propKey, propValue, isCustomComponentTag);
              }
            }
          }
          function createElement3(type, props, rootContainerElement, parentNamespace) {
            var isCustomComponentTag;
            var ownerDocument2 = getOwnerDocumentFromRootContainer(rootContainerElement);
            var domElement;
            var namespaceURI = parentNamespace;
            if (namespaceURI === HTML_NAMESPACE$1) {
              namespaceURI = getIntrinsicNamespace(type);
            }
            if (namespaceURI === HTML_NAMESPACE$1) {
              {
                isCustomComponentTag = isCustomComponent(type, props);
                if (!isCustomComponentTag && type !== type.toLowerCase()) {
                  error("<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.", type);
                }
              }
              if (type === "script") {
                var div = ownerDocument2.createElement("div");
                div.innerHTML = "<script><\/script>";
                var firstChild = div.firstChild;
                domElement = div.removeChild(firstChild);
              } else if (typeof props.is === "string") {
                domElement = ownerDocument2.createElement(type, {
                  is: props.is
                });
              } else {
                domElement = ownerDocument2.createElement(type);
                if (type === "select") {
                  var node = domElement;
                  if (props.multiple) {
                    node.multiple = true;
                  } else if (props.size) {
                    node.size = props.size;
                  }
                }
              }
            } else {
              domElement = ownerDocument2.createElementNS(namespaceURI, type);
            }
            {
              if (namespaceURI === HTML_NAMESPACE$1) {
                if (!isCustomComponentTag && Object.prototype.toString.call(domElement) === "[object HTMLUnknownElement]" && !Object.prototype.hasOwnProperty.call(warnedUnknownTags, type)) {
                  warnedUnknownTags[type] = true;
                  error("The tag <%s> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.", type);
                }
              }
            }
            return domElement;
          }
          function createTextNode(text, rootContainerElement) {
            return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(text);
          }
          function setInitialProperties(domElement, tag, rawProps, rootContainerElement) {
            var isCustomComponentTag = isCustomComponent(tag, rawProps);
            {
              validatePropertiesInDevelopment(tag, rawProps);
            }
            var props;
            switch (tag) {
              case "dialog":
                listenToNonDelegatedEvent("cancel", domElement);
                listenToNonDelegatedEvent("close", domElement);
                props = rawProps;
                break;
              case "iframe":
              case "object":
              case "embed":
                listenToNonDelegatedEvent("load", domElement);
                props = rawProps;
                break;
              case "video":
              case "audio":
                for (var i2 = 0; i2 < mediaEventTypes.length; i2++) {
                  listenToNonDelegatedEvent(mediaEventTypes[i2], domElement);
                }
                props = rawProps;
                break;
              case "source":
                listenToNonDelegatedEvent("error", domElement);
                props = rawProps;
                break;
              case "img":
              case "image":
              case "link":
                listenToNonDelegatedEvent("error", domElement);
                listenToNonDelegatedEvent("load", domElement);
                props = rawProps;
                break;
              case "details":
                listenToNonDelegatedEvent("toggle", domElement);
                props = rawProps;
                break;
              case "input":
                initWrapperState(domElement, rawProps);
                props = getHostProps(domElement, rawProps);
                listenToNonDelegatedEvent("invalid", domElement);
                break;
              case "option":
                validateProps(domElement, rawProps);
                props = getHostProps$1(domElement, rawProps);
                break;
              case "select":
                initWrapperState$1(domElement, rawProps);
                props = getHostProps$2(domElement, rawProps);
                listenToNonDelegatedEvent("invalid", domElement);
                break;
              case "textarea":
                initWrapperState$2(domElement, rawProps);
                props = getHostProps$3(domElement, rawProps);
                listenToNonDelegatedEvent("invalid", domElement);
                break;
              default:
                props = rawProps;
            }
            assertValidProps(tag, props);
            setInitialDOMProperties(tag, domElement, rootContainerElement, props, isCustomComponentTag);
            switch (tag) {
              case "input":
                track(domElement);
                postMountWrapper(domElement, rawProps, false);
                break;
              case "textarea":
                track(domElement);
                postMountWrapper$3(domElement);
                break;
              case "option":
                postMountWrapper$1(domElement, rawProps);
                break;
              case "select":
                postMountWrapper$2(domElement, rawProps);
                break;
              default:
                if (typeof props.onClick === "function") {
                  trapClickOnNonInteractiveElement(domElement);
                }
                break;
            }
          }
          function diffProperties(domElement, tag, lastRawProps, nextRawProps, rootContainerElement) {
            {
              validatePropertiesInDevelopment(tag, nextRawProps);
            }
            var updatePayload = null;
            var lastProps;
            var nextProps;
            switch (tag) {
              case "input":
                lastProps = getHostProps(domElement, lastRawProps);
                nextProps = getHostProps(domElement, nextRawProps);
                updatePayload = [];
                break;
              case "option":
                lastProps = getHostProps$1(domElement, lastRawProps);
                nextProps = getHostProps$1(domElement, nextRawProps);
                updatePayload = [];
                break;
              case "select":
                lastProps = getHostProps$2(domElement, lastRawProps);
                nextProps = getHostProps$2(domElement, nextRawProps);
                updatePayload = [];
                break;
              case "textarea":
                lastProps = getHostProps$3(domElement, lastRawProps);
                nextProps = getHostProps$3(domElement, nextRawProps);
                updatePayload = [];
                break;
              default:
                lastProps = lastRawProps;
                nextProps = nextRawProps;
                if (typeof lastProps.onClick !== "function" && typeof nextProps.onClick === "function") {
                  trapClickOnNonInteractiveElement(domElement);
                }
                break;
            }
            assertValidProps(tag, nextProps);
            var propKey;
            var styleName;
            var styleUpdates = null;
            for (propKey in lastProps) {
              if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
                continue;
              }
              if (propKey === STYLE) {
                var lastStyle = lastProps[propKey];
                for (styleName in lastStyle) {
                  if (lastStyle.hasOwnProperty(styleName)) {
                    if (!styleUpdates) {
                      styleUpdates = {};
                    }
                    styleUpdates[styleName] = "";
                  }
                }
              } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN)
                ;
              else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING)
                ;
              else if (propKey === AUTOFOCUS)
                ;
              else if (registrationNameDependencies.hasOwnProperty(propKey)) {
                if (!updatePayload) {
                  updatePayload = [];
                }
              } else {
                (updatePayload = updatePayload || []).push(propKey, null);
              }
            }
            for (propKey in nextProps) {
              var nextProp = nextProps[propKey];
              var lastProp = lastProps != null ? lastProps[propKey] : void 0;
              if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
                continue;
              }
              if (propKey === STYLE) {
                {
                  if (nextProp) {
                    Object.freeze(nextProp);
                  }
                }
                if (lastProp) {
                  for (styleName in lastProp) {
                    if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
                      if (!styleUpdates) {
                        styleUpdates = {};
                      }
                      styleUpdates[styleName] = "";
                    }
                  }
                  for (styleName in nextProp) {
                    if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
                      if (!styleUpdates) {
                        styleUpdates = {};
                      }
                      styleUpdates[styleName] = nextProp[styleName];
                    }
                  }
                } else {
                  if (!styleUpdates) {
                    if (!updatePayload) {
                      updatePayload = [];
                    }
                    updatePayload.push(propKey, styleUpdates);
                  }
                  styleUpdates = nextProp;
                }
              } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                var nextHtml = nextProp ? nextProp[HTML$1] : void 0;
                var lastHtml = lastProp ? lastProp[HTML$1] : void 0;
                if (nextHtml != null) {
                  if (lastHtml !== nextHtml) {
                    (updatePayload = updatePayload || []).push(propKey, nextHtml);
                  }
                }
              } else if (propKey === CHILDREN) {
                if (typeof nextProp === "string" || typeof nextProp === "number") {
                  (updatePayload = updatePayload || []).push(propKey, "" + nextProp);
                }
              } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING)
                ;
              else if (registrationNameDependencies.hasOwnProperty(propKey)) {
                if (nextProp != null) {
                  if (typeof nextProp !== "function") {
                    warnForInvalidEventListener(propKey, nextProp);
                  }
                  if (propKey === "onScroll") {
                    listenToNonDelegatedEvent("scroll", domElement);
                  }
                }
                if (!updatePayload && lastProp !== nextProp) {
                  updatePayload = [];
                }
              } else if (typeof nextProp === "object" && nextProp !== null && nextProp.$$typeof === REACT_OPAQUE_ID_TYPE) {
                nextProp.toString();
              } else {
                (updatePayload = updatePayload || []).push(propKey, nextProp);
              }
            }
            if (styleUpdates) {
              {
                validateShorthandPropertyCollisionInDev(styleUpdates, nextProps[STYLE]);
              }
              (updatePayload = updatePayload || []).push(STYLE, styleUpdates);
            }
            return updatePayload;
          }
          function updateProperties(domElement, updatePayload, tag, lastRawProps, nextRawProps) {
            if (tag === "input" && nextRawProps.type === "radio" && nextRawProps.name != null) {
              updateChecked(domElement, nextRawProps);
            }
            var wasCustomComponentTag = isCustomComponent(tag, lastRawProps);
            var isCustomComponentTag = isCustomComponent(tag, nextRawProps);
            updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag);
            switch (tag) {
              case "input":
                updateWrapper(domElement, nextRawProps);
                break;
              case "textarea":
                updateWrapper$1(domElement, nextRawProps);
                break;
              case "select":
                postUpdateWrapper(domElement, nextRawProps);
                break;
            }
          }
          function getPossibleStandardName(propName) {
            {
              var lowerCasedName = propName.toLowerCase();
              if (!possibleStandardNames.hasOwnProperty(lowerCasedName)) {
                return null;
              }
              return possibleStandardNames[lowerCasedName] || null;
            }
          }
          function diffHydratedProperties(domElement, tag, rawProps, parentNamespace, rootContainerElement) {
            var isCustomComponentTag;
            var extraAttributeNames;
            {
              suppressHydrationWarning = rawProps[SUPPRESS_HYDRATION_WARNING] === true;
              isCustomComponentTag = isCustomComponent(tag, rawProps);
              validatePropertiesInDevelopment(tag, rawProps);
            }
            switch (tag) {
              case "dialog":
                listenToNonDelegatedEvent("cancel", domElement);
                listenToNonDelegatedEvent("close", domElement);
                break;
              case "iframe":
              case "object":
              case "embed":
                listenToNonDelegatedEvent("load", domElement);
                break;
              case "video":
              case "audio":
                for (var i2 = 0; i2 < mediaEventTypes.length; i2++) {
                  listenToNonDelegatedEvent(mediaEventTypes[i2], domElement);
                }
                break;
              case "source":
                listenToNonDelegatedEvent("error", domElement);
                break;
              case "img":
              case "image":
              case "link":
                listenToNonDelegatedEvent("error", domElement);
                listenToNonDelegatedEvent("load", domElement);
                break;
              case "details":
                listenToNonDelegatedEvent("toggle", domElement);
                break;
              case "input":
                initWrapperState(domElement, rawProps);
                listenToNonDelegatedEvent("invalid", domElement);
                break;
              case "option":
                validateProps(domElement, rawProps);
                break;
              case "select":
                initWrapperState$1(domElement, rawProps);
                listenToNonDelegatedEvent("invalid", domElement);
                break;
              case "textarea":
                initWrapperState$2(domElement, rawProps);
                listenToNonDelegatedEvent("invalid", domElement);
                break;
            }
            assertValidProps(tag, rawProps);
            {
              extraAttributeNames = /* @__PURE__ */ new Set();
              var attributes = domElement.attributes;
              for (var _i = 0; _i < attributes.length; _i++) {
                var name = attributes[_i].name.toLowerCase();
                switch (name) {
                  case "data-reactroot":
                    break;
                  case "value":
                    break;
                  case "checked":
                    break;
                  case "selected":
                    break;
                  default:
                    extraAttributeNames.add(attributes[_i].name);
                }
              }
            }
            var updatePayload = null;
            for (var propKey in rawProps) {
              if (!rawProps.hasOwnProperty(propKey)) {
                continue;
              }
              var nextProp = rawProps[propKey];
              if (propKey === CHILDREN) {
                if (typeof nextProp === "string") {
                  if (domElement.textContent !== nextProp) {
                    if (!suppressHydrationWarning) {
                      warnForTextDifference(domElement.textContent, nextProp);
                    }
                    updatePayload = [CHILDREN, nextProp];
                  }
                } else if (typeof nextProp === "number") {
                  if (domElement.textContent !== "" + nextProp) {
                    if (!suppressHydrationWarning) {
                      warnForTextDifference(domElement.textContent, nextProp);
                    }
                    updatePayload = [CHILDREN, "" + nextProp];
                  }
                }
              } else if (registrationNameDependencies.hasOwnProperty(propKey)) {
                if (nextProp != null) {
                  if (typeof nextProp !== "function") {
                    warnForInvalidEventListener(propKey, nextProp);
                  }
                  if (propKey === "onScroll") {
                    listenToNonDelegatedEvent("scroll", domElement);
                  }
                }
              } else if (typeof isCustomComponentTag === "boolean") {
                var serverValue = void 0;
                var propertyInfo = getPropertyInfo(propKey);
                if (suppressHydrationWarning)
                  ;
                else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING || propKey === "value" || propKey === "checked" || propKey === "selected")
                  ;
                else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                  var serverHTML = domElement.innerHTML;
                  var nextHtml = nextProp ? nextProp[HTML$1] : void 0;
                  if (nextHtml != null) {
                    var expectedHTML = normalizeHTML(domElement, nextHtml);
                    if (expectedHTML !== serverHTML) {
                      warnForPropDifference(propKey, serverHTML, expectedHTML);
                    }
                  }
                } else if (propKey === STYLE) {
                  extraAttributeNames.delete(propKey);
                  if (canDiffStyleForHydrationWarning) {
                    var expectedStyle = createDangerousStringForStyles(nextProp);
                    serverValue = domElement.getAttribute("style");
                    if (expectedStyle !== serverValue) {
                      warnForPropDifference(propKey, serverValue, expectedStyle);
                    }
                  }
                } else if (isCustomComponentTag) {
                  extraAttributeNames.delete(propKey.toLowerCase());
                  serverValue = getValueForAttribute(domElement, propKey, nextProp);
                  if (nextProp !== serverValue) {
                    warnForPropDifference(propKey, serverValue, nextProp);
                  }
                } else if (!shouldIgnoreAttribute(propKey, propertyInfo, isCustomComponentTag) && !shouldRemoveAttribute(propKey, nextProp, propertyInfo, isCustomComponentTag)) {
                  var isMismatchDueToBadCasing = false;
                  if (propertyInfo !== null) {
                    extraAttributeNames.delete(propertyInfo.attributeName);
                    serverValue = getValueForProperty(domElement, propKey, nextProp, propertyInfo);
                  } else {
                    var ownNamespace = parentNamespace;
                    if (ownNamespace === HTML_NAMESPACE$1) {
                      ownNamespace = getIntrinsicNamespace(tag);
                    }
                    if (ownNamespace === HTML_NAMESPACE$1) {
                      extraAttributeNames.delete(propKey.toLowerCase());
                    } else {
                      var standardName = getPossibleStandardName(propKey);
                      if (standardName !== null && standardName !== propKey) {
                        isMismatchDueToBadCasing = true;
                        extraAttributeNames.delete(standardName);
                      }
                      extraAttributeNames.delete(propKey);
                    }
                    serverValue = getValueForAttribute(domElement, propKey, nextProp);
                  }
                  if (nextProp !== serverValue && !isMismatchDueToBadCasing) {
                    warnForPropDifference(propKey, serverValue, nextProp);
                  }
                }
              }
            }
            {
              if (extraAttributeNames.size > 0 && !suppressHydrationWarning) {
                warnForExtraAttributes(extraAttributeNames);
              }
            }
            switch (tag) {
              case "input":
                track(domElement);
                postMountWrapper(domElement, rawProps, true);
                break;
              case "textarea":
                track(domElement);
                postMountWrapper$3(domElement);
                break;
              case "select":
              case "option":
                break;
              default:
                if (typeof rawProps.onClick === "function") {
                  trapClickOnNonInteractiveElement(domElement);
                }
                break;
            }
            return updatePayload;
          }
          function diffHydratedText(textNode, text) {
            var isDifferent = textNode.nodeValue !== text;
            return isDifferent;
          }
          function warnForUnmatchedText(textNode, text) {
            {
              warnForTextDifference(textNode.nodeValue, text);
            }
          }
          function warnForDeletedHydratableElement(parentNode, child) {
            {
              if (didWarnInvalidHydration) {
                return;
              }
              didWarnInvalidHydration = true;
              error("Did not expect server HTML to contain a <%s> in <%s>.", child.nodeName.toLowerCase(), parentNode.nodeName.toLowerCase());
            }
          }
          function warnForDeletedHydratableText(parentNode, child) {
            {
              if (didWarnInvalidHydration) {
                return;
              }
              didWarnInvalidHydration = true;
              error('Did not expect server HTML to contain the text node "%s" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase());
            }
          }
          function warnForInsertedHydratedElement(parentNode, tag, props) {
            {
              if (didWarnInvalidHydration) {
                return;
              }
              didWarnInvalidHydration = true;
              error("Expected server HTML to contain a matching <%s> in <%s>.", tag, parentNode.nodeName.toLowerCase());
            }
          }
          function warnForInsertedHydratedText(parentNode, text) {
            {
              if (text === "") {
                return;
              }
              if (didWarnInvalidHydration) {
                return;
              }
              didWarnInvalidHydration = true;
              error('Expected server HTML to contain a matching text node for "%s" in <%s>.', text, parentNode.nodeName.toLowerCase());
            }
          }
          function restoreControlledState$3(domElement, tag, props) {
            switch (tag) {
              case "input":
                restoreControlledState(domElement, props);
                return;
              case "textarea":
                restoreControlledState$2(domElement, props);
                return;
              case "select":
                restoreControlledState$1(domElement, props);
                return;
            }
          }
          var validateDOMNesting = function() {
          };
          var updatedAncestorInfo = function() {
          };
          {
            var specialTags = ["address", "applet", "area", "article", "aside", "base", "basefont", "bgsound", "blockquote", "body", "br", "button", "caption", "center", "col", "colgroup", "dd", "details", "dir", "div", "dl", "dt", "embed", "fieldset", "figcaption", "figure", "footer", "form", "frame", "frameset", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "iframe", "img", "input", "isindex", "li", "link", "listing", "main", "marquee", "menu", "menuitem", "meta", "nav", "noembed", "noframes", "noscript", "object", "ol", "p", "param", "plaintext", "pre", "script", "section", "select", "source", "style", "summary", "table", "tbody", "td", "template", "textarea", "tfoot", "th", "thead", "title", "tr", "track", "ul", "wbr", "xmp"];
            var inScopeTags = [
              "applet",
              "caption",
              "html",
              "table",
              "td",
              "th",
              "marquee",
              "object",
              "template",
              "foreignObject",
              "desc",
              "title"
            ];
            var buttonScopeTags = inScopeTags.concat(["button"]);
            var impliedEndTags = ["dd", "dt", "li", "option", "optgroup", "p", "rp", "rt"];
            var emptyAncestorInfo = {
              current: null,
              formTag: null,
              aTagInScope: null,
              buttonTagInScope: null,
              nobrTagInScope: null,
              pTagInButtonScope: null,
              listItemTagAutoclosing: null,
              dlItemTagAutoclosing: null
            };
            updatedAncestorInfo = function(oldInfo, tag) {
              var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
              var info = {
                tag
              };
              if (inScopeTags.indexOf(tag) !== -1) {
                ancestorInfo.aTagInScope = null;
                ancestorInfo.buttonTagInScope = null;
                ancestorInfo.nobrTagInScope = null;
              }
              if (buttonScopeTags.indexOf(tag) !== -1) {
                ancestorInfo.pTagInButtonScope = null;
              }
              if (specialTags.indexOf(tag) !== -1 && tag !== "address" && tag !== "div" && tag !== "p") {
                ancestorInfo.listItemTagAutoclosing = null;
                ancestorInfo.dlItemTagAutoclosing = null;
              }
              ancestorInfo.current = info;
              if (tag === "form") {
                ancestorInfo.formTag = info;
              }
              if (tag === "a") {
                ancestorInfo.aTagInScope = info;
              }
              if (tag === "button") {
                ancestorInfo.buttonTagInScope = info;
              }
              if (tag === "nobr") {
                ancestorInfo.nobrTagInScope = info;
              }
              if (tag === "p") {
                ancestorInfo.pTagInButtonScope = info;
              }
              if (tag === "li") {
                ancestorInfo.listItemTagAutoclosing = info;
              }
              if (tag === "dd" || tag === "dt") {
                ancestorInfo.dlItemTagAutoclosing = info;
              }
              return ancestorInfo;
            };
            var isTagValidWithParent = function(tag, parentTag) {
              switch (parentTag) {
                case "select":
                  return tag === "option" || tag === "optgroup" || tag === "#text";
                case "optgroup":
                  return tag === "option" || tag === "#text";
                case "option":
                  return tag === "#text";
                case "tr":
                  return tag === "th" || tag === "td" || tag === "style" || tag === "script" || tag === "template";
                case "tbody":
                case "thead":
                case "tfoot":
                  return tag === "tr" || tag === "style" || tag === "script" || tag === "template";
                case "colgroup":
                  return tag === "col" || tag === "template";
                case "table":
                  return tag === "caption" || tag === "colgroup" || tag === "tbody" || tag === "tfoot" || tag === "thead" || tag === "style" || tag === "script" || tag === "template";
                case "head":
                  return tag === "base" || tag === "basefont" || tag === "bgsound" || tag === "link" || tag === "meta" || tag === "title" || tag === "noscript" || tag === "noframes" || tag === "style" || tag === "script" || tag === "template";
                case "html":
                  return tag === "head" || tag === "body" || tag === "frameset";
                case "frameset":
                  return tag === "frame";
                case "#document":
                  return tag === "html";
              }
              switch (tag) {
                case "h1":
                case "h2":
                case "h3":
                case "h4":
                case "h5":
                case "h6":
                  return parentTag !== "h1" && parentTag !== "h2" && parentTag !== "h3" && parentTag !== "h4" && parentTag !== "h5" && parentTag !== "h6";
                case "rp":
                case "rt":
                  return impliedEndTags.indexOf(parentTag) === -1;
                case "body":
                case "caption":
                case "col":
                case "colgroup":
                case "frameset":
                case "frame":
                case "head":
                case "html":
                case "tbody":
                case "td":
                case "tfoot":
                case "th":
                case "thead":
                case "tr":
                  return parentTag == null;
              }
              return true;
            };
            var findInvalidAncestorForTag = function(tag, ancestorInfo) {
              switch (tag) {
                case "address":
                case "article":
                case "aside":
                case "blockquote":
                case "center":
                case "details":
                case "dialog":
                case "dir":
                case "div":
                case "dl":
                case "fieldset":
                case "figcaption":
                case "figure":
                case "footer":
                case "header":
                case "hgroup":
                case "main":
                case "menu":
                case "nav":
                case "ol":
                case "p":
                case "section":
                case "summary":
                case "ul":
                case "pre":
                case "listing":
                case "table":
                case "hr":
                case "xmp":
                case "h1":
                case "h2":
                case "h3":
                case "h4":
                case "h5":
                case "h6":
                  return ancestorInfo.pTagInButtonScope;
                case "form":
                  return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;
                case "li":
                  return ancestorInfo.listItemTagAutoclosing;
                case "dd":
                case "dt":
                  return ancestorInfo.dlItemTagAutoclosing;
                case "button":
                  return ancestorInfo.buttonTagInScope;
                case "a":
                  return ancestorInfo.aTagInScope;
                case "nobr":
                  return ancestorInfo.nobrTagInScope;
              }
              return null;
            };
            var didWarn$1 = {};
            validateDOMNesting = function(childTag, childText, ancestorInfo) {
              ancestorInfo = ancestorInfo || emptyAncestorInfo;
              var parentInfo = ancestorInfo.current;
              var parentTag = parentInfo && parentInfo.tag;
              if (childText != null) {
                if (childTag != null) {
                  error("validateDOMNesting: when childText is passed, childTag should be null");
                }
                childTag = "#text";
              }
              var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
              var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
              var invalidParentOrAncestor = invalidParent || invalidAncestor;
              if (!invalidParentOrAncestor) {
                return;
              }
              var ancestorTag = invalidParentOrAncestor.tag;
              var warnKey = !!invalidParent + "|" + childTag + "|" + ancestorTag;
              if (didWarn$1[warnKey]) {
                return;
              }
              didWarn$1[warnKey] = true;
              var tagDisplayName = childTag;
              var whitespaceInfo = "";
              if (childTag === "#text") {
                if (/\S/.test(childText)) {
                  tagDisplayName = "Text nodes";
                } else {
                  tagDisplayName = "Whitespace text nodes";
                  whitespaceInfo = " Make sure you don't have any extra whitespace between tags on each line of your source code.";
                }
              } else {
                tagDisplayName = "<" + childTag + ">";
              }
              if (invalidParent) {
                var info = "";
                if (ancestorTag === "table" && childTag === "tr") {
                  info += " Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by the browser.";
                }
                error("validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s", tagDisplayName, ancestorTag, whitespaceInfo, info);
              } else {
                error("validateDOMNesting(...): %s cannot appear as a descendant of <%s>.", tagDisplayName, ancestorTag);
              }
            };
          }
          var SUPPRESS_HYDRATION_WARNING$1;
          {
            SUPPRESS_HYDRATION_WARNING$1 = "suppressHydrationWarning";
          }
          var SUSPENSE_START_DATA = "$";
          var SUSPENSE_END_DATA = "/$";
          var SUSPENSE_PENDING_START_DATA = "$?";
          var SUSPENSE_FALLBACK_START_DATA = "$!";
          var STYLE$1 = "style";
          var eventsEnabled = null;
          var selectionInformation = null;
          function shouldAutoFocusHostComponent(type, props) {
            switch (type) {
              case "button":
              case "input":
              case "select":
              case "textarea":
                return !!props.autoFocus;
            }
            return false;
          }
          function getRootHostContext(rootContainerInstance) {
            var type;
            var namespace;
            var nodeType = rootContainerInstance.nodeType;
            switch (nodeType) {
              case DOCUMENT_NODE:
              case DOCUMENT_FRAGMENT_NODE: {
                type = nodeType === DOCUMENT_NODE ? "#document" : "#fragment";
                var root2 = rootContainerInstance.documentElement;
                namespace = root2 ? root2.namespaceURI : getChildNamespace(null, "");
                break;
              }
              default: {
                var container = nodeType === COMMENT_NODE ? rootContainerInstance.parentNode : rootContainerInstance;
                var ownNamespace = container.namespaceURI || null;
                type = container.tagName;
                namespace = getChildNamespace(ownNamespace, type);
                break;
              }
            }
            {
              var validatedTag = type.toLowerCase();
              var ancestorInfo = updatedAncestorInfo(null, validatedTag);
              return {
                namespace,
                ancestorInfo
              };
            }
          }
          function getChildHostContext(parentHostContext, type, rootContainerInstance) {
            {
              var parentHostContextDev = parentHostContext;
              var namespace = getChildNamespace(parentHostContextDev.namespace, type);
              var ancestorInfo = updatedAncestorInfo(parentHostContextDev.ancestorInfo, type);
              return {
                namespace,
                ancestorInfo
              };
            }
          }
          function getPublicInstance(instance) {
            return instance;
          }
          function prepareForCommit(containerInfo) {
            eventsEnabled = isEnabled();
            selectionInformation = getSelectionInformation();
            var activeInstance = null;
            setEnabled(false);
            return activeInstance;
          }
          function resetAfterCommit(containerInfo) {
            restoreSelection(selectionInformation);
            setEnabled(eventsEnabled);
            eventsEnabled = null;
            selectionInformation = null;
          }
          function createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
            var parentNamespace;
            {
              var hostContextDev = hostContext;
              validateDOMNesting(type, null, hostContextDev.ancestorInfo);
              if (typeof props.children === "string" || typeof props.children === "number") {
                var string = "" + props.children;
                var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
                validateDOMNesting(null, string, ownAncestorInfo);
              }
              parentNamespace = hostContextDev.namespace;
            }
            var domElement = createElement3(type, props, rootContainerInstance, parentNamespace);
            precacheFiberNode(internalInstanceHandle, domElement);
            updateFiberProps(domElement, props);
            return domElement;
          }
          function appendInitialChild(parentInstance, child) {
            parentInstance.appendChild(child);
          }
          function finalizeInitialChildren(domElement, type, props, rootContainerInstance, hostContext) {
            setInitialProperties(domElement, type, props, rootContainerInstance);
            return shouldAutoFocusHostComponent(type, props);
          }
          function prepareUpdate(domElement, type, oldProps, newProps, rootContainerInstance, hostContext) {
            {
              var hostContextDev = hostContext;
              if (typeof newProps.children !== typeof oldProps.children && (typeof newProps.children === "string" || typeof newProps.children === "number")) {
                var string = "" + newProps.children;
                var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
                validateDOMNesting(null, string, ownAncestorInfo);
              }
            }
            return diffProperties(domElement, type, oldProps, newProps);
          }
          function shouldSetTextContent(type, props) {
            return type === "textarea" || type === "option" || type === "noscript" || typeof props.children === "string" || typeof props.children === "number" || typeof props.dangerouslySetInnerHTML === "object" && props.dangerouslySetInnerHTML !== null && props.dangerouslySetInnerHTML.__html != null;
          }
          function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
            {
              var hostContextDev = hostContext;
              validateDOMNesting(null, text, hostContextDev.ancestorInfo);
            }
            var textNode = createTextNode(text, rootContainerInstance);
            precacheFiberNode(internalInstanceHandle, textNode);
            return textNode;
          }
          var scheduleTimeout = typeof setTimeout === "function" ? setTimeout : void 0;
          var cancelTimeout = typeof clearTimeout === "function" ? clearTimeout : void 0;
          var noTimeout = -1;
          function commitMount(domElement, type, newProps, internalInstanceHandle) {
            if (shouldAutoFocusHostComponent(type, newProps)) {
              domElement.focus();
            }
          }
          function commitUpdate(domElement, updatePayload, type, oldProps, newProps, internalInstanceHandle) {
            updateFiberProps(domElement, newProps);
            updateProperties(domElement, updatePayload, type, oldProps, newProps);
          }
          function resetTextContent(domElement) {
            setTextContent(domElement, "");
          }
          function commitTextUpdate(textInstance, oldText, newText) {
            textInstance.nodeValue = newText;
          }
          function appendChild(parentInstance, child) {
            parentInstance.appendChild(child);
          }
          function appendChildToContainer(container, child) {
            var parentNode;
            if (container.nodeType === COMMENT_NODE) {
              parentNode = container.parentNode;
              parentNode.insertBefore(child, container);
            } else {
              parentNode = container;
              parentNode.appendChild(child);
            }
            var reactRootContainer = container._reactRootContainer;
            if ((reactRootContainer === null || reactRootContainer === void 0) && parentNode.onclick === null) {
              trapClickOnNonInteractiveElement(parentNode);
            }
          }
          function insertBefore(parentInstance, child, beforeChild) {
            parentInstance.insertBefore(child, beforeChild);
          }
          function insertInContainerBefore(container, child, beforeChild) {
            if (container.nodeType === COMMENT_NODE) {
              container.parentNode.insertBefore(child, beforeChild);
            } else {
              container.insertBefore(child, beforeChild);
            }
          }
          function removeChild(parentInstance, child) {
            parentInstance.removeChild(child);
          }
          function removeChildFromContainer(container, child) {
            if (container.nodeType === COMMENT_NODE) {
              container.parentNode.removeChild(child);
            } else {
              container.removeChild(child);
            }
          }
          function hideInstance(instance) {
            instance = instance;
            var style2 = instance.style;
            if (typeof style2.setProperty === "function") {
              style2.setProperty("display", "none", "important");
            } else {
              style2.display = "none";
            }
          }
          function hideTextInstance(textInstance) {
            textInstance.nodeValue = "";
          }
          function unhideInstance(instance, props) {
            instance = instance;
            var styleProp = props[STYLE$1];
            var display = styleProp !== void 0 && styleProp !== null && styleProp.hasOwnProperty("display") ? styleProp.display : null;
            instance.style.display = dangerousStyleValue("display", display);
          }
          function unhideTextInstance(textInstance, text) {
            textInstance.nodeValue = text;
          }
          function clearContainer(container) {
            if (container.nodeType === ELEMENT_NODE) {
              container.textContent = "";
            } else if (container.nodeType === DOCUMENT_NODE) {
              var body = container.body;
              if (body != null) {
                body.textContent = "";
              }
            }
          }
          function canHydrateInstance(instance, type, props) {
            if (instance.nodeType !== ELEMENT_NODE || type.toLowerCase() !== instance.nodeName.toLowerCase()) {
              return null;
            }
            return instance;
          }
          function canHydrateTextInstance(instance, text) {
            if (text === "" || instance.nodeType !== TEXT_NODE) {
              return null;
            }
            return instance;
          }
          function isSuspenseInstancePending(instance) {
            return instance.data === SUSPENSE_PENDING_START_DATA;
          }
          function isSuspenseInstanceFallback(instance) {
            return instance.data === SUSPENSE_FALLBACK_START_DATA;
          }
          function getNextHydratable(node) {
            for (; node != null; node = node.nextSibling) {
              var nodeType = node.nodeType;
              if (nodeType === ELEMENT_NODE || nodeType === TEXT_NODE) {
                break;
              }
            }
            return node;
          }
          function getNextHydratableSibling(instance) {
            return getNextHydratable(instance.nextSibling);
          }
          function getFirstHydratableChild(parentInstance) {
            return getNextHydratable(parentInstance.firstChild);
          }
          function hydrateInstance(instance, type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
            precacheFiberNode(internalInstanceHandle, instance);
            updateFiberProps(instance, props);
            var parentNamespace;
            {
              var hostContextDev = hostContext;
              parentNamespace = hostContextDev.namespace;
            }
            return diffHydratedProperties(instance, type, props, parentNamespace);
          }
          function hydrateTextInstance(textInstance, text, internalInstanceHandle) {
            precacheFiberNode(internalInstanceHandle, textInstance);
            return diffHydratedText(textInstance, text);
          }
          function getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance) {
            var node = suspenseInstance.nextSibling;
            var depth = 0;
            while (node) {
              if (node.nodeType === COMMENT_NODE) {
                var data = node.data;
                if (data === SUSPENSE_END_DATA) {
                  if (depth === 0) {
                    return getNextHydratableSibling(node);
                  } else {
                    depth--;
                  }
                } else if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) {
                  depth++;
                }
              }
              node = node.nextSibling;
            }
            return null;
          }
          function getParentSuspenseInstance(targetInstance) {
            var node = targetInstance.previousSibling;
            var depth = 0;
            while (node) {
              if (node.nodeType === COMMENT_NODE) {
                var data = node.data;
                if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) {
                  if (depth === 0) {
                    return node;
                  } else {
                    depth--;
                  }
                } else if (data === SUSPENSE_END_DATA) {
                  depth++;
                }
              }
              node = node.previousSibling;
            }
            return null;
          }
          function commitHydratedContainer(container) {
            retryIfBlockedOn(container);
          }
          function commitHydratedSuspenseInstance(suspenseInstance) {
            retryIfBlockedOn(suspenseInstance);
          }
          function didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, text) {
            {
              warnForUnmatchedText(textInstance, text);
            }
          }
          function didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, text) {
            if (parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
              warnForUnmatchedText(textInstance, text);
            }
          }
          function didNotHydrateContainerInstance(parentContainer, instance) {
            {
              if (instance.nodeType === ELEMENT_NODE) {
                warnForDeletedHydratableElement(parentContainer, instance);
              } else if (instance.nodeType === COMMENT_NODE)
                ;
              else {
                warnForDeletedHydratableText(parentContainer, instance);
              }
            }
          }
          function didNotHydrateInstance(parentType, parentProps, parentInstance, instance) {
            if (parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
              if (instance.nodeType === ELEMENT_NODE) {
                warnForDeletedHydratableElement(parentInstance, instance);
              } else if (instance.nodeType === COMMENT_NODE)
                ;
              else {
                warnForDeletedHydratableText(parentInstance, instance);
              }
            }
          }
          function didNotFindHydratableContainerInstance(parentContainer, type, props) {
            {
              warnForInsertedHydratedElement(parentContainer, type);
            }
          }
          function didNotFindHydratableContainerTextInstance(parentContainer, text) {
            {
              warnForInsertedHydratedText(parentContainer, text);
            }
          }
          function didNotFindHydratableInstance(parentType, parentProps, parentInstance, type, props) {
            if (parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
              warnForInsertedHydratedElement(parentInstance, type);
            }
          }
          function didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, text) {
            if (parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
              warnForInsertedHydratedText(parentInstance, text);
            }
          }
          function didNotFindHydratableSuspenseInstance(parentType, parentProps, parentInstance) {
            if (parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true)
              ;
          }
          var clientId = 0;
          function makeClientIdInDEV(warnOnAccessInDEV) {
            var id = "r:" + (clientId++).toString(36);
            return {
              toString: function() {
                warnOnAccessInDEV();
                return id;
              },
              valueOf: function() {
                warnOnAccessInDEV();
                return id;
              }
            };
          }
          function isOpaqueHydratingObject(value) {
            return value !== null && typeof value === "object" && value.$$typeof === REACT_OPAQUE_ID_TYPE;
          }
          function makeOpaqueHydratingObject(attemptToReadValue) {
            return {
              $$typeof: REACT_OPAQUE_ID_TYPE,
              toString: attemptToReadValue,
              valueOf: attemptToReadValue
            };
          }
          function preparePortalMount(portalInstance) {
            {
              listenToAllSupportedEvents(portalInstance);
            }
          }
          var randomKey = Math.random().toString(36).slice(2);
          var internalInstanceKey = "__reactFiber$" + randomKey;
          var internalPropsKey = "__reactProps$" + randomKey;
          var internalContainerInstanceKey = "__reactContainer$" + randomKey;
          var internalEventHandlersKey = "__reactEvents$" + randomKey;
          function precacheFiberNode(hostInst, node) {
            node[internalInstanceKey] = hostInst;
          }
          function markContainerAsRoot(hostRoot, node) {
            node[internalContainerInstanceKey] = hostRoot;
          }
          function unmarkContainerAsRoot(node) {
            node[internalContainerInstanceKey] = null;
          }
          function isContainerMarkedAsRoot(node) {
            return !!node[internalContainerInstanceKey];
          }
          function getClosestInstanceFromNode(targetNode) {
            var targetInst = targetNode[internalInstanceKey];
            if (targetInst) {
              return targetInst;
            }
            var parentNode = targetNode.parentNode;
            while (parentNode) {
              targetInst = parentNode[internalContainerInstanceKey] || parentNode[internalInstanceKey];
              if (targetInst) {
                var alternate = targetInst.alternate;
                if (targetInst.child !== null || alternate !== null && alternate.child !== null) {
                  var suspenseInstance = getParentSuspenseInstance(targetNode);
                  while (suspenseInstance !== null) {
                    var targetSuspenseInst = suspenseInstance[internalInstanceKey];
                    if (targetSuspenseInst) {
                      return targetSuspenseInst;
                    }
                    suspenseInstance = getParentSuspenseInstance(suspenseInstance);
                  }
                }
                return targetInst;
              }
              targetNode = parentNode;
              parentNode = targetNode.parentNode;
            }
            return null;
          }
          function getInstanceFromNode(node) {
            var inst = node[internalInstanceKey] || node[internalContainerInstanceKey];
            if (inst) {
              if (inst.tag === HostComponent || inst.tag === HostText || inst.tag === SuspenseComponent || inst.tag === HostRoot) {
                return inst;
              } else {
                return null;
              }
            }
            return null;
          }
          function getNodeFromInstance(inst) {
            if (inst.tag === HostComponent || inst.tag === HostText) {
              return inst.stateNode;
            }
            {
              {
                throw Error("getNodeFromInstance: Invalid argument.");
              }
            }
          }
          function getFiberCurrentPropsFromNode(node) {
            return node[internalPropsKey] || null;
          }
          function updateFiberProps(node, props) {
            node[internalPropsKey] = props;
          }
          function getEventListenerSet(node) {
            var elementListenerSet = node[internalEventHandlersKey];
            if (elementListenerSet === void 0) {
              elementListenerSet = node[internalEventHandlersKey] = /* @__PURE__ */ new Set();
            }
            return elementListenerSet;
          }
          var loggedTypeFailures = {};
          var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
          function setCurrentlyValidatingElement(element) {
            {
              if (element) {
                var owner = element._owner;
                var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
                ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
              } else {
                ReactDebugCurrentFrame$1.setExtraStackFrame(null);
              }
            }
          }
          function checkPropTypes(typeSpecs, values2, location, componentName, element) {
            {
              var has2 = Function.call.bind(Object.prototype.hasOwnProperty);
              for (var typeSpecName in typeSpecs) {
                if (has2(typeSpecs, typeSpecName)) {
                  var error$1 = void 0;
                  try {
                    if (typeof typeSpecs[typeSpecName] !== "function") {
                      var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                      err.name = "Invariant Violation";
                      throw err;
                    }
                    error$1 = typeSpecs[typeSpecName](values2, typeSpecName, componentName, location, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
                  } catch (ex) {
                    error$1 = ex;
                  }
                  if (error$1 && !(error$1 instanceof Error)) {
                    setCurrentlyValidatingElement(element);
                    error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location, typeSpecName, typeof error$1);
                    setCurrentlyValidatingElement(null);
                  }
                  if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                    loggedTypeFailures[error$1.message] = true;
                    setCurrentlyValidatingElement(element);
                    error("Failed %s type: %s", location, error$1.message);
                    setCurrentlyValidatingElement(null);
                  }
                }
              }
            }
          }
          var valueStack = [];
          var fiberStack;
          {
            fiberStack = [];
          }
          var index2 = -1;
          function createCursor(defaultValue) {
            return {
              current: defaultValue
            };
          }
          function pop(cursor2, fiber) {
            if (index2 < 0) {
              {
                error("Unexpected pop.");
              }
              return;
            }
            {
              if (fiber !== fiberStack[index2]) {
                error("Unexpected Fiber popped.");
              }
            }
            cursor2.current = valueStack[index2];
            valueStack[index2] = null;
            {
              fiberStack[index2] = null;
            }
            index2--;
          }
          function push(cursor2, value, fiber) {
            index2++;
            valueStack[index2] = cursor2.current;
            {
              fiberStack[index2] = fiber;
            }
            cursor2.current = value;
          }
          var warnedAboutMissingGetChildContext;
          {
            warnedAboutMissingGetChildContext = {};
          }
          var emptyContextObject = {};
          {
            Object.freeze(emptyContextObject);
          }
          var contextStackCursor = createCursor(emptyContextObject);
          var didPerformWorkStackCursor = createCursor(false);
          var previousContext = emptyContextObject;
          function getUnmaskedContext(workInProgress2, Component, didPushOwnContextIfProvider) {
            {
              if (didPushOwnContextIfProvider && isContextProvider(Component)) {
                return previousContext;
              }
              return contextStackCursor.current;
            }
          }
          function cacheContext(workInProgress2, unmaskedContext, maskedContext) {
            {
              var instance = workInProgress2.stateNode;
              instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;
              instance.__reactInternalMemoizedMaskedChildContext = maskedContext;
            }
          }
          function getMaskedContext(workInProgress2, unmaskedContext) {
            {
              var type = workInProgress2.type;
              var contextTypes = type.contextTypes;
              if (!contextTypes) {
                return emptyContextObject;
              }
              var instance = workInProgress2.stateNode;
              if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) {
                return instance.__reactInternalMemoizedMaskedChildContext;
              }
              var context = {};
              for (var key in contextTypes) {
                context[key] = unmaskedContext[key];
              }
              {
                var name = getComponentName(type) || "Unknown";
                checkPropTypes(contextTypes, context, "context", name);
              }
              if (instance) {
                cacheContext(workInProgress2, unmaskedContext, context);
              }
              return context;
            }
          }
          function hasContextChanged() {
            {
              return didPerformWorkStackCursor.current;
            }
          }
          function isContextProvider(type) {
            {
              var childContextTypes = type.childContextTypes;
              return childContextTypes !== null && childContextTypes !== void 0;
            }
          }
          function popContext(fiber) {
            {
              pop(didPerformWorkStackCursor, fiber);
              pop(contextStackCursor, fiber);
            }
          }
          function popTopLevelContextObject(fiber) {
            {
              pop(didPerformWorkStackCursor, fiber);
              pop(contextStackCursor, fiber);
            }
          }
          function pushTopLevelContextObject(fiber, context, didChange) {
            {
              if (!(contextStackCursor.current === emptyContextObject)) {
                {
                  throw Error("Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.");
                }
              }
              push(contextStackCursor, context, fiber);
              push(didPerformWorkStackCursor, didChange, fiber);
            }
          }
          function processChildContext(fiber, type, parentContext) {
            {
              var instance = fiber.stateNode;
              var childContextTypes = type.childContextTypes;
              if (typeof instance.getChildContext !== "function") {
                {
                  var componentName = getComponentName(type) || "Unknown";
                  if (!warnedAboutMissingGetChildContext[componentName]) {
                    warnedAboutMissingGetChildContext[componentName] = true;
                    error("%s.childContextTypes is specified but there is no getChildContext() method on the instance. You can either define getChildContext() on %s or remove childContextTypes from it.", componentName, componentName);
                  }
                }
                return parentContext;
              }
              var childContext = instance.getChildContext();
              for (var contextKey in childContext) {
                if (!(contextKey in childContextTypes)) {
                  {
                    throw Error((getComponentName(type) || "Unknown") + '.getChildContext(): key "' + contextKey + '" is not defined in childContextTypes.');
                  }
                }
              }
              {
                var name = getComponentName(type) || "Unknown";
                checkPropTypes(childContextTypes, childContext, "child context", name);
              }
              return _assign({}, parentContext, childContext);
            }
          }
          function pushContextProvider(workInProgress2) {
            {
              var instance = workInProgress2.stateNode;
              var memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject;
              previousContext = contextStackCursor.current;
              push(contextStackCursor, memoizedMergedChildContext, workInProgress2);
              push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress2);
              return true;
            }
          }
          function invalidateContextProvider(workInProgress2, type, didChange) {
            {
              var instance = workInProgress2.stateNode;
              if (!instance) {
                {
                  throw Error("Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.");
                }
              }
              if (didChange) {
                var mergedContext = processChildContext(workInProgress2, type, previousContext);
                instance.__reactInternalMemoizedMergedChildContext = mergedContext;
                pop(didPerformWorkStackCursor, workInProgress2);
                pop(contextStackCursor, workInProgress2);
                push(contextStackCursor, mergedContext, workInProgress2);
                push(didPerformWorkStackCursor, didChange, workInProgress2);
              } else {
                pop(didPerformWorkStackCursor, workInProgress2);
                push(didPerformWorkStackCursor, didChange, workInProgress2);
              }
            }
          }
          function findCurrentUnmaskedContext(fiber) {
            {
              if (!(isFiberMounted(fiber) && fiber.tag === ClassComponent)) {
                {
                  throw Error("Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.");
                }
              }
              var node = fiber;
              do {
                switch (node.tag) {
                  case HostRoot:
                    return node.stateNode.context;
                  case ClassComponent: {
                    var Component = node.type;
                    if (isContextProvider(Component)) {
                      return node.stateNode.__reactInternalMemoizedMergedChildContext;
                    }
                    break;
                  }
                }
                node = node.return;
              } while (node !== null);
              {
                {
                  throw Error("Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.");
                }
              }
            }
          }
          var LegacyRoot = 0;
          var BlockingRoot = 1;
          var ConcurrentRoot = 2;
          var rendererID = null;
          var injectedHook = null;
          var hasLoggedError = false;
          var isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined";
          function injectInternals(internals) {
            if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === "undefined") {
              return false;
            }
            var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
            if (hook.isDisabled) {
              return true;
            }
            if (!hook.supportsFiber) {
              {
                error("The installed version of React DevTools is too old and will not work with the current version of React. Please update React DevTools. https://reactjs.org/link/react-devtools");
              }
              return true;
            }
            try {
              rendererID = hook.inject(internals);
              injectedHook = hook;
            } catch (err) {
              {
                error("React instrumentation encountered an error: %s.", err);
              }
            }
            return true;
          }
          function onScheduleRoot(root2, children) {
            {
              if (injectedHook && typeof injectedHook.onScheduleFiberRoot === "function") {
                try {
                  injectedHook.onScheduleFiberRoot(rendererID, root2, children);
                } catch (err) {
                  if (!hasLoggedError) {
                    hasLoggedError = true;
                    error("React instrumentation encountered an error: %s", err);
                  }
                }
              }
            }
          }
          function onCommitRoot(root2, priorityLevel) {
            if (injectedHook && typeof injectedHook.onCommitFiberRoot === "function") {
              try {
                var didError = (root2.current.flags & DidCapture) === DidCapture;
                if (enableProfilerTimer) {
                  injectedHook.onCommitFiberRoot(rendererID, root2, priorityLevel, didError);
                } else {
                  injectedHook.onCommitFiberRoot(rendererID, root2, void 0, didError);
                }
              } catch (err) {
                {
                  if (!hasLoggedError) {
                    hasLoggedError = true;
                    error("React instrumentation encountered an error: %s", err);
                  }
                }
              }
            }
          }
          function onCommitUnmount(fiber) {
            if (injectedHook && typeof injectedHook.onCommitFiberUnmount === "function") {
              try {
                injectedHook.onCommitFiberUnmount(rendererID, fiber);
              } catch (err) {
                {
                  if (!hasLoggedError) {
                    hasLoggedError = true;
                    error("React instrumentation encountered an error: %s", err);
                  }
                }
              }
            }
          }
          var Scheduler_runWithPriority = Scheduler.unstable_runWithPriority, Scheduler_scheduleCallback = Scheduler.unstable_scheduleCallback, Scheduler_cancelCallback = Scheduler.unstable_cancelCallback, Scheduler_shouldYield = Scheduler.unstable_shouldYield, Scheduler_requestPaint = Scheduler.unstable_requestPaint, Scheduler_now$1 = Scheduler.unstable_now, Scheduler_getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel, Scheduler_ImmediatePriority = Scheduler.unstable_ImmediatePriority, Scheduler_UserBlockingPriority = Scheduler.unstable_UserBlockingPriority, Scheduler_NormalPriority = Scheduler.unstable_NormalPriority, Scheduler_LowPriority = Scheduler.unstable_LowPriority, Scheduler_IdlePriority = Scheduler.unstable_IdlePriority;
          {
            if (!(tracing.__interactionsRef != null && tracing.__interactionsRef.current != null)) {
              {
                throw Error("It is not supported to run the profiling version of a renderer (for example, `react-dom/profiling`) without also replacing the `scheduler/tracing` module with `scheduler/tracing-profiling`. Your bundler might have a setting for aliasing both modules. Learn more at https://reactjs.org/link/profiling");
              }
            }
          }
          var fakeCallbackNode = {};
          var ImmediatePriority$1 = 99;
          var UserBlockingPriority$2 = 98;
          var NormalPriority$1 = 97;
          var LowPriority$1 = 96;
          var IdlePriority$1 = 95;
          var NoPriority$1 = 90;
          var shouldYield = Scheduler_shouldYield;
          var requestPaint = Scheduler_requestPaint !== void 0 ? Scheduler_requestPaint : function() {
          };
          var syncQueue = null;
          var immediateQueueCallbackNode = null;
          var isFlushingSyncQueue = false;
          var initialTimeMs$1 = Scheduler_now$1();
          var now = initialTimeMs$1 < 1e4 ? Scheduler_now$1 : function() {
            return Scheduler_now$1() - initialTimeMs$1;
          };
          function getCurrentPriorityLevel() {
            switch (Scheduler_getCurrentPriorityLevel()) {
              case Scheduler_ImmediatePriority:
                return ImmediatePriority$1;
              case Scheduler_UserBlockingPriority:
                return UserBlockingPriority$2;
              case Scheduler_NormalPriority:
                return NormalPriority$1;
              case Scheduler_LowPriority:
                return LowPriority$1;
              case Scheduler_IdlePriority:
                return IdlePriority$1;
              default: {
                {
                  throw Error("Unknown priority level.");
                }
              }
            }
          }
          function reactPriorityToSchedulerPriority(reactPriorityLevel) {
            switch (reactPriorityLevel) {
              case ImmediatePriority$1:
                return Scheduler_ImmediatePriority;
              case UserBlockingPriority$2:
                return Scheduler_UserBlockingPriority;
              case NormalPriority$1:
                return Scheduler_NormalPriority;
              case LowPriority$1:
                return Scheduler_LowPriority;
              case IdlePriority$1:
                return Scheduler_IdlePriority;
              default: {
                {
                  throw Error("Unknown priority level.");
                }
              }
            }
          }
          function runWithPriority$1(reactPriorityLevel, fn) {
            var priorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
            return Scheduler_runWithPriority(priorityLevel, fn);
          }
          function scheduleCallback(reactPriorityLevel, callback, options2) {
            var priorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
            return Scheduler_scheduleCallback(priorityLevel, callback, options2);
          }
          function scheduleSyncCallback(callback) {
            if (syncQueue === null) {
              syncQueue = [callback];
              immediateQueueCallbackNode = Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueueImpl);
            } else {
              syncQueue.push(callback);
            }
            return fakeCallbackNode;
          }
          function cancelCallback(callbackNode) {
            if (callbackNode !== fakeCallbackNode) {
              Scheduler_cancelCallback(callbackNode);
            }
          }
          function flushSyncCallbackQueue() {
            if (immediateQueueCallbackNode !== null) {
              var node = immediateQueueCallbackNode;
              immediateQueueCallbackNode = null;
              Scheduler_cancelCallback(node);
            }
            flushSyncCallbackQueueImpl();
          }
          function flushSyncCallbackQueueImpl() {
            if (!isFlushingSyncQueue && syncQueue !== null) {
              isFlushingSyncQueue = true;
              var i2 = 0;
              {
                try {
                  var _isSync2 = true;
                  var _queue = syncQueue;
                  runWithPriority$1(ImmediatePriority$1, function() {
                    for (; i2 < _queue.length; i2++) {
                      var callback = _queue[i2];
                      do {
                        callback = callback(_isSync2);
                      } while (callback !== null);
                    }
                  });
                  syncQueue = null;
                } catch (error2) {
                  if (syncQueue !== null) {
                    syncQueue = syncQueue.slice(i2 + 1);
                  }
                  Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueue);
                  throw error2;
                } finally {
                  isFlushingSyncQueue = false;
                }
              }
            }
          }
          var ReactVersion = "17.0.2";
          var NoMode = 0;
          var StrictMode = 1;
          var BlockingMode = 2;
          var ConcurrentMode = 4;
          var ProfileMode = 8;
          var DebugTracingMode = 16;
          var ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig;
          var NoTransition = 0;
          function requestCurrentTransition() {
            return ReactCurrentBatchConfig.transition;
          }
          var ReactStrictModeWarnings = {
            recordUnsafeLifecycleWarnings: function(fiber, instance) {
            },
            flushPendingUnsafeLifecycleWarnings: function() {
            },
            recordLegacyContextWarning: function(fiber, instance) {
            },
            flushLegacyContextWarning: function() {
            },
            discardPendingWarnings: function() {
            }
          };
          {
            var findStrictRoot = function(fiber) {
              var maybeStrictRoot = null;
              var node = fiber;
              while (node !== null) {
                if (node.mode & StrictMode) {
                  maybeStrictRoot = node;
                }
                node = node.return;
              }
              return maybeStrictRoot;
            };
            var setToSortedString = function(set2) {
              var array = [];
              set2.forEach(function(value) {
                array.push(value);
              });
              return array.sort().join(", ");
            };
            var pendingComponentWillMountWarnings = [];
            var pendingUNSAFE_ComponentWillMountWarnings = [];
            var pendingComponentWillReceivePropsWarnings = [];
            var pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
            var pendingComponentWillUpdateWarnings = [];
            var pendingUNSAFE_ComponentWillUpdateWarnings = [];
            var didWarnAboutUnsafeLifecycles = /* @__PURE__ */ new Set();
            ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function(fiber, instance) {
              if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {
                return;
              }
              if (typeof instance.componentWillMount === "function" && instance.componentWillMount.__suppressDeprecationWarning !== true) {
                pendingComponentWillMountWarnings.push(fiber);
              }
              if (fiber.mode & StrictMode && typeof instance.UNSAFE_componentWillMount === "function") {
                pendingUNSAFE_ComponentWillMountWarnings.push(fiber);
              }
              if (typeof instance.componentWillReceiveProps === "function" && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
                pendingComponentWillReceivePropsWarnings.push(fiber);
              }
              if (fiber.mode & StrictMode && typeof instance.UNSAFE_componentWillReceiveProps === "function") {
                pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);
              }
              if (typeof instance.componentWillUpdate === "function" && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
                pendingComponentWillUpdateWarnings.push(fiber);
              }
              if (fiber.mode & StrictMode && typeof instance.UNSAFE_componentWillUpdate === "function") {
                pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);
              }
            };
            ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function() {
              var componentWillMountUniqueNames = /* @__PURE__ */ new Set();
              if (pendingComponentWillMountWarnings.length > 0) {
                pendingComponentWillMountWarnings.forEach(function(fiber) {
                  componentWillMountUniqueNames.add(getComponentName(fiber.type) || "Component");
                  didWarnAboutUnsafeLifecycles.add(fiber.type);
                });
                pendingComponentWillMountWarnings = [];
              }
              var UNSAFE_componentWillMountUniqueNames = /* @__PURE__ */ new Set();
              if (pendingUNSAFE_ComponentWillMountWarnings.length > 0) {
                pendingUNSAFE_ComponentWillMountWarnings.forEach(function(fiber) {
                  UNSAFE_componentWillMountUniqueNames.add(getComponentName(fiber.type) || "Component");
                  didWarnAboutUnsafeLifecycles.add(fiber.type);
                });
                pendingUNSAFE_ComponentWillMountWarnings = [];
              }
              var componentWillReceivePropsUniqueNames = /* @__PURE__ */ new Set();
              if (pendingComponentWillReceivePropsWarnings.length > 0) {
                pendingComponentWillReceivePropsWarnings.forEach(function(fiber) {
                  componentWillReceivePropsUniqueNames.add(getComponentName(fiber.type) || "Component");
                  didWarnAboutUnsafeLifecycles.add(fiber.type);
                });
                pendingComponentWillReceivePropsWarnings = [];
              }
              var UNSAFE_componentWillReceivePropsUniqueNames = /* @__PURE__ */ new Set();
              if (pendingUNSAFE_ComponentWillReceivePropsWarnings.length > 0) {
                pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(function(fiber) {
                  UNSAFE_componentWillReceivePropsUniqueNames.add(getComponentName(fiber.type) || "Component");
                  didWarnAboutUnsafeLifecycles.add(fiber.type);
                });
                pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
              }
              var componentWillUpdateUniqueNames = /* @__PURE__ */ new Set();
              if (pendingComponentWillUpdateWarnings.length > 0) {
                pendingComponentWillUpdateWarnings.forEach(function(fiber) {
                  componentWillUpdateUniqueNames.add(getComponentName(fiber.type) || "Component");
                  didWarnAboutUnsafeLifecycles.add(fiber.type);
                });
                pendingComponentWillUpdateWarnings = [];
              }
              var UNSAFE_componentWillUpdateUniqueNames = /* @__PURE__ */ new Set();
              if (pendingUNSAFE_ComponentWillUpdateWarnings.length > 0) {
                pendingUNSAFE_ComponentWillUpdateWarnings.forEach(function(fiber) {
                  UNSAFE_componentWillUpdateUniqueNames.add(getComponentName(fiber.type) || "Component");
                  didWarnAboutUnsafeLifecycles.add(fiber.type);
                });
                pendingUNSAFE_ComponentWillUpdateWarnings = [];
              }
              if (UNSAFE_componentWillMountUniqueNames.size > 0) {
                var sortedNames = setToSortedString(UNSAFE_componentWillMountUniqueNames);
                error("Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\n\nPlease update the following components: %s", sortedNames);
              }
              if (UNSAFE_componentWillReceivePropsUniqueNames.size > 0) {
                var _sortedNames = setToSortedString(UNSAFE_componentWillReceivePropsUniqueNames);
                error("Using UNSAFE_componentWillReceiveProps in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\n\nPlease update the following components: %s", _sortedNames);
              }
              if (UNSAFE_componentWillUpdateUniqueNames.size > 0) {
                var _sortedNames2 = setToSortedString(UNSAFE_componentWillUpdateUniqueNames);
                error("Using UNSAFE_componentWillUpdate in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n\nPlease update the following components: %s", _sortedNames2);
              }
              if (componentWillMountUniqueNames.size > 0) {
                var _sortedNames3 = setToSortedString(componentWillMountUniqueNames);
                warn("componentWillMount has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\n* Rename componentWillMount to UNSAFE_componentWillMount to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames3);
              }
              if (componentWillReceivePropsUniqueNames.size > 0) {
                var _sortedNames4 = setToSortedString(componentWillReceivePropsUniqueNames);
                warn("componentWillReceiveProps has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\n* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames4);
              }
              if (componentWillUpdateUniqueNames.size > 0) {
                var _sortedNames5 = setToSortedString(componentWillUpdateUniqueNames);
                warn("componentWillUpdate has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames5);
              }
            };
            var pendingLegacyContextWarning = /* @__PURE__ */ new Map();
            var didWarnAboutLegacyContext = /* @__PURE__ */ new Set();
            ReactStrictModeWarnings.recordLegacyContextWarning = function(fiber, instance) {
              var strictRoot = findStrictRoot(fiber);
              if (strictRoot === null) {
                error("Expected to find a StrictMode component in a strict mode tree. This error is likely caused by a bug in React. Please file an issue.");
                return;
              }
              if (didWarnAboutLegacyContext.has(fiber.type)) {
                return;
              }
              var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);
              if (fiber.type.contextTypes != null || fiber.type.childContextTypes != null || instance !== null && typeof instance.getChildContext === "function") {
                if (warningsForRoot === void 0) {
                  warningsForRoot = [];
                  pendingLegacyContextWarning.set(strictRoot, warningsForRoot);
                }
                warningsForRoot.push(fiber);
              }
            };
            ReactStrictModeWarnings.flushLegacyContextWarning = function() {
              pendingLegacyContextWarning.forEach(function(fiberArray, strictRoot) {
                if (fiberArray.length === 0) {
                  return;
                }
                var firstFiber = fiberArray[0];
                var uniqueNames = /* @__PURE__ */ new Set();
                fiberArray.forEach(function(fiber) {
                  uniqueNames.add(getComponentName(fiber.type) || "Component");
                  didWarnAboutLegacyContext.add(fiber.type);
                });
                var sortedNames = setToSortedString(uniqueNames);
                try {
                  setCurrentFiber(firstFiber);
                  error("Legacy context API has been detected within a strict-mode tree.\n\nThe old API will be supported in all 16.x releases, but applications using it should migrate to the new version.\n\nPlease update the following components: %s\n\nLearn more about this warning here: https://reactjs.org/link/legacy-context", sortedNames);
                } finally {
                  resetCurrentFiber();
                }
              });
            };
            ReactStrictModeWarnings.discardPendingWarnings = function() {
              pendingComponentWillMountWarnings = [];
              pendingUNSAFE_ComponentWillMountWarnings = [];
              pendingComponentWillReceivePropsWarnings = [];
              pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
              pendingComponentWillUpdateWarnings = [];
              pendingUNSAFE_ComponentWillUpdateWarnings = [];
              pendingLegacyContextWarning = /* @__PURE__ */ new Map();
            };
          }
          function resolveDefaultProps(Component, baseProps) {
            if (Component && Component.defaultProps) {
              var props = _assign({}, baseProps);
              var defaultProps2 = Component.defaultProps;
              for (var propName in defaultProps2) {
                if (props[propName] === void 0) {
                  props[propName] = defaultProps2[propName];
                }
              }
              return props;
            }
            return baseProps;
          }
          var MAX_SIGNED_31_BIT_INT = 1073741823;
          var valueCursor = createCursor(null);
          var rendererSigil;
          {
            rendererSigil = {};
          }
          var currentlyRenderingFiber = null;
          var lastContextDependency = null;
          var lastContextWithAllBitsObserved = null;
          var isDisallowedContextReadInDEV = false;
          function resetContextDependencies() {
            currentlyRenderingFiber = null;
            lastContextDependency = null;
            lastContextWithAllBitsObserved = null;
            {
              isDisallowedContextReadInDEV = false;
            }
          }
          function enterDisallowedContextReadInDEV() {
            {
              isDisallowedContextReadInDEV = true;
            }
          }
          function exitDisallowedContextReadInDEV() {
            {
              isDisallowedContextReadInDEV = false;
            }
          }
          function pushProvider(providerFiber, nextValue) {
            var context = providerFiber.type._context;
            {
              push(valueCursor, context._currentValue, providerFiber);
              context._currentValue = nextValue;
              {
                if (context._currentRenderer !== void 0 && context._currentRenderer !== null && context._currentRenderer !== rendererSigil) {
                  error("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.");
                }
                context._currentRenderer = rendererSigil;
              }
            }
          }
          function popProvider(providerFiber) {
            var currentValue = valueCursor.current;
            pop(valueCursor, providerFiber);
            var context = providerFiber.type._context;
            {
              context._currentValue = currentValue;
            }
          }
          function calculateChangedBits(context, newValue, oldValue) {
            if (objectIs(oldValue, newValue)) {
              return 0;
            } else {
              var changedBits = typeof context._calculateChangedBits === "function" ? context._calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;
              {
                if ((changedBits & MAX_SIGNED_31_BIT_INT) !== changedBits) {
                  error("calculateChangedBits: Expected the return value to be a 31-bit integer. Instead received: %s", changedBits);
                }
              }
              return changedBits | 0;
            }
          }
          function scheduleWorkOnParentPath(parent, renderLanes2) {
            var node = parent;
            while (node !== null) {
              var alternate = node.alternate;
              if (!isSubsetOfLanes(node.childLanes, renderLanes2)) {
                node.childLanes = mergeLanes(node.childLanes, renderLanes2);
                if (alternate !== null) {
                  alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes2);
                }
              } else if (alternate !== null && !isSubsetOfLanes(alternate.childLanes, renderLanes2)) {
                alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes2);
              } else {
                break;
              }
              node = node.return;
            }
          }
          function propagateContextChange(workInProgress2, context, changedBits, renderLanes2) {
            var fiber = workInProgress2.child;
            if (fiber !== null) {
              fiber.return = workInProgress2;
            }
            while (fiber !== null) {
              var nextFiber = void 0;
              var list = fiber.dependencies;
              if (list !== null) {
                nextFiber = fiber.child;
                var dependency = list.firstContext;
                while (dependency !== null) {
                  if (dependency.context === context && (dependency.observedBits & changedBits) !== 0) {
                    if (fiber.tag === ClassComponent) {
                      var update = createUpdate(NoTimestamp, pickArbitraryLane(renderLanes2));
                      update.tag = ForceUpdate;
                      enqueueUpdate(fiber, update);
                    }
                    fiber.lanes = mergeLanes(fiber.lanes, renderLanes2);
                    var alternate = fiber.alternate;
                    if (alternate !== null) {
                      alternate.lanes = mergeLanes(alternate.lanes, renderLanes2);
                    }
                    scheduleWorkOnParentPath(fiber.return, renderLanes2);
                    list.lanes = mergeLanes(list.lanes, renderLanes2);
                    break;
                  }
                  dependency = dependency.next;
                }
              } else if (fiber.tag === ContextProvider) {
                nextFiber = fiber.type === workInProgress2.type ? null : fiber.child;
              } else {
                nextFiber = fiber.child;
              }
              if (nextFiber !== null) {
                nextFiber.return = fiber;
              } else {
                nextFiber = fiber;
                while (nextFiber !== null) {
                  if (nextFiber === workInProgress2) {
                    nextFiber = null;
                    break;
                  }
                  var sibling = nextFiber.sibling;
                  if (sibling !== null) {
                    sibling.return = nextFiber.return;
                    nextFiber = sibling;
                    break;
                  }
                  nextFiber = nextFiber.return;
                }
              }
              fiber = nextFiber;
            }
          }
          function prepareToReadContext(workInProgress2, renderLanes2) {
            currentlyRenderingFiber = workInProgress2;
            lastContextDependency = null;
            lastContextWithAllBitsObserved = null;
            var dependencies = workInProgress2.dependencies;
            if (dependencies !== null) {
              var firstContext = dependencies.firstContext;
              if (firstContext !== null) {
                if (includesSomeLane(dependencies.lanes, renderLanes2)) {
                  markWorkInProgressReceivedUpdate();
                }
                dependencies.firstContext = null;
              }
            }
          }
          function readContext(context, observedBits) {
            {
              if (isDisallowedContextReadInDEV) {
                error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
              }
            }
            if (lastContextWithAllBitsObserved === context)
              ;
            else if (observedBits === false || observedBits === 0)
              ;
            else {
              var resolvedObservedBits;
              if (typeof observedBits !== "number" || observedBits === MAX_SIGNED_31_BIT_INT) {
                lastContextWithAllBitsObserved = context;
                resolvedObservedBits = MAX_SIGNED_31_BIT_INT;
              } else {
                resolvedObservedBits = observedBits;
              }
              var contextItem = {
                context,
                observedBits: resolvedObservedBits,
                next: null
              };
              if (lastContextDependency === null) {
                if (!(currentlyRenderingFiber !== null)) {
                  {
                    throw Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
                  }
                }
                lastContextDependency = contextItem;
                currentlyRenderingFiber.dependencies = {
                  lanes: NoLanes,
                  firstContext: contextItem,
                  responders: null
                };
              } else {
                lastContextDependency = lastContextDependency.next = contextItem;
              }
            }
            return context._currentValue;
          }
          var UpdateState = 0;
          var ReplaceState = 1;
          var ForceUpdate = 2;
          var CaptureUpdate = 3;
          var hasForceUpdate = false;
          var didWarnUpdateInsideUpdate;
          var currentlyProcessingQueue;
          {
            didWarnUpdateInsideUpdate = false;
            currentlyProcessingQueue = null;
          }
          function initializeUpdateQueue(fiber) {
            var queue = {
              baseState: fiber.memoizedState,
              firstBaseUpdate: null,
              lastBaseUpdate: null,
              shared: {
                pending: null
              },
              effects: null
            };
            fiber.updateQueue = queue;
          }
          function cloneUpdateQueue(current2, workInProgress2) {
            var queue = workInProgress2.updateQueue;
            var currentQueue = current2.updateQueue;
            if (queue === currentQueue) {
              var clone = {
                baseState: currentQueue.baseState,
                firstBaseUpdate: currentQueue.firstBaseUpdate,
                lastBaseUpdate: currentQueue.lastBaseUpdate,
                shared: currentQueue.shared,
                effects: currentQueue.effects
              };
              workInProgress2.updateQueue = clone;
            }
          }
          function createUpdate(eventTime, lane) {
            var update = {
              eventTime,
              lane,
              tag: UpdateState,
              payload: null,
              callback: null,
              next: null
            };
            return update;
          }
          function enqueueUpdate(fiber, update) {
            var updateQueue = fiber.updateQueue;
            if (updateQueue === null) {
              return;
            }
            var sharedQueue = updateQueue.shared;
            var pending = sharedQueue.pending;
            if (pending === null) {
              update.next = update;
            } else {
              update.next = pending.next;
              pending.next = update;
            }
            sharedQueue.pending = update;
            {
              if (currentlyProcessingQueue === sharedQueue && !didWarnUpdateInsideUpdate) {
                error("An update (setState, replaceState, or forceUpdate) was scheduled from inside an update function. Update functions should be pure, with zero side-effects. Consider using componentDidUpdate or a callback.");
                didWarnUpdateInsideUpdate = true;
              }
            }
          }
          function enqueueCapturedUpdate(workInProgress2, capturedUpdate) {
            var queue = workInProgress2.updateQueue;
            var current2 = workInProgress2.alternate;
            if (current2 !== null) {
              var currentQueue = current2.updateQueue;
              if (queue === currentQueue) {
                var newFirst = null;
                var newLast = null;
                var firstBaseUpdate = queue.firstBaseUpdate;
                if (firstBaseUpdate !== null) {
                  var update = firstBaseUpdate;
                  do {
                    var clone = {
                      eventTime: update.eventTime,
                      lane: update.lane,
                      tag: update.tag,
                      payload: update.payload,
                      callback: update.callback,
                      next: null
                    };
                    if (newLast === null) {
                      newFirst = newLast = clone;
                    } else {
                      newLast.next = clone;
                      newLast = clone;
                    }
                    update = update.next;
                  } while (update !== null);
                  if (newLast === null) {
                    newFirst = newLast = capturedUpdate;
                  } else {
                    newLast.next = capturedUpdate;
                    newLast = capturedUpdate;
                  }
                } else {
                  newFirst = newLast = capturedUpdate;
                }
                queue = {
                  baseState: currentQueue.baseState,
                  firstBaseUpdate: newFirst,
                  lastBaseUpdate: newLast,
                  shared: currentQueue.shared,
                  effects: currentQueue.effects
                };
                workInProgress2.updateQueue = queue;
                return;
              }
            }
            var lastBaseUpdate = queue.lastBaseUpdate;
            if (lastBaseUpdate === null) {
              queue.firstBaseUpdate = capturedUpdate;
            } else {
              lastBaseUpdate.next = capturedUpdate;
            }
            queue.lastBaseUpdate = capturedUpdate;
          }
          function getStateFromUpdate(workInProgress2, queue, update, prevState, nextProps, instance) {
            switch (update.tag) {
              case ReplaceState: {
                var payload = update.payload;
                if (typeof payload === "function") {
                  {
                    enterDisallowedContextReadInDEV();
                  }
                  var nextState = payload.call(instance, prevState, nextProps);
                  {
                    if (workInProgress2.mode & StrictMode) {
                      disableLogs();
                      try {
                        payload.call(instance, prevState, nextProps);
                      } finally {
                        reenableLogs();
                      }
                    }
                    exitDisallowedContextReadInDEV();
                  }
                  return nextState;
                }
                return payload;
              }
              case CaptureUpdate: {
                workInProgress2.flags = workInProgress2.flags & ~ShouldCapture | DidCapture;
              }
              case UpdateState: {
                var _payload = update.payload;
                var partialState;
                if (typeof _payload === "function") {
                  {
                    enterDisallowedContextReadInDEV();
                  }
                  partialState = _payload.call(instance, prevState, nextProps);
                  {
                    if (workInProgress2.mode & StrictMode) {
                      disableLogs();
                      try {
                        _payload.call(instance, prevState, nextProps);
                      } finally {
                        reenableLogs();
                      }
                    }
                    exitDisallowedContextReadInDEV();
                  }
                } else {
                  partialState = _payload;
                }
                if (partialState === null || partialState === void 0) {
                  return prevState;
                }
                return _assign({}, prevState, partialState);
              }
              case ForceUpdate: {
                hasForceUpdate = true;
                return prevState;
              }
            }
            return prevState;
          }
          function processUpdateQueue(workInProgress2, props, instance, renderLanes2) {
            var queue = workInProgress2.updateQueue;
            hasForceUpdate = false;
            {
              currentlyProcessingQueue = queue.shared;
            }
            var firstBaseUpdate = queue.firstBaseUpdate;
            var lastBaseUpdate = queue.lastBaseUpdate;
            var pendingQueue = queue.shared.pending;
            if (pendingQueue !== null) {
              queue.shared.pending = null;
              var lastPendingUpdate = pendingQueue;
              var firstPendingUpdate = lastPendingUpdate.next;
              lastPendingUpdate.next = null;
              if (lastBaseUpdate === null) {
                firstBaseUpdate = firstPendingUpdate;
              } else {
                lastBaseUpdate.next = firstPendingUpdate;
              }
              lastBaseUpdate = lastPendingUpdate;
              var current2 = workInProgress2.alternate;
              if (current2 !== null) {
                var currentQueue = current2.updateQueue;
                var currentLastBaseUpdate = currentQueue.lastBaseUpdate;
                if (currentLastBaseUpdate !== lastBaseUpdate) {
                  if (currentLastBaseUpdate === null) {
                    currentQueue.firstBaseUpdate = firstPendingUpdate;
                  } else {
                    currentLastBaseUpdate.next = firstPendingUpdate;
                  }
                  currentQueue.lastBaseUpdate = lastPendingUpdate;
                }
              }
            }
            if (firstBaseUpdate !== null) {
              var newState = queue.baseState;
              var newLanes = NoLanes;
              var newBaseState = null;
              var newFirstBaseUpdate = null;
              var newLastBaseUpdate = null;
              var update = firstBaseUpdate;
              do {
                var updateLane = update.lane;
                var updateEventTime = update.eventTime;
                if (!isSubsetOfLanes(renderLanes2, updateLane)) {
                  var clone = {
                    eventTime: updateEventTime,
                    lane: updateLane,
                    tag: update.tag,
                    payload: update.payload,
                    callback: update.callback,
                    next: null
                  };
                  if (newLastBaseUpdate === null) {
                    newFirstBaseUpdate = newLastBaseUpdate = clone;
                    newBaseState = newState;
                  } else {
                    newLastBaseUpdate = newLastBaseUpdate.next = clone;
                  }
                  newLanes = mergeLanes(newLanes, updateLane);
                } else {
                  if (newLastBaseUpdate !== null) {
                    var _clone = {
                      eventTime: updateEventTime,
                      lane: NoLane,
                      tag: update.tag,
                      payload: update.payload,
                      callback: update.callback,
                      next: null
                    };
                    newLastBaseUpdate = newLastBaseUpdate.next = _clone;
                  }
                  newState = getStateFromUpdate(workInProgress2, queue, update, newState, props, instance);
                  var callback = update.callback;
                  if (callback !== null) {
                    workInProgress2.flags |= Callback;
                    var effects = queue.effects;
                    if (effects === null) {
                      queue.effects = [update];
                    } else {
                      effects.push(update);
                    }
                  }
                }
                update = update.next;
                if (update === null) {
                  pendingQueue = queue.shared.pending;
                  if (pendingQueue === null) {
                    break;
                  } else {
                    var _lastPendingUpdate = pendingQueue;
                    var _firstPendingUpdate = _lastPendingUpdate.next;
                    _lastPendingUpdate.next = null;
                    update = _firstPendingUpdate;
                    queue.lastBaseUpdate = _lastPendingUpdate;
                    queue.shared.pending = null;
                  }
                }
              } while (true);
              if (newLastBaseUpdate === null) {
                newBaseState = newState;
              }
              queue.baseState = newBaseState;
              queue.firstBaseUpdate = newFirstBaseUpdate;
              queue.lastBaseUpdate = newLastBaseUpdate;
              markSkippedUpdateLanes(newLanes);
              workInProgress2.lanes = newLanes;
              workInProgress2.memoizedState = newState;
            }
            {
              currentlyProcessingQueue = null;
            }
          }
          function callCallback(callback, context) {
            if (!(typeof callback === "function")) {
              {
                throw Error("Invalid argument passed as callback. Expected a function. Instead received: " + callback);
              }
            }
            callback.call(context);
          }
          function resetHasForceUpdateBeforeProcessing() {
            hasForceUpdate = false;
          }
          function checkHasForceUpdateAfterProcessing() {
            return hasForceUpdate;
          }
          function commitUpdateQueue(finishedWork, finishedQueue, instance) {
            var effects = finishedQueue.effects;
            finishedQueue.effects = null;
            if (effects !== null) {
              for (var i2 = 0; i2 < effects.length; i2++) {
                var effect = effects[i2];
                var callback = effect.callback;
                if (callback !== null) {
                  effect.callback = null;
                  callCallback(callback, instance);
                }
              }
            }
          }
          var fakeInternalInstance = {};
          var isArray = Array.isArray;
          var emptyRefsObject = new React40.Component().refs;
          var didWarnAboutStateAssignmentForComponent;
          var didWarnAboutUninitializedState;
          var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;
          var didWarnAboutLegacyLifecyclesAndDerivedState;
          var didWarnAboutUndefinedDerivedState;
          var warnOnUndefinedDerivedState;
          var warnOnInvalidCallback;
          var didWarnAboutDirectlyAssigningPropsToState;
          var didWarnAboutContextTypeAndContextTypes;
          var didWarnAboutInvalidateContextType;
          {
            didWarnAboutStateAssignmentForComponent = /* @__PURE__ */ new Set();
            didWarnAboutUninitializedState = /* @__PURE__ */ new Set();
            didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = /* @__PURE__ */ new Set();
            didWarnAboutLegacyLifecyclesAndDerivedState = /* @__PURE__ */ new Set();
            didWarnAboutDirectlyAssigningPropsToState = /* @__PURE__ */ new Set();
            didWarnAboutUndefinedDerivedState = /* @__PURE__ */ new Set();
            didWarnAboutContextTypeAndContextTypes = /* @__PURE__ */ new Set();
            didWarnAboutInvalidateContextType = /* @__PURE__ */ new Set();
            var didWarnOnInvalidCallback = /* @__PURE__ */ new Set();
            warnOnInvalidCallback = function(callback, callerName) {
              if (callback === null || typeof callback === "function") {
                return;
              }
              var key = callerName + "_" + callback;
              if (!didWarnOnInvalidCallback.has(key)) {
                didWarnOnInvalidCallback.add(key);
                error("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callerName, callback);
              }
            };
            warnOnUndefinedDerivedState = function(type, partialState) {
              if (partialState === void 0) {
                var componentName = getComponentName(type) || "Component";
                if (!didWarnAboutUndefinedDerivedState.has(componentName)) {
                  didWarnAboutUndefinedDerivedState.add(componentName);
                  error("%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.", componentName);
                }
              }
            };
            Object.defineProperty(fakeInternalInstance, "_processChildContext", {
              enumerable: false,
              value: function() {
                {
                  {
                    throw Error("_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn't supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal).");
                  }
                }
              }
            });
            Object.freeze(fakeInternalInstance);
          }
          function applyDerivedStateFromProps(workInProgress2, ctor, getDerivedStateFromProps, nextProps) {
            var prevState = workInProgress2.memoizedState;
            {
              if (workInProgress2.mode & StrictMode) {
                disableLogs();
                try {
                  getDerivedStateFromProps(nextProps, prevState);
                } finally {
                  reenableLogs();
                }
              }
            }
            var partialState = getDerivedStateFromProps(nextProps, prevState);
            {
              warnOnUndefinedDerivedState(ctor, partialState);
            }
            var memoizedState = partialState === null || partialState === void 0 ? prevState : _assign({}, prevState, partialState);
            workInProgress2.memoizedState = memoizedState;
            if (workInProgress2.lanes === NoLanes) {
              var updateQueue = workInProgress2.updateQueue;
              updateQueue.baseState = memoizedState;
            }
          }
          var classComponentUpdater = {
            isMounted,
            enqueueSetState: function(inst, payload, callback) {
              var fiber = get(inst);
              var eventTime = requestEventTime();
              var lane = requestUpdateLane(fiber);
              var update = createUpdate(eventTime, lane);
              update.payload = payload;
              if (callback !== void 0 && callback !== null) {
                {
                  warnOnInvalidCallback(callback, "setState");
                }
                update.callback = callback;
              }
              enqueueUpdate(fiber, update);
              scheduleUpdateOnFiber(fiber, lane, eventTime);
            },
            enqueueReplaceState: function(inst, payload, callback) {
              var fiber = get(inst);
              var eventTime = requestEventTime();
              var lane = requestUpdateLane(fiber);
              var update = createUpdate(eventTime, lane);
              update.tag = ReplaceState;
              update.payload = payload;
              if (callback !== void 0 && callback !== null) {
                {
                  warnOnInvalidCallback(callback, "replaceState");
                }
                update.callback = callback;
              }
              enqueueUpdate(fiber, update);
              scheduleUpdateOnFiber(fiber, lane, eventTime);
            },
            enqueueForceUpdate: function(inst, callback) {
              var fiber = get(inst);
              var eventTime = requestEventTime();
              var lane = requestUpdateLane(fiber);
              var update = createUpdate(eventTime, lane);
              update.tag = ForceUpdate;
              if (callback !== void 0 && callback !== null) {
                {
                  warnOnInvalidCallback(callback, "forceUpdate");
                }
                update.callback = callback;
              }
              enqueueUpdate(fiber, update);
              scheduleUpdateOnFiber(fiber, lane, eventTime);
            }
          };
          function checkShouldComponentUpdate(workInProgress2, ctor, oldProps, newProps, oldState, newState, nextContext) {
            var instance = workInProgress2.stateNode;
            if (typeof instance.shouldComponentUpdate === "function") {
              {
                if (workInProgress2.mode & StrictMode) {
                  disableLogs();
                  try {
                    instance.shouldComponentUpdate(newProps, newState, nextContext);
                  } finally {
                    reenableLogs();
                  }
                }
              }
              var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);
              {
                if (shouldUpdate === void 0) {
                  error("%s.shouldComponentUpdate(): Returned undefined instead of a boolean value. Make sure to return true or false.", getComponentName(ctor) || "Component");
                }
              }
              return shouldUpdate;
            }
            if (ctor.prototype && ctor.prototype.isPureReactComponent) {
              return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);
            }
            return true;
          }
          function checkClassInstance(workInProgress2, ctor, newProps) {
            var instance = workInProgress2.stateNode;
            {
              var name = getComponentName(ctor) || "Component";
              var renderPresent = instance.render;
              if (!renderPresent) {
                if (ctor.prototype && typeof ctor.prototype.render === "function") {
                  error("%s(...): No `render` method found on the returned component instance: did you accidentally return an object from the constructor?", name);
                } else {
                  error("%s(...): No `render` method found on the returned component instance: you may have forgotten to define `render`.", name);
                }
              }
              if (instance.getInitialState && !instance.getInitialState.isReactClassApproved && !instance.state) {
                error("getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?", name);
              }
              if (instance.getDefaultProps && !instance.getDefaultProps.isReactClassApproved) {
                error("getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.", name);
              }
              if (instance.propTypes) {
                error("propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.", name);
              }
              if (instance.contextType) {
                error("contextType was defined as an instance property on %s. Use a static property to define contextType instead.", name);
              }
              {
                if (instance.contextTypes) {
                  error("contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.", name);
                }
                if (ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor)) {
                  didWarnAboutContextTypeAndContextTypes.add(ctor);
                  error("%s declares both contextTypes and contextType static properties. The legacy contextTypes property will be ignored.", name);
                }
              }
              if (typeof instance.componentShouldUpdate === "function") {
                error("%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.", name);
              }
              if (ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== "undefined") {
                error("%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.", getComponentName(ctor) || "A pure component");
              }
              if (typeof instance.componentDidUnmount === "function") {
                error("%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?", name);
              }
              if (typeof instance.componentDidReceiveProps === "function") {
                error("%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().", name);
              }
              if (typeof instance.componentWillRecieveProps === "function") {
                error("%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", name);
              }
              if (typeof instance.UNSAFE_componentWillRecieveProps === "function") {
                error("%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?", name);
              }
              var hasMutatedProps = instance.props !== newProps;
              if (instance.props !== void 0 && hasMutatedProps) {
                error("%s(...): When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.", name, name);
              }
              if (instance.defaultProps) {
                error("Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.", name, name);
              }
              if (typeof instance.getSnapshotBeforeUpdate === "function" && typeof instance.componentDidUpdate !== "function" && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)) {
                didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);
                error("%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.", getComponentName(ctor));
              }
              if (typeof instance.getDerivedStateFromProps === "function") {
                error("%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name);
              }
              if (typeof instance.getDerivedStateFromError === "function") {
                error("%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name);
              }
              if (typeof ctor.getSnapshotBeforeUpdate === "function") {
                error("%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.", name);
              }
              var _state = instance.state;
              if (_state && (typeof _state !== "object" || isArray(_state))) {
                error("%s.state: must be set to an object or null", name);
              }
              if (typeof instance.getChildContext === "function" && typeof ctor.childContextTypes !== "object") {
                error("%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().", name);
              }
            }
          }
          function adoptClassInstance(workInProgress2, instance) {
            instance.updater = classComponentUpdater;
            workInProgress2.stateNode = instance;
            set(instance, workInProgress2);
            {
              instance._reactInternalInstance = fakeInternalInstance;
            }
          }
          function constructClassInstance(workInProgress2, ctor, props) {
            var isLegacyContextConsumer = false;
            var unmaskedContext = emptyContextObject;
            var context = emptyContextObject;
            var contextType = ctor.contextType;
            {
              if ("contextType" in ctor) {
                var isValid = contextType === null || contextType !== void 0 && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === void 0;
                if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {
                  didWarnAboutInvalidateContextType.add(ctor);
                  var addendum = "";
                  if (contextType === void 0) {
                    addendum = " However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file.";
                  } else if (typeof contextType !== "object") {
                    addendum = " However, it is set to a " + typeof contextType + ".";
                  } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {
                    addendum = " Did you accidentally pass the Context.Provider instead?";
                  } else if (contextType._context !== void 0) {
                    addendum = " Did you accidentally pass the Context.Consumer instead?";
                  } else {
                    addendum = " However, it is set to an object with keys {" + Object.keys(contextType).join(", ") + "}.";
                  }
                  error("%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s", getComponentName(ctor) || "Component", addendum);
                }
              }
            }
            if (typeof contextType === "object" && contextType !== null) {
              context = readContext(contextType);
            } else {
              unmaskedContext = getUnmaskedContext(workInProgress2, ctor, true);
              var contextTypes = ctor.contextTypes;
              isLegacyContextConsumer = contextTypes !== null && contextTypes !== void 0;
              context = isLegacyContextConsumer ? getMaskedContext(workInProgress2, unmaskedContext) : emptyContextObject;
            }
            {
              if (workInProgress2.mode & StrictMode) {
                disableLogs();
                try {
                  new ctor(props, context);
                } finally {
                  reenableLogs();
                }
              }
            }
            var instance = new ctor(props, context);
            var state = workInProgress2.memoizedState = instance.state !== null && instance.state !== void 0 ? instance.state : null;
            adoptClassInstance(workInProgress2, instance);
            {
              if (typeof ctor.getDerivedStateFromProps === "function" && state === null) {
                var componentName = getComponentName(ctor) || "Component";
                if (!didWarnAboutUninitializedState.has(componentName)) {
                  didWarnAboutUninitializedState.add(componentName);
                  error("`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.", componentName, instance.state === null ? "null" : "undefined", componentName);
                }
              }
              if (typeof ctor.getDerivedStateFromProps === "function" || typeof instance.getSnapshotBeforeUpdate === "function") {
                var foundWillMountName = null;
                var foundWillReceivePropsName = null;
                var foundWillUpdateName = null;
                if (typeof instance.componentWillMount === "function" && instance.componentWillMount.__suppressDeprecationWarning !== true) {
                  foundWillMountName = "componentWillMount";
                } else if (typeof instance.UNSAFE_componentWillMount === "function") {
                  foundWillMountName = "UNSAFE_componentWillMount";
                }
                if (typeof instance.componentWillReceiveProps === "function" && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
                  foundWillReceivePropsName = "componentWillReceiveProps";
                } else if (typeof instance.UNSAFE_componentWillReceiveProps === "function") {
                  foundWillReceivePropsName = "UNSAFE_componentWillReceiveProps";
                }
                if (typeof instance.componentWillUpdate === "function" && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
                  foundWillUpdateName = "componentWillUpdate";
                } else if (typeof instance.UNSAFE_componentWillUpdate === "function") {
                  foundWillUpdateName = "UNSAFE_componentWillUpdate";
                }
                if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
                  var _componentName = getComponentName(ctor) || "Component";
                  var newApiName = typeof ctor.getDerivedStateFromProps === "function" ? "getDerivedStateFromProps()" : "getSnapshotBeforeUpdate()";
                  if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {
                    didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);
                    error("Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\nThe above lifecycles should be removed. Learn more about this warning here:\nhttps://reactjs.org/link/unsafe-component-lifecycles", _componentName, newApiName, foundWillMountName !== null ? "\n  " + foundWillMountName : "", foundWillReceivePropsName !== null ? "\n  " + foundWillReceivePropsName : "", foundWillUpdateName !== null ? "\n  " + foundWillUpdateName : "");
                  }
                }
              }
            }
            if (isLegacyContextConsumer) {
              cacheContext(workInProgress2, unmaskedContext, context);
            }
            return instance;
          }
          function callComponentWillMount(workInProgress2, instance) {
            var oldState = instance.state;
            if (typeof instance.componentWillMount === "function") {
              instance.componentWillMount();
            }
            if (typeof instance.UNSAFE_componentWillMount === "function") {
              instance.UNSAFE_componentWillMount();
            }
            if (oldState !== instance.state) {
              {
                error("%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", getComponentName(workInProgress2.type) || "Component");
              }
              classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
            }
          }
          function callComponentWillReceiveProps(workInProgress2, instance, newProps, nextContext) {
            var oldState = instance.state;
            if (typeof instance.componentWillReceiveProps === "function") {
              instance.componentWillReceiveProps(newProps, nextContext);
            }
            if (typeof instance.UNSAFE_componentWillReceiveProps === "function") {
              instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
            }
            if (instance.state !== oldState) {
              {
                var componentName = getComponentName(workInProgress2.type) || "Component";
                if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {
                  didWarnAboutStateAssignmentForComponent.add(componentName);
                  error("%s.componentWillReceiveProps(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", componentName);
                }
              }
              classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
            }
          }
          function mountClassInstance(workInProgress2, ctor, newProps, renderLanes2) {
            {
              checkClassInstance(workInProgress2, ctor, newProps);
            }
            var instance = workInProgress2.stateNode;
            instance.props = newProps;
            instance.state = workInProgress2.memoizedState;
            instance.refs = emptyRefsObject;
            initializeUpdateQueue(workInProgress2);
            var contextType = ctor.contextType;
            if (typeof contextType === "object" && contextType !== null) {
              instance.context = readContext(contextType);
            } else {
              var unmaskedContext = getUnmaskedContext(workInProgress2, ctor, true);
              instance.context = getMaskedContext(workInProgress2, unmaskedContext);
            }
            {
              if (instance.state === newProps) {
                var componentName = getComponentName(ctor) || "Component";
                if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {
                  didWarnAboutDirectlyAssigningPropsToState.add(componentName);
                  error("%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.", componentName);
                }
              }
              if (workInProgress2.mode & StrictMode) {
                ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress2, instance);
              }
              {
                ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress2, instance);
              }
            }
            processUpdateQueue(workInProgress2, newProps, instance, renderLanes2);
            instance.state = workInProgress2.memoizedState;
            var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
            if (typeof getDerivedStateFromProps === "function") {
              applyDerivedStateFromProps(workInProgress2, ctor, getDerivedStateFromProps, newProps);
              instance.state = workInProgress2.memoizedState;
            }
            if (typeof ctor.getDerivedStateFromProps !== "function" && typeof instance.getSnapshotBeforeUpdate !== "function" && (typeof instance.UNSAFE_componentWillMount === "function" || typeof instance.componentWillMount === "function")) {
              callComponentWillMount(workInProgress2, instance);
              processUpdateQueue(workInProgress2, newProps, instance, renderLanes2);
              instance.state = workInProgress2.memoizedState;
            }
            if (typeof instance.componentDidMount === "function") {
              workInProgress2.flags |= Update;
            }
          }
          function resumeMountClassInstance(workInProgress2, ctor, newProps, renderLanes2) {
            var instance = workInProgress2.stateNode;
            var oldProps = workInProgress2.memoizedProps;
            instance.props = oldProps;
            var oldContext = instance.context;
            var contextType = ctor.contextType;
            var nextContext = emptyContextObject;
            if (typeof contextType === "object" && contextType !== null) {
              nextContext = readContext(contextType);
            } else {
              var nextLegacyUnmaskedContext = getUnmaskedContext(workInProgress2, ctor, true);
              nextContext = getMaskedContext(workInProgress2, nextLegacyUnmaskedContext);
            }
            var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
            var hasNewLifecycles = typeof getDerivedStateFromProps === "function" || typeof instance.getSnapshotBeforeUpdate === "function";
            if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === "function" || typeof instance.componentWillReceiveProps === "function")) {
              if (oldProps !== newProps || oldContext !== nextContext) {
                callComponentWillReceiveProps(workInProgress2, instance, newProps, nextContext);
              }
            }
            resetHasForceUpdateBeforeProcessing();
            var oldState = workInProgress2.memoizedState;
            var newState = instance.state = oldState;
            processUpdateQueue(workInProgress2, newProps, instance, renderLanes2);
            newState = workInProgress2.memoizedState;
            if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
              if (typeof instance.componentDidMount === "function") {
                workInProgress2.flags |= Update;
              }
              return false;
            }
            if (typeof getDerivedStateFromProps === "function") {
              applyDerivedStateFromProps(workInProgress2, ctor, getDerivedStateFromProps, newProps);
              newState = workInProgress2.memoizedState;
            }
            var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress2, ctor, oldProps, newProps, oldState, newState, nextContext);
            if (shouldUpdate) {
              if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillMount === "function" || typeof instance.componentWillMount === "function")) {
                if (typeof instance.componentWillMount === "function") {
                  instance.componentWillMount();
                }
                if (typeof instance.UNSAFE_componentWillMount === "function") {
                  instance.UNSAFE_componentWillMount();
                }
              }
              if (typeof instance.componentDidMount === "function") {
                workInProgress2.flags |= Update;
              }
            } else {
              if (typeof instance.componentDidMount === "function") {
                workInProgress2.flags |= Update;
              }
              workInProgress2.memoizedProps = newProps;
              workInProgress2.memoizedState = newState;
            }
            instance.props = newProps;
            instance.state = newState;
            instance.context = nextContext;
            return shouldUpdate;
          }
          function updateClassInstance(current2, workInProgress2, ctor, newProps, renderLanes2) {
            var instance = workInProgress2.stateNode;
            cloneUpdateQueue(current2, workInProgress2);
            var unresolvedOldProps = workInProgress2.memoizedProps;
            var oldProps = workInProgress2.type === workInProgress2.elementType ? unresolvedOldProps : resolveDefaultProps(workInProgress2.type, unresolvedOldProps);
            instance.props = oldProps;
            var unresolvedNewProps = workInProgress2.pendingProps;
            var oldContext = instance.context;
            var contextType = ctor.contextType;
            var nextContext = emptyContextObject;
            if (typeof contextType === "object" && contextType !== null) {
              nextContext = readContext(contextType);
            } else {
              var nextUnmaskedContext = getUnmaskedContext(workInProgress2, ctor, true);
              nextContext = getMaskedContext(workInProgress2, nextUnmaskedContext);
            }
            var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
            var hasNewLifecycles = typeof getDerivedStateFromProps === "function" || typeof instance.getSnapshotBeforeUpdate === "function";
            if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === "function" || typeof instance.componentWillReceiveProps === "function")) {
              if (unresolvedOldProps !== unresolvedNewProps || oldContext !== nextContext) {
                callComponentWillReceiveProps(workInProgress2, instance, newProps, nextContext);
              }
            }
            resetHasForceUpdateBeforeProcessing();
            var oldState = workInProgress2.memoizedState;
            var newState = instance.state = oldState;
            processUpdateQueue(workInProgress2, newProps, instance, renderLanes2);
            newState = workInProgress2.memoizedState;
            if (unresolvedOldProps === unresolvedNewProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
              if (typeof instance.componentDidUpdate === "function") {
                if (unresolvedOldProps !== current2.memoizedProps || oldState !== current2.memoizedState) {
                  workInProgress2.flags |= Update;
                }
              }
              if (typeof instance.getSnapshotBeforeUpdate === "function") {
                if (unresolvedOldProps !== current2.memoizedProps || oldState !== current2.memoizedState) {
                  workInProgress2.flags |= Snapshot;
                }
              }
              return false;
            }
            if (typeof getDerivedStateFromProps === "function") {
              applyDerivedStateFromProps(workInProgress2, ctor, getDerivedStateFromProps, newProps);
              newState = workInProgress2.memoizedState;
            }
            var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress2, ctor, oldProps, newProps, oldState, newState, nextContext);
            if (shouldUpdate) {
              if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillUpdate === "function" || typeof instance.componentWillUpdate === "function")) {
                if (typeof instance.componentWillUpdate === "function") {
                  instance.componentWillUpdate(newProps, newState, nextContext);
                }
                if (typeof instance.UNSAFE_componentWillUpdate === "function") {
                  instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);
                }
              }
              if (typeof instance.componentDidUpdate === "function") {
                workInProgress2.flags |= Update;
              }
              if (typeof instance.getSnapshotBeforeUpdate === "function") {
                workInProgress2.flags |= Snapshot;
              }
            } else {
              if (typeof instance.componentDidUpdate === "function") {
                if (unresolvedOldProps !== current2.memoizedProps || oldState !== current2.memoizedState) {
                  workInProgress2.flags |= Update;
                }
              }
              if (typeof instance.getSnapshotBeforeUpdate === "function") {
                if (unresolvedOldProps !== current2.memoizedProps || oldState !== current2.memoizedState) {
                  workInProgress2.flags |= Snapshot;
                }
              }
              workInProgress2.memoizedProps = newProps;
              workInProgress2.memoizedState = newState;
            }
            instance.props = newProps;
            instance.state = newState;
            instance.context = nextContext;
            return shouldUpdate;
          }
          var didWarnAboutMaps;
          var didWarnAboutGenerators;
          var didWarnAboutStringRefs;
          var ownerHasKeyUseWarning;
          var ownerHasFunctionTypeWarning;
          var warnForMissingKey = function(child, returnFiber) {
          };
          {
            didWarnAboutMaps = false;
            didWarnAboutGenerators = false;
            didWarnAboutStringRefs = {};
            ownerHasKeyUseWarning = {};
            ownerHasFunctionTypeWarning = {};
            warnForMissingKey = function(child, returnFiber) {
              if (child === null || typeof child !== "object") {
                return;
              }
              if (!child._store || child._store.validated || child.key != null) {
                return;
              }
              if (!(typeof child._store === "object")) {
                {
                  throw Error("React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.");
                }
              }
              child._store.validated = true;
              var componentName = getComponentName(returnFiber.type) || "Component";
              if (ownerHasKeyUseWarning[componentName]) {
                return;
              }
              ownerHasKeyUseWarning[componentName] = true;
              error('Each child in a list should have a unique "key" prop. See https://reactjs.org/link/warning-keys for more information.');
            };
          }
          var isArray$1 = Array.isArray;
          function coerceRef(returnFiber, current2, element) {
            var mixedRef = element.ref;
            if (mixedRef !== null && typeof mixedRef !== "function" && typeof mixedRef !== "object") {
              {
                if ((returnFiber.mode & StrictMode || warnAboutStringRefs) && !(element._owner && element._self && element._owner.stateNode !== element._self)) {
                  var componentName = getComponentName(returnFiber.type) || "Component";
                  if (!didWarnAboutStringRefs[componentName]) {
                    {
                      error('A string ref, "%s", has been found within a strict mode tree. String refs are a source of potential bugs and should be avoided. We recommend using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', mixedRef);
                    }
                    didWarnAboutStringRefs[componentName] = true;
                  }
                }
              }
              if (element._owner) {
                var owner = element._owner;
                var inst;
                if (owner) {
                  var ownerFiber = owner;
                  if (!(ownerFiber.tag === ClassComponent)) {
                    {
                      throw Error("Function components cannot have string refs. We recommend using useRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref");
                    }
                  }
                  inst = ownerFiber.stateNode;
                }
                if (!inst) {
                  {
                    throw Error("Missing owner for string ref " + mixedRef + ". This error is likely caused by a bug in React. Please file an issue.");
                  }
                }
                var stringRef = "" + mixedRef;
                if (current2 !== null && current2.ref !== null && typeof current2.ref === "function" && current2.ref._stringRef === stringRef) {
                  return current2.ref;
                }
                var ref = function(value) {
                  var refs = inst.refs;
                  if (refs === emptyRefsObject) {
                    refs = inst.refs = {};
                  }
                  if (value === null) {
                    delete refs[stringRef];
                  } else {
                    refs[stringRef] = value;
                  }
                };
                ref._stringRef = stringRef;
                return ref;
              } else {
                if (!(typeof mixedRef === "string")) {
                  {
                    throw Error("Expected ref to be a function, a string, an object returned by React.createRef(), or null.");
                  }
                }
                if (!element._owner) {
                  {
                    throw Error("Element ref was specified as a string (" + mixedRef + ") but no owner was set. This could happen for one of the following reasons:\n1. You may be adding a ref to a function component\n2. You may be adding a ref to a component that was not created inside a component's render method\n3. You have multiple copies of React loaded\nSee https://reactjs.org/link/refs-must-have-owner for more information.");
                  }
                }
              }
            }
            return mixedRef;
          }
          function throwOnInvalidObjectType(returnFiber, newChild) {
            if (returnFiber.type !== "textarea") {
              {
                {
                  throw Error("Objects are not valid as a React child (found: " + (Object.prototype.toString.call(newChild) === "[object Object]" ? "object with keys {" + Object.keys(newChild).join(", ") + "}" : newChild) + "). If you meant to render a collection of children, use an array instead.");
                }
              }
            }
          }
          function warnOnFunctionType(returnFiber) {
            {
              var componentName = getComponentName(returnFiber.type) || "Component";
              if (ownerHasFunctionTypeWarning[componentName]) {
                return;
              }
              ownerHasFunctionTypeWarning[componentName] = true;
              error("Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it.");
            }
          }
          function ChildReconciler(shouldTrackSideEffects) {
            function deleteChild(returnFiber, childToDelete) {
              if (!shouldTrackSideEffects) {
                return;
              }
              var last = returnFiber.lastEffect;
              if (last !== null) {
                last.nextEffect = childToDelete;
                returnFiber.lastEffect = childToDelete;
              } else {
                returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
              }
              childToDelete.nextEffect = null;
              childToDelete.flags = Deletion;
            }
            function deleteRemainingChildren(returnFiber, currentFirstChild) {
              if (!shouldTrackSideEffects) {
                return null;
              }
              var childToDelete = currentFirstChild;
              while (childToDelete !== null) {
                deleteChild(returnFiber, childToDelete);
                childToDelete = childToDelete.sibling;
              }
              return null;
            }
            function mapRemainingChildren(returnFiber, currentFirstChild) {
              var existingChildren = /* @__PURE__ */ new Map();
              var existingChild = currentFirstChild;
              while (existingChild !== null) {
                if (existingChild.key !== null) {
                  existingChildren.set(existingChild.key, existingChild);
                } else {
                  existingChildren.set(existingChild.index, existingChild);
                }
                existingChild = existingChild.sibling;
              }
              return existingChildren;
            }
            function useFiber(fiber, pendingProps) {
              var clone = createWorkInProgress(fiber, pendingProps);
              clone.index = 0;
              clone.sibling = null;
              return clone;
            }
            function placeChild(newFiber, lastPlacedIndex, newIndex) {
              newFiber.index = newIndex;
              if (!shouldTrackSideEffects) {
                return lastPlacedIndex;
              }
              var current2 = newFiber.alternate;
              if (current2 !== null) {
                var oldIndex = current2.index;
                if (oldIndex < lastPlacedIndex) {
                  newFiber.flags = Placement;
                  return lastPlacedIndex;
                } else {
                  return oldIndex;
                }
              } else {
                newFiber.flags = Placement;
                return lastPlacedIndex;
              }
            }
            function placeSingleChild(newFiber) {
              if (shouldTrackSideEffects && newFiber.alternate === null) {
                newFiber.flags = Placement;
              }
              return newFiber;
            }
            function updateTextNode(returnFiber, current2, textContent, lanes) {
              if (current2 === null || current2.tag !== HostText) {
                var created = createFiberFromText(textContent, returnFiber.mode, lanes);
                created.return = returnFiber;
                return created;
              } else {
                var existing = useFiber(current2, textContent);
                existing.return = returnFiber;
                return existing;
              }
            }
            function updateElement(returnFiber, current2, element, lanes) {
              if (current2 !== null) {
                if (current2.elementType === element.type || isCompatibleFamilyForHotReloading(current2, element)) {
                  var existing = useFiber(current2, element.props);
                  existing.ref = coerceRef(returnFiber, current2, element);
                  existing.return = returnFiber;
                  {
                    existing._debugSource = element._source;
                    existing._debugOwner = element._owner;
                  }
                  return existing;
                }
              }
              var created = createFiberFromElement(element, returnFiber.mode, lanes);
              created.ref = coerceRef(returnFiber, current2, element);
              created.return = returnFiber;
              return created;
            }
            function updatePortal(returnFiber, current2, portal, lanes) {
              if (current2 === null || current2.tag !== HostPortal || current2.stateNode.containerInfo !== portal.containerInfo || current2.stateNode.implementation !== portal.implementation) {
                var created = createFiberFromPortal(portal, returnFiber.mode, lanes);
                created.return = returnFiber;
                return created;
              } else {
                var existing = useFiber(current2, portal.children || []);
                existing.return = returnFiber;
                return existing;
              }
            }
            function updateFragment2(returnFiber, current2, fragment, lanes, key) {
              if (current2 === null || current2.tag !== Fragment3) {
                var created = createFiberFromFragment(fragment, returnFiber.mode, lanes, key);
                created.return = returnFiber;
                return created;
              } else {
                var existing = useFiber(current2, fragment);
                existing.return = returnFiber;
                return existing;
              }
            }
            function createChild(returnFiber, newChild, lanes) {
              if (typeof newChild === "string" || typeof newChild === "number") {
                var created = createFiberFromText("" + newChild, returnFiber.mode, lanes);
                created.return = returnFiber;
                return created;
              }
              if (typeof newChild === "object" && newChild !== null) {
                switch (newChild.$$typeof) {
                  case REACT_ELEMENT_TYPE: {
                    var _created = createFiberFromElement(newChild, returnFiber.mode, lanes);
                    _created.ref = coerceRef(returnFiber, null, newChild);
                    _created.return = returnFiber;
                    return _created;
                  }
                  case REACT_PORTAL_TYPE: {
                    var _created2 = createFiberFromPortal(newChild, returnFiber.mode, lanes);
                    _created2.return = returnFiber;
                    return _created2;
                  }
                }
                if (isArray$1(newChild) || getIteratorFn(newChild)) {
                  var _created3 = createFiberFromFragment(newChild, returnFiber.mode, lanes, null);
                  _created3.return = returnFiber;
                  return _created3;
                }
                throwOnInvalidObjectType(returnFiber, newChild);
              }
              {
                if (typeof newChild === "function") {
                  warnOnFunctionType(returnFiber);
                }
              }
              return null;
            }
            function updateSlot(returnFiber, oldFiber, newChild, lanes) {
              var key = oldFiber !== null ? oldFiber.key : null;
              if (typeof newChild === "string" || typeof newChild === "number") {
                if (key !== null) {
                  return null;
                }
                return updateTextNode(returnFiber, oldFiber, "" + newChild, lanes);
              }
              if (typeof newChild === "object" && newChild !== null) {
                switch (newChild.$$typeof) {
                  case REACT_ELEMENT_TYPE: {
                    if (newChild.key === key) {
                      if (newChild.type === REACT_FRAGMENT_TYPE) {
                        return updateFragment2(returnFiber, oldFiber, newChild.props.children, lanes, key);
                      }
                      return updateElement(returnFiber, oldFiber, newChild, lanes);
                    } else {
                      return null;
                    }
                  }
                  case REACT_PORTAL_TYPE: {
                    if (newChild.key === key) {
                      return updatePortal(returnFiber, oldFiber, newChild, lanes);
                    } else {
                      return null;
                    }
                  }
                }
                if (isArray$1(newChild) || getIteratorFn(newChild)) {
                  if (key !== null) {
                    return null;
                  }
                  return updateFragment2(returnFiber, oldFiber, newChild, lanes, null);
                }
                throwOnInvalidObjectType(returnFiber, newChild);
              }
              {
                if (typeof newChild === "function") {
                  warnOnFunctionType(returnFiber);
                }
              }
              return null;
            }
            function updateFromMap(existingChildren, returnFiber, newIdx, newChild, lanes) {
              if (typeof newChild === "string" || typeof newChild === "number") {
                var matchedFiber = existingChildren.get(newIdx) || null;
                return updateTextNode(returnFiber, matchedFiber, "" + newChild, lanes);
              }
              if (typeof newChild === "object" && newChild !== null) {
                switch (newChild.$$typeof) {
                  case REACT_ELEMENT_TYPE: {
                    var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
                    if (newChild.type === REACT_FRAGMENT_TYPE) {
                      return updateFragment2(returnFiber, _matchedFiber, newChild.props.children, lanes, newChild.key);
                    }
                    return updateElement(returnFiber, _matchedFiber, newChild, lanes);
                  }
                  case REACT_PORTAL_TYPE: {
                    var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
                    return updatePortal(returnFiber, _matchedFiber2, newChild, lanes);
                  }
                }
                if (isArray$1(newChild) || getIteratorFn(newChild)) {
                  var _matchedFiber3 = existingChildren.get(newIdx) || null;
                  return updateFragment2(returnFiber, _matchedFiber3, newChild, lanes, null);
                }
                throwOnInvalidObjectType(returnFiber, newChild);
              }
              {
                if (typeof newChild === "function") {
                  warnOnFunctionType(returnFiber);
                }
              }
              return null;
            }
            function warnOnInvalidKey(child, knownKeys, returnFiber) {
              {
                if (typeof child !== "object" || child === null) {
                  return knownKeys;
                }
                switch (child.$$typeof) {
                  case REACT_ELEMENT_TYPE:
                  case REACT_PORTAL_TYPE:
                    warnForMissingKey(child, returnFiber);
                    var key = child.key;
                    if (typeof key !== "string") {
                      break;
                    }
                    if (knownKeys === null) {
                      knownKeys = /* @__PURE__ */ new Set();
                      knownKeys.add(key);
                      break;
                    }
                    if (!knownKeys.has(key)) {
                      knownKeys.add(key);
                      break;
                    }
                    error("Encountered two children with the same key, `%s`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted \u2014 the behavior is unsupported and could change in a future version.", key);
                    break;
                }
              }
              return knownKeys;
            }
            function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, lanes) {
              {
                var knownKeys = null;
                for (var i2 = 0; i2 < newChildren.length; i2++) {
                  var child = newChildren[i2];
                  knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);
                }
              }
              var resultingFirstChild = null;
              var previousNewFiber = null;
              var oldFiber = currentFirstChild;
              var lastPlacedIndex = 0;
              var newIdx = 0;
              var nextOldFiber = null;
              for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {
                if (oldFiber.index > newIdx) {
                  nextOldFiber = oldFiber;
                  oldFiber = null;
                } else {
                  nextOldFiber = oldFiber.sibling;
                }
                var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], lanes);
                if (newFiber === null) {
                  if (oldFiber === null) {
                    oldFiber = nextOldFiber;
                  }
                  break;
                }
                if (shouldTrackSideEffects) {
                  if (oldFiber && newFiber.alternate === null) {
                    deleteChild(returnFiber, oldFiber);
                  }
                }
                lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) {
                  resultingFirstChild = newFiber;
                } else {
                  previousNewFiber.sibling = newFiber;
                }
                previousNewFiber = newFiber;
                oldFiber = nextOldFiber;
              }
              if (newIdx === newChildren.length) {
                deleteRemainingChildren(returnFiber, oldFiber);
                return resultingFirstChild;
              }
              if (oldFiber === null) {
                for (; newIdx < newChildren.length; newIdx++) {
                  var _newFiber = createChild(returnFiber, newChildren[newIdx], lanes);
                  if (_newFiber === null) {
                    continue;
                  }
                  lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);
                  if (previousNewFiber === null) {
                    resultingFirstChild = _newFiber;
                  } else {
                    previousNewFiber.sibling = _newFiber;
                  }
                  previousNewFiber = _newFiber;
                }
                return resultingFirstChild;
              }
              var existingChildren = mapRemainingChildren(returnFiber, oldFiber);
              for (; newIdx < newChildren.length; newIdx++) {
                var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], lanes);
                if (_newFiber2 !== null) {
                  if (shouldTrackSideEffects) {
                    if (_newFiber2.alternate !== null) {
                      existingChildren.delete(_newFiber2.key === null ? newIdx : _newFiber2.key);
                    }
                  }
                  lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);
                  if (previousNewFiber === null) {
                    resultingFirstChild = _newFiber2;
                  } else {
                    previousNewFiber.sibling = _newFiber2;
                  }
                  previousNewFiber = _newFiber2;
                }
              }
              if (shouldTrackSideEffects) {
                existingChildren.forEach(function(child2) {
                  return deleteChild(returnFiber, child2);
                });
              }
              return resultingFirstChild;
            }
            function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, lanes) {
              var iteratorFn = getIteratorFn(newChildrenIterable);
              if (!(typeof iteratorFn === "function")) {
                {
                  throw Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.");
                }
              }
              {
                if (typeof Symbol === "function" && newChildrenIterable[Symbol.toStringTag] === "Generator") {
                  if (!didWarnAboutGenerators) {
                    error("Using Generators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. Keep in mind you might need to polyfill these features for older browsers.");
                  }
                  didWarnAboutGenerators = true;
                }
                if (newChildrenIterable.entries === iteratorFn) {
                  if (!didWarnAboutMaps) {
                    error("Using Maps as children is not supported. Use an array of keyed ReactElements instead.");
                  }
                  didWarnAboutMaps = true;
                }
                var _newChildren = iteratorFn.call(newChildrenIterable);
                if (_newChildren) {
                  var knownKeys = null;
                  var _step = _newChildren.next();
                  for (; !_step.done; _step = _newChildren.next()) {
                    var child = _step.value;
                    knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);
                  }
                }
              }
              var newChildren = iteratorFn.call(newChildrenIterable);
              if (!(newChildren != null)) {
                {
                  throw Error("An iterable object provided no iterator.");
                }
              }
              var resultingFirstChild = null;
              var previousNewFiber = null;
              var oldFiber = currentFirstChild;
              var lastPlacedIndex = 0;
              var newIdx = 0;
              var nextOldFiber = null;
              var step = newChildren.next();
              for (; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()) {
                if (oldFiber.index > newIdx) {
                  nextOldFiber = oldFiber;
                  oldFiber = null;
                } else {
                  nextOldFiber = oldFiber.sibling;
                }
                var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);
                if (newFiber === null) {
                  if (oldFiber === null) {
                    oldFiber = nextOldFiber;
                  }
                  break;
                }
                if (shouldTrackSideEffects) {
                  if (oldFiber && newFiber.alternate === null) {
                    deleteChild(returnFiber, oldFiber);
                  }
                }
                lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) {
                  resultingFirstChild = newFiber;
                } else {
                  previousNewFiber.sibling = newFiber;
                }
                previousNewFiber = newFiber;
                oldFiber = nextOldFiber;
              }
              if (step.done) {
                deleteRemainingChildren(returnFiber, oldFiber);
                return resultingFirstChild;
              }
              if (oldFiber === null) {
                for (; !step.done; newIdx++, step = newChildren.next()) {
                  var _newFiber3 = createChild(returnFiber, step.value, lanes);
                  if (_newFiber3 === null) {
                    continue;
                  }
                  lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);
                  if (previousNewFiber === null) {
                    resultingFirstChild = _newFiber3;
                  } else {
                    previousNewFiber.sibling = _newFiber3;
                  }
                  previousNewFiber = _newFiber3;
                }
                return resultingFirstChild;
              }
              var existingChildren = mapRemainingChildren(returnFiber, oldFiber);
              for (; !step.done; newIdx++, step = newChildren.next()) {
                var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, lanes);
                if (_newFiber4 !== null) {
                  if (shouldTrackSideEffects) {
                    if (_newFiber4.alternate !== null) {
                      existingChildren.delete(_newFiber4.key === null ? newIdx : _newFiber4.key);
                    }
                  }
                  lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);
                  if (previousNewFiber === null) {
                    resultingFirstChild = _newFiber4;
                  } else {
                    previousNewFiber.sibling = _newFiber4;
                  }
                  previousNewFiber = _newFiber4;
                }
              }
              if (shouldTrackSideEffects) {
                existingChildren.forEach(function(child2) {
                  return deleteChild(returnFiber, child2);
                });
              }
              return resultingFirstChild;
            }
            function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, lanes) {
              if (currentFirstChild !== null && currentFirstChild.tag === HostText) {
                deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
                var existing = useFiber(currentFirstChild, textContent);
                existing.return = returnFiber;
                return existing;
              }
              deleteRemainingChildren(returnFiber, currentFirstChild);
              var created = createFiberFromText(textContent, returnFiber.mode, lanes);
              created.return = returnFiber;
              return created;
            }
            function reconcileSingleElement(returnFiber, currentFirstChild, element, lanes) {
              var key = element.key;
              var child = currentFirstChild;
              while (child !== null) {
                if (child.key === key) {
                  switch (child.tag) {
                    case Fragment3: {
                      if (element.type === REACT_FRAGMENT_TYPE) {
                        deleteRemainingChildren(returnFiber, child.sibling);
                        var existing = useFiber(child, element.props.children);
                        existing.return = returnFiber;
                        {
                          existing._debugSource = element._source;
                          existing._debugOwner = element._owner;
                        }
                        return existing;
                      }
                      break;
                    }
                    case Block:
                    default: {
                      if (child.elementType === element.type || isCompatibleFamilyForHotReloading(child, element)) {
                        deleteRemainingChildren(returnFiber, child.sibling);
                        var _existing3 = useFiber(child, element.props);
                        _existing3.ref = coerceRef(returnFiber, child, element);
                        _existing3.return = returnFiber;
                        {
                          _existing3._debugSource = element._source;
                          _existing3._debugOwner = element._owner;
                        }
                        return _existing3;
                      }
                      break;
                    }
                  }
                  deleteRemainingChildren(returnFiber, child);
                  break;
                } else {
                  deleteChild(returnFiber, child);
                }
                child = child.sibling;
              }
              if (element.type === REACT_FRAGMENT_TYPE) {
                var created = createFiberFromFragment(element.props.children, returnFiber.mode, lanes, element.key);
                created.return = returnFiber;
                return created;
              } else {
                var _created4 = createFiberFromElement(element, returnFiber.mode, lanes);
                _created4.ref = coerceRef(returnFiber, currentFirstChild, element);
                _created4.return = returnFiber;
                return _created4;
              }
            }
            function reconcileSinglePortal(returnFiber, currentFirstChild, portal, lanes) {
              var key = portal.key;
              var child = currentFirstChild;
              while (child !== null) {
                if (child.key === key) {
                  if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {
                    deleteRemainingChildren(returnFiber, child.sibling);
                    var existing = useFiber(child, portal.children || []);
                    existing.return = returnFiber;
                    return existing;
                  } else {
                    deleteRemainingChildren(returnFiber, child);
                    break;
                  }
                } else {
                  deleteChild(returnFiber, child);
                }
                child = child.sibling;
              }
              var created = createFiberFromPortal(portal, returnFiber.mode, lanes);
              created.return = returnFiber;
              return created;
            }
            function reconcileChildFibers2(returnFiber, currentFirstChild, newChild, lanes) {
              var isUnkeyedTopLevelFragment = typeof newChild === "object" && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null;
              if (isUnkeyedTopLevelFragment) {
                newChild = newChild.props.children;
              }
              var isObject = typeof newChild === "object" && newChild !== null;
              if (isObject) {
                switch (newChild.$$typeof) {
                  case REACT_ELEMENT_TYPE:
                    return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, lanes));
                  case REACT_PORTAL_TYPE:
                    return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, lanes));
                }
              }
              if (typeof newChild === "string" || typeof newChild === "number") {
                return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, "" + newChild, lanes));
              }
              if (isArray$1(newChild)) {
                return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, lanes);
              }
              if (getIteratorFn(newChild)) {
                return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, lanes);
              }
              if (isObject) {
                throwOnInvalidObjectType(returnFiber, newChild);
              }
              {
                if (typeof newChild === "function") {
                  warnOnFunctionType(returnFiber);
                }
              }
              if (typeof newChild === "undefined" && !isUnkeyedTopLevelFragment) {
                switch (returnFiber.tag) {
                  case ClassComponent: {
                    {
                      var instance = returnFiber.stateNode;
                      if (instance.render._isMockFunction) {
                        break;
                      }
                    }
                  }
                  case Block:
                  case FunctionComponent:
                  case ForwardRef:
                  case SimpleMemoComponent: {
                    {
                      {
                        throw Error((getComponentName(returnFiber.type) || "Component") + "(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.");
                      }
                    }
                  }
                }
              }
              return deleteRemainingChildren(returnFiber, currentFirstChild);
            }
            return reconcileChildFibers2;
          }
          var reconcileChildFibers = ChildReconciler(true);
          var mountChildFibers = ChildReconciler(false);
          function cloneChildFibers(current2, workInProgress2) {
            if (!(current2 === null || workInProgress2.child === current2.child)) {
              {
                throw Error("Resuming work not yet implemented.");
              }
            }
            if (workInProgress2.child === null) {
              return;
            }
            var currentChild = workInProgress2.child;
            var newChild = createWorkInProgress(currentChild, currentChild.pendingProps);
            workInProgress2.child = newChild;
            newChild.return = workInProgress2;
            while (currentChild.sibling !== null) {
              currentChild = currentChild.sibling;
              newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps);
              newChild.return = workInProgress2;
            }
            newChild.sibling = null;
          }
          function resetChildFibers(workInProgress2, lanes) {
            var child = workInProgress2.child;
            while (child !== null) {
              resetWorkInProgress(child, lanes);
              child = child.sibling;
            }
          }
          var NO_CONTEXT = {};
          var contextStackCursor$1 = createCursor(NO_CONTEXT);
          var contextFiberStackCursor = createCursor(NO_CONTEXT);
          var rootInstanceStackCursor = createCursor(NO_CONTEXT);
          function requiredContext(c2) {
            if (!(c2 !== NO_CONTEXT)) {
              {
                throw Error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
            return c2;
          }
          function getRootHostContainer() {
            var rootInstance = requiredContext(rootInstanceStackCursor.current);
            return rootInstance;
          }
          function pushHostContainer(fiber, nextRootInstance) {
            push(rootInstanceStackCursor, nextRootInstance, fiber);
            push(contextFiberStackCursor, fiber, fiber);
            push(contextStackCursor$1, NO_CONTEXT, fiber);
            var nextRootContext = getRootHostContext(nextRootInstance);
            pop(contextStackCursor$1, fiber);
            push(contextStackCursor$1, nextRootContext, fiber);
          }
          function popHostContainer(fiber) {
            pop(contextStackCursor$1, fiber);
            pop(contextFiberStackCursor, fiber);
            pop(rootInstanceStackCursor, fiber);
          }
          function getHostContext() {
            var context = requiredContext(contextStackCursor$1.current);
            return context;
          }
          function pushHostContext(fiber) {
            var rootInstance = requiredContext(rootInstanceStackCursor.current);
            var context = requiredContext(contextStackCursor$1.current);
            var nextContext = getChildHostContext(context, fiber.type);
            if (context === nextContext) {
              return;
            }
            push(contextFiberStackCursor, fiber, fiber);
            push(contextStackCursor$1, nextContext, fiber);
          }
          function popHostContext(fiber) {
            if (contextFiberStackCursor.current !== fiber) {
              return;
            }
            pop(contextStackCursor$1, fiber);
            pop(contextFiberStackCursor, fiber);
          }
          var DefaultSuspenseContext = 0;
          var SubtreeSuspenseContextMask = 1;
          var InvisibleParentSuspenseContext = 1;
          var ForceSuspenseFallback = 2;
          var suspenseStackCursor = createCursor(DefaultSuspenseContext);
          function hasSuspenseContext(parentContext, flag) {
            return (parentContext & flag) !== 0;
          }
          function setDefaultShallowSuspenseContext(parentContext) {
            return parentContext & SubtreeSuspenseContextMask;
          }
          function setShallowSuspenseContext(parentContext, shallowContext) {
            return parentContext & SubtreeSuspenseContextMask | shallowContext;
          }
          function addSubtreeSuspenseContext(parentContext, subtreeContext) {
            return parentContext | subtreeContext;
          }
          function pushSuspenseContext(fiber, newContext) {
            push(suspenseStackCursor, newContext, fiber);
          }
          function popSuspenseContext(fiber) {
            pop(suspenseStackCursor, fiber);
          }
          function shouldCaptureSuspense(workInProgress2, hasInvisibleParent) {
            var nextState = workInProgress2.memoizedState;
            if (nextState !== null) {
              if (nextState.dehydrated !== null) {
                return true;
              }
              return false;
            }
            var props = workInProgress2.memoizedProps;
            if (props.fallback === void 0) {
              return false;
            }
            if (props.unstable_avoidThisFallback !== true) {
              return true;
            }
            if (hasInvisibleParent) {
              return false;
            }
            return true;
          }
          function findFirstSuspended(row) {
            var node = row;
            while (node !== null) {
              if (node.tag === SuspenseComponent) {
                var state = node.memoizedState;
                if (state !== null) {
                  var dehydrated = state.dehydrated;
                  if (dehydrated === null || isSuspenseInstancePending(dehydrated) || isSuspenseInstanceFallback(dehydrated)) {
                    return node;
                  }
                }
              } else if (node.tag === SuspenseListComponent && node.memoizedProps.revealOrder !== void 0) {
                var didSuspend = (node.flags & DidCapture) !== NoFlags;
                if (didSuspend) {
                  return node;
                }
              } else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
              }
              if (node === row) {
                return null;
              }
              while (node.sibling === null) {
                if (node.return === null || node.return === row) {
                  return null;
                }
                node = node.return;
              }
              node.sibling.return = node.return;
              node = node.sibling;
            }
            return null;
          }
          var NoFlags$1 = 0;
          var HasEffect = 1;
          var Layout = 2;
          var Passive$1 = 4;
          var hydrationParentFiber = null;
          var nextHydratableInstance = null;
          var isHydrating = false;
          function enterHydrationState(fiber) {
            var parentInstance = fiber.stateNode.containerInfo;
            nextHydratableInstance = getFirstHydratableChild(parentInstance);
            hydrationParentFiber = fiber;
            isHydrating = true;
            return true;
          }
          function deleteHydratableInstance(returnFiber, instance) {
            {
              switch (returnFiber.tag) {
                case HostRoot:
                  didNotHydrateContainerInstance(returnFiber.stateNode.containerInfo, instance);
                  break;
                case HostComponent:
                  didNotHydrateInstance(returnFiber.type, returnFiber.memoizedProps, returnFiber.stateNode, instance);
                  break;
              }
            }
            var childToDelete = createFiberFromHostInstanceForDeletion();
            childToDelete.stateNode = instance;
            childToDelete.return = returnFiber;
            childToDelete.flags = Deletion;
            if (returnFiber.lastEffect !== null) {
              returnFiber.lastEffect.nextEffect = childToDelete;
              returnFiber.lastEffect = childToDelete;
            } else {
              returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
            }
          }
          function insertNonHydratedInstance(returnFiber, fiber) {
            fiber.flags = fiber.flags & ~Hydrating | Placement;
            {
              switch (returnFiber.tag) {
                case HostRoot: {
                  var parentContainer = returnFiber.stateNode.containerInfo;
                  switch (fiber.tag) {
                    case HostComponent:
                      var type = fiber.type;
                      var props = fiber.pendingProps;
                      didNotFindHydratableContainerInstance(parentContainer, type);
                      break;
                    case HostText:
                      var text = fiber.pendingProps;
                      didNotFindHydratableContainerTextInstance(parentContainer, text);
                      break;
                  }
                  break;
                }
                case HostComponent: {
                  var parentType = returnFiber.type;
                  var parentProps = returnFiber.memoizedProps;
                  var parentInstance = returnFiber.stateNode;
                  switch (fiber.tag) {
                    case HostComponent:
                      var _type = fiber.type;
                      var _props = fiber.pendingProps;
                      didNotFindHydratableInstance(parentType, parentProps, parentInstance, _type);
                      break;
                    case HostText:
                      var _text = fiber.pendingProps;
                      didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, _text);
                      break;
                    case SuspenseComponent:
                      didNotFindHydratableSuspenseInstance(parentType, parentProps);
                      break;
                  }
                  break;
                }
                default:
                  return;
              }
            }
          }
          function tryHydrate(fiber, nextInstance) {
            switch (fiber.tag) {
              case HostComponent: {
                var type = fiber.type;
                var props = fiber.pendingProps;
                var instance = canHydrateInstance(nextInstance, type);
                if (instance !== null) {
                  fiber.stateNode = instance;
                  return true;
                }
                return false;
              }
              case HostText: {
                var text = fiber.pendingProps;
                var textInstance = canHydrateTextInstance(nextInstance, text);
                if (textInstance !== null) {
                  fiber.stateNode = textInstance;
                  return true;
                }
                return false;
              }
              case SuspenseComponent: {
                return false;
              }
              default:
                return false;
            }
          }
          function tryToClaimNextHydratableInstance(fiber) {
            if (!isHydrating) {
              return;
            }
            var nextInstance = nextHydratableInstance;
            if (!nextInstance) {
              insertNonHydratedInstance(hydrationParentFiber, fiber);
              isHydrating = false;
              hydrationParentFiber = fiber;
              return;
            }
            var firstAttemptedInstance = nextInstance;
            if (!tryHydrate(fiber, nextInstance)) {
              nextInstance = getNextHydratableSibling(firstAttemptedInstance);
              if (!nextInstance || !tryHydrate(fiber, nextInstance)) {
                insertNonHydratedInstance(hydrationParentFiber, fiber);
                isHydrating = false;
                hydrationParentFiber = fiber;
                return;
              }
              deleteHydratableInstance(hydrationParentFiber, firstAttemptedInstance);
            }
            hydrationParentFiber = fiber;
            nextHydratableInstance = getFirstHydratableChild(nextInstance);
          }
          function prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {
            var instance = fiber.stateNode;
            var updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber);
            fiber.updateQueue = updatePayload;
            if (updatePayload !== null) {
              return true;
            }
            return false;
          }
          function prepareToHydrateHostTextInstance(fiber) {
            var textInstance = fiber.stateNode;
            var textContent = fiber.memoizedProps;
            var shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);
            {
              if (shouldUpdate) {
                var returnFiber = hydrationParentFiber;
                if (returnFiber !== null) {
                  switch (returnFiber.tag) {
                    case HostRoot: {
                      var parentContainer = returnFiber.stateNode.containerInfo;
                      didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, textContent);
                      break;
                    }
                    case HostComponent: {
                      var parentType = returnFiber.type;
                      var parentProps = returnFiber.memoizedProps;
                      var parentInstance = returnFiber.stateNode;
                      didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, textContent);
                      break;
                    }
                  }
                }
              }
            }
            return shouldUpdate;
          }
          function skipPastDehydratedSuspenseInstance(fiber) {
            var suspenseState = fiber.memoizedState;
            var suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;
            if (!suspenseInstance) {
              {
                throw Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
            return getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance);
          }
          function popToNextHostParent(fiber) {
            var parent = fiber.return;
            while (parent !== null && parent.tag !== HostComponent && parent.tag !== HostRoot && parent.tag !== SuspenseComponent) {
              parent = parent.return;
            }
            hydrationParentFiber = parent;
          }
          function popHydrationState(fiber) {
            if (fiber !== hydrationParentFiber) {
              return false;
            }
            if (!isHydrating) {
              popToNextHostParent(fiber);
              isHydrating = true;
              return false;
            }
            var type = fiber.type;
            if (fiber.tag !== HostComponent || type !== "head" && type !== "body" && !shouldSetTextContent(type, fiber.memoizedProps)) {
              var nextInstance = nextHydratableInstance;
              while (nextInstance) {
                deleteHydratableInstance(fiber, nextInstance);
                nextInstance = getNextHydratableSibling(nextInstance);
              }
            }
            popToNextHostParent(fiber);
            if (fiber.tag === SuspenseComponent) {
              nextHydratableInstance = skipPastDehydratedSuspenseInstance(fiber);
            } else {
              nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null;
            }
            return true;
          }
          function resetHydrationState() {
            hydrationParentFiber = null;
            nextHydratableInstance = null;
            isHydrating = false;
          }
          function getIsHydrating() {
            return isHydrating;
          }
          var workInProgressSources = [];
          var rendererSigil$1;
          {
            rendererSigil$1 = {};
          }
          function markSourceAsDirty(mutableSource) {
            workInProgressSources.push(mutableSource);
          }
          function resetWorkInProgressVersions() {
            for (var i2 = 0; i2 < workInProgressSources.length; i2++) {
              var mutableSource = workInProgressSources[i2];
              {
                mutableSource._workInProgressVersionPrimary = null;
              }
            }
            workInProgressSources.length = 0;
          }
          function getWorkInProgressVersion(mutableSource) {
            {
              return mutableSource._workInProgressVersionPrimary;
            }
          }
          function setWorkInProgressVersion(mutableSource, version) {
            {
              mutableSource._workInProgressVersionPrimary = version;
            }
            workInProgressSources.push(mutableSource);
          }
          function warnAboutMultipleRenderersDEV(mutableSource) {
            {
              {
                if (mutableSource._currentPrimaryRenderer == null) {
                  mutableSource._currentPrimaryRenderer = rendererSigil$1;
                } else if (mutableSource._currentPrimaryRenderer !== rendererSigil$1) {
                  error("Detected multiple renderers concurrently rendering the same mutable source. This is currently unsupported.");
                }
              }
            }
          }
          var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher, ReactCurrentBatchConfig$1 = ReactSharedInternals.ReactCurrentBatchConfig;
          var didWarnAboutMismatchedHooksForComponent;
          var didWarnAboutUseOpaqueIdentifier;
          {
            didWarnAboutUseOpaqueIdentifier = {};
            didWarnAboutMismatchedHooksForComponent = /* @__PURE__ */ new Set();
          }
          var renderLanes = NoLanes;
          var currentlyRenderingFiber$1 = null;
          var currentHook = null;
          var workInProgressHook = null;
          var didScheduleRenderPhaseUpdate = false;
          var didScheduleRenderPhaseUpdateDuringThisPass = false;
          var RE_RENDER_LIMIT = 25;
          var currentHookNameInDev = null;
          var hookTypesDev = null;
          var hookTypesUpdateIndexDev = -1;
          var ignorePreviousDependencies = false;
          function mountHookTypesDev() {
            {
              var hookName = currentHookNameInDev;
              if (hookTypesDev === null) {
                hookTypesDev = [hookName];
              } else {
                hookTypesDev.push(hookName);
              }
            }
          }
          function updateHookTypesDev() {
            {
              var hookName = currentHookNameInDev;
              if (hookTypesDev !== null) {
                hookTypesUpdateIndexDev++;
                if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) {
                  warnOnHookMismatchInDev(hookName);
                }
              }
            }
          }
          function checkDepsAreArrayDev(deps) {
            {
              if (deps !== void 0 && deps !== null && !Array.isArray(deps)) {
                error("%s received a final argument that is not an array (instead, received `%s`). When specified, the final argument must be an array.", currentHookNameInDev, typeof deps);
              }
            }
          }
          function warnOnHookMismatchInDev(currentHookName) {
            {
              var componentName = getComponentName(currentlyRenderingFiber$1.type);
              if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {
                didWarnAboutMismatchedHooksForComponent.add(componentName);
                if (hookTypesDev !== null) {
                  var table = "";
                  var secondColumnStart = 30;
                  for (var i2 = 0; i2 <= hookTypesUpdateIndexDev; i2++) {
                    var oldHookName = hookTypesDev[i2];
                    var newHookName = i2 === hookTypesUpdateIndexDev ? currentHookName : oldHookName;
                    var row = i2 + 1 + ". " + oldHookName;
                    while (row.length < secondColumnStart) {
                      row += " ";
                    }
                    row += newHookName + "\n";
                    table += row;
                  }
                  error("React has detected a change in the order of Hooks called by %s. This will lead to bugs and errors if not fixed. For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks\n\n   Previous render            Next render\n   ------------------------------------------------------\n%s   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n", componentName, table);
                }
              }
            }
          }
          function throwInvalidHookError() {
            {
              {
                throw Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.");
              }
            }
          }
          function areHookInputsEqual(nextDeps, prevDeps) {
            {
              if (ignorePreviousDependencies) {
                return false;
              }
            }
            if (prevDeps === null) {
              {
                error("%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.", currentHookNameInDev);
              }
              return false;
            }
            {
              if (nextDeps.length !== prevDeps.length) {
                error("The final argument passed to %s changed size between renders. The order and size of this array must remain constant.\n\nPrevious: %s\nIncoming: %s", currentHookNameInDev, "[" + prevDeps.join(", ") + "]", "[" + nextDeps.join(", ") + "]");
              }
            }
            for (var i2 = 0; i2 < prevDeps.length && i2 < nextDeps.length; i2++) {
              if (objectIs(nextDeps[i2], prevDeps[i2])) {
                continue;
              }
              return false;
            }
            return true;
          }
          function renderWithHooks(current2, workInProgress2, Component, props, secondArg, nextRenderLanes) {
            renderLanes = nextRenderLanes;
            currentlyRenderingFiber$1 = workInProgress2;
            {
              hookTypesDev = current2 !== null ? current2._debugHookTypes : null;
              hookTypesUpdateIndexDev = -1;
              ignorePreviousDependencies = current2 !== null && current2.type !== workInProgress2.type;
            }
            workInProgress2.memoizedState = null;
            workInProgress2.updateQueue = null;
            workInProgress2.lanes = NoLanes;
            {
              if (current2 !== null && current2.memoizedState !== null) {
                ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;
              } else if (hookTypesDev !== null) {
                ReactCurrentDispatcher$1.current = HooksDispatcherOnMountWithHookTypesInDEV;
              } else {
                ReactCurrentDispatcher$1.current = HooksDispatcherOnMountInDEV;
              }
            }
            var children = Component(props, secondArg);
            if (didScheduleRenderPhaseUpdateDuringThisPass) {
              var numberOfReRenders = 0;
              do {
                didScheduleRenderPhaseUpdateDuringThisPass = false;
                if (!(numberOfReRenders < RE_RENDER_LIMIT)) {
                  {
                    throw Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
                  }
                }
                numberOfReRenders += 1;
                {
                  ignorePreviousDependencies = false;
                }
                currentHook = null;
                workInProgressHook = null;
                workInProgress2.updateQueue = null;
                {
                  hookTypesUpdateIndexDev = -1;
                }
                ReactCurrentDispatcher$1.current = HooksDispatcherOnRerenderInDEV;
                children = Component(props, secondArg);
              } while (didScheduleRenderPhaseUpdateDuringThisPass);
            }
            ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
            {
              workInProgress2._debugHookTypes = hookTypesDev;
            }
            var didRenderTooFewHooks = currentHook !== null && currentHook.next !== null;
            renderLanes = NoLanes;
            currentlyRenderingFiber$1 = null;
            currentHook = null;
            workInProgressHook = null;
            {
              currentHookNameInDev = null;
              hookTypesDev = null;
              hookTypesUpdateIndexDev = -1;
            }
            didScheduleRenderPhaseUpdate = false;
            if (!!didRenderTooFewHooks) {
              {
                throw Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement.");
              }
            }
            return children;
          }
          function bailoutHooks(current2, workInProgress2, lanes) {
            workInProgress2.updateQueue = current2.updateQueue;
            workInProgress2.flags &= ~(Passive | Update);
            current2.lanes = removeLanes(current2.lanes, lanes);
          }
          function resetHooksAfterThrow() {
            ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
            if (didScheduleRenderPhaseUpdate) {
              var hook = currentlyRenderingFiber$1.memoizedState;
              while (hook !== null) {
                var queue = hook.queue;
                if (queue !== null) {
                  queue.pending = null;
                }
                hook = hook.next;
              }
              didScheduleRenderPhaseUpdate = false;
            }
            renderLanes = NoLanes;
            currentlyRenderingFiber$1 = null;
            currentHook = null;
            workInProgressHook = null;
            {
              hookTypesDev = null;
              hookTypesUpdateIndexDev = -1;
              currentHookNameInDev = null;
              isUpdatingOpaqueValueInRenderPhase = false;
            }
            didScheduleRenderPhaseUpdateDuringThisPass = false;
          }
          function mountWorkInProgressHook() {
            var hook = {
              memoizedState: null,
              baseState: null,
              baseQueue: null,
              queue: null,
              next: null
            };
            if (workInProgressHook === null) {
              currentlyRenderingFiber$1.memoizedState = workInProgressHook = hook;
            } else {
              workInProgressHook = workInProgressHook.next = hook;
            }
            return workInProgressHook;
          }
          function updateWorkInProgressHook() {
            var nextCurrentHook;
            if (currentHook === null) {
              var current2 = currentlyRenderingFiber$1.alternate;
              if (current2 !== null) {
                nextCurrentHook = current2.memoizedState;
              } else {
                nextCurrentHook = null;
              }
            } else {
              nextCurrentHook = currentHook.next;
            }
            var nextWorkInProgressHook;
            if (workInProgressHook === null) {
              nextWorkInProgressHook = currentlyRenderingFiber$1.memoizedState;
            } else {
              nextWorkInProgressHook = workInProgressHook.next;
            }
            if (nextWorkInProgressHook !== null) {
              workInProgressHook = nextWorkInProgressHook;
              nextWorkInProgressHook = workInProgressHook.next;
              currentHook = nextCurrentHook;
            } else {
              if (!(nextCurrentHook !== null)) {
                {
                  throw Error("Rendered more hooks than during the previous render.");
                }
              }
              currentHook = nextCurrentHook;
              var newHook = {
                memoizedState: currentHook.memoizedState,
                baseState: currentHook.baseState,
                baseQueue: currentHook.baseQueue,
                queue: currentHook.queue,
                next: null
              };
              if (workInProgressHook === null) {
                currentlyRenderingFiber$1.memoizedState = workInProgressHook = newHook;
              } else {
                workInProgressHook = workInProgressHook.next = newHook;
              }
            }
            return workInProgressHook;
          }
          function createFunctionComponentUpdateQueue() {
            return {
              lastEffect: null
            };
          }
          function basicStateReducer(state, action) {
            return typeof action === "function" ? action(state) : action;
          }
          function mountReducer(reducer, initialArg, init) {
            var hook = mountWorkInProgressHook();
            var initialState;
            if (init !== void 0) {
              initialState = init(initialArg);
            } else {
              initialState = initialArg;
            }
            hook.memoizedState = hook.baseState = initialState;
            var queue = hook.queue = {
              pending: null,
              dispatch: null,
              lastRenderedReducer: reducer,
              lastRenderedState: initialState
            };
            var dispatch = queue.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, queue);
            return [hook.memoizedState, dispatch];
          }
          function updateReducer(reducer, initialArg, init) {
            var hook = updateWorkInProgressHook();
            var queue = hook.queue;
            if (!(queue !== null)) {
              {
                throw Error("Should have a queue. This is likely a bug in React. Please file an issue.");
              }
            }
            queue.lastRenderedReducer = reducer;
            var current2 = currentHook;
            var baseQueue = current2.baseQueue;
            var pendingQueue = queue.pending;
            if (pendingQueue !== null) {
              if (baseQueue !== null) {
                var baseFirst = baseQueue.next;
                var pendingFirst = pendingQueue.next;
                baseQueue.next = pendingFirst;
                pendingQueue.next = baseFirst;
              }
              {
                if (current2.baseQueue !== baseQueue) {
                  error("Internal error: Expected work-in-progress queue to be a clone. This is a bug in React.");
                }
              }
              current2.baseQueue = baseQueue = pendingQueue;
              queue.pending = null;
            }
            if (baseQueue !== null) {
              var first = baseQueue.next;
              var newState = current2.baseState;
              var newBaseState = null;
              var newBaseQueueFirst = null;
              var newBaseQueueLast = null;
              var update = first;
              do {
                var updateLane = update.lane;
                if (!isSubsetOfLanes(renderLanes, updateLane)) {
                  var clone = {
                    lane: updateLane,
                    action: update.action,
                    eagerReducer: update.eagerReducer,
                    eagerState: update.eagerState,
                    next: null
                  };
                  if (newBaseQueueLast === null) {
                    newBaseQueueFirst = newBaseQueueLast = clone;
                    newBaseState = newState;
                  } else {
                    newBaseQueueLast = newBaseQueueLast.next = clone;
                  }
                  currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, updateLane);
                  markSkippedUpdateLanes(updateLane);
                } else {
                  if (newBaseQueueLast !== null) {
                    var _clone = {
                      lane: NoLane,
                      action: update.action,
                      eagerReducer: update.eagerReducer,
                      eagerState: update.eagerState,
                      next: null
                    };
                    newBaseQueueLast = newBaseQueueLast.next = _clone;
                  }
                  if (update.eagerReducer === reducer) {
                    newState = update.eagerState;
                  } else {
                    var action = update.action;
                    newState = reducer(newState, action);
                  }
                }
                update = update.next;
              } while (update !== null && update !== first);
              if (newBaseQueueLast === null) {
                newBaseState = newState;
              } else {
                newBaseQueueLast.next = newBaseQueueFirst;
              }
              if (!objectIs(newState, hook.memoizedState)) {
                markWorkInProgressReceivedUpdate();
              }
              hook.memoizedState = newState;
              hook.baseState = newBaseState;
              hook.baseQueue = newBaseQueueLast;
              queue.lastRenderedState = newState;
            }
            var dispatch = queue.dispatch;
            return [hook.memoizedState, dispatch];
          }
          function rerenderReducer(reducer, initialArg, init) {
            var hook = updateWorkInProgressHook();
            var queue = hook.queue;
            if (!(queue !== null)) {
              {
                throw Error("Should have a queue. This is likely a bug in React. Please file an issue.");
              }
            }
            queue.lastRenderedReducer = reducer;
            var dispatch = queue.dispatch;
            var lastRenderPhaseUpdate = queue.pending;
            var newState = hook.memoizedState;
            if (lastRenderPhaseUpdate !== null) {
              queue.pending = null;
              var firstRenderPhaseUpdate = lastRenderPhaseUpdate.next;
              var update = firstRenderPhaseUpdate;
              do {
                var action = update.action;
                newState = reducer(newState, action);
                update = update.next;
              } while (update !== firstRenderPhaseUpdate);
              if (!objectIs(newState, hook.memoizedState)) {
                markWorkInProgressReceivedUpdate();
              }
              hook.memoizedState = newState;
              if (hook.baseQueue === null) {
                hook.baseState = newState;
              }
              queue.lastRenderedState = newState;
            }
            return [newState, dispatch];
          }
          function readFromUnsubcribedMutableSource(root2, source, getSnapshot) {
            {
              warnAboutMultipleRenderersDEV(source);
            }
            var getVersion = source._getVersion;
            var version = getVersion(source._source);
            var isSafeToReadFromSource = false;
            var currentRenderVersion = getWorkInProgressVersion(source);
            if (currentRenderVersion !== null) {
              isSafeToReadFromSource = currentRenderVersion === version;
            } else {
              isSafeToReadFromSource = isSubsetOfLanes(renderLanes, root2.mutableReadLanes);
              if (isSafeToReadFromSource) {
                setWorkInProgressVersion(source, version);
              }
            }
            if (isSafeToReadFromSource) {
              var snapshot = getSnapshot(source._source);
              {
                if (typeof snapshot === "function") {
                  error("Mutable source should not return a function as the snapshot value. Functions may close over mutable values and cause tearing.");
                }
              }
              return snapshot;
            } else {
              markSourceAsDirty(source);
              {
                {
                  throw Error("Cannot read from mutable source during the current render without tearing. This is a bug in React. Please file an issue.");
                }
              }
            }
          }
          function useMutableSource(hook, source, getSnapshot, subscribe) {
            var root2 = getWorkInProgressRoot();
            if (!(root2 !== null)) {
              {
                throw Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
              }
            }
            var getVersion = source._getVersion;
            var version = getVersion(source._source);
            var dispatcher = ReactCurrentDispatcher$1.current;
            var _dispatcher$useState = dispatcher.useState(function() {
              return readFromUnsubcribedMutableSource(root2, source, getSnapshot);
            }), currentSnapshot = _dispatcher$useState[0], setSnapshot = _dispatcher$useState[1];
            var snapshot = currentSnapshot;
            var stateHook = workInProgressHook;
            var memoizedState = hook.memoizedState;
            var refs = memoizedState.refs;
            var prevGetSnapshot = refs.getSnapshot;
            var prevSource = memoizedState.source;
            var prevSubscribe = memoizedState.subscribe;
            var fiber = currentlyRenderingFiber$1;
            hook.memoizedState = {
              refs,
              source,
              subscribe
            };
            dispatcher.useEffect(function() {
              refs.getSnapshot = getSnapshot;
              refs.setSnapshot = setSnapshot;
              var maybeNewVersion = getVersion(source._source);
              if (!objectIs(version, maybeNewVersion)) {
                var maybeNewSnapshot = getSnapshot(source._source);
                {
                  if (typeof maybeNewSnapshot === "function") {
                    error("Mutable source should not return a function as the snapshot value. Functions may close over mutable values and cause tearing.");
                  }
                }
                if (!objectIs(snapshot, maybeNewSnapshot)) {
                  setSnapshot(maybeNewSnapshot);
                  var lane = requestUpdateLane(fiber);
                  markRootMutableRead(root2, lane);
                }
                markRootEntangled(root2, root2.mutableReadLanes);
              }
            }, [getSnapshot, source, subscribe]);
            dispatcher.useEffect(function() {
              var handleChange = function() {
                var latestGetSnapshot = refs.getSnapshot;
                var latestSetSnapshot = refs.setSnapshot;
                try {
                  latestSetSnapshot(latestGetSnapshot(source._source));
                  var lane = requestUpdateLane(fiber);
                  markRootMutableRead(root2, lane);
                } catch (error2) {
                  latestSetSnapshot(function() {
                    throw error2;
                  });
                }
              };
              var unsubscribe = subscribe(source._source, handleChange);
              {
                if (typeof unsubscribe !== "function") {
                  error("Mutable source subscribe function must return an unsubscribe function.");
                }
              }
              return unsubscribe;
            }, [source, subscribe]);
            if (!objectIs(prevGetSnapshot, getSnapshot) || !objectIs(prevSource, source) || !objectIs(prevSubscribe, subscribe)) {
              var newQueue = {
                pending: null,
                dispatch: null,
                lastRenderedReducer: basicStateReducer,
                lastRenderedState: snapshot
              };
              newQueue.dispatch = setSnapshot = dispatchAction.bind(null, currentlyRenderingFiber$1, newQueue);
              stateHook.queue = newQueue;
              stateHook.baseQueue = null;
              snapshot = readFromUnsubcribedMutableSource(root2, source, getSnapshot);
              stateHook.memoizedState = stateHook.baseState = snapshot;
            }
            return snapshot;
          }
          function mountMutableSource(source, getSnapshot, subscribe) {
            var hook = mountWorkInProgressHook();
            hook.memoizedState = {
              refs: {
                getSnapshot,
                setSnapshot: null
              },
              source,
              subscribe
            };
            return useMutableSource(hook, source, getSnapshot, subscribe);
          }
          function updateMutableSource(source, getSnapshot, subscribe) {
            var hook = updateWorkInProgressHook();
            return useMutableSource(hook, source, getSnapshot, subscribe);
          }
          function mountState(initialState) {
            var hook = mountWorkInProgressHook();
            if (typeof initialState === "function") {
              initialState = initialState();
            }
            hook.memoizedState = hook.baseState = initialState;
            var queue = hook.queue = {
              pending: null,
              dispatch: null,
              lastRenderedReducer: basicStateReducer,
              lastRenderedState: initialState
            };
            var dispatch = queue.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, queue);
            return [hook.memoizedState, dispatch];
          }
          function updateState(initialState) {
            return updateReducer(basicStateReducer);
          }
          function rerenderState(initialState) {
            return rerenderReducer(basicStateReducer);
          }
          function pushEffect(tag, create, destroy, deps) {
            var effect = {
              tag,
              create,
              destroy,
              deps,
              next: null
            };
            var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;
            if (componentUpdateQueue === null) {
              componentUpdateQueue = createFunctionComponentUpdateQueue();
              currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;
              componentUpdateQueue.lastEffect = effect.next = effect;
            } else {
              var lastEffect = componentUpdateQueue.lastEffect;
              if (lastEffect === null) {
                componentUpdateQueue.lastEffect = effect.next = effect;
              } else {
                var firstEffect = lastEffect.next;
                lastEffect.next = effect;
                effect.next = firstEffect;
                componentUpdateQueue.lastEffect = effect;
              }
            }
            return effect;
          }
          function mountRef(initialValue) {
            var hook = mountWorkInProgressHook();
            var ref = {
              current: initialValue
            };
            {
              Object.seal(ref);
            }
            hook.memoizedState = ref;
            return ref;
          }
          function updateRef(initialValue) {
            var hook = updateWorkInProgressHook();
            return hook.memoizedState;
          }
          function mountEffectImpl(fiberFlags, hookFlags, create, deps) {
            var hook = mountWorkInProgressHook();
            var nextDeps = deps === void 0 ? null : deps;
            currentlyRenderingFiber$1.flags |= fiberFlags;
            hook.memoizedState = pushEffect(HasEffect | hookFlags, create, void 0, nextDeps);
          }
          function updateEffectImpl(fiberFlags, hookFlags, create, deps) {
            var hook = updateWorkInProgressHook();
            var nextDeps = deps === void 0 ? null : deps;
            var destroy = void 0;
            if (currentHook !== null) {
              var prevEffect = currentHook.memoizedState;
              destroy = prevEffect.destroy;
              if (nextDeps !== null) {
                var prevDeps = prevEffect.deps;
                if (areHookInputsEqual(nextDeps, prevDeps)) {
                  pushEffect(hookFlags, create, destroy, nextDeps);
                  return;
                }
              }
            }
            currentlyRenderingFiber$1.flags |= fiberFlags;
            hook.memoizedState = pushEffect(HasEffect | hookFlags, create, destroy, nextDeps);
          }
          function mountEffect(create, deps) {
            {
              if (typeof jest !== "undefined") {
                warnIfNotCurrentlyActingEffectsInDEV(currentlyRenderingFiber$1);
              }
            }
            return mountEffectImpl(Update | Passive, Passive$1, create, deps);
          }
          function updateEffect(create, deps) {
            {
              if (typeof jest !== "undefined") {
                warnIfNotCurrentlyActingEffectsInDEV(currentlyRenderingFiber$1);
              }
            }
            return updateEffectImpl(Update | Passive, Passive$1, create, deps);
          }
          function mountLayoutEffect(create, deps) {
            return mountEffectImpl(Update, Layout, create, deps);
          }
          function updateLayoutEffect(create, deps) {
            return updateEffectImpl(Update, Layout, create, deps);
          }
          function imperativeHandleEffect(create, ref) {
            if (typeof ref === "function") {
              var refCallback = ref;
              var _inst = create();
              refCallback(_inst);
              return function() {
                refCallback(null);
              };
            } else if (ref !== null && ref !== void 0) {
              var refObject = ref;
              {
                if (!refObject.hasOwnProperty("current")) {
                  error("Expected useImperativeHandle() first argument to either be a ref callback or React.createRef() object. Instead received: %s.", "an object with keys {" + Object.keys(refObject).join(", ") + "}");
                }
              }
              var _inst2 = create();
              refObject.current = _inst2;
              return function() {
                refObject.current = null;
              };
            }
          }
          function mountImperativeHandle(ref, create, deps) {
            {
              if (typeof create !== "function") {
                error("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", create !== null ? typeof create : "null");
              }
            }
            var effectDeps = deps !== null && deps !== void 0 ? deps.concat([ref]) : null;
            return mountEffectImpl(Update, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
          }
          function updateImperativeHandle(ref, create, deps) {
            {
              if (typeof create !== "function") {
                error("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", create !== null ? typeof create : "null");
              }
            }
            var effectDeps = deps !== null && deps !== void 0 ? deps.concat([ref]) : null;
            return updateEffectImpl(Update, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
          }
          function mountDebugValue(value, formatterFn) {
          }
          var updateDebugValue = mountDebugValue;
          function mountCallback(callback, deps) {
            var hook = mountWorkInProgressHook();
            var nextDeps = deps === void 0 ? null : deps;
            hook.memoizedState = [callback, nextDeps];
            return callback;
          }
          function updateCallback(callback, deps) {
            var hook = updateWorkInProgressHook();
            var nextDeps = deps === void 0 ? null : deps;
            var prevState = hook.memoizedState;
            if (prevState !== null) {
              if (nextDeps !== null) {
                var prevDeps = prevState[1];
                if (areHookInputsEqual(nextDeps, prevDeps)) {
                  return prevState[0];
                }
              }
            }
            hook.memoizedState = [callback, nextDeps];
            return callback;
          }
          function mountMemo(nextCreate, deps) {
            var hook = mountWorkInProgressHook();
            var nextDeps = deps === void 0 ? null : deps;
            var nextValue = nextCreate();
            hook.memoizedState = [nextValue, nextDeps];
            return nextValue;
          }
          function updateMemo(nextCreate, deps) {
            var hook = updateWorkInProgressHook();
            var nextDeps = deps === void 0 ? null : deps;
            var prevState = hook.memoizedState;
            if (prevState !== null) {
              if (nextDeps !== null) {
                var prevDeps = prevState[1];
                if (areHookInputsEqual(nextDeps, prevDeps)) {
                  return prevState[0];
                }
              }
            }
            var nextValue = nextCreate();
            hook.memoizedState = [nextValue, nextDeps];
            return nextValue;
          }
          function mountDeferredValue(value) {
            var _mountState = mountState(value), prevValue = _mountState[0], setValue = _mountState[1];
            mountEffect(function() {
              var prevTransition = ReactCurrentBatchConfig$1.transition;
              ReactCurrentBatchConfig$1.transition = 1;
              try {
                setValue(value);
              } finally {
                ReactCurrentBatchConfig$1.transition = prevTransition;
              }
            }, [value]);
            return prevValue;
          }
          function updateDeferredValue(value) {
            var _updateState = updateState(), prevValue = _updateState[0], setValue = _updateState[1];
            updateEffect(function() {
              var prevTransition = ReactCurrentBatchConfig$1.transition;
              ReactCurrentBatchConfig$1.transition = 1;
              try {
                setValue(value);
              } finally {
                ReactCurrentBatchConfig$1.transition = prevTransition;
              }
            }, [value]);
            return prevValue;
          }
          function rerenderDeferredValue(value) {
            var _rerenderState = rerenderState(), prevValue = _rerenderState[0], setValue = _rerenderState[1];
            updateEffect(function() {
              var prevTransition = ReactCurrentBatchConfig$1.transition;
              ReactCurrentBatchConfig$1.transition = 1;
              try {
                setValue(value);
              } finally {
                ReactCurrentBatchConfig$1.transition = prevTransition;
              }
            }, [value]);
            return prevValue;
          }
          function startTransition(setPending, callback) {
            var priorityLevel = getCurrentPriorityLevel();
            {
              runWithPriority$1(priorityLevel < UserBlockingPriority$2 ? UserBlockingPriority$2 : priorityLevel, function() {
                setPending(true);
              });
              runWithPriority$1(priorityLevel > NormalPriority$1 ? NormalPriority$1 : priorityLevel, function() {
                var prevTransition = ReactCurrentBatchConfig$1.transition;
                ReactCurrentBatchConfig$1.transition = 1;
                try {
                  setPending(false);
                  callback();
                } finally {
                  ReactCurrentBatchConfig$1.transition = prevTransition;
                }
              });
            }
          }
          function mountTransition() {
            var _mountState2 = mountState(false), isPending = _mountState2[0], setPending = _mountState2[1];
            var start = startTransition.bind(null, setPending);
            mountRef(start);
            return [start, isPending];
          }
          function updateTransition() {
            var _updateState2 = updateState(), isPending = _updateState2[0];
            var startRef = updateRef();
            var start = startRef.current;
            return [start, isPending];
          }
          function rerenderTransition() {
            var _rerenderState2 = rerenderState(), isPending = _rerenderState2[0];
            var startRef = updateRef();
            var start = startRef.current;
            return [start, isPending];
          }
          var isUpdatingOpaqueValueInRenderPhase = false;
          function getIsUpdatingOpaqueValueInRenderPhaseInDEV() {
            {
              return isUpdatingOpaqueValueInRenderPhase;
            }
          }
          function warnOnOpaqueIdentifierAccessInDEV(fiber) {
            {
              var name = getComponentName(fiber.type) || "Unknown";
              if (getIsRendering() && !didWarnAboutUseOpaqueIdentifier[name]) {
                error("The object passed back from useOpaqueIdentifier is meant to be passed through to attributes only. Do not read the value directly.");
                didWarnAboutUseOpaqueIdentifier[name] = true;
              }
            }
          }
          function mountOpaqueIdentifier() {
            var makeId = makeClientIdInDEV.bind(null, warnOnOpaqueIdentifierAccessInDEV.bind(null, currentlyRenderingFiber$1));
            if (getIsHydrating()) {
              var didUpgrade = false;
              var fiber = currentlyRenderingFiber$1;
              var readValue = function() {
                if (!didUpgrade) {
                  didUpgrade = true;
                  {
                    isUpdatingOpaqueValueInRenderPhase = true;
                    setId(makeId());
                    isUpdatingOpaqueValueInRenderPhase = false;
                    warnOnOpaqueIdentifierAccessInDEV(fiber);
                  }
                }
                {
                  {
                    throw Error("The object passed back from useOpaqueIdentifier is meant to be passed through to attributes only. Do not read the value directly.");
                  }
                }
              };
              var id = makeOpaqueHydratingObject(readValue);
              var setId = mountState(id)[1];
              if ((currentlyRenderingFiber$1.mode & BlockingMode) === NoMode) {
                currentlyRenderingFiber$1.flags |= Update | Passive;
                pushEffect(HasEffect | Passive$1, function() {
                  setId(makeId());
                }, void 0, null);
              }
              return id;
            } else {
              var _id = makeId();
              mountState(_id);
              return _id;
            }
          }
          function updateOpaqueIdentifier() {
            var id = updateState()[0];
            return id;
          }
          function rerenderOpaqueIdentifier() {
            var id = rerenderState()[0];
            return id;
          }
          function dispatchAction(fiber, queue, action) {
            {
              if (typeof arguments[3] === "function") {
                error("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
              }
            }
            var eventTime = requestEventTime();
            var lane = requestUpdateLane(fiber);
            var update = {
              lane,
              action,
              eagerReducer: null,
              eagerState: null,
              next: null
            };
            var pending = queue.pending;
            if (pending === null) {
              update.next = update;
            } else {
              update.next = pending.next;
              pending.next = update;
            }
            queue.pending = update;
            var alternate = fiber.alternate;
            if (fiber === currentlyRenderingFiber$1 || alternate !== null && alternate === currentlyRenderingFiber$1) {
              didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate = true;
            } else {
              if (fiber.lanes === NoLanes && (alternate === null || alternate.lanes === NoLanes)) {
                var lastRenderedReducer = queue.lastRenderedReducer;
                if (lastRenderedReducer !== null) {
                  var prevDispatcher;
                  {
                    prevDispatcher = ReactCurrentDispatcher$1.current;
                    ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
                  }
                  try {
                    var currentState = queue.lastRenderedState;
                    var eagerState = lastRenderedReducer(currentState, action);
                    update.eagerReducer = lastRenderedReducer;
                    update.eagerState = eagerState;
                    if (objectIs(eagerState, currentState)) {
                      return;
                    }
                  } catch (error2) {
                  } finally {
                    {
                      ReactCurrentDispatcher$1.current = prevDispatcher;
                    }
                  }
                }
              }
              {
                if (typeof jest !== "undefined") {
                  warnIfNotScopedWithMatchingAct(fiber);
                  warnIfNotCurrentlyActingUpdatesInDev(fiber);
                }
              }
              scheduleUpdateOnFiber(fiber, lane, eventTime);
            }
          }
          var ContextOnlyDispatcher = {
            readContext,
            useCallback: throwInvalidHookError,
            useContext: throwInvalidHookError,
            useEffect: throwInvalidHookError,
            useImperativeHandle: throwInvalidHookError,
            useLayoutEffect: throwInvalidHookError,
            useMemo: throwInvalidHookError,
            useReducer: throwInvalidHookError,
            useRef: throwInvalidHookError,
            useState: throwInvalidHookError,
            useDebugValue: throwInvalidHookError,
            useDeferredValue: throwInvalidHookError,
            useTransition: throwInvalidHookError,
            useMutableSource: throwInvalidHookError,
            useOpaqueIdentifier: throwInvalidHookError,
            unstable_isNewReconciler: enableNewReconciler
          };
          var HooksDispatcherOnMountInDEV = null;
          var HooksDispatcherOnMountWithHookTypesInDEV = null;
          var HooksDispatcherOnUpdateInDEV = null;
          var HooksDispatcherOnRerenderInDEV = null;
          var InvalidNestedHooksDispatcherOnMountInDEV = null;
          var InvalidNestedHooksDispatcherOnUpdateInDEV = null;
          var InvalidNestedHooksDispatcherOnRerenderInDEV = null;
          {
            var warnInvalidContextAccess = function() {
              error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
            };
            var warnInvalidHookAccess = function() {
              error("Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://reactjs.org/link/rules-of-hooks");
            };
            HooksDispatcherOnMountInDEV = {
              readContext: function(context, observedBits) {
                return readContext(context, observedBits);
              },
              useCallback: function(callback, deps) {
                currentHookNameInDev = "useCallback";
                mountHookTypesDev();
                checkDepsAreArrayDev(deps);
                return mountCallback(callback, deps);
              },
              useContext: function(context, observedBits) {
                currentHookNameInDev = "useContext";
                mountHookTypesDev();
                return readContext(context, observedBits);
              },
              useEffect: function(create, deps) {
                currentHookNameInDev = "useEffect";
                mountHookTypesDev();
                checkDepsAreArrayDev(deps);
                return mountEffect(create, deps);
              },
              useImperativeHandle: function(ref, create, deps) {
                currentHookNameInDev = "useImperativeHandle";
                mountHookTypesDev();
                checkDepsAreArrayDev(deps);
                return mountImperativeHandle(ref, create, deps);
              },
              useLayoutEffect: function(create, deps) {
                currentHookNameInDev = "useLayoutEffect";
                mountHookTypesDev();
                checkDepsAreArrayDev(deps);
                return mountLayoutEffect(create, deps);
              },
              useMemo: function(create, deps) {
                currentHookNameInDev = "useMemo";
                mountHookTypesDev();
                checkDepsAreArrayDev(deps);
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
                try {
                  return mountMemo(create, deps);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useReducer: function(reducer, initialArg, init) {
                currentHookNameInDev = "useReducer";
                mountHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
                try {
                  return mountReducer(reducer, initialArg, init);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useRef: function(initialValue) {
                currentHookNameInDev = "useRef";
                mountHookTypesDev();
                return mountRef(initialValue);
              },
              useState: function(initialState) {
                currentHookNameInDev = "useState";
                mountHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
                try {
                  return mountState(initialState);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useDebugValue: function(value, formatterFn) {
                currentHookNameInDev = "useDebugValue";
                mountHookTypesDev();
                return mountDebugValue();
              },
              useDeferredValue: function(value) {
                currentHookNameInDev = "useDeferredValue";
                mountHookTypesDev();
                return mountDeferredValue(value);
              },
              useTransition: function() {
                currentHookNameInDev = "useTransition";
                mountHookTypesDev();
                return mountTransition();
              },
              useMutableSource: function(source, getSnapshot, subscribe) {
                currentHookNameInDev = "useMutableSource";
                mountHookTypesDev();
                return mountMutableSource(source, getSnapshot, subscribe);
              },
              useOpaqueIdentifier: function() {
                currentHookNameInDev = "useOpaqueIdentifier";
                mountHookTypesDev();
                return mountOpaqueIdentifier();
              },
              unstable_isNewReconciler: enableNewReconciler
            };
            HooksDispatcherOnMountWithHookTypesInDEV = {
              readContext: function(context, observedBits) {
                return readContext(context, observedBits);
              },
              useCallback: function(callback, deps) {
                currentHookNameInDev = "useCallback";
                updateHookTypesDev();
                return mountCallback(callback, deps);
              },
              useContext: function(context, observedBits) {
                currentHookNameInDev = "useContext";
                updateHookTypesDev();
                return readContext(context, observedBits);
              },
              useEffect: function(create, deps) {
                currentHookNameInDev = "useEffect";
                updateHookTypesDev();
                return mountEffect(create, deps);
              },
              useImperativeHandle: function(ref, create, deps) {
                currentHookNameInDev = "useImperativeHandle";
                updateHookTypesDev();
                return mountImperativeHandle(ref, create, deps);
              },
              useLayoutEffect: function(create, deps) {
                currentHookNameInDev = "useLayoutEffect";
                updateHookTypesDev();
                return mountLayoutEffect(create, deps);
              },
              useMemo: function(create, deps) {
                currentHookNameInDev = "useMemo";
                updateHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
                try {
                  return mountMemo(create, deps);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useReducer: function(reducer, initialArg, init) {
                currentHookNameInDev = "useReducer";
                updateHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
                try {
                  return mountReducer(reducer, initialArg, init);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useRef: function(initialValue) {
                currentHookNameInDev = "useRef";
                updateHookTypesDev();
                return mountRef(initialValue);
              },
              useState: function(initialState) {
                currentHookNameInDev = "useState";
                updateHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
                try {
                  return mountState(initialState);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useDebugValue: function(value, formatterFn) {
                currentHookNameInDev = "useDebugValue";
                updateHookTypesDev();
                return mountDebugValue();
              },
              useDeferredValue: function(value) {
                currentHookNameInDev = "useDeferredValue";
                updateHookTypesDev();
                return mountDeferredValue(value);
              },
              useTransition: function() {
                currentHookNameInDev = "useTransition";
                updateHookTypesDev();
                return mountTransition();
              },
              useMutableSource: function(source, getSnapshot, subscribe) {
                currentHookNameInDev = "useMutableSource";
                updateHookTypesDev();
                return mountMutableSource(source, getSnapshot, subscribe);
              },
              useOpaqueIdentifier: function() {
                currentHookNameInDev = "useOpaqueIdentifier";
                updateHookTypesDev();
                return mountOpaqueIdentifier();
              },
              unstable_isNewReconciler: enableNewReconciler
            };
            HooksDispatcherOnUpdateInDEV = {
              readContext: function(context, observedBits) {
                return readContext(context, observedBits);
              },
              useCallback: function(callback, deps) {
                currentHookNameInDev = "useCallback";
                updateHookTypesDev();
                return updateCallback(callback, deps);
              },
              useContext: function(context, observedBits) {
                currentHookNameInDev = "useContext";
                updateHookTypesDev();
                return readContext(context, observedBits);
              },
              useEffect: function(create, deps) {
                currentHookNameInDev = "useEffect";
                updateHookTypesDev();
                return updateEffect(create, deps);
              },
              useImperativeHandle: function(ref, create, deps) {
                currentHookNameInDev = "useImperativeHandle";
                updateHookTypesDev();
                return updateImperativeHandle(ref, create, deps);
              },
              useLayoutEffect: function(create, deps) {
                currentHookNameInDev = "useLayoutEffect";
                updateHookTypesDev();
                return updateLayoutEffect(create, deps);
              },
              useMemo: function(create, deps) {
                currentHookNameInDev = "useMemo";
                updateHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
                try {
                  return updateMemo(create, deps);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useReducer: function(reducer, initialArg, init) {
                currentHookNameInDev = "useReducer";
                updateHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
                try {
                  return updateReducer(reducer, initialArg, init);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useRef: function(initialValue) {
                currentHookNameInDev = "useRef";
                updateHookTypesDev();
                return updateRef();
              },
              useState: function(initialState) {
                currentHookNameInDev = "useState";
                updateHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
                try {
                  return updateState(initialState);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useDebugValue: function(value, formatterFn) {
                currentHookNameInDev = "useDebugValue";
                updateHookTypesDev();
                return updateDebugValue();
              },
              useDeferredValue: function(value) {
                currentHookNameInDev = "useDeferredValue";
                updateHookTypesDev();
                return updateDeferredValue(value);
              },
              useTransition: function() {
                currentHookNameInDev = "useTransition";
                updateHookTypesDev();
                return updateTransition();
              },
              useMutableSource: function(source, getSnapshot, subscribe) {
                currentHookNameInDev = "useMutableSource";
                updateHookTypesDev();
                return updateMutableSource(source, getSnapshot, subscribe);
              },
              useOpaqueIdentifier: function() {
                currentHookNameInDev = "useOpaqueIdentifier";
                updateHookTypesDev();
                return updateOpaqueIdentifier();
              },
              unstable_isNewReconciler: enableNewReconciler
            };
            HooksDispatcherOnRerenderInDEV = {
              readContext: function(context, observedBits) {
                return readContext(context, observedBits);
              },
              useCallback: function(callback, deps) {
                currentHookNameInDev = "useCallback";
                updateHookTypesDev();
                return updateCallback(callback, deps);
              },
              useContext: function(context, observedBits) {
                currentHookNameInDev = "useContext";
                updateHookTypesDev();
                return readContext(context, observedBits);
              },
              useEffect: function(create, deps) {
                currentHookNameInDev = "useEffect";
                updateHookTypesDev();
                return updateEffect(create, deps);
              },
              useImperativeHandle: function(ref, create, deps) {
                currentHookNameInDev = "useImperativeHandle";
                updateHookTypesDev();
                return updateImperativeHandle(ref, create, deps);
              },
              useLayoutEffect: function(create, deps) {
                currentHookNameInDev = "useLayoutEffect";
                updateHookTypesDev();
                return updateLayoutEffect(create, deps);
              },
              useMemo: function(create, deps) {
                currentHookNameInDev = "useMemo";
                updateHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
                try {
                  return updateMemo(create, deps);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useReducer: function(reducer, initialArg, init) {
                currentHookNameInDev = "useReducer";
                updateHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
                try {
                  return rerenderReducer(reducer, initialArg, init);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useRef: function(initialValue) {
                currentHookNameInDev = "useRef";
                updateHookTypesDev();
                return updateRef();
              },
              useState: function(initialState) {
                currentHookNameInDev = "useState";
                updateHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
                try {
                  return rerenderState(initialState);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useDebugValue: function(value, formatterFn) {
                currentHookNameInDev = "useDebugValue";
                updateHookTypesDev();
                return updateDebugValue();
              },
              useDeferredValue: function(value) {
                currentHookNameInDev = "useDeferredValue";
                updateHookTypesDev();
                return rerenderDeferredValue(value);
              },
              useTransition: function() {
                currentHookNameInDev = "useTransition";
                updateHookTypesDev();
                return rerenderTransition();
              },
              useMutableSource: function(source, getSnapshot, subscribe) {
                currentHookNameInDev = "useMutableSource";
                updateHookTypesDev();
                return updateMutableSource(source, getSnapshot, subscribe);
              },
              useOpaqueIdentifier: function() {
                currentHookNameInDev = "useOpaqueIdentifier";
                updateHookTypesDev();
                return rerenderOpaqueIdentifier();
              },
              unstable_isNewReconciler: enableNewReconciler
            };
            InvalidNestedHooksDispatcherOnMountInDEV = {
              readContext: function(context, observedBits) {
                warnInvalidContextAccess();
                return readContext(context, observedBits);
              },
              useCallback: function(callback, deps) {
                currentHookNameInDev = "useCallback";
                warnInvalidHookAccess();
                mountHookTypesDev();
                return mountCallback(callback, deps);
              },
              useContext: function(context, observedBits) {
                currentHookNameInDev = "useContext";
                warnInvalidHookAccess();
                mountHookTypesDev();
                return readContext(context, observedBits);
              },
              useEffect: function(create, deps) {
                currentHookNameInDev = "useEffect";
                warnInvalidHookAccess();
                mountHookTypesDev();
                return mountEffect(create, deps);
              },
              useImperativeHandle: function(ref, create, deps) {
                currentHookNameInDev = "useImperativeHandle";
                warnInvalidHookAccess();
                mountHookTypesDev();
                return mountImperativeHandle(ref, create, deps);
              },
              useLayoutEffect: function(create, deps) {
                currentHookNameInDev = "useLayoutEffect";
                warnInvalidHookAccess();
                mountHookTypesDev();
                return mountLayoutEffect(create, deps);
              },
              useMemo: function(create, deps) {
                currentHookNameInDev = "useMemo";
                warnInvalidHookAccess();
                mountHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
                try {
                  return mountMemo(create, deps);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useReducer: function(reducer, initialArg, init) {
                currentHookNameInDev = "useReducer";
                warnInvalidHookAccess();
                mountHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
                try {
                  return mountReducer(reducer, initialArg, init);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useRef: function(initialValue) {
                currentHookNameInDev = "useRef";
                warnInvalidHookAccess();
                mountHookTypesDev();
                return mountRef(initialValue);
              },
              useState: function(initialState) {
                currentHookNameInDev = "useState";
                warnInvalidHookAccess();
                mountHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
                try {
                  return mountState(initialState);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useDebugValue: function(value, formatterFn) {
                currentHookNameInDev = "useDebugValue";
                warnInvalidHookAccess();
                mountHookTypesDev();
                return mountDebugValue();
              },
              useDeferredValue: function(value) {
                currentHookNameInDev = "useDeferredValue";
                warnInvalidHookAccess();
                mountHookTypesDev();
                return mountDeferredValue(value);
              },
              useTransition: function() {
                currentHookNameInDev = "useTransition";
                warnInvalidHookAccess();
                mountHookTypesDev();
                return mountTransition();
              },
              useMutableSource: function(source, getSnapshot, subscribe) {
                currentHookNameInDev = "useMutableSource";
                warnInvalidHookAccess();
                mountHookTypesDev();
                return mountMutableSource(source, getSnapshot, subscribe);
              },
              useOpaqueIdentifier: function() {
                currentHookNameInDev = "useOpaqueIdentifier";
                warnInvalidHookAccess();
                mountHookTypesDev();
                return mountOpaqueIdentifier();
              },
              unstable_isNewReconciler: enableNewReconciler
            };
            InvalidNestedHooksDispatcherOnUpdateInDEV = {
              readContext: function(context, observedBits) {
                warnInvalidContextAccess();
                return readContext(context, observedBits);
              },
              useCallback: function(callback, deps) {
                currentHookNameInDev = "useCallback";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return updateCallback(callback, deps);
              },
              useContext: function(context, observedBits) {
                currentHookNameInDev = "useContext";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return readContext(context, observedBits);
              },
              useEffect: function(create, deps) {
                currentHookNameInDev = "useEffect";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return updateEffect(create, deps);
              },
              useImperativeHandle: function(ref, create, deps) {
                currentHookNameInDev = "useImperativeHandle";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return updateImperativeHandle(ref, create, deps);
              },
              useLayoutEffect: function(create, deps) {
                currentHookNameInDev = "useLayoutEffect";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return updateLayoutEffect(create, deps);
              },
              useMemo: function(create, deps) {
                currentHookNameInDev = "useMemo";
                warnInvalidHookAccess();
                updateHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
                try {
                  return updateMemo(create, deps);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useReducer: function(reducer, initialArg, init) {
                currentHookNameInDev = "useReducer";
                warnInvalidHookAccess();
                updateHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
                try {
                  return updateReducer(reducer, initialArg, init);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useRef: function(initialValue) {
                currentHookNameInDev = "useRef";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return updateRef();
              },
              useState: function(initialState) {
                currentHookNameInDev = "useState";
                warnInvalidHookAccess();
                updateHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
                try {
                  return updateState(initialState);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useDebugValue: function(value, formatterFn) {
                currentHookNameInDev = "useDebugValue";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return updateDebugValue();
              },
              useDeferredValue: function(value) {
                currentHookNameInDev = "useDeferredValue";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return updateDeferredValue(value);
              },
              useTransition: function() {
                currentHookNameInDev = "useTransition";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return updateTransition();
              },
              useMutableSource: function(source, getSnapshot, subscribe) {
                currentHookNameInDev = "useMutableSource";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return updateMutableSource(source, getSnapshot, subscribe);
              },
              useOpaqueIdentifier: function() {
                currentHookNameInDev = "useOpaqueIdentifier";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return updateOpaqueIdentifier();
              },
              unstable_isNewReconciler: enableNewReconciler
            };
            InvalidNestedHooksDispatcherOnRerenderInDEV = {
              readContext: function(context, observedBits) {
                warnInvalidContextAccess();
                return readContext(context, observedBits);
              },
              useCallback: function(callback, deps) {
                currentHookNameInDev = "useCallback";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return updateCallback(callback, deps);
              },
              useContext: function(context, observedBits) {
                currentHookNameInDev = "useContext";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return readContext(context, observedBits);
              },
              useEffect: function(create, deps) {
                currentHookNameInDev = "useEffect";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return updateEffect(create, deps);
              },
              useImperativeHandle: function(ref, create, deps) {
                currentHookNameInDev = "useImperativeHandle";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return updateImperativeHandle(ref, create, deps);
              },
              useLayoutEffect: function(create, deps) {
                currentHookNameInDev = "useLayoutEffect";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return updateLayoutEffect(create, deps);
              },
              useMemo: function(create, deps) {
                currentHookNameInDev = "useMemo";
                warnInvalidHookAccess();
                updateHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
                try {
                  return updateMemo(create, deps);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useReducer: function(reducer, initialArg, init) {
                currentHookNameInDev = "useReducer";
                warnInvalidHookAccess();
                updateHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
                try {
                  return rerenderReducer(reducer, initialArg, init);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useRef: function(initialValue) {
                currentHookNameInDev = "useRef";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return updateRef();
              },
              useState: function(initialState) {
                currentHookNameInDev = "useState";
                warnInvalidHookAccess();
                updateHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
                try {
                  return rerenderState(initialState);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useDebugValue: function(value, formatterFn) {
                currentHookNameInDev = "useDebugValue";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return updateDebugValue();
              },
              useDeferredValue: function(value) {
                currentHookNameInDev = "useDeferredValue";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return rerenderDeferredValue(value);
              },
              useTransition: function() {
                currentHookNameInDev = "useTransition";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return rerenderTransition();
              },
              useMutableSource: function(source, getSnapshot, subscribe) {
                currentHookNameInDev = "useMutableSource";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return updateMutableSource(source, getSnapshot, subscribe);
              },
              useOpaqueIdentifier: function() {
                currentHookNameInDev = "useOpaqueIdentifier";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return rerenderOpaqueIdentifier();
              },
              unstable_isNewReconciler: enableNewReconciler
            };
          }
          var now$1 = Scheduler.unstable_now;
          var commitTime = 0;
          var profilerStartTime = -1;
          function getCommitTime() {
            return commitTime;
          }
          function recordCommitTime() {
            commitTime = now$1();
          }
          function startProfilerTimer(fiber) {
            profilerStartTime = now$1();
            if (fiber.actualStartTime < 0) {
              fiber.actualStartTime = now$1();
            }
          }
          function stopProfilerTimerIfRunning(fiber) {
            profilerStartTime = -1;
          }
          function stopProfilerTimerIfRunningAndRecordDelta(fiber, overrideBaseTime) {
            if (profilerStartTime >= 0) {
              var elapsedTime = now$1() - profilerStartTime;
              fiber.actualDuration += elapsedTime;
              if (overrideBaseTime) {
                fiber.selfBaseDuration = elapsedTime;
              }
              profilerStartTime = -1;
            }
          }
          function transferActualDuration(fiber) {
            var child = fiber.child;
            while (child) {
              fiber.actualDuration += child.actualDuration;
              child = child.sibling;
            }
          }
          var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
          var didReceiveUpdate = false;
          var didWarnAboutBadClass;
          var didWarnAboutModulePatternComponent;
          var didWarnAboutContextTypeOnFunctionComponent;
          var didWarnAboutGetDerivedStateOnFunctionComponent;
          var didWarnAboutFunctionRefs;
          var didWarnAboutReassigningProps;
          var didWarnAboutRevealOrder;
          var didWarnAboutTailOptions;
          {
            didWarnAboutBadClass = {};
            didWarnAboutModulePatternComponent = {};
            didWarnAboutContextTypeOnFunctionComponent = {};
            didWarnAboutGetDerivedStateOnFunctionComponent = {};
            didWarnAboutFunctionRefs = {};
            didWarnAboutReassigningProps = false;
            didWarnAboutRevealOrder = {};
            didWarnAboutTailOptions = {};
          }
          function reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2) {
            if (current2 === null) {
              workInProgress2.child = mountChildFibers(workInProgress2, null, nextChildren, renderLanes2);
            } else {
              workInProgress2.child = reconcileChildFibers(workInProgress2, current2.child, nextChildren, renderLanes2);
            }
          }
          function forceUnmountCurrentAndReconcile(current2, workInProgress2, nextChildren, renderLanes2) {
            workInProgress2.child = reconcileChildFibers(workInProgress2, current2.child, null, renderLanes2);
            workInProgress2.child = reconcileChildFibers(workInProgress2, null, nextChildren, renderLanes2);
          }
          function updateForwardRef(current2, workInProgress2, Component, nextProps, renderLanes2) {
            {
              if (workInProgress2.type !== workInProgress2.elementType) {
                var innerPropTypes = Component.propTypes;
                if (innerPropTypes) {
                  checkPropTypes(innerPropTypes, nextProps, "prop", getComponentName(Component));
                }
              }
            }
            var render2 = Component.render;
            var ref = workInProgress2.ref;
            var nextChildren;
            prepareToReadContext(workInProgress2, renderLanes2);
            {
              ReactCurrentOwner$1.current = workInProgress2;
              setIsRendering(true);
              nextChildren = renderWithHooks(current2, workInProgress2, render2, nextProps, ref, renderLanes2);
              if (workInProgress2.mode & StrictMode) {
                disableLogs();
                try {
                  nextChildren = renderWithHooks(current2, workInProgress2, render2, nextProps, ref, renderLanes2);
                } finally {
                  reenableLogs();
                }
              }
              setIsRendering(false);
            }
            if (current2 !== null && !didReceiveUpdate) {
              bailoutHooks(current2, workInProgress2, renderLanes2);
              return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
            }
            workInProgress2.flags |= PerformedWork;
            reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
            return workInProgress2.child;
          }
          function updateMemoComponent(current2, workInProgress2, Component, nextProps, updateLanes, renderLanes2) {
            if (current2 === null) {
              var type = Component.type;
              if (isSimpleFunctionComponent(type) && Component.compare === null && Component.defaultProps === void 0) {
                var resolvedType = type;
                {
                  resolvedType = resolveFunctionForHotReloading(type);
                }
                workInProgress2.tag = SimpleMemoComponent;
                workInProgress2.type = resolvedType;
                {
                  validateFunctionComponentInDev(workInProgress2, type);
                }
                return updateSimpleMemoComponent(current2, workInProgress2, resolvedType, nextProps, updateLanes, renderLanes2);
              }
              {
                var innerPropTypes = type.propTypes;
                if (innerPropTypes) {
                  checkPropTypes(innerPropTypes, nextProps, "prop", getComponentName(type));
                }
              }
              var child = createFiberFromTypeAndProps(Component.type, null, nextProps, workInProgress2, workInProgress2.mode, renderLanes2);
              child.ref = workInProgress2.ref;
              child.return = workInProgress2;
              workInProgress2.child = child;
              return child;
            }
            {
              var _type = Component.type;
              var _innerPropTypes = _type.propTypes;
              if (_innerPropTypes) {
                checkPropTypes(_innerPropTypes, nextProps, "prop", getComponentName(_type));
              }
            }
            var currentChild = current2.child;
            if (!includesSomeLane(updateLanes, renderLanes2)) {
              var prevProps = currentChild.memoizedProps;
              var compare = Component.compare;
              compare = compare !== null ? compare : shallowEqual;
              if (compare(prevProps, nextProps) && current2.ref === workInProgress2.ref) {
                return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
              }
            }
            workInProgress2.flags |= PerformedWork;
            var newChild = createWorkInProgress(currentChild, nextProps);
            newChild.ref = workInProgress2.ref;
            newChild.return = workInProgress2;
            workInProgress2.child = newChild;
            return newChild;
          }
          function updateSimpleMemoComponent(current2, workInProgress2, Component, nextProps, updateLanes, renderLanes2) {
            {
              if (workInProgress2.type !== workInProgress2.elementType) {
                var outerMemoType = workInProgress2.elementType;
                if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {
                  var lazyComponent = outerMemoType;
                  var payload = lazyComponent._payload;
                  var init = lazyComponent._init;
                  try {
                    outerMemoType = init(payload);
                  } catch (x2) {
                    outerMemoType = null;
                  }
                  var outerPropTypes = outerMemoType && outerMemoType.propTypes;
                  if (outerPropTypes) {
                    checkPropTypes(outerPropTypes, nextProps, "prop", getComponentName(outerMemoType));
                  }
                }
              }
            }
            if (current2 !== null) {
              var prevProps = current2.memoizedProps;
              if (shallowEqual(prevProps, nextProps) && current2.ref === workInProgress2.ref && workInProgress2.type === current2.type) {
                didReceiveUpdate = false;
                if (!includesSomeLane(renderLanes2, updateLanes)) {
                  workInProgress2.lanes = current2.lanes;
                  return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
                } else if ((current2.flags & ForceUpdateForLegacySuspense) !== NoFlags) {
                  didReceiveUpdate = true;
                }
              }
            }
            return updateFunctionComponent(current2, workInProgress2, Component, nextProps, renderLanes2);
          }
          function updateOffscreenComponent(current2, workInProgress2, renderLanes2) {
            var nextProps = workInProgress2.pendingProps;
            var nextChildren = nextProps.children;
            var prevState = current2 !== null ? current2.memoizedState : null;
            if (nextProps.mode === "hidden" || nextProps.mode === "unstable-defer-without-hiding") {
              if ((workInProgress2.mode & ConcurrentMode) === NoMode) {
                var nextState = {
                  baseLanes: NoLanes
                };
                workInProgress2.memoizedState = nextState;
                pushRenderLanes(workInProgress2, renderLanes2);
              } else if (!includesSomeLane(renderLanes2, OffscreenLane)) {
                var nextBaseLanes;
                if (prevState !== null) {
                  var prevBaseLanes = prevState.baseLanes;
                  nextBaseLanes = mergeLanes(prevBaseLanes, renderLanes2);
                } else {
                  nextBaseLanes = renderLanes2;
                }
                {
                  markSpawnedWork(OffscreenLane);
                }
                workInProgress2.lanes = workInProgress2.childLanes = laneToLanes(OffscreenLane);
                var _nextState = {
                  baseLanes: nextBaseLanes
                };
                workInProgress2.memoizedState = _nextState;
                pushRenderLanes(workInProgress2, nextBaseLanes);
                return null;
              } else {
                var _nextState2 = {
                  baseLanes: NoLanes
                };
                workInProgress2.memoizedState = _nextState2;
                var subtreeRenderLanes2 = prevState !== null ? prevState.baseLanes : renderLanes2;
                pushRenderLanes(workInProgress2, subtreeRenderLanes2);
              }
            } else {
              var _subtreeRenderLanes;
              if (prevState !== null) {
                _subtreeRenderLanes = mergeLanes(prevState.baseLanes, renderLanes2);
                workInProgress2.memoizedState = null;
              } else {
                _subtreeRenderLanes = renderLanes2;
              }
              pushRenderLanes(workInProgress2, _subtreeRenderLanes);
            }
            reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
            return workInProgress2.child;
          }
          var updateLegacyHiddenComponent = updateOffscreenComponent;
          function updateFragment(current2, workInProgress2, renderLanes2) {
            var nextChildren = workInProgress2.pendingProps;
            reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
            return workInProgress2.child;
          }
          function updateMode(current2, workInProgress2, renderLanes2) {
            var nextChildren = workInProgress2.pendingProps.children;
            reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
            return workInProgress2.child;
          }
          function updateProfiler(current2, workInProgress2, renderLanes2) {
            {
              workInProgress2.flags |= Update;
              var stateNode = workInProgress2.stateNode;
              stateNode.effectDuration = 0;
              stateNode.passiveEffectDuration = 0;
            }
            var nextProps = workInProgress2.pendingProps;
            var nextChildren = nextProps.children;
            reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
            return workInProgress2.child;
          }
          function markRef(current2, workInProgress2) {
            var ref = workInProgress2.ref;
            if (current2 === null && ref !== null || current2 !== null && current2.ref !== ref) {
              workInProgress2.flags |= Ref;
            }
          }
          function updateFunctionComponent(current2, workInProgress2, Component, nextProps, renderLanes2) {
            {
              if (workInProgress2.type !== workInProgress2.elementType) {
                var innerPropTypes = Component.propTypes;
                if (innerPropTypes) {
                  checkPropTypes(innerPropTypes, nextProps, "prop", getComponentName(Component));
                }
              }
            }
            var context;
            {
              var unmaskedContext = getUnmaskedContext(workInProgress2, Component, true);
              context = getMaskedContext(workInProgress2, unmaskedContext);
            }
            var nextChildren;
            prepareToReadContext(workInProgress2, renderLanes2);
            {
              ReactCurrentOwner$1.current = workInProgress2;
              setIsRendering(true);
              nextChildren = renderWithHooks(current2, workInProgress2, Component, nextProps, context, renderLanes2);
              if (workInProgress2.mode & StrictMode) {
                disableLogs();
                try {
                  nextChildren = renderWithHooks(current2, workInProgress2, Component, nextProps, context, renderLanes2);
                } finally {
                  reenableLogs();
                }
              }
              setIsRendering(false);
            }
            if (current2 !== null && !didReceiveUpdate) {
              bailoutHooks(current2, workInProgress2, renderLanes2);
              return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
            }
            workInProgress2.flags |= PerformedWork;
            reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
            return workInProgress2.child;
          }
          function updateClassComponent(current2, workInProgress2, Component, nextProps, renderLanes2) {
            {
              if (workInProgress2.type !== workInProgress2.elementType) {
                var innerPropTypes = Component.propTypes;
                if (innerPropTypes) {
                  checkPropTypes(innerPropTypes, nextProps, "prop", getComponentName(Component));
                }
              }
            }
            var hasContext;
            if (isContextProvider(Component)) {
              hasContext = true;
              pushContextProvider(workInProgress2);
            } else {
              hasContext = false;
            }
            prepareToReadContext(workInProgress2, renderLanes2);
            var instance = workInProgress2.stateNode;
            var shouldUpdate;
            if (instance === null) {
              if (current2 !== null) {
                current2.alternate = null;
                workInProgress2.alternate = null;
                workInProgress2.flags |= Placement;
              }
              constructClassInstance(workInProgress2, Component, nextProps);
              mountClassInstance(workInProgress2, Component, nextProps, renderLanes2);
              shouldUpdate = true;
            } else if (current2 === null) {
              shouldUpdate = resumeMountClassInstance(workInProgress2, Component, nextProps, renderLanes2);
            } else {
              shouldUpdate = updateClassInstance(current2, workInProgress2, Component, nextProps, renderLanes2);
            }
            var nextUnitOfWork = finishClassComponent(current2, workInProgress2, Component, shouldUpdate, hasContext, renderLanes2);
            {
              var inst = workInProgress2.stateNode;
              if (shouldUpdate && inst.props !== nextProps) {
                if (!didWarnAboutReassigningProps) {
                  error("It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.", getComponentName(workInProgress2.type) || "a component");
                }
                didWarnAboutReassigningProps = true;
              }
            }
            return nextUnitOfWork;
          }
          function finishClassComponent(current2, workInProgress2, Component, shouldUpdate, hasContext, renderLanes2) {
            markRef(current2, workInProgress2);
            var didCaptureError = (workInProgress2.flags & DidCapture) !== NoFlags;
            if (!shouldUpdate && !didCaptureError) {
              if (hasContext) {
                invalidateContextProvider(workInProgress2, Component, false);
              }
              return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
            }
            var instance = workInProgress2.stateNode;
            ReactCurrentOwner$1.current = workInProgress2;
            var nextChildren;
            if (didCaptureError && typeof Component.getDerivedStateFromError !== "function") {
              nextChildren = null;
              {
                stopProfilerTimerIfRunning();
              }
            } else {
              {
                setIsRendering(true);
                nextChildren = instance.render();
                if (workInProgress2.mode & StrictMode) {
                  disableLogs();
                  try {
                    instance.render();
                  } finally {
                    reenableLogs();
                  }
                }
                setIsRendering(false);
              }
            }
            workInProgress2.flags |= PerformedWork;
            if (current2 !== null && didCaptureError) {
              forceUnmountCurrentAndReconcile(current2, workInProgress2, nextChildren, renderLanes2);
            } else {
              reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
            }
            workInProgress2.memoizedState = instance.state;
            if (hasContext) {
              invalidateContextProvider(workInProgress2, Component, true);
            }
            return workInProgress2.child;
          }
          function pushHostRootContext(workInProgress2) {
            var root2 = workInProgress2.stateNode;
            if (root2.pendingContext) {
              pushTopLevelContextObject(workInProgress2, root2.pendingContext, root2.pendingContext !== root2.context);
            } else if (root2.context) {
              pushTopLevelContextObject(workInProgress2, root2.context, false);
            }
            pushHostContainer(workInProgress2, root2.containerInfo);
          }
          function updateHostRoot(current2, workInProgress2, renderLanes2) {
            pushHostRootContext(workInProgress2);
            var updateQueue = workInProgress2.updateQueue;
            if (!(current2 !== null && updateQueue !== null)) {
              {
                throw Error("If the root does not have an updateQueue, we should have already bailed out. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
            var nextProps = workInProgress2.pendingProps;
            var prevState = workInProgress2.memoizedState;
            var prevChildren = prevState !== null ? prevState.element : null;
            cloneUpdateQueue(current2, workInProgress2);
            processUpdateQueue(workInProgress2, nextProps, null, renderLanes2);
            var nextState = workInProgress2.memoizedState;
            var nextChildren = nextState.element;
            if (nextChildren === prevChildren) {
              resetHydrationState();
              return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
            }
            var root2 = workInProgress2.stateNode;
            if (root2.hydrate && enterHydrationState(workInProgress2)) {
              {
                var mutableSourceEagerHydrationData = root2.mutableSourceEagerHydrationData;
                if (mutableSourceEagerHydrationData != null) {
                  for (var i2 = 0; i2 < mutableSourceEagerHydrationData.length; i2 += 2) {
                    var mutableSource = mutableSourceEagerHydrationData[i2];
                    var version = mutableSourceEagerHydrationData[i2 + 1];
                    setWorkInProgressVersion(mutableSource, version);
                  }
                }
              }
              var child = mountChildFibers(workInProgress2, null, nextChildren, renderLanes2);
              workInProgress2.child = child;
              var node = child;
              while (node) {
                node.flags = node.flags & ~Placement | Hydrating;
                node = node.sibling;
              }
            } else {
              reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
              resetHydrationState();
            }
            return workInProgress2.child;
          }
          function updateHostComponent(current2, workInProgress2, renderLanes2) {
            pushHostContext(workInProgress2);
            if (current2 === null) {
              tryToClaimNextHydratableInstance(workInProgress2);
            }
            var type = workInProgress2.type;
            var nextProps = workInProgress2.pendingProps;
            var prevProps = current2 !== null ? current2.memoizedProps : null;
            var nextChildren = nextProps.children;
            var isDirectTextChild = shouldSetTextContent(type, nextProps);
            if (isDirectTextChild) {
              nextChildren = null;
            } else if (prevProps !== null && shouldSetTextContent(type, prevProps)) {
              workInProgress2.flags |= ContentReset;
            }
            markRef(current2, workInProgress2);
            reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
            return workInProgress2.child;
          }
          function updateHostText(current2, workInProgress2) {
            if (current2 === null) {
              tryToClaimNextHydratableInstance(workInProgress2);
            }
            return null;
          }
          function mountLazyComponent(_current, workInProgress2, elementType, updateLanes, renderLanes2) {
            if (_current !== null) {
              _current.alternate = null;
              workInProgress2.alternate = null;
              workInProgress2.flags |= Placement;
            }
            var props = workInProgress2.pendingProps;
            var lazyComponent = elementType;
            var payload = lazyComponent._payload;
            var init = lazyComponent._init;
            var Component = init(payload);
            workInProgress2.type = Component;
            var resolvedTag = workInProgress2.tag = resolveLazyComponentTag(Component);
            var resolvedProps = resolveDefaultProps(Component, props);
            var child;
            switch (resolvedTag) {
              case FunctionComponent: {
                {
                  validateFunctionComponentInDev(workInProgress2, Component);
                  workInProgress2.type = Component = resolveFunctionForHotReloading(Component);
                }
                child = updateFunctionComponent(null, workInProgress2, Component, resolvedProps, renderLanes2);
                return child;
              }
              case ClassComponent: {
                {
                  workInProgress2.type = Component = resolveClassForHotReloading(Component);
                }
                child = updateClassComponent(null, workInProgress2, Component, resolvedProps, renderLanes2);
                return child;
              }
              case ForwardRef: {
                {
                  workInProgress2.type = Component = resolveForwardRefForHotReloading(Component);
                }
                child = updateForwardRef(null, workInProgress2, Component, resolvedProps, renderLanes2);
                return child;
              }
              case MemoComponent: {
                {
                  if (workInProgress2.type !== workInProgress2.elementType) {
                    var outerPropTypes = Component.propTypes;
                    if (outerPropTypes) {
                      checkPropTypes(outerPropTypes, resolvedProps, "prop", getComponentName(Component));
                    }
                  }
                }
                child = updateMemoComponent(null, workInProgress2, Component, resolveDefaultProps(Component.type, resolvedProps), updateLanes, renderLanes2);
                return child;
              }
            }
            var hint = "";
            {
              if (Component !== null && typeof Component === "object" && Component.$$typeof === REACT_LAZY_TYPE) {
                hint = " Did you wrap a component in React.lazy() more than once?";
              }
            }
            {
              {
                throw Error("Element type is invalid. Received a promise that resolves to: " + Component + ". Lazy element type must resolve to a class or function." + hint);
              }
            }
          }
          function mountIncompleteClassComponent(_current, workInProgress2, Component, nextProps, renderLanes2) {
            if (_current !== null) {
              _current.alternate = null;
              workInProgress2.alternate = null;
              workInProgress2.flags |= Placement;
            }
            workInProgress2.tag = ClassComponent;
            var hasContext;
            if (isContextProvider(Component)) {
              hasContext = true;
              pushContextProvider(workInProgress2);
            } else {
              hasContext = false;
            }
            prepareToReadContext(workInProgress2, renderLanes2);
            constructClassInstance(workInProgress2, Component, nextProps);
            mountClassInstance(workInProgress2, Component, nextProps, renderLanes2);
            return finishClassComponent(null, workInProgress2, Component, true, hasContext, renderLanes2);
          }
          function mountIndeterminateComponent(_current, workInProgress2, Component, renderLanes2) {
            if (_current !== null) {
              _current.alternate = null;
              workInProgress2.alternate = null;
              workInProgress2.flags |= Placement;
            }
            var props = workInProgress2.pendingProps;
            var context;
            {
              var unmaskedContext = getUnmaskedContext(workInProgress2, Component, false);
              context = getMaskedContext(workInProgress2, unmaskedContext);
            }
            prepareToReadContext(workInProgress2, renderLanes2);
            var value;
            {
              if (Component.prototype && typeof Component.prototype.render === "function") {
                var componentName = getComponentName(Component) || "Unknown";
                if (!didWarnAboutBadClass[componentName]) {
                  error("The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.", componentName, componentName);
                  didWarnAboutBadClass[componentName] = true;
                }
              }
              if (workInProgress2.mode & StrictMode) {
                ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress2, null);
              }
              setIsRendering(true);
              ReactCurrentOwner$1.current = workInProgress2;
              value = renderWithHooks(null, workInProgress2, Component, props, context, renderLanes2);
              setIsRendering(false);
            }
            workInProgress2.flags |= PerformedWork;
            {
              if (typeof value === "object" && value !== null && typeof value.render === "function" && value.$$typeof === void 0) {
                var _componentName = getComponentName(Component) || "Unknown";
                if (!didWarnAboutModulePatternComponent[_componentName]) {
                  error("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName, _componentName, _componentName);
                  didWarnAboutModulePatternComponent[_componentName] = true;
                }
              }
            }
            if (typeof value === "object" && value !== null && typeof value.render === "function" && value.$$typeof === void 0) {
              {
                var _componentName2 = getComponentName(Component) || "Unknown";
                if (!didWarnAboutModulePatternComponent[_componentName2]) {
                  error("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName2, _componentName2, _componentName2);
                  didWarnAboutModulePatternComponent[_componentName2] = true;
                }
              }
              workInProgress2.tag = ClassComponent;
              workInProgress2.memoizedState = null;
              workInProgress2.updateQueue = null;
              var hasContext = false;
              if (isContextProvider(Component)) {
                hasContext = true;
                pushContextProvider(workInProgress2);
              } else {
                hasContext = false;
              }
              workInProgress2.memoizedState = value.state !== null && value.state !== void 0 ? value.state : null;
              initializeUpdateQueue(workInProgress2);
              var getDerivedStateFromProps = Component.getDerivedStateFromProps;
              if (typeof getDerivedStateFromProps === "function") {
                applyDerivedStateFromProps(workInProgress2, Component, getDerivedStateFromProps, props);
              }
              adoptClassInstance(workInProgress2, value);
              mountClassInstance(workInProgress2, Component, props, renderLanes2);
              return finishClassComponent(null, workInProgress2, Component, true, hasContext, renderLanes2);
            } else {
              workInProgress2.tag = FunctionComponent;
              {
                if (workInProgress2.mode & StrictMode) {
                  disableLogs();
                  try {
                    value = renderWithHooks(null, workInProgress2, Component, props, context, renderLanes2);
                  } finally {
                    reenableLogs();
                  }
                }
              }
              reconcileChildren(null, workInProgress2, value, renderLanes2);
              {
                validateFunctionComponentInDev(workInProgress2, Component);
              }
              return workInProgress2.child;
            }
          }
          function validateFunctionComponentInDev(workInProgress2, Component) {
            {
              if (Component) {
                if (Component.childContextTypes) {
                  error("%s(...): childContextTypes cannot be defined on a function component.", Component.displayName || Component.name || "Component");
                }
              }
              if (workInProgress2.ref !== null) {
                var info = "";
                var ownerName = getCurrentFiberOwnerNameInDevOrNull();
                if (ownerName) {
                  info += "\n\nCheck the render method of `" + ownerName + "`.";
                }
                var warningKey = ownerName || workInProgress2._debugID || "";
                var debugSource = workInProgress2._debugSource;
                if (debugSource) {
                  warningKey = debugSource.fileName + ":" + debugSource.lineNumber;
                }
                if (!didWarnAboutFunctionRefs[warningKey]) {
                  didWarnAboutFunctionRefs[warningKey] = true;
                  error("Function components cannot be given refs. Attempts to access this ref will fail. Did you mean to use React.forwardRef()?%s", info);
                }
              }
              if (typeof Component.getDerivedStateFromProps === "function") {
                var _componentName3 = getComponentName(Component) || "Unknown";
                if (!didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3]) {
                  error("%s: Function components do not support getDerivedStateFromProps.", _componentName3);
                  didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] = true;
                }
              }
              if (typeof Component.contextType === "object" && Component.contextType !== null) {
                var _componentName4 = getComponentName(Component) || "Unknown";
                if (!didWarnAboutContextTypeOnFunctionComponent[_componentName4]) {
                  error("%s: Function components do not support contextType.", _componentName4);
                  didWarnAboutContextTypeOnFunctionComponent[_componentName4] = true;
                }
              }
            }
          }
          var SUSPENDED_MARKER = {
            dehydrated: null,
            retryLane: NoLane
          };
          function mountSuspenseOffscreenState(renderLanes2) {
            return {
              baseLanes: renderLanes2
            };
          }
          function updateSuspenseOffscreenState(prevOffscreenState, renderLanes2) {
            return {
              baseLanes: mergeLanes(prevOffscreenState.baseLanes, renderLanes2)
            };
          }
          function shouldRemainOnFallback(suspenseContext, current2, workInProgress2, renderLanes2) {
            if (current2 !== null) {
              var suspenseState = current2.memoizedState;
              if (suspenseState === null) {
                return false;
              }
            }
            return hasSuspenseContext(suspenseContext, ForceSuspenseFallback);
          }
          function getRemainingWorkInPrimaryTree(current2, renderLanes2) {
            return removeLanes(current2.childLanes, renderLanes2);
          }
          function updateSuspenseComponent(current2, workInProgress2, renderLanes2) {
            var nextProps = workInProgress2.pendingProps;
            {
              if (shouldSuspend(workInProgress2)) {
                workInProgress2.flags |= DidCapture;
              }
            }
            var suspenseContext = suspenseStackCursor.current;
            var showFallback = false;
            var didSuspend = (workInProgress2.flags & DidCapture) !== NoFlags;
            if (didSuspend || shouldRemainOnFallback(suspenseContext, current2)) {
              showFallback = true;
              workInProgress2.flags &= ~DidCapture;
            } else {
              if (current2 === null || current2.memoizedState !== null) {
                if (nextProps.fallback !== void 0 && nextProps.unstable_avoidThisFallback !== true) {
                  suspenseContext = addSubtreeSuspenseContext(suspenseContext, InvisibleParentSuspenseContext);
                }
              }
            }
            suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
            pushSuspenseContext(workInProgress2, suspenseContext);
            if (current2 === null) {
              if (nextProps.fallback !== void 0) {
                tryToClaimNextHydratableInstance(workInProgress2);
              }
              var nextPrimaryChildren = nextProps.children;
              var nextFallbackChildren = nextProps.fallback;
              if (showFallback) {
                var fallbackFragment = mountSuspenseFallbackChildren(workInProgress2, nextPrimaryChildren, nextFallbackChildren, renderLanes2);
                var primaryChildFragment = workInProgress2.child;
                primaryChildFragment.memoizedState = mountSuspenseOffscreenState(renderLanes2);
                workInProgress2.memoizedState = SUSPENDED_MARKER;
                return fallbackFragment;
              } else if (typeof nextProps.unstable_expectedLoadTime === "number") {
                var _fallbackFragment = mountSuspenseFallbackChildren(workInProgress2, nextPrimaryChildren, nextFallbackChildren, renderLanes2);
                var _primaryChildFragment = workInProgress2.child;
                _primaryChildFragment.memoizedState = mountSuspenseOffscreenState(renderLanes2);
                workInProgress2.memoizedState = SUSPENDED_MARKER;
                workInProgress2.lanes = SomeRetryLane;
                {
                  markSpawnedWork(SomeRetryLane);
                }
                return _fallbackFragment;
              } else {
                return mountSuspensePrimaryChildren(workInProgress2, nextPrimaryChildren, renderLanes2);
              }
            } else {
              var prevState = current2.memoizedState;
              if (prevState !== null) {
                if (showFallback) {
                  var _nextFallbackChildren2 = nextProps.fallback;
                  var _nextPrimaryChildren2 = nextProps.children;
                  var _fallbackChildFragment = updateSuspenseFallbackChildren(current2, workInProgress2, _nextPrimaryChildren2, _nextFallbackChildren2, renderLanes2);
                  var _primaryChildFragment3 = workInProgress2.child;
                  var prevOffscreenState = current2.child.memoizedState;
                  _primaryChildFragment3.memoizedState = prevOffscreenState === null ? mountSuspenseOffscreenState(renderLanes2) : updateSuspenseOffscreenState(prevOffscreenState, renderLanes2);
                  _primaryChildFragment3.childLanes = getRemainingWorkInPrimaryTree(current2, renderLanes2);
                  workInProgress2.memoizedState = SUSPENDED_MARKER;
                  return _fallbackChildFragment;
                } else {
                  var _nextPrimaryChildren3 = nextProps.children;
                  var _primaryChildFragment4 = updateSuspensePrimaryChildren(current2, workInProgress2, _nextPrimaryChildren3, renderLanes2);
                  workInProgress2.memoizedState = null;
                  return _primaryChildFragment4;
                }
              } else {
                if (showFallback) {
                  var _nextFallbackChildren3 = nextProps.fallback;
                  var _nextPrimaryChildren4 = nextProps.children;
                  var _fallbackChildFragment2 = updateSuspenseFallbackChildren(current2, workInProgress2, _nextPrimaryChildren4, _nextFallbackChildren3, renderLanes2);
                  var _primaryChildFragment5 = workInProgress2.child;
                  var _prevOffscreenState = current2.child.memoizedState;
                  _primaryChildFragment5.memoizedState = _prevOffscreenState === null ? mountSuspenseOffscreenState(renderLanes2) : updateSuspenseOffscreenState(_prevOffscreenState, renderLanes2);
                  _primaryChildFragment5.childLanes = getRemainingWorkInPrimaryTree(current2, renderLanes2);
                  workInProgress2.memoizedState = SUSPENDED_MARKER;
                  return _fallbackChildFragment2;
                } else {
                  var _nextPrimaryChildren5 = nextProps.children;
                  var _primaryChildFragment6 = updateSuspensePrimaryChildren(current2, workInProgress2, _nextPrimaryChildren5, renderLanes2);
                  workInProgress2.memoizedState = null;
                  return _primaryChildFragment6;
                }
              }
            }
          }
          function mountSuspensePrimaryChildren(workInProgress2, primaryChildren, renderLanes2) {
            var mode = workInProgress2.mode;
            var primaryChildProps = {
              mode: "visible",
              children: primaryChildren
            };
            var primaryChildFragment = createFiberFromOffscreen(primaryChildProps, mode, renderLanes2, null);
            primaryChildFragment.return = workInProgress2;
            workInProgress2.child = primaryChildFragment;
            return primaryChildFragment;
          }
          function mountSuspenseFallbackChildren(workInProgress2, primaryChildren, fallbackChildren, renderLanes2) {
            var mode = workInProgress2.mode;
            var progressedPrimaryFragment = workInProgress2.child;
            var primaryChildProps = {
              mode: "hidden",
              children: primaryChildren
            };
            var primaryChildFragment;
            var fallbackChildFragment;
            if ((mode & BlockingMode) === NoMode && progressedPrimaryFragment !== null) {
              primaryChildFragment = progressedPrimaryFragment;
              primaryChildFragment.childLanes = NoLanes;
              primaryChildFragment.pendingProps = primaryChildProps;
              if (workInProgress2.mode & ProfileMode) {
                primaryChildFragment.actualDuration = 0;
                primaryChildFragment.actualStartTime = -1;
                primaryChildFragment.selfBaseDuration = 0;
                primaryChildFragment.treeBaseDuration = 0;
              }
              fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes2, null);
            } else {
              primaryChildFragment = createFiberFromOffscreen(primaryChildProps, mode, NoLanes, null);
              fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes2, null);
            }
            primaryChildFragment.return = workInProgress2;
            fallbackChildFragment.return = workInProgress2;
            primaryChildFragment.sibling = fallbackChildFragment;
            workInProgress2.child = primaryChildFragment;
            return fallbackChildFragment;
          }
          function createWorkInProgressOffscreenFiber(current2, offscreenProps) {
            return createWorkInProgress(current2, offscreenProps);
          }
          function updateSuspensePrimaryChildren(current2, workInProgress2, primaryChildren, renderLanes2) {
            var currentPrimaryChildFragment = current2.child;
            var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;
            var primaryChildFragment = createWorkInProgressOffscreenFiber(currentPrimaryChildFragment, {
              mode: "visible",
              children: primaryChildren
            });
            if ((workInProgress2.mode & BlockingMode) === NoMode) {
              primaryChildFragment.lanes = renderLanes2;
            }
            primaryChildFragment.return = workInProgress2;
            primaryChildFragment.sibling = null;
            if (currentFallbackChildFragment !== null) {
              currentFallbackChildFragment.nextEffect = null;
              currentFallbackChildFragment.flags = Deletion;
              workInProgress2.firstEffect = workInProgress2.lastEffect = currentFallbackChildFragment;
            }
            workInProgress2.child = primaryChildFragment;
            return primaryChildFragment;
          }
          function updateSuspenseFallbackChildren(current2, workInProgress2, primaryChildren, fallbackChildren, renderLanes2) {
            var mode = workInProgress2.mode;
            var currentPrimaryChildFragment = current2.child;
            var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;
            var primaryChildProps = {
              mode: "hidden",
              children: primaryChildren
            };
            var primaryChildFragment;
            if ((mode & BlockingMode) === NoMode && workInProgress2.child !== currentPrimaryChildFragment) {
              var progressedPrimaryFragment = workInProgress2.child;
              primaryChildFragment = progressedPrimaryFragment;
              primaryChildFragment.childLanes = NoLanes;
              primaryChildFragment.pendingProps = primaryChildProps;
              if (workInProgress2.mode & ProfileMode) {
                primaryChildFragment.actualDuration = 0;
                primaryChildFragment.actualStartTime = -1;
                primaryChildFragment.selfBaseDuration = currentPrimaryChildFragment.selfBaseDuration;
                primaryChildFragment.treeBaseDuration = currentPrimaryChildFragment.treeBaseDuration;
              }
              var progressedLastEffect = primaryChildFragment.lastEffect;
              if (progressedLastEffect !== null) {
                workInProgress2.firstEffect = primaryChildFragment.firstEffect;
                workInProgress2.lastEffect = progressedLastEffect;
                progressedLastEffect.nextEffect = null;
              } else {
                workInProgress2.firstEffect = workInProgress2.lastEffect = null;
              }
            } else {
              primaryChildFragment = createWorkInProgressOffscreenFiber(currentPrimaryChildFragment, primaryChildProps);
            }
            var fallbackChildFragment;
            if (currentFallbackChildFragment !== null) {
              fallbackChildFragment = createWorkInProgress(currentFallbackChildFragment, fallbackChildren);
            } else {
              fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes2, null);
              fallbackChildFragment.flags |= Placement;
            }
            fallbackChildFragment.return = workInProgress2;
            primaryChildFragment.return = workInProgress2;
            primaryChildFragment.sibling = fallbackChildFragment;
            workInProgress2.child = primaryChildFragment;
            return fallbackChildFragment;
          }
          function scheduleWorkOnFiber(fiber, renderLanes2) {
            fiber.lanes = mergeLanes(fiber.lanes, renderLanes2);
            var alternate = fiber.alternate;
            if (alternate !== null) {
              alternate.lanes = mergeLanes(alternate.lanes, renderLanes2);
            }
            scheduleWorkOnParentPath(fiber.return, renderLanes2);
          }
          function propagateSuspenseContextChange(workInProgress2, firstChild, renderLanes2) {
            var node = firstChild;
            while (node !== null) {
              if (node.tag === SuspenseComponent) {
                var state = node.memoizedState;
                if (state !== null) {
                  scheduleWorkOnFiber(node, renderLanes2);
                }
              } else if (node.tag === SuspenseListComponent) {
                scheduleWorkOnFiber(node, renderLanes2);
              } else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
              }
              if (node === workInProgress2) {
                return;
              }
              while (node.sibling === null) {
                if (node.return === null || node.return === workInProgress2) {
                  return;
                }
                node = node.return;
              }
              node.sibling.return = node.return;
              node = node.sibling;
            }
          }
          function findLastContentRow(firstChild) {
            var row = firstChild;
            var lastContentRow = null;
            while (row !== null) {
              var currentRow = row.alternate;
              if (currentRow !== null && findFirstSuspended(currentRow) === null) {
                lastContentRow = row;
              }
              row = row.sibling;
            }
            return lastContentRow;
          }
          function validateRevealOrder(revealOrder) {
            {
              if (revealOrder !== void 0 && revealOrder !== "forwards" && revealOrder !== "backwards" && revealOrder !== "together" && !didWarnAboutRevealOrder[revealOrder]) {
                didWarnAboutRevealOrder[revealOrder] = true;
                if (typeof revealOrder === "string") {
                  switch (revealOrder.toLowerCase()) {
                    case "together":
                    case "forwards":
                    case "backwards": {
                      error('"%s" is not a valid value for revealOrder on <SuspenseList />. Use lowercase "%s" instead.', revealOrder, revealOrder.toLowerCase());
                      break;
                    }
                    case "forward":
                    case "backward": {
                      error('"%s" is not a valid value for revealOrder on <SuspenseList />. React uses the -s suffix in the spelling. Use "%ss" instead.', revealOrder, revealOrder.toLowerCase());
                      break;
                    }
                    default:
                      error('"%s" is not a supported revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', revealOrder);
                      break;
                  }
                } else {
                  error('%s is not a supported value for revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', revealOrder);
                }
              }
            }
          }
          function validateTailOptions(tailMode, revealOrder) {
            {
              if (tailMode !== void 0 && !didWarnAboutTailOptions[tailMode]) {
                if (tailMode !== "collapsed" && tailMode !== "hidden") {
                  didWarnAboutTailOptions[tailMode] = true;
                  error('"%s" is not a supported value for tail on <SuspenseList />. Did you mean "collapsed" or "hidden"?', tailMode);
                } else if (revealOrder !== "forwards" && revealOrder !== "backwards") {
                  didWarnAboutTailOptions[tailMode] = true;
                  error('<SuspenseList tail="%s" /> is only valid if revealOrder is "forwards" or "backwards". Did you mean to specify revealOrder="forwards"?', tailMode);
                }
              }
            }
          }
          function validateSuspenseListNestedChild(childSlot, index3) {
            {
              var isArray2 = Array.isArray(childSlot);
              var isIterable = !isArray2 && typeof getIteratorFn(childSlot) === "function";
              if (isArray2 || isIterable) {
                var type = isArray2 ? "array" : "iterable";
                error("A nested %s was passed to row #%s in <SuspenseList />. Wrap it in an additional SuspenseList to configure its revealOrder: <SuspenseList revealOrder=...> ... <SuspenseList revealOrder=...>{%s}</SuspenseList> ... </SuspenseList>", type, index3, type);
                return false;
              }
            }
            return true;
          }
          function validateSuspenseListChildren(children, revealOrder) {
            {
              if ((revealOrder === "forwards" || revealOrder === "backwards") && children !== void 0 && children !== null && children !== false) {
                if (Array.isArray(children)) {
                  for (var i2 = 0; i2 < children.length; i2++) {
                    if (!validateSuspenseListNestedChild(children[i2], i2)) {
                      return;
                    }
                  }
                } else {
                  var iteratorFn = getIteratorFn(children);
                  if (typeof iteratorFn === "function") {
                    var childrenIterator = iteratorFn.call(children);
                    if (childrenIterator) {
                      var step = childrenIterator.next();
                      var _i = 0;
                      for (; !step.done; step = childrenIterator.next()) {
                        if (!validateSuspenseListNestedChild(step.value, _i)) {
                          return;
                        }
                        _i++;
                      }
                    }
                  } else {
                    error('A single row was passed to a <SuspenseList revealOrder="%s" />. This is not useful since it needs multiple rows. Did you mean to pass multiple children or an array?', revealOrder);
                  }
                }
              }
            }
          }
          function initSuspenseListRenderState(workInProgress2, isBackwards, tail, lastContentRow, tailMode, lastEffectBeforeRendering) {
            var renderState = workInProgress2.memoizedState;
            if (renderState === null) {
              workInProgress2.memoizedState = {
                isBackwards,
                rendering: null,
                renderingStartTime: 0,
                last: lastContentRow,
                tail,
                tailMode,
                lastEffect: lastEffectBeforeRendering
              };
            } else {
              renderState.isBackwards = isBackwards;
              renderState.rendering = null;
              renderState.renderingStartTime = 0;
              renderState.last = lastContentRow;
              renderState.tail = tail;
              renderState.tailMode = tailMode;
              renderState.lastEffect = lastEffectBeforeRendering;
            }
          }
          function updateSuspenseListComponent(current2, workInProgress2, renderLanes2) {
            var nextProps = workInProgress2.pendingProps;
            var revealOrder = nextProps.revealOrder;
            var tailMode = nextProps.tail;
            var newChildren = nextProps.children;
            validateRevealOrder(revealOrder);
            validateTailOptions(tailMode, revealOrder);
            validateSuspenseListChildren(newChildren, revealOrder);
            reconcileChildren(current2, workInProgress2, newChildren, renderLanes2);
            var suspenseContext = suspenseStackCursor.current;
            var shouldForceFallback = hasSuspenseContext(suspenseContext, ForceSuspenseFallback);
            if (shouldForceFallback) {
              suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
              workInProgress2.flags |= DidCapture;
            } else {
              var didSuspendBefore = current2 !== null && (current2.flags & DidCapture) !== NoFlags;
              if (didSuspendBefore) {
                propagateSuspenseContextChange(workInProgress2, workInProgress2.child, renderLanes2);
              }
              suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
            }
            pushSuspenseContext(workInProgress2, suspenseContext);
            if ((workInProgress2.mode & BlockingMode) === NoMode) {
              workInProgress2.memoizedState = null;
            } else {
              switch (revealOrder) {
                case "forwards": {
                  var lastContentRow = findLastContentRow(workInProgress2.child);
                  var tail;
                  if (lastContentRow === null) {
                    tail = workInProgress2.child;
                    workInProgress2.child = null;
                  } else {
                    tail = lastContentRow.sibling;
                    lastContentRow.sibling = null;
                  }
                  initSuspenseListRenderState(workInProgress2, false, tail, lastContentRow, tailMode, workInProgress2.lastEffect);
                  break;
                }
                case "backwards": {
                  var _tail = null;
                  var row = workInProgress2.child;
                  workInProgress2.child = null;
                  while (row !== null) {
                    var currentRow = row.alternate;
                    if (currentRow !== null && findFirstSuspended(currentRow) === null) {
                      workInProgress2.child = row;
                      break;
                    }
                    var nextRow = row.sibling;
                    row.sibling = _tail;
                    _tail = row;
                    row = nextRow;
                  }
                  initSuspenseListRenderState(workInProgress2, true, _tail, null, tailMode, workInProgress2.lastEffect);
                  break;
                }
                case "together": {
                  initSuspenseListRenderState(workInProgress2, false, null, null, void 0, workInProgress2.lastEffect);
                  break;
                }
                default: {
                  workInProgress2.memoizedState = null;
                }
              }
            }
            return workInProgress2.child;
          }
          function updatePortalComponent(current2, workInProgress2, renderLanes2) {
            pushHostContainer(workInProgress2, workInProgress2.stateNode.containerInfo);
            var nextChildren = workInProgress2.pendingProps;
            if (current2 === null) {
              workInProgress2.child = reconcileChildFibers(workInProgress2, null, nextChildren, renderLanes2);
            } else {
              reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
            }
            return workInProgress2.child;
          }
          var hasWarnedAboutUsingNoValuePropOnContextProvider = false;
          function updateContextProvider(current2, workInProgress2, renderLanes2) {
            var providerType = workInProgress2.type;
            var context = providerType._context;
            var newProps = workInProgress2.pendingProps;
            var oldProps = workInProgress2.memoizedProps;
            var newValue = newProps.value;
            {
              if (!("value" in newProps)) {
                if (!hasWarnedAboutUsingNoValuePropOnContextProvider) {
                  hasWarnedAboutUsingNoValuePropOnContextProvider = true;
                  error("The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?");
                }
              }
              var providerPropTypes = workInProgress2.type.propTypes;
              if (providerPropTypes) {
                checkPropTypes(providerPropTypes, newProps, "prop", "Context.Provider");
              }
            }
            pushProvider(workInProgress2, newValue);
            if (oldProps !== null) {
              var oldValue = oldProps.value;
              var changedBits = calculateChangedBits(context, newValue, oldValue);
              if (changedBits === 0) {
                if (oldProps.children === newProps.children && !hasContextChanged()) {
                  return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
                }
              } else {
                propagateContextChange(workInProgress2, context, changedBits, renderLanes2);
              }
            }
            var newChildren = newProps.children;
            reconcileChildren(current2, workInProgress2, newChildren, renderLanes2);
            return workInProgress2.child;
          }
          var hasWarnedAboutUsingContextAsConsumer = false;
          function updateContextConsumer(current2, workInProgress2, renderLanes2) {
            var context = workInProgress2.type;
            {
              if (context._context === void 0) {
                if (context !== context.Consumer) {
                  if (!hasWarnedAboutUsingContextAsConsumer) {
                    hasWarnedAboutUsingContextAsConsumer = true;
                    error("Rendering <Context> directly is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?");
                  }
                }
              } else {
                context = context._context;
              }
            }
            var newProps = workInProgress2.pendingProps;
            var render2 = newProps.children;
            {
              if (typeof render2 !== "function") {
                error("A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it.");
              }
            }
            prepareToReadContext(workInProgress2, renderLanes2);
            var newValue = readContext(context, newProps.unstable_observedBits);
            var newChildren;
            {
              ReactCurrentOwner$1.current = workInProgress2;
              setIsRendering(true);
              newChildren = render2(newValue);
              setIsRendering(false);
            }
            workInProgress2.flags |= PerformedWork;
            reconcileChildren(current2, workInProgress2, newChildren, renderLanes2);
            return workInProgress2.child;
          }
          function markWorkInProgressReceivedUpdate() {
            didReceiveUpdate = true;
          }
          function bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2) {
            if (current2 !== null) {
              workInProgress2.dependencies = current2.dependencies;
            }
            {
              stopProfilerTimerIfRunning();
            }
            markSkippedUpdateLanes(workInProgress2.lanes);
            if (!includesSomeLane(renderLanes2, workInProgress2.childLanes)) {
              return null;
            } else {
              cloneChildFibers(current2, workInProgress2);
              return workInProgress2.child;
            }
          }
          function remountFiber(current2, oldWorkInProgress, newWorkInProgress) {
            {
              var returnFiber = oldWorkInProgress.return;
              if (returnFiber === null) {
                throw new Error("Cannot swap the root fiber.");
              }
              current2.alternate = null;
              oldWorkInProgress.alternate = null;
              newWorkInProgress.index = oldWorkInProgress.index;
              newWorkInProgress.sibling = oldWorkInProgress.sibling;
              newWorkInProgress.return = oldWorkInProgress.return;
              newWorkInProgress.ref = oldWorkInProgress.ref;
              if (oldWorkInProgress === returnFiber.child) {
                returnFiber.child = newWorkInProgress;
              } else {
                var prevSibling = returnFiber.child;
                if (prevSibling === null) {
                  throw new Error("Expected parent to have a child.");
                }
                while (prevSibling.sibling !== oldWorkInProgress) {
                  prevSibling = prevSibling.sibling;
                  if (prevSibling === null) {
                    throw new Error("Expected to find the previous sibling.");
                  }
                }
                prevSibling.sibling = newWorkInProgress;
              }
              var last = returnFiber.lastEffect;
              if (last !== null) {
                last.nextEffect = current2;
                returnFiber.lastEffect = current2;
              } else {
                returnFiber.firstEffect = returnFiber.lastEffect = current2;
              }
              current2.nextEffect = null;
              current2.flags = Deletion;
              newWorkInProgress.flags |= Placement;
              return newWorkInProgress;
            }
          }
          function beginWork(current2, workInProgress2, renderLanes2) {
            var updateLanes = workInProgress2.lanes;
            {
              if (workInProgress2._debugNeedsRemount && current2 !== null) {
                return remountFiber(current2, workInProgress2, createFiberFromTypeAndProps(workInProgress2.type, workInProgress2.key, workInProgress2.pendingProps, workInProgress2._debugOwner || null, workInProgress2.mode, workInProgress2.lanes));
              }
            }
            if (current2 !== null) {
              var oldProps = current2.memoizedProps;
              var newProps = workInProgress2.pendingProps;
              if (oldProps !== newProps || hasContextChanged() || workInProgress2.type !== current2.type) {
                didReceiveUpdate = true;
              } else if (!includesSomeLane(renderLanes2, updateLanes)) {
                didReceiveUpdate = false;
                switch (workInProgress2.tag) {
                  case HostRoot:
                    pushHostRootContext(workInProgress2);
                    resetHydrationState();
                    break;
                  case HostComponent:
                    pushHostContext(workInProgress2);
                    break;
                  case ClassComponent: {
                    var Component = workInProgress2.type;
                    if (isContextProvider(Component)) {
                      pushContextProvider(workInProgress2);
                    }
                    break;
                  }
                  case HostPortal:
                    pushHostContainer(workInProgress2, workInProgress2.stateNode.containerInfo);
                    break;
                  case ContextProvider: {
                    var newValue = workInProgress2.memoizedProps.value;
                    pushProvider(workInProgress2, newValue);
                    break;
                  }
                  case Profiler:
                    {
                      var hasChildWork = includesSomeLane(renderLanes2, workInProgress2.childLanes);
                      if (hasChildWork) {
                        workInProgress2.flags |= Update;
                      }
                      var stateNode = workInProgress2.stateNode;
                      stateNode.effectDuration = 0;
                      stateNode.passiveEffectDuration = 0;
                    }
                    break;
                  case SuspenseComponent: {
                    var state = workInProgress2.memoizedState;
                    if (state !== null) {
                      var primaryChildFragment = workInProgress2.child;
                      var primaryChildLanes = primaryChildFragment.childLanes;
                      if (includesSomeLane(renderLanes2, primaryChildLanes)) {
                        return updateSuspenseComponent(current2, workInProgress2, renderLanes2);
                      } else {
                        pushSuspenseContext(workInProgress2, setDefaultShallowSuspenseContext(suspenseStackCursor.current));
                        var child = bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
                        if (child !== null) {
                          return child.sibling;
                        } else {
                          return null;
                        }
                      }
                    } else {
                      pushSuspenseContext(workInProgress2, setDefaultShallowSuspenseContext(suspenseStackCursor.current));
                    }
                    break;
                  }
                  case SuspenseListComponent: {
                    var didSuspendBefore = (current2.flags & DidCapture) !== NoFlags;
                    var _hasChildWork = includesSomeLane(renderLanes2, workInProgress2.childLanes);
                    if (didSuspendBefore) {
                      if (_hasChildWork) {
                        return updateSuspenseListComponent(current2, workInProgress2, renderLanes2);
                      }
                      workInProgress2.flags |= DidCapture;
                    }
                    var renderState = workInProgress2.memoizedState;
                    if (renderState !== null) {
                      renderState.rendering = null;
                      renderState.tail = null;
                      renderState.lastEffect = null;
                    }
                    pushSuspenseContext(workInProgress2, suspenseStackCursor.current);
                    if (_hasChildWork) {
                      break;
                    } else {
                      return null;
                    }
                  }
                  case OffscreenComponent:
                  case LegacyHiddenComponent: {
                    workInProgress2.lanes = NoLanes;
                    return updateOffscreenComponent(current2, workInProgress2, renderLanes2);
                  }
                }
                return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
              } else {
                if ((current2.flags & ForceUpdateForLegacySuspense) !== NoFlags) {
                  didReceiveUpdate = true;
                } else {
                  didReceiveUpdate = false;
                }
              }
            } else {
              didReceiveUpdate = false;
            }
            workInProgress2.lanes = NoLanes;
            switch (workInProgress2.tag) {
              case IndeterminateComponent: {
                return mountIndeterminateComponent(current2, workInProgress2, workInProgress2.type, renderLanes2);
              }
              case LazyComponent: {
                var elementType = workInProgress2.elementType;
                return mountLazyComponent(current2, workInProgress2, elementType, updateLanes, renderLanes2);
              }
              case FunctionComponent: {
                var _Component = workInProgress2.type;
                var unresolvedProps = workInProgress2.pendingProps;
                var resolvedProps = workInProgress2.elementType === _Component ? unresolvedProps : resolveDefaultProps(_Component, unresolvedProps);
                return updateFunctionComponent(current2, workInProgress2, _Component, resolvedProps, renderLanes2);
              }
              case ClassComponent: {
                var _Component2 = workInProgress2.type;
                var _unresolvedProps = workInProgress2.pendingProps;
                var _resolvedProps = workInProgress2.elementType === _Component2 ? _unresolvedProps : resolveDefaultProps(_Component2, _unresolvedProps);
                return updateClassComponent(current2, workInProgress2, _Component2, _resolvedProps, renderLanes2);
              }
              case HostRoot:
                return updateHostRoot(current2, workInProgress2, renderLanes2);
              case HostComponent:
                return updateHostComponent(current2, workInProgress2, renderLanes2);
              case HostText:
                return updateHostText(current2, workInProgress2);
              case SuspenseComponent:
                return updateSuspenseComponent(current2, workInProgress2, renderLanes2);
              case HostPortal:
                return updatePortalComponent(current2, workInProgress2, renderLanes2);
              case ForwardRef: {
                var type = workInProgress2.type;
                var _unresolvedProps2 = workInProgress2.pendingProps;
                var _resolvedProps2 = workInProgress2.elementType === type ? _unresolvedProps2 : resolveDefaultProps(type, _unresolvedProps2);
                return updateForwardRef(current2, workInProgress2, type, _resolvedProps2, renderLanes2);
              }
              case Fragment3:
                return updateFragment(current2, workInProgress2, renderLanes2);
              case Mode:
                return updateMode(current2, workInProgress2, renderLanes2);
              case Profiler:
                return updateProfiler(current2, workInProgress2, renderLanes2);
              case ContextProvider:
                return updateContextProvider(current2, workInProgress2, renderLanes2);
              case ContextConsumer:
                return updateContextConsumer(current2, workInProgress2, renderLanes2);
              case MemoComponent: {
                var _type2 = workInProgress2.type;
                var _unresolvedProps3 = workInProgress2.pendingProps;
                var _resolvedProps3 = resolveDefaultProps(_type2, _unresolvedProps3);
                {
                  if (workInProgress2.type !== workInProgress2.elementType) {
                    var outerPropTypes = _type2.propTypes;
                    if (outerPropTypes) {
                      checkPropTypes(outerPropTypes, _resolvedProps3, "prop", getComponentName(_type2));
                    }
                  }
                }
                _resolvedProps3 = resolveDefaultProps(_type2.type, _resolvedProps3);
                return updateMemoComponent(current2, workInProgress2, _type2, _resolvedProps3, updateLanes, renderLanes2);
              }
              case SimpleMemoComponent: {
                return updateSimpleMemoComponent(current2, workInProgress2, workInProgress2.type, workInProgress2.pendingProps, updateLanes, renderLanes2);
              }
              case IncompleteClassComponent: {
                var _Component3 = workInProgress2.type;
                var _unresolvedProps4 = workInProgress2.pendingProps;
                var _resolvedProps4 = workInProgress2.elementType === _Component3 ? _unresolvedProps4 : resolveDefaultProps(_Component3, _unresolvedProps4);
                return mountIncompleteClassComponent(current2, workInProgress2, _Component3, _resolvedProps4, renderLanes2);
              }
              case SuspenseListComponent: {
                return updateSuspenseListComponent(current2, workInProgress2, renderLanes2);
              }
              case FundamentalComponent: {
                break;
              }
              case ScopeComponent: {
                break;
              }
              case Block: {
                break;
              }
              case OffscreenComponent: {
                return updateOffscreenComponent(current2, workInProgress2, renderLanes2);
              }
              case LegacyHiddenComponent: {
                return updateLegacyHiddenComponent(current2, workInProgress2, renderLanes2);
              }
            }
            {
              {
                throw Error("Unknown unit of work tag (" + workInProgress2.tag + "). This error is likely caused by a bug in React. Please file an issue.");
              }
            }
          }
          function markUpdate(workInProgress2) {
            workInProgress2.flags |= Update;
          }
          function markRef$1(workInProgress2) {
            workInProgress2.flags |= Ref;
          }
          var appendAllChildren;
          var updateHostContainer;
          var updateHostComponent$1;
          var updateHostText$1;
          {
            appendAllChildren = function(parent, workInProgress2, needsVisibilityToggle, isHidden) {
              var node = workInProgress2.child;
              while (node !== null) {
                if (node.tag === HostComponent || node.tag === HostText) {
                  appendInitialChild(parent, node.stateNode);
                } else if (node.tag === HostPortal)
                  ;
                else if (node.child !== null) {
                  node.child.return = node;
                  node = node.child;
                  continue;
                }
                if (node === workInProgress2) {
                  return;
                }
                while (node.sibling === null) {
                  if (node.return === null || node.return === workInProgress2) {
                    return;
                  }
                  node = node.return;
                }
                node.sibling.return = node.return;
                node = node.sibling;
              }
            };
            updateHostContainer = function(workInProgress2) {
            };
            updateHostComponent$1 = function(current2, workInProgress2, type, newProps, rootContainerInstance) {
              var oldProps = current2.memoizedProps;
              if (oldProps === newProps) {
                return;
              }
              var instance = workInProgress2.stateNode;
              var currentHostContext = getHostContext();
              var updatePayload = prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, currentHostContext);
              workInProgress2.updateQueue = updatePayload;
              if (updatePayload) {
                markUpdate(workInProgress2);
              }
            };
            updateHostText$1 = function(current2, workInProgress2, oldText, newText) {
              if (oldText !== newText) {
                markUpdate(workInProgress2);
              }
            };
          }
          function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
            if (getIsHydrating()) {
              return;
            }
            switch (renderState.tailMode) {
              case "hidden": {
                var tailNode = renderState.tail;
                var lastTailNode = null;
                while (tailNode !== null) {
                  if (tailNode.alternate !== null) {
                    lastTailNode = tailNode;
                  }
                  tailNode = tailNode.sibling;
                }
                if (lastTailNode === null) {
                  renderState.tail = null;
                } else {
                  lastTailNode.sibling = null;
                }
                break;
              }
              case "collapsed": {
                var _tailNode = renderState.tail;
                var _lastTailNode = null;
                while (_tailNode !== null) {
                  if (_tailNode.alternate !== null) {
                    _lastTailNode = _tailNode;
                  }
                  _tailNode = _tailNode.sibling;
                }
                if (_lastTailNode === null) {
                  if (!hasRenderedATailFallback && renderState.tail !== null) {
                    renderState.tail.sibling = null;
                  } else {
                    renderState.tail = null;
                  }
                } else {
                  _lastTailNode.sibling = null;
                }
                break;
              }
            }
          }
          function completeWork(current2, workInProgress2, renderLanes2) {
            var newProps = workInProgress2.pendingProps;
            switch (workInProgress2.tag) {
              case IndeterminateComponent:
              case LazyComponent:
              case SimpleMemoComponent:
              case FunctionComponent:
              case ForwardRef:
              case Fragment3:
              case Mode:
              case Profiler:
              case ContextConsumer:
              case MemoComponent:
                return null;
              case ClassComponent: {
                var Component = workInProgress2.type;
                if (isContextProvider(Component)) {
                  popContext(workInProgress2);
                }
                return null;
              }
              case HostRoot: {
                popHostContainer(workInProgress2);
                popTopLevelContextObject(workInProgress2);
                resetWorkInProgressVersions();
                var fiberRoot = workInProgress2.stateNode;
                if (fiberRoot.pendingContext) {
                  fiberRoot.context = fiberRoot.pendingContext;
                  fiberRoot.pendingContext = null;
                }
                if (current2 === null || current2.child === null) {
                  var wasHydrated = popHydrationState(workInProgress2);
                  if (wasHydrated) {
                    markUpdate(workInProgress2);
                  } else if (!fiberRoot.hydrate) {
                    workInProgress2.flags |= Snapshot;
                  }
                }
                updateHostContainer(workInProgress2);
                return null;
              }
              case HostComponent: {
                popHostContext(workInProgress2);
                var rootContainerInstance = getRootHostContainer();
                var type = workInProgress2.type;
                if (current2 !== null && workInProgress2.stateNode != null) {
                  updateHostComponent$1(current2, workInProgress2, type, newProps, rootContainerInstance);
                  if (current2.ref !== workInProgress2.ref) {
                    markRef$1(workInProgress2);
                  }
                } else {
                  if (!newProps) {
                    if (!(workInProgress2.stateNode !== null)) {
                      {
                        throw Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                      }
                    }
                    return null;
                  }
                  var currentHostContext = getHostContext();
                  var _wasHydrated = popHydrationState(workInProgress2);
                  if (_wasHydrated) {
                    if (prepareToHydrateHostInstance(workInProgress2, rootContainerInstance, currentHostContext)) {
                      markUpdate(workInProgress2);
                    }
                  } else {
                    var instance = createInstance(type, newProps, rootContainerInstance, currentHostContext, workInProgress2);
                    appendAllChildren(instance, workInProgress2, false, false);
                    workInProgress2.stateNode = instance;
                    if (finalizeInitialChildren(instance, type, newProps, rootContainerInstance)) {
                      markUpdate(workInProgress2);
                    }
                  }
                  if (workInProgress2.ref !== null) {
                    markRef$1(workInProgress2);
                  }
                }
                return null;
              }
              case HostText: {
                var newText = newProps;
                if (current2 && workInProgress2.stateNode != null) {
                  var oldText = current2.memoizedProps;
                  updateHostText$1(current2, workInProgress2, oldText, newText);
                } else {
                  if (typeof newText !== "string") {
                    if (!(workInProgress2.stateNode !== null)) {
                      {
                        throw Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                      }
                    }
                  }
                  var _rootContainerInstance = getRootHostContainer();
                  var _currentHostContext = getHostContext();
                  var _wasHydrated2 = popHydrationState(workInProgress2);
                  if (_wasHydrated2) {
                    if (prepareToHydrateHostTextInstance(workInProgress2)) {
                      markUpdate(workInProgress2);
                    }
                  } else {
                    workInProgress2.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext, workInProgress2);
                  }
                }
                return null;
              }
              case SuspenseComponent: {
                popSuspenseContext(workInProgress2);
                var nextState = workInProgress2.memoizedState;
                if ((workInProgress2.flags & DidCapture) !== NoFlags) {
                  workInProgress2.lanes = renderLanes2;
                  if ((workInProgress2.mode & ProfileMode) !== NoMode) {
                    transferActualDuration(workInProgress2);
                  }
                  return workInProgress2;
                }
                var nextDidTimeout = nextState !== null;
                var prevDidTimeout = false;
                if (current2 === null) {
                  if (workInProgress2.memoizedProps.fallback !== void 0) {
                    popHydrationState(workInProgress2);
                  }
                } else {
                  var prevState = current2.memoizedState;
                  prevDidTimeout = prevState !== null;
                }
                if (nextDidTimeout && !prevDidTimeout) {
                  if ((workInProgress2.mode & BlockingMode) !== NoMode) {
                    var hasInvisibleChildContext = current2 === null && workInProgress2.memoizedProps.unstable_avoidThisFallback !== true;
                    if (hasInvisibleChildContext || hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext)) {
                      renderDidSuspend();
                    } else {
                      renderDidSuspendDelayIfPossible();
                    }
                  }
                }
                {
                  if (nextDidTimeout || prevDidTimeout) {
                    workInProgress2.flags |= Update;
                  }
                }
                return null;
              }
              case HostPortal:
                popHostContainer(workInProgress2);
                updateHostContainer(workInProgress2);
                if (current2 === null) {
                  preparePortalMount(workInProgress2.stateNode.containerInfo);
                }
                return null;
              case ContextProvider:
                popProvider(workInProgress2);
                return null;
              case IncompleteClassComponent: {
                var _Component = workInProgress2.type;
                if (isContextProvider(_Component)) {
                  popContext(workInProgress2);
                }
                return null;
              }
              case SuspenseListComponent: {
                popSuspenseContext(workInProgress2);
                var renderState = workInProgress2.memoizedState;
                if (renderState === null) {
                  return null;
                }
                var didSuspendAlready = (workInProgress2.flags & DidCapture) !== NoFlags;
                var renderedTail = renderState.rendering;
                if (renderedTail === null) {
                  if (!didSuspendAlready) {
                    var cannotBeSuspended = renderHasNotSuspendedYet() && (current2 === null || (current2.flags & DidCapture) === NoFlags);
                    if (!cannotBeSuspended) {
                      var row = workInProgress2.child;
                      while (row !== null) {
                        var suspended = findFirstSuspended(row);
                        if (suspended !== null) {
                          didSuspendAlready = true;
                          workInProgress2.flags |= DidCapture;
                          cutOffTailIfNeeded(renderState, false);
                          var newThennables = suspended.updateQueue;
                          if (newThennables !== null) {
                            workInProgress2.updateQueue = newThennables;
                            workInProgress2.flags |= Update;
                          }
                          if (renderState.lastEffect === null) {
                            workInProgress2.firstEffect = null;
                          }
                          workInProgress2.lastEffect = renderState.lastEffect;
                          resetChildFibers(workInProgress2, renderLanes2);
                          pushSuspenseContext(workInProgress2, setShallowSuspenseContext(suspenseStackCursor.current, ForceSuspenseFallback));
                          return workInProgress2.child;
                        }
                        row = row.sibling;
                      }
                    }
                    if (renderState.tail !== null && now() > getRenderTargetTime()) {
                      workInProgress2.flags |= DidCapture;
                      didSuspendAlready = true;
                      cutOffTailIfNeeded(renderState, false);
                      workInProgress2.lanes = SomeRetryLane;
                      {
                        markSpawnedWork(SomeRetryLane);
                      }
                    }
                  } else {
                    cutOffTailIfNeeded(renderState, false);
                  }
                } else {
                  if (!didSuspendAlready) {
                    var _suspended = findFirstSuspended(renderedTail);
                    if (_suspended !== null) {
                      workInProgress2.flags |= DidCapture;
                      didSuspendAlready = true;
                      var _newThennables = _suspended.updateQueue;
                      if (_newThennables !== null) {
                        workInProgress2.updateQueue = _newThennables;
                        workInProgress2.flags |= Update;
                      }
                      cutOffTailIfNeeded(renderState, true);
                      if (renderState.tail === null && renderState.tailMode === "hidden" && !renderedTail.alternate && !getIsHydrating()) {
                        var lastEffect = workInProgress2.lastEffect = renderState.lastEffect;
                        if (lastEffect !== null) {
                          lastEffect.nextEffect = null;
                        }
                        return null;
                      }
                    } else if (now() * 2 - renderState.renderingStartTime > getRenderTargetTime() && renderLanes2 !== OffscreenLane) {
                      workInProgress2.flags |= DidCapture;
                      didSuspendAlready = true;
                      cutOffTailIfNeeded(renderState, false);
                      workInProgress2.lanes = SomeRetryLane;
                      {
                        markSpawnedWork(SomeRetryLane);
                      }
                    }
                  }
                  if (renderState.isBackwards) {
                    renderedTail.sibling = workInProgress2.child;
                    workInProgress2.child = renderedTail;
                  } else {
                    var previousSibling = renderState.last;
                    if (previousSibling !== null) {
                      previousSibling.sibling = renderedTail;
                    } else {
                      workInProgress2.child = renderedTail;
                    }
                    renderState.last = renderedTail;
                  }
                }
                if (renderState.tail !== null) {
                  var next = renderState.tail;
                  renderState.rendering = next;
                  renderState.tail = next.sibling;
                  renderState.lastEffect = workInProgress2.lastEffect;
                  renderState.renderingStartTime = now();
                  next.sibling = null;
                  var suspenseContext = suspenseStackCursor.current;
                  if (didSuspendAlready) {
                    suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
                  } else {
                    suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
                  }
                  pushSuspenseContext(workInProgress2, suspenseContext);
                  return next;
                }
                return null;
              }
              case FundamentalComponent: {
                break;
              }
              case ScopeComponent: {
                break;
              }
              case Block:
                break;
              case OffscreenComponent:
              case LegacyHiddenComponent: {
                popRenderLanes(workInProgress2);
                if (current2 !== null) {
                  var _nextState = workInProgress2.memoizedState;
                  var _prevState = current2.memoizedState;
                  var prevIsHidden = _prevState !== null;
                  var nextIsHidden = _nextState !== null;
                  if (prevIsHidden !== nextIsHidden && newProps.mode !== "unstable-defer-without-hiding") {
                    workInProgress2.flags |= Update;
                  }
                }
                return null;
              }
            }
            {
              {
                throw Error("Unknown unit of work tag (" + workInProgress2.tag + "). This error is likely caused by a bug in React. Please file an issue.");
              }
            }
          }
          function unwindWork(workInProgress2, renderLanes2) {
            switch (workInProgress2.tag) {
              case ClassComponent: {
                var Component = workInProgress2.type;
                if (isContextProvider(Component)) {
                  popContext(workInProgress2);
                }
                var flags = workInProgress2.flags;
                if (flags & ShouldCapture) {
                  workInProgress2.flags = flags & ~ShouldCapture | DidCapture;
                  if ((workInProgress2.mode & ProfileMode) !== NoMode) {
                    transferActualDuration(workInProgress2);
                  }
                  return workInProgress2;
                }
                return null;
              }
              case HostRoot: {
                popHostContainer(workInProgress2);
                popTopLevelContextObject(workInProgress2);
                resetWorkInProgressVersions();
                var _flags = workInProgress2.flags;
                if (!((_flags & DidCapture) === NoFlags)) {
                  {
                    throw Error("The root failed to unmount after an error. This is likely a bug in React. Please file an issue.");
                  }
                }
                workInProgress2.flags = _flags & ~ShouldCapture | DidCapture;
                return workInProgress2;
              }
              case HostComponent: {
                popHostContext(workInProgress2);
                return null;
              }
              case SuspenseComponent: {
                popSuspenseContext(workInProgress2);
                var _flags2 = workInProgress2.flags;
                if (_flags2 & ShouldCapture) {
                  workInProgress2.flags = _flags2 & ~ShouldCapture | DidCapture;
                  if ((workInProgress2.mode & ProfileMode) !== NoMode) {
                    transferActualDuration(workInProgress2);
                  }
                  return workInProgress2;
                }
                return null;
              }
              case SuspenseListComponent: {
                popSuspenseContext(workInProgress2);
                return null;
              }
              case HostPortal:
                popHostContainer(workInProgress2);
                return null;
              case ContextProvider:
                popProvider(workInProgress2);
                return null;
              case OffscreenComponent:
              case LegacyHiddenComponent:
                popRenderLanes(workInProgress2);
                return null;
              default:
                return null;
            }
          }
          function unwindInterruptedWork(interruptedWork) {
            switch (interruptedWork.tag) {
              case ClassComponent: {
                var childContextTypes = interruptedWork.type.childContextTypes;
                if (childContextTypes !== null && childContextTypes !== void 0) {
                  popContext(interruptedWork);
                }
                break;
              }
              case HostRoot: {
                popHostContainer(interruptedWork);
                popTopLevelContextObject(interruptedWork);
                resetWorkInProgressVersions();
                break;
              }
              case HostComponent: {
                popHostContext(interruptedWork);
                break;
              }
              case HostPortal:
                popHostContainer(interruptedWork);
                break;
              case SuspenseComponent:
                popSuspenseContext(interruptedWork);
                break;
              case SuspenseListComponent:
                popSuspenseContext(interruptedWork);
                break;
              case ContextProvider:
                popProvider(interruptedWork);
                break;
              case OffscreenComponent:
              case LegacyHiddenComponent:
                popRenderLanes(interruptedWork);
                break;
            }
          }
          function createCapturedValue(value, source) {
            return {
              value,
              source,
              stack: getStackByFiberInDevAndProd(source)
            };
          }
          function showErrorDialog(boundary, errorInfo) {
            return true;
          }
          function logCapturedError(boundary, errorInfo) {
            try {
              var logError = showErrorDialog(boundary, errorInfo);
              if (logError === false) {
                return;
              }
              var error2 = errorInfo.value;
              if (true) {
                var source = errorInfo.source;
                var stack = errorInfo.stack;
                var componentStack = stack !== null ? stack : "";
                if (error2 != null && error2._suppressLogging) {
                  if (boundary.tag === ClassComponent) {
                    return;
                  }
                  console["error"](error2);
                }
                var componentName = source ? getComponentName(source.type) : null;
                var componentNameMessage = componentName ? "The above error occurred in the <" + componentName + "> component:" : "The above error occurred in one of your React components:";
                var errorBoundaryMessage;
                var errorBoundaryName = getComponentName(boundary.type);
                if (errorBoundaryName) {
                  errorBoundaryMessage = "React will try to recreate this component tree from scratch " + ("using the error boundary you provided, " + errorBoundaryName + ".");
                } else {
                  errorBoundaryMessage = "Consider adding an error boundary to your tree to customize error handling behavior.\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries.";
                }
                var combinedMessage = componentNameMessage + "\n" + componentStack + "\n\n" + ("" + errorBoundaryMessage);
                console["error"](combinedMessage);
              } else {
                console["error"](error2);
              }
            } catch (e2) {
              setTimeout(function() {
                throw e2;
              });
            }
          }
          var PossiblyWeakMap$1 = typeof WeakMap === "function" ? WeakMap : Map;
          function createRootErrorUpdate(fiber, errorInfo, lane) {
            var update = createUpdate(NoTimestamp, lane);
            update.tag = CaptureUpdate;
            update.payload = {
              element: null
            };
            var error2 = errorInfo.value;
            update.callback = function() {
              onUncaughtError(error2);
              logCapturedError(fiber, errorInfo);
            };
            return update;
          }
          function createClassErrorUpdate(fiber, errorInfo, lane) {
            var update = createUpdate(NoTimestamp, lane);
            update.tag = CaptureUpdate;
            var getDerivedStateFromError = fiber.type.getDerivedStateFromError;
            if (typeof getDerivedStateFromError === "function") {
              var error$1 = errorInfo.value;
              update.payload = function() {
                logCapturedError(fiber, errorInfo);
                return getDerivedStateFromError(error$1);
              };
            }
            var inst = fiber.stateNode;
            if (inst !== null && typeof inst.componentDidCatch === "function") {
              update.callback = function callback() {
                {
                  markFailedErrorBoundaryForHotReloading(fiber);
                }
                if (typeof getDerivedStateFromError !== "function") {
                  markLegacyErrorBoundaryAsFailed(this);
                  logCapturedError(fiber, errorInfo);
                }
                var error$12 = errorInfo.value;
                var stack = errorInfo.stack;
                this.componentDidCatch(error$12, {
                  componentStack: stack !== null ? stack : ""
                });
                {
                  if (typeof getDerivedStateFromError !== "function") {
                    if (!includesSomeLane(fiber.lanes, SyncLane)) {
                      error("%s: Error boundaries should implement getDerivedStateFromError(). In that method, return a state update to display an error message or fallback UI.", getComponentName(fiber.type) || "Unknown");
                    }
                  }
                }
              };
            } else {
              update.callback = function() {
                markFailedErrorBoundaryForHotReloading(fiber);
              };
            }
            return update;
          }
          function attachPingListener(root2, wakeable, lanes) {
            var pingCache = root2.pingCache;
            var threadIDs;
            if (pingCache === null) {
              pingCache = root2.pingCache = new PossiblyWeakMap$1();
              threadIDs = /* @__PURE__ */ new Set();
              pingCache.set(wakeable, threadIDs);
            } else {
              threadIDs = pingCache.get(wakeable);
              if (threadIDs === void 0) {
                threadIDs = /* @__PURE__ */ new Set();
                pingCache.set(wakeable, threadIDs);
              }
            }
            if (!threadIDs.has(lanes)) {
              threadIDs.add(lanes);
              var ping = pingSuspendedRoot.bind(null, root2, wakeable, lanes);
              wakeable.then(ping, ping);
            }
          }
          function throwException(root2, returnFiber, sourceFiber, value, rootRenderLanes) {
            sourceFiber.flags |= Incomplete;
            sourceFiber.firstEffect = sourceFiber.lastEffect = null;
            if (value !== null && typeof value === "object" && typeof value.then === "function") {
              var wakeable = value;
              if ((sourceFiber.mode & BlockingMode) === NoMode) {
                var currentSource = sourceFiber.alternate;
                if (currentSource) {
                  sourceFiber.updateQueue = currentSource.updateQueue;
                  sourceFiber.memoizedState = currentSource.memoizedState;
                  sourceFiber.lanes = currentSource.lanes;
                } else {
                  sourceFiber.updateQueue = null;
                  sourceFiber.memoizedState = null;
                }
              }
              var hasInvisibleParentBoundary = hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext);
              var _workInProgress = returnFiber;
              do {
                if (_workInProgress.tag === SuspenseComponent && shouldCaptureSuspense(_workInProgress, hasInvisibleParentBoundary)) {
                  var wakeables = _workInProgress.updateQueue;
                  if (wakeables === null) {
                    var updateQueue = /* @__PURE__ */ new Set();
                    updateQueue.add(wakeable);
                    _workInProgress.updateQueue = updateQueue;
                  } else {
                    wakeables.add(wakeable);
                  }
                  if ((_workInProgress.mode & BlockingMode) === NoMode) {
                    _workInProgress.flags |= DidCapture;
                    sourceFiber.flags |= ForceUpdateForLegacySuspense;
                    sourceFiber.flags &= ~(LifecycleEffectMask | Incomplete);
                    if (sourceFiber.tag === ClassComponent) {
                      var currentSourceFiber = sourceFiber.alternate;
                      if (currentSourceFiber === null) {
                        sourceFiber.tag = IncompleteClassComponent;
                      } else {
                        var update = createUpdate(NoTimestamp, SyncLane);
                        update.tag = ForceUpdate;
                        enqueueUpdate(sourceFiber, update);
                      }
                    }
                    sourceFiber.lanes = mergeLanes(sourceFiber.lanes, SyncLane);
                    return;
                  }
                  attachPingListener(root2, wakeable, rootRenderLanes);
                  _workInProgress.flags |= ShouldCapture;
                  _workInProgress.lanes = rootRenderLanes;
                  return;
                }
                _workInProgress = _workInProgress.return;
              } while (_workInProgress !== null);
              value = new Error((getComponentName(sourceFiber.type) || "A React component") + " suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.");
            }
            renderDidError();
            value = createCapturedValue(value, sourceFiber);
            var workInProgress2 = returnFiber;
            do {
              switch (workInProgress2.tag) {
                case HostRoot: {
                  var _errorInfo = value;
                  workInProgress2.flags |= ShouldCapture;
                  var lane = pickArbitraryLane(rootRenderLanes);
                  workInProgress2.lanes = mergeLanes(workInProgress2.lanes, lane);
                  var _update = createRootErrorUpdate(workInProgress2, _errorInfo, lane);
                  enqueueCapturedUpdate(workInProgress2, _update);
                  return;
                }
                case ClassComponent:
                  var errorInfo = value;
                  var ctor = workInProgress2.type;
                  var instance = workInProgress2.stateNode;
                  if ((workInProgress2.flags & DidCapture) === NoFlags && (typeof ctor.getDerivedStateFromError === "function" || instance !== null && typeof instance.componentDidCatch === "function" && !isAlreadyFailedLegacyErrorBoundary(instance))) {
                    workInProgress2.flags |= ShouldCapture;
                    var _lane = pickArbitraryLane(rootRenderLanes);
                    workInProgress2.lanes = mergeLanes(workInProgress2.lanes, _lane);
                    var _update2 = createClassErrorUpdate(workInProgress2, errorInfo, _lane);
                    enqueueCapturedUpdate(workInProgress2, _update2);
                    return;
                  }
                  break;
              }
              workInProgress2 = workInProgress2.return;
            } while (workInProgress2 !== null);
          }
          var didWarnAboutUndefinedSnapshotBeforeUpdate = null;
          {
            didWarnAboutUndefinedSnapshotBeforeUpdate = /* @__PURE__ */ new Set();
          }
          var PossiblyWeakSet = typeof WeakSet === "function" ? WeakSet : Set;
          var callComponentWillUnmountWithTimer = function(current2, instance) {
            instance.props = current2.memoizedProps;
            instance.state = current2.memoizedState;
            {
              instance.componentWillUnmount();
            }
          };
          function safelyCallComponentWillUnmount(current2, instance) {
            {
              invokeGuardedCallback(null, callComponentWillUnmountWithTimer, null, current2, instance);
              if (hasCaughtError()) {
                var unmountError = clearCaughtError();
                captureCommitPhaseError(current2, unmountError);
              }
            }
          }
          function safelyDetachRef(current2) {
            var ref = current2.ref;
            if (ref !== null) {
              if (typeof ref === "function") {
                {
                  invokeGuardedCallback(null, ref, null, null);
                  if (hasCaughtError()) {
                    var refError = clearCaughtError();
                    captureCommitPhaseError(current2, refError);
                  }
                }
              } else {
                ref.current = null;
              }
            }
          }
          function safelyCallDestroy(current2, destroy) {
            {
              invokeGuardedCallback(null, destroy, null);
              if (hasCaughtError()) {
                var error2 = clearCaughtError();
                captureCommitPhaseError(current2, error2);
              }
            }
          }
          function commitBeforeMutationLifeCycles(current2, finishedWork) {
            switch (finishedWork.tag) {
              case FunctionComponent:
              case ForwardRef:
              case SimpleMemoComponent:
              case Block: {
                return;
              }
              case ClassComponent: {
                if (finishedWork.flags & Snapshot) {
                  if (current2 !== null) {
                    var prevProps = current2.memoizedProps;
                    var prevState = current2.memoizedState;
                    var instance = finishedWork.stateNode;
                    {
                      if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                        if (instance.props !== finishedWork.memoizedProps) {
                          error("Expected %s props to match memoized props before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentName(finishedWork.type) || "instance");
                        }
                        if (instance.state !== finishedWork.memoizedState) {
                          error("Expected %s state to match memoized state before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentName(finishedWork.type) || "instance");
                        }
                      }
                    }
                    var snapshot = instance.getSnapshotBeforeUpdate(finishedWork.elementType === finishedWork.type ? prevProps : resolveDefaultProps(finishedWork.type, prevProps), prevState);
                    {
                      var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;
                      if (snapshot === void 0 && !didWarnSet.has(finishedWork.type)) {
                        didWarnSet.add(finishedWork.type);
                        error("%s.getSnapshotBeforeUpdate(): A snapshot value (or null) must be returned. You have returned undefined.", getComponentName(finishedWork.type));
                      }
                    }
                    instance.__reactInternalSnapshotBeforeUpdate = snapshot;
                  }
                }
                return;
              }
              case HostRoot: {
                {
                  if (finishedWork.flags & Snapshot) {
                    var root2 = finishedWork.stateNode;
                    clearContainer(root2.containerInfo);
                  }
                }
                return;
              }
              case HostComponent:
              case HostText:
              case HostPortal:
              case IncompleteClassComponent:
                return;
            }
            {
              {
                throw Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
          }
          function commitHookEffectListUnmount(tag, finishedWork) {
            var updateQueue = finishedWork.updateQueue;
            var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;
            if (lastEffect !== null) {
              var firstEffect = lastEffect.next;
              var effect = firstEffect;
              do {
                if ((effect.tag & tag) === tag) {
                  var destroy = effect.destroy;
                  effect.destroy = void 0;
                  if (destroy !== void 0) {
                    destroy();
                  }
                }
                effect = effect.next;
              } while (effect !== firstEffect);
            }
          }
          function commitHookEffectListMount(tag, finishedWork) {
            var updateQueue = finishedWork.updateQueue;
            var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;
            if (lastEffect !== null) {
              var firstEffect = lastEffect.next;
              var effect = firstEffect;
              do {
                if ((effect.tag & tag) === tag) {
                  var create = effect.create;
                  effect.destroy = create();
                  {
                    var destroy = effect.destroy;
                    if (destroy !== void 0 && typeof destroy !== "function") {
                      var addendum = void 0;
                      if (destroy === null) {
                        addendum = " You returned null. If your effect does not require clean up, return undefined (or nothing).";
                      } else if (typeof destroy.then === "function") {
                        addendum = "\n\nIt looks like you wrote useEffect(async () => ...) or returned a Promise. Instead, write the async function inside your effect and call it immediately:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching";
                      } else {
                        addendum = " You returned: " + destroy;
                      }
                      error("An effect function must not return anything besides a function, which is used for clean-up.%s", addendum);
                    }
                  }
                }
                effect = effect.next;
              } while (effect !== firstEffect);
            }
          }
          function schedulePassiveEffects(finishedWork) {
            var updateQueue = finishedWork.updateQueue;
            var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;
            if (lastEffect !== null) {
              var firstEffect = lastEffect.next;
              var effect = firstEffect;
              do {
                var _effect = effect, next = _effect.next, tag = _effect.tag;
                if ((tag & Passive$1) !== NoFlags$1 && (tag & HasEffect) !== NoFlags$1) {
                  enqueuePendingPassiveHookEffectUnmount(finishedWork, effect);
                  enqueuePendingPassiveHookEffectMount(finishedWork, effect);
                }
                effect = next;
              } while (effect !== firstEffect);
            }
          }
          function commitLifeCycles(finishedRoot, current2, finishedWork, committedLanes) {
            switch (finishedWork.tag) {
              case FunctionComponent:
              case ForwardRef:
              case SimpleMemoComponent:
              case Block: {
                {
                  commitHookEffectListMount(Layout | HasEffect, finishedWork);
                }
                schedulePassiveEffects(finishedWork);
                return;
              }
              case ClassComponent: {
                var instance = finishedWork.stateNode;
                if (finishedWork.flags & Update) {
                  if (current2 === null) {
                    {
                      if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                        if (instance.props !== finishedWork.memoizedProps) {
                          error("Expected %s props to match memoized props before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentName(finishedWork.type) || "instance");
                        }
                        if (instance.state !== finishedWork.memoizedState) {
                          error("Expected %s state to match memoized state before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentName(finishedWork.type) || "instance");
                        }
                      }
                    }
                    {
                      instance.componentDidMount();
                    }
                  } else {
                    var prevProps = finishedWork.elementType === finishedWork.type ? current2.memoizedProps : resolveDefaultProps(finishedWork.type, current2.memoizedProps);
                    var prevState = current2.memoizedState;
                    {
                      if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                        if (instance.props !== finishedWork.memoizedProps) {
                          error("Expected %s props to match memoized props before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentName(finishedWork.type) || "instance");
                        }
                        if (instance.state !== finishedWork.memoizedState) {
                          error("Expected %s state to match memoized state before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentName(finishedWork.type) || "instance");
                        }
                      }
                    }
                    {
                      instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);
                    }
                  }
                }
                var updateQueue = finishedWork.updateQueue;
                if (updateQueue !== null) {
                  {
                    if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                      if (instance.props !== finishedWork.memoizedProps) {
                        error("Expected %s props to match memoized props before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentName(finishedWork.type) || "instance");
                      }
                      if (instance.state !== finishedWork.memoizedState) {
                        error("Expected %s state to match memoized state before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentName(finishedWork.type) || "instance");
                      }
                    }
                  }
                  commitUpdateQueue(finishedWork, updateQueue, instance);
                }
                return;
              }
              case HostRoot: {
                var _updateQueue = finishedWork.updateQueue;
                if (_updateQueue !== null) {
                  var _instance = null;
                  if (finishedWork.child !== null) {
                    switch (finishedWork.child.tag) {
                      case HostComponent:
                        _instance = getPublicInstance(finishedWork.child.stateNode);
                        break;
                      case ClassComponent:
                        _instance = finishedWork.child.stateNode;
                        break;
                    }
                  }
                  commitUpdateQueue(finishedWork, _updateQueue, _instance);
                }
                return;
              }
              case HostComponent: {
                var _instance2 = finishedWork.stateNode;
                if (current2 === null && finishedWork.flags & Update) {
                  var type = finishedWork.type;
                  var props = finishedWork.memoizedProps;
                  commitMount(_instance2, type, props);
                }
                return;
              }
              case HostText: {
                return;
              }
              case HostPortal: {
                return;
              }
              case Profiler: {
                {
                  var _finishedWork$memoize2 = finishedWork.memoizedProps, onCommit = _finishedWork$memoize2.onCommit, onRender = _finishedWork$memoize2.onRender;
                  var effectDuration = finishedWork.stateNode.effectDuration;
                  var commitTime2 = getCommitTime();
                  if (typeof onRender === "function") {
                    {
                      onRender(finishedWork.memoizedProps.id, current2 === null ? "mount" : "update", finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, commitTime2, finishedRoot.memoizedInteractions);
                    }
                  }
                }
                return;
              }
              case SuspenseComponent: {
                commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);
                return;
              }
              case SuspenseListComponent:
              case IncompleteClassComponent:
              case FundamentalComponent:
              case ScopeComponent:
              case OffscreenComponent:
              case LegacyHiddenComponent:
                return;
            }
            {
              {
                throw Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
          }
          function hideOrUnhideAllChildren(finishedWork, isHidden) {
            {
              var node = finishedWork;
              while (true) {
                if (node.tag === HostComponent) {
                  var instance = node.stateNode;
                  if (isHidden) {
                    hideInstance(instance);
                  } else {
                    unhideInstance(node.stateNode, node.memoizedProps);
                  }
                } else if (node.tag === HostText) {
                  var _instance3 = node.stateNode;
                  if (isHidden) {
                    hideTextInstance(_instance3);
                  } else {
                    unhideTextInstance(_instance3, node.memoizedProps);
                  }
                } else if ((node.tag === OffscreenComponent || node.tag === LegacyHiddenComponent) && node.memoizedState !== null && node !== finishedWork)
                  ;
                else if (node.child !== null) {
                  node.child.return = node;
                  node = node.child;
                  continue;
                }
                if (node === finishedWork) {
                  return;
                }
                while (node.sibling === null) {
                  if (node.return === null || node.return === finishedWork) {
                    return;
                  }
                  node = node.return;
                }
                node.sibling.return = node.return;
                node = node.sibling;
              }
            }
          }
          function commitAttachRef(finishedWork) {
            var ref = finishedWork.ref;
            if (ref !== null) {
              var instance = finishedWork.stateNode;
              var instanceToUse;
              switch (finishedWork.tag) {
                case HostComponent:
                  instanceToUse = getPublicInstance(instance);
                  break;
                default:
                  instanceToUse = instance;
              }
              if (typeof ref === "function") {
                ref(instanceToUse);
              } else {
                {
                  if (!ref.hasOwnProperty("current")) {
                    error("Unexpected ref object provided for %s. Use either a ref-setter function or React.createRef().", getComponentName(finishedWork.type));
                  }
                }
                ref.current = instanceToUse;
              }
            }
          }
          function commitDetachRef(current2) {
            var currentRef = current2.ref;
            if (currentRef !== null) {
              if (typeof currentRef === "function") {
                currentRef(null);
              } else {
                currentRef.current = null;
              }
            }
          }
          function commitUnmount(finishedRoot, current2, renderPriorityLevel) {
            onCommitUnmount(current2);
            switch (current2.tag) {
              case FunctionComponent:
              case ForwardRef:
              case MemoComponent:
              case SimpleMemoComponent:
              case Block: {
                var updateQueue = current2.updateQueue;
                if (updateQueue !== null) {
                  var lastEffect = updateQueue.lastEffect;
                  if (lastEffect !== null) {
                    var firstEffect = lastEffect.next;
                    var effect = firstEffect;
                    do {
                      var _effect2 = effect, destroy = _effect2.destroy, tag = _effect2.tag;
                      if (destroy !== void 0) {
                        if ((tag & Passive$1) !== NoFlags$1) {
                          enqueuePendingPassiveHookEffectUnmount(current2, effect);
                        } else {
                          {
                            safelyCallDestroy(current2, destroy);
                          }
                        }
                      }
                      effect = effect.next;
                    } while (effect !== firstEffect);
                  }
                }
                return;
              }
              case ClassComponent: {
                safelyDetachRef(current2);
                var instance = current2.stateNode;
                if (typeof instance.componentWillUnmount === "function") {
                  safelyCallComponentWillUnmount(current2, instance);
                }
                return;
              }
              case HostComponent: {
                safelyDetachRef(current2);
                return;
              }
              case HostPortal: {
                {
                  unmountHostComponents(finishedRoot, current2);
                }
                return;
              }
              case FundamentalComponent: {
                return;
              }
              case DehydratedFragment: {
                return;
              }
              case ScopeComponent: {
                return;
              }
            }
          }
          function commitNestedUnmounts(finishedRoot, root2, renderPriorityLevel) {
            var node = root2;
            while (true) {
              commitUnmount(finishedRoot, node);
              if (node.child !== null && node.tag !== HostPortal) {
                node.child.return = node;
                node = node.child;
                continue;
              }
              if (node === root2) {
                return;
              }
              while (node.sibling === null) {
                if (node.return === null || node.return === root2) {
                  return;
                }
                node = node.return;
              }
              node.sibling.return = node.return;
              node = node.sibling;
            }
          }
          function detachFiberMutation(fiber) {
            fiber.alternate = null;
            fiber.child = null;
            fiber.dependencies = null;
            fiber.firstEffect = null;
            fiber.lastEffect = null;
            fiber.memoizedProps = null;
            fiber.memoizedState = null;
            fiber.pendingProps = null;
            fiber.return = null;
            fiber.updateQueue = null;
            {
              fiber._debugOwner = null;
            }
          }
          function getHostParentFiber(fiber) {
            var parent = fiber.return;
            while (parent !== null) {
              if (isHostParent(parent)) {
                return parent;
              }
              parent = parent.return;
            }
            {
              {
                throw Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
          }
          function isHostParent(fiber) {
            return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;
          }
          function getHostSibling(fiber) {
            var node = fiber;
            siblings:
              while (true) {
                while (node.sibling === null) {
                  if (node.return === null || isHostParent(node.return)) {
                    return null;
                  }
                  node = node.return;
                }
                node.sibling.return = node.return;
                node = node.sibling;
                while (node.tag !== HostComponent && node.tag !== HostText && node.tag !== DehydratedFragment) {
                  if (node.flags & Placement) {
                    continue siblings;
                  }
                  if (node.child === null || node.tag === HostPortal) {
                    continue siblings;
                  } else {
                    node.child.return = node;
                    node = node.child;
                  }
                }
                if (!(node.flags & Placement)) {
                  return node.stateNode;
                }
              }
          }
          function commitPlacement(finishedWork) {
            var parentFiber = getHostParentFiber(finishedWork);
            var parent;
            var isContainer;
            var parentStateNode = parentFiber.stateNode;
            switch (parentFiber.tag) {
              case HostComponent:
                parent = parentStateNode;
                isContainer = false;
                break;
              case HostRoot:
                parent = parentStateNode.containerInfo;
                isContainer = true;
                break;
              case HostPortal:
                parent = parentStateNode.containerInfo;
                isContainer = true;
                break;
              case FundamentalComponent:
              default: {
                {
                  throw Error("Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.");
                }
              }
            }
            if (parentFiber.flags & ContentReset) {
              resetTextContent(parent);
              parentFiber.flags &= ~ContentReset;
            }
            var before = getHostSibling(finishedWork);
            if (isContainer) {
              insertOrAppendPlacementNodeIntoContainer(finishedWork, before, parent);
            } else {
              insertOrAppendPlacementNode(finishedWork, before, parent);
            }
          }
          function insertOrAppendPlacementNodeIntoContainer(node, before, parent) {
            var tag = node.tag;
            var isHost = tag === HostComponent || tag === HostText;
            if (isHost || enableFundamentalAPI) {
              var stateNode = isHost ? node.stateNode : node.stateNode.instance;
              if (before) {
                insertInContainerBefore(parent, stateNode, before);
              } else {
                appendChildToContainer(parent, stateNode);
              }
            } else if (tag === HostPortal)
              ;
            else {
              var child = node.child;
              if (child !== null) {
                insertOrAppendPlacementNodeIntoContainer(child, before, parent);
                var sibling = child.sibling;
                while (sibling !== null) {
                  insertOrAppendPlacementNodeIntoContainer(sibling, before, parent);
                  sibling = sibling.sibling;
                }
              }
            }
          }
          function insertOrAppendPlacementNode(node, before, parent) {
            var tag = node.tag;
            var isHost = tag === HostComponent || tag === HostText;
            if (isHost || enableFundamentalAPI) {
              var stateNode = isHost ? node.stateNode : node.stateNode.instance;
              if (before) {
                insertBefore(parent, stateNode, before);
              } else {
                appendChild(parent, stateNode);
              }
            } else if (tag === HostPortal)
              ;
            else {
              var child = node.child;
              if (child !== null) {
                insertOrAppendPlacementNode(child, before, parent);
                var sibling = child.sibling;
                while (sibling !== null) {
                  insertOrAppendPlacementNode(sibling, before, parent);
                  sibling = sibling.sibling;
                }
              }
            }
          }
          function unmountHostComponents(finishedRoot, current2, renderPriorityLevel) {
            var node = current2;
            var currentParentIsValid = false;
            var currentParent;
            var currentParentIsContainer;
            while (true) {
              if (!currentParentIsValid) {
                var parent = node.return;
                findParent:
                  while (true) {
                    if (!(parent !== null)) {
                      {
                        throw Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
                      }
                    }
                    var parentStateNode = parent.stateNode;
                    switch (parent.tag) {
                      case HostComponent:
                        currentParent = parentStateNode;
                        currentParentIsContainer = false;
                        break findParent;
                      case HostRoot:
                        currentParent = parentStateNode.containerInfo;
                        currentParentIsContainer = true;
                        break findParent;
                      case HostPortal:
                        currentParent = parentStateNode.containerInfo;
                        currentParentIsContainer = true;
                        break findParent;
                    }
                    parent = parent.return;
                  }
                currentParentIsValid = true;
              }
              if (node.tag === HostComponent || node.tag === HostText) {
                commitNestedUnmounts(finishedRoot, node);
                if (currentParentIsContainer) {
                  removeChildFromContainer(currentParent, node.stateNode);
                } else {
                  removeChild(currentParent, node.stateNode);
                }
              } else if (node.tag === HostPortal) {
                if (node.child !== null) {
                  currentParent = node.stateNode.containerInfo;
                  currentParentIsContainer = true;
                  node.child.return = node;
                  node = node.child;
                  continue;
                }
              } else {
                commitUnmount(finishedRoot, node);
                if (node.child !== null) {
                  node.child.return = node;
                  node = node.child;
                  continue;
                }
              }
              if (node === current2) {
                return;
              }
              while (node.sibling === null) {
                if (node.return === null || node.return === current2) {
                  return;
                }
                node = node.return;
                if (node.tag === HostPortal) {
                  currentParentIsValid = false;
                }
              }
              node.sibling.return = node.return;
              node = node.sibling;
            }
          }
          function commitDeletion(finishedRoot, current2, renderPriorityLevel) {
            {
              unmountHostComponents(finishedRoot, current2);
            }
            var alternate = current2.alternate;
            detachFiberMutation(current2);
            if (alternate !== null) {
              detachFiberMutation(alternate);
            }
          }
          function commitWork(current2, finishedWork) {
            switch (finishedWork.tag) {
              case FunctionComponent:
              case ForwardRef:
              case MemoComponent:
              case SimpleMemoComponent:
              case Block: {
                {
                  commitHookEffectListUnmount(Layout | HasEffect, finishedWork);
                }
                return;
              }
              case ClassComponent: {
                return;
              }
              case HostComponent: {
                var instance = finishedWork.stateNode;
                if (instance != null) {
                  var newProps = finishedWork.memoizedProps;
                  var oldProps = current2 !== null ? current2.memoizedProps : newProps;
                  var type = finishedWork.type;
                  var updatePayload = finishedWork.updateQueue;
                  finishedWork.updateQueue = null;
                  if (updatePayload !== null) {
                    commitUpdate(instance, updatePayload, type, oldProps, newProps);
                  }
                }
                return;
              }
              case HostText: {
                if (!(finishedWork.stateNode !== null)) {
                  {
                    throw Error("This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.");
                  }
                }
                var textInstance = finishedWork.stateNode;
                var newText = finishedWork.memoizedProps;
                var oldText = current2 !== null ? current2.memoizedProps : newText;
                commitTextUpdate(textInstance, oldText, newText);
                return;
              }
              case HostRoot: {
                {
                  var _root = finishedWork.stateNode;
                  if (_root.hydrate) {
                    _root.hydrate = false;
                    commitHydratedContainer(_root.containerInfo);
                  }
                }
                return;
              }
              case Profiler: {
                return;
              }
              case SuspenseComponent: {
                commitSuspenseComponent(finishedWork);
                attachSuspenseRetryListeners(finishedWork);
                return;
              }
              case SuspenseListComponent: {
                attachSuspenseRetryListeners(finishedWork);
                return;
              }
              case IncompleteClassComponent: {
                return;
              }
              case FundamentalComponent: {
                break;
              }
              case ScopeComponent: {
                break;
              }
              case OffscreenComponent:
              case LegacyHiddenComponent: {
                var newState = finishedWork.memoizedState;
                var isHidden = newState !== null;
                hideOrUnhideAllChildren(finishedWork, isHidden);
                return;
              }
            }
            {
              {
                throw Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
          }
          function commitSuspenseComponent(finishedWork) {
            var newState = finishedWork.memoizedState;
            if (newState !== null) {
              markCommitTimeOfFallback();
              {
                var primaryChildParent = finishedWork.child;
                hideOrUnhideAllChildren(primaryChildParent, true);
              }
            }
          }
          function commitSuspenseHydrationCallbacks(finishedRoot, finishedWork) {
            var newState = finishedWork.memoizedState;
            if (newState === null) {
              var current2 = finishedWork.alternate;
              if (current2 !== null) {
                var prevState = current2.memoizedState;
                if (prevState !== null) {
                  var suspenseInstance = prevState.dehydrated;
                  if (suspenseInstance !== null) {
                    commitHydratedSuspenseInstance(suspenseInstance);
                  }
                }
              }
            }
          }
          function attachSuspenseRetryListeners(finishedWork) {
            var wakeables = finishedWork.updateQueue;
            if (wakeables !== null) {
              finishedWork.updateQueue = null;
              var retryCache = finishedWork.stateNode;
              if (retryCache === null) {
                retryCache = finishedWork.stateNode = new PossiblyWeakSet();
              }
              wakeables.forEach(function(wakeable) {
                var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);
                if (!retryCache.has(wakeable)) {
                  {
                    if (wakeable.__reactDoNotTraceInteractions !== true) {
                      retry = tracing.unstable_wrap(retry);
                    }
                  }
                  retryCache.add(wakeable);
                  wakeable.then(retry, retry);
                }
              });
            }
          }
          function isSuspenseBoundaryBeingHidden(current2, finishedWork) {
            if (current2 !== null) {
              var oldState = current2.memoizedState;
              if (oldState === null || oldState.dehydrated !== null) {
                var newState = finishedWork.memoizedState;
                return newState !== null && newState.dehydrated === null;
              }
            }
            return false;
          }
          function commitResetTextContent(current2) {
            resetTextContent(current2.stateNode);
          }
          var COMPONENT_TYPE = 0;
          var HAS_PSEUDO_CLASS_TYPE = 1;
          var ROLE_TYPE = 2;
          var TEST_NAME_TYPE = 3;
          var TEXT_TYPE = 4;
          if (typeof Symbol === "function" && Symbol.for) {
            var symbolFor$1 = Symbol.for;
            COMPONENT_TYPE = symbolFor$1("selector.component");
            HAS_PSEUDO_CLASS_TYPE = symbolFor$1("selector.has_pseudo_class");
            ROLE_TYPE = symbolFor$1("selector.role");
            TEST_NAME_TYPE = symbolFor$1("selector.test_id");
            TEXT_TYPE = symbolFor$1("selector.text");
          }
          var commitHooks = [];
          function onCommitRoot$1() {
            {
              commitHooks.forEach(function(commitHook) {
                return commitHook();
              });
            }
          }
          var ceil = Math.ceil;
          var ReactCurrentDispatcher$2 = ReactSharedInternals.ReactCurrentDispatcher, ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner, IsSomeRendererActing = ReactSharedInternals.IsSomeRendererActing;
          var NoContext = 0;
          var BatchedContext = 1;
          var EventContext = 2;
          var DiscreteEventContext = 4;
          var LegacyUnbatchedContext = 8;
          var RenderContext = 16;
          var CommitContext = 32;
          var RetryAfterError = 64;
          var RootIncomplete = 0;
          var RootFatalErrored = 1;
          var RootErrored = 2;
          var RootSuspended = 3;
          var RootSuspendedWithDelay = 4;
          var RootCompleted = 5;
          var executionContext = NoContext;
          var workInProgressRoot = null;
          var workInProgress = null;
          var workInProgressRootRenderLanes = NoLanes;
          var subtreeRenderLanes = NoLanes;
          var subtreeRenderLanesCursor = createCursor(NoLanes);
          var workInProgressRootExitStatus = RootIncomplete;
          var workInProgressRootFatalError = null;
          var workInProgressRootIncludedLanes = NoLanes;
          var workInProgressRootSkippedLanes = NoLanes;
          var workInProgressRootUpdatedLanes = NoLanes;
          var workInProgressRootPingedLanes = NoLanes;
          var mostRecentlyUpdatedRoot = null;
          var globalMostRecentFallbackTime = 0;
          var FALLBACK_THROTTLE_MS = 500;
          var workInProgressRootRenderTargetTime = Infinity;
          var RENDER_TIMEOUT_MS = 500;
          function resetRenderTimer() {
            workInProgressRootRenderTargetTime = now() + RENDER_TIMEOUT_MS;
          }
          function getRenderTargetTime() {
            return workInProgressRootRenderTargetTime;
          }
          var nextEffect = null;
          var hasUncaughtError = false;
          var firstUncaughtError = null;
          var legacyErrorBoundariesThatAlreadyFailed = null;
          var rootDoesHavePassiveEffects = false;
          var rootWithPendingPassiveEffects = null;
          var pendingPassiveEffectsRenderPriority = NoPriority$1;
          var pendingPassiveEffectsLanes = NoLanes;
          var pendingPassiveHookEffectsMount = [];
          var pendingPassiveHookEffectsUnmount = [];
          var rootsWithPendingDiscreteUpdates = null;
          var NESTED_UPDATE_LIMIT = 50;
          var nestedUpdateCount = 0;
          var rootWithNestedUpdates = null;
          var NESTED_PASSIVE_UPDATE_LIMIT = 50;
          var nestedPassiveUpdateCount = 0;
          var spawnedWorkDuringRender = null;
          var currentEventTime = NoTimestamp;
          var currentEventWipLanes = NoLanes;
          var currentEventPendingLanes = NoLanes;
          var isFlushingPassiveEffects = false;
          var focusedInstanceHandle = null;
          var shouldFireAfterActiveInstanceBlur = false;
          function getWorkInProgressRoot() {
            return workInProgressRoot;
          }
          function requestEventTime() {
            if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
              return now();
            }
            if (currentEventTime !== NoTimestamp) {
              return currentEventTime;
            }
            currentEventTime = now();
            return currentEventTime;
          }
          function requestUpdateLane(fiber) {
            var mode = fiber.mode;
            if ((mode & BlockingMode) === NoMode) {
              return SyncLane;
            } else if ((mode & ConcurrentMode) === NoMode) {
              return getCurrentPriorityLevel() === ImmediatePriority$1 ? SyncLane : SyncBatchedLane;
            }
            if (currentEventWipLanes === NoLanes) {
              currentEventWipLanes = workInProgressRootIncludedLanes;
            }
            var isTransition = requestCurrentTransition() !== NoTransition;
            if (isTransition) {
              if (currentEventPendingLanes !== NoLanes) {
                currentEventPendingLanes = mostRecentlyUpdatedRoot !== null ? mostRecentlyUpdatedRoot.pendingLanes : NoLanes;
              }
              return findTransitionLane(currentEventWipLanes, currentEventPendingLanes);
            }
            var schedulerPriority = getCurrentPriorityLevel();
            var lane;
            if ((executionContext & DiscreteEventContext) !== NoContext && schedulerPriority === UserBlockingPriority$2) {
              lane = findUpdateLane(InputDiscreteLanePriority, currentEventWipLanes);
            } else {
              var schedulerLanePriority = schedulerPriorityToLanePriority(schedulerPriority);
              lane = findUpdateLane(schedulerLanePriority, currentEventWipLanes);
            }
            return lane;
          }
          function requestRetryLane(fiber) {
            var mode = fiber.mode;
            if ((mode & BlockingMode) === NoMode) {
              return SyncLane;
            } else if ((mode & ConcurrentMode) === NoMode) {
              return getCurrentPriorityLevel() === ImmediatePriority$1 ? SyncLane : SyncBatchedLane;
            }
            if (currentEventWipLanes === NoLanes) {
              currentEventWipLanes = workInProgressRootIncludedLanes;
            }
            return findRetryLane(currentEventWipLanes);
          }
          function scheduleUpdateOnFiber(fiber, lane, eventTime) {
            checkForNestedUpdates();
            warnAboutRenderPhaseUpdatesInDEV(fiber);
            var root2 = markUpdateLaneFromFiberToRoot(fiber, lane);
            if (root2 === null) {
              warnAboutUpdateOnUnmountedFiberInDEV(fiber);
              return null;
            }
            markRootUpdated(root2, lane, eventTime);
            if (root2 === workInProgressRoot) {
              {
                workInProgressRootUpdatedLanes = mergeLanes(workInProgressRootUpdatedLanes, lane);
              }
              if (workInProgressRootExitStatus === RootSuspendedWithDelay) {
                markRootSuspended$1(root2, workInProgressRootRenderLanes);
              }
            }
            var priorityLevel = getCurrentPriorityLevel();
            if (lane === SyncLane) {
              if ((executionContext & LegacyUnbatchedContext) !== NoContext && (executionContext & (RenderContext | CommitContext)) === NoContext) {
                schedulePendingInteractions(root2, lane);
                performSyncWorkOnRoot(root2);
              } else {
                ensureRootIsScheduled(root2, eventTime);
                schedulePendingInteractions(root2, lane);
                if (executionContext === NoContext) {
                  resetRenderTimer();
                  flushSyncCallbackQueue();
                }
              }
            } else {
              if ((executionContext & DiscreteEventContext) !== NoContext && (priorityLevel === UserBlockingPriority$2 || priorityLevel === ImmediatePriority$1)) {
                if (rootsWithPendingDiscreteUpdates === null) {
                  rootsWithPendingDiscreteUpdates = /* @__PURE__ */ new Set([root2]);
                } else {
                  rootsWithPendingDiscreteUpdates.add(root2);
                }
              }
              ensureRootIsScheduled(root2, eventTime);
              schedulePendingInteractions(root2, lane);
            }
            mostRecentlyUpdatedRoot = root2;
          }
          function markUpdateLaneFromFiberToRoot(sourceFiber, lane) {
            sourceFiber.lanes = mergeLanes(sourceFiber.lanes, lane);
            var alternate = sourceFiber.alternate;
            if (alternate !== null) {
              alternate.lanes = mergeLanes(alternate.lanes, lane);
            }
            {
              if (alternate === null && (sourceFiber.flags & (Placement | Hydrating)) !== NoFlags) {
                warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);
              }
            }
            var node = sourceFiber;
            var parent = sourceFiber.return;
            while (parent !== null) {
              parent.childLanes = mergeLanes(parent.childLanes, lane);
              alternate = parent.alternate;
              if (alternate !== null) {
                alternate.childLanes = mergeLanes(alternate.childLanes, lane);
              } else {
                {
                  if ((parent.flags & (Placement | Hydrating)) !== NoFlags) {
                    warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);
                  }
                }
              }
              node = parent;
              parent = parent.return;
            }
            if (node.tag === HostRoot) {
              var root2 = node.stateNode;
              return root2;
            } else {
              return null;
            }
          }
          function ensureRootIsScheduled(root2, currentTime) {
            var existingCallbackNode = root2.callbackNode;
            markStarvedLanesAsExpired(root2, currentTime);
            var nextLanes = getNextLanes(root2, root2 === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);
            var newCallbackPriority = returnNextLanesPriority();
            if (nextLanes === NoLanes) {
              if (existingCallbackNode !== null) {
                cancelCallback(existingCallbackNode);
                root2.callbackNode = null;
                root2.callbackPriority = NoLanePriority;
              }
              return;
            }
            if (existingCallbackNode !== null) {
              var existingCallbackPriority = root2.callbackPriority;
              if (existingCallbackPriority === newCallbackPriority) {
                return;
              }
              cancelCallback(existingCallbackNode);
            }
            var newCallbackNode;
            if (newCallbackPriority === SyncLanePriority) {
              newCallbackNode = scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root2));
            } else if (newCallbackPriority === SyncBatchedLanePriority) {
              newCallbackNode = scheduleCallback(ImmediatePriority$1, performSyncWorkOnRoot.bind(null, root2));
            } else {
              var schedulerPriorityLevel = lanePriorityToSchedulerPriority(newCallbackPriority);
              newCallbackNode = scheduleCallback(schedulerPriorityLevel, performConcurrentWorkOnRoot.bind(null, root2));
            }
            root2.callbackPriority = newCallbackPriority;
            root2.callbackNode = newCallbackNode;
          }
          function performConcurrentWorkOnRoot(root2) {
            currentEventTime = NoTimestamp;
            currentEventWipLanes = NoLanes;
            currentEventPendingLanes = NoLanes;
            if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {
              {
                throw Error("Should not already be working.");
              }
            }
            var originalCallbackNode = root2.callbackNode;
            var didFlushPassiveEffects = flushPassiveEffects();
            if (didFlushPassiveEffects) {
              if (root2.callbackNode !== originalCallbackNode) {
                return null;
              }
            }
            var lanes = getNextLanes(root2, root2 === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);
            if (lanes === NoLanes) {
              return null;
            }
            var exitStatus = renderRootConcurrent(root2, lanes);
            if (includesSomeLane(workInProgressRootIncludedLanes, workInProgressRootUpdatedLanes)) {
              prepareFreshStack(root2, NoLanes);
            } else if (exitStatus !== RootIncomplete) {
              if (exitStatus === RootErrored) {
                executionContext |= RetryAfterError;
                if (root2.hydrate) {
                  root2.hydrate = false;
                  clearContainer(root2.containerInfo);
                }
                lanes = getLanesToRetrySynchronouslyOnError(root2);
                if (lanes !== NoLanes) {
                  exitStatus = renderRootSync(root2, lanes);
                }
              }
              if (exitStatus === RootFatalErrored) {
                var fatalError = workInProgressRootFatalError;
                prepareFreshStack(root2, NoLanes);
                markRootSuspended$1(root2, lanes);
                ensureRootIsScheduled(root2, now());
                throw fatalError;
              }
              var finishedWork = root2.current.alternate;
              root2.finishedWork = finishedWork;
              root2.finishedLanes = lanes;
              finishConcurrentRender(root2, exitStatus, lanes);
            }
            ensureRootIsScheduled(root2, now());
            if (root2.callbackNode === originalCallbackNode) {
              return performConcurrentWorkOnRoot.bind(null, root2);
            }
            return null;
          }
          function finishConcurrentRender(root2, exitStatus, lanes) {
            switch (exitStatus) {
              case RootIncomplete:
              case RootFatalErrored: {
                {
                  {
                    throw Error("Root did not complete. This is a bug in React.");
                  }
                }
              }
              case RootErrored: {
                commitRoot(root2);
                break;
              }
              case RootSuspended: {
                markRootSuspended$1(root2, lanes);
                if (includesOnlyRetries(lanes) && !shouldForceFlushFallbacksInDEV()) {
                  var msUntilTimeout = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now();
                  if (msUntilTimeout > 10) {
                    var nextLanes = getNextLanes(root2, NoLanes);
                    if (nextLanes !== NoLanes) {
                      break;
                    }
                    var suspendedLanes = root2.suspendedLanes;
                    if (!isSubsetOfLanes(suspendedLanes, lanes)) {
                      var eventTime = requestEventTime();
                      markRootPinged(root2, suspendedLanes);
                      break;
                    }
                    root2.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root2), msUntilTimeout);
                    break;
                  }
                }
                commitRoot(root2);
                break;
              }
              case RootSuspendedWithDelay: {
                markRootSuspended$1(root2, lanes);
                if (includesOnlyTransitions(lanes)) {
                  break;
                }
                if (!shouldForceFlushFallbacksInDEV()) {
                  var mostRecentEventTime = getMostRecentEventTime(root2, lanes);
                  var eventTimeMs = mostRecentEventTime;
                  var timeElapsedMs = now() - eventTimeMs;
                  var _msUntilTimeout = jnd(timeElapsedMs) - timeElapsedMs;
                  if (_msUntilTimeout > 10) {
                    root2.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root2), _msUntilTimeout);
                    break;
                  }
                }
                commitRoot(root2);
                break;
              }
              case RootCompleted: {
                commitRoot(root2);
                break;
              }
              default: {
                {
                  {
                    throw Error("Unknown root exit status.");
                  }
                }
              }
            }
          }
          function markRootSuspended$1(root2, suspendedLanes) {
            suspendedLanes = removeLanes(suspendedLanes, workInProgressRootPingedLanes);
            suspendedLanes = removeLanes(suspendedLanes, workInProgressRootUpdatedLanes);
            markRootSuspended(root2, suspendedLanes);
          }
          function performSyncWorkOnRoot(root2) {
            if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {
              {
                throw Error("Should not already be working.");
              }
            }
            flushPassiveEffects();
            var lanes;
            var exitStatus;
            if (root2 === workInProgressRoot && includesSomeLane(root2.expiredLanes, workInProgressRootRenderLanes)) {
              lanes = workInProgressRootRenderLanes;
              exitStatus = renderRootSync(root2, lanes);
              if (includesSomeLane(workInProgressRootIncludedLanes, workInProgressRootUpdatedLanes)) {
                lanes = getNextLanes(root2, lanes);
                exitStatus = renderRootSync(root2, lanes);
              }
            } else {
              lanes = getNextLanes(root2, NoLanes);
              exitStatus = renderRootSync(root2, lanes);
            }
            if (root2.tag !== LegacyRoot && exitStatus === RootErrored) {
              executionContext |= RetryAfterError;
              if (root2.hydrate) {
                root2.hydrate = false;
                clearContainer(root2.containerInfo);
              }
              lanes = getLanesToRetrySynchronouslyOnError(root2);
              if (lanes !== NoLanes) {
                exitStatus = renderRootSync(root2, lanes);
              }
            }
            if (exitStatus === RootFatalErrored) {
              var fatalError = workInProgressRootFatalError;
              prepareFreshStack(root2, NoLanes);
              markRootSuspended$1(root2, lanes);
              ensureRootIsScheduled(root2, now());
              throw fatalError;
            }
            var finishedWork = root2.current.alternate;
            root2.finishedWork = finishedWork;
            root2.finishedLanes = lanes;
            commitRoot(root2);
            ensureRootIsScheduled(root2, now());
            return null;
          }
          function flushDiscreteUpdates() {
            if ((executionContext & (BatchedContext | RenderContext | CommitContext)) !== NoContext) {
              {
                if ((executionContext & RenderContext) !== NoContext) {
                  error("unstable_flushDiscreteUpdates: Cannot flush updates when React is already rendering.");
                }
              }
              return;
            }
            flushPendingDiscreteUpdates();
            flushPassiveEffects();
          }
          function flushPendingDiscreteUpdates() {
            if (rootsWithPendingDiscreteUpdates !== null) {
              var roots = rootsWithPendingDiscreteUpdates;
              rootsWithPendingDiscreteUpdates = null;
              roots.forEach(function(root2) {
                markDiscreteUpdatesExpired(root2);
                ensureRootIsScheduled(root2, now());
              });
            }
            flushSyncCallbackQueue();
          }
          function batchedUpdates$1(fn, a2) {
            var prevExecutionContext = executionContext;
            executionContext |= BatchedContext;
            try {
              return fn(a2);
            } finally {
              executionContext = prevExecutionContext;
              if (executionContext === NoContext) {
                resetRenderTimer();
                flushSyncCallbackQueue();
              }
            }
          }
          function batchedEventUpdates$1(fn, a2) {
            var prevExecutionContext = executionContext;
            executionContext |= EventContext;
            try {
              return fn(a2);
            } finally {
              executionContext = prevExecutionContext;
              if (executionContext === NoContext) {
                resetRenderTimer();
                flushSyncCallbackQueue();
              }
            }
          }
          function discreteUpdates$1(fn, a2, b2, c2, d2) {
            var prevExecutionContext = executionContext;
            executionContext |= DiscreteEventContext;
            {
              try {
                return runWithPriority$1(UserBlockingPriority$2, fn.bind(null, a2, b2, c2, d2));
              } finally {
                executionContext = prevExecutionContext;
                if (executionContext === NoContext) {
                  resetRenderTimer();
                  flushSyncCallbackQueue();
                }
              }
            }
          }
          function unbatchedUpdates(fn, a2) {
            var prevExecutionContext = executionContext;
            executionContext &= ~BatchedContext;
            executionContext |= LegacyUnbatchedContext;
            try {
              return fn(a2);
            } finally {
              executionContext = prevExecutionContext;
              if (executionContext === NoContext) {
                resetRenderTimer();
                flushSyncCallbackQueue();
              }
            }
          }
          function flushSync(fn, a2) {
            var prevExecutionContext = executionContext;
            if ((prevExecutionContext & (RenderContext | CommitContext)) !== NoContext) {
              {
                error("flushSync was called from inside a lifecycle method. React cannot flush when React is already rendering. Consider moving this call to a scheduler task or micro task.");
              }
              return fn(a2);
            }
            executionContext |= BatchedContext;
            {
              try {
                if (fn) {
                  return runWithPriority$1(ImmediatePriority$1, fn.bind(null, a2));
                } else {
                  return void 0;
                }
              } finally {
                executionContext = prevExecutionContext;
                flushSyncCallbackQueue();
              }
            }
          }
          function pushRenderLanes(fiber, lanes) {
            push(subtreeRenderLanesCursor, subtreeRenderLanes, fiber);
            subtreeRenderLanes = mergeLanes(subtreeRenderLanes, lanes);
            workInProgressRootIncludedLanes = mergeLanes(workInProgressRootIncludedLanes, lanes);
          }
          function popRenderLanes(fiber) {
            subtreeRenderLanes = subtreeRenderLanesCursor.current;
            pop(subtreeRenderLanesCursor, fiber);
          }
          function prepareFreshStack(root2, lanes) {
            root2.finishedWork = null;
            root2.finishedLanes = NoLanes;
            var timeoutHandle = root2.timeoutHandle;
            if (timeoutHandle !== noTimeout) {
              root2.timeoutHandle = noTimeout;
              cancelTimeout(timeoutHandle);
            }
            if (workInProgress !== null) {
              var interruptedWork = workInProgress.return;
              while (interruptedWork !== null) {
                unwindInterruptedWork(interruptedWork);
                interruptedWork = interruptedWork.return;
              }
            }
            workInProgressRoot = root2;
            workInProgress = createWorkInProgress(root2.current, null);
            workInProgressRootRenderLanes = subtreeRenderLanes = workInProgressRootIncludedLanes = lanes;
            workInProgressRootExitStatus = RootIncomplete;
            workInProgressRootFatalError = null;
            workInProgressRootSkippedLanes = NoLanes;
            workInProgressRootUpdatedLanes = NoLanes;
            workInProgressRootPingedLanes = NoLanes;
            {
              spawnedWorkDuringRender = null;
            }
            {
              ReactStrictModeWarnings.discardPendingWarnings();
            }
          }
          function handleError(root2, thrownValue) {
            do {
              var erroredWork = workInProgress;
              try {
                resetContextDependencies();
                resetHooksAfterThrow();
                resetCurrentFiber();
                ReactCurrentOwner$2.current = null;
                if (erroredWork === null || erroredWork.return === null) {
                  workInProgressRootExitStatus = RootFatalErrored;
                  workInProgressRootFatalError = thrownValue;
                  workInProgress = null;
                  return;
                }
                if (enableProfilerTimer && erroredWork.mode & ProfileMode) {
                  stopProfilerTimerIfRunningAndRecordDelta(erroredWork, true);
                }
                throwException(root2, erroredWork.return, erroredWork, thrownValue, workInProgressRootRenderLanes);
                completeUnitOfWork(erroredWork);
              } catch (yetAnotherThrownValue) {
                thrownValue = yetAnotherThrownValue;
                if (workInProgress === erroredWork && erroredWork !== null) {
                  erroredWork = erroredWork.return;
                  workInProgress = erroredWork;
                } else {
                  erroredWork = workInProgress;
                }
                continue;
              }
              return;
            } while (true);
          }
          function pushDispatcher() {
            var prevDispatcher = ReactCurrentDispatcher$2.current;
            ReactCurrentDispatcher$2.current = ContextOnlyDispatcher;
            if (prevDispatcher === null) {
              return ContextOnlyDispatcher;
            } else {
              return prevDispatcher;
            }
          }
          function popDispatcher(prevDispatcher) {
            ReactCurrentDispatcher$2.current = prevDispatcher;
          }
          function pushInteractions(root2) {
            {
              var prevInteractions = tracing.__interactionsRef.current;
              tracing.__interactionsRef.current = root2.memoizedInteractions;
              return prevInteractions;
            }
          }
          function popInteractions(prevInteractions) {
            {
              tracing.__interactionsRef.current = prevInteractions;
            }
          }
          function markCommitTimeOfFallback() {
            globalMostRecentFallbackTime = now();
          }
          function markSkippedUpdateLanes(lane) {
            workInProgressRootSkippedLanes = mergeLanes(lane, workInProgressRootSkippedLanes);
          }
          function renderDidSuspend() {
            if (workInProgressRootExitStatus === RootIncomplete) {
              workInProgressRootExitStatus = RootSuspended;
            }
          }
          function renderDidSuspendDelayIfPossible() {
            if (workInProgressRootExitStatus === RootIncomplete || workInProgressRootExitStatus === RootSuspended) {
              workInProgressRootExitStatus = RootSuspendedWithDelay;
            }
            if (workInProgressRoot !== null && (includesNonIdleWork(workInProgressRootSkippedLanes) || includesNonIdleWork(workInProgressRootUpdatedLanes))) {
              markRootSuspended$1(workInProgressRoot, workInProgressRootRenderLanes);
            }
          }
          function renderDidError() {
            if (workInProgressRootExitStatus !== RootCompleted) {
              workInProgressRootExitStatus = RootErrored;
            }
          }
          function renderHasNotSuspendedYet() {
            return workInProgressRootExitStatus === RootIncomplete;
          }
          function renderRootSync(root2, lanes) {
            var prevExecutionContext = executionContext;
            executionContext |= RenderContext;
            var prevDispatcher = pushDispatcher();
            if (workInProgressRoot !== root2 || workInProgressRootRenderLanes !== lanes) {
              prepareFreshStack(root2, lanes);
              startWorkOnPendingInteractions(root2, lanes);
            }
            var prevInteractions = pushInteractions(root2);
            do {
              try {
                workLoopSync();
                break;
              } catch (thrownValue) {
                handleError(root2, thrownValue);
              }
            } while (true);
            resetContextDependencies();
            {
              popInteractions(prevInteractions);
            }
            executionContext = prevExecutionContext;
            popDispatcher(prevDispatcher);
            if (workInProgress !== null) {
              {
                {
                  throw Error("Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue.");
                }
              }
            }
            workInProgressRoot = null;
            workInProgressRootRenderLanes = NoLanes;
            return workInProgressRootExitStatus;
          }
          function workLoopSync() {
            while (workInProgress !== null) {
              performUnitOfWork(workInProgress);
            }
          }
          function renderRootConcurrent(root2, lanes) {
            var prevExecutionContext = executionContext;
            executionContext |= RenderContext;
            var prevDispatcher = pushDispatcher();
            if (workInProgressRoot !== root2 || workInProgressRootRenderLanes !== lanes) {
              resetRenderTimer();
              prepareFreshStack(root2, lanes);
              startWorkOnPendingInteractions(root2, lanes);
            }
            var prevInteractions = pushInteractions(root2);
            do {
              try {
                workLoopConcurrent();
                break;
              } catch (thrownValue) {
                handleError(root2, thrownValue);
              }
            } while (true);
            resetContextDependencies();
            {
              popInteractions(prevInteractions);
            }
            popDispatcher(prevDispatcher);
            executionContext = prevExecutionContext;
            if (workInProgress !== null) {
              return RootIncomplete;
            } else {
              workInProgressRoot = null;
              workInProgressRootRenderLanes = NoLanes;
              return workInProgressRootExitStatus;
            }
          }
          function workLoopConcurrent() {
            while (workInProgress !== null && !shouldYield()) {
              performUnitOfWork(workInProgress);
            }
          }
          function performUnitOfWork(unitOfWork) {
            var current2 = unitOfWork.alternate;
            setCurrentFiber(unitOfWork);
            var next;
            if ((unitOfWork.mode & ProfileMode) !== NoMode) {
              startProfilerTimer(unitOfWork);
              next = beginWork$1(current2, unitOfWork, subtreeRenderLanes);
              stopProfilerTimerIfRunningAndRecordDelta(unitOfWork, true);
            } else {
              next = beginWork$1(current2, unitOfWork, subtreeRenderLanes);
            }
            resetCurrentFiber();
            unitOfWork.memoizedProps = unitOfWork.pendingProps;
            if (next === null) {
              completeUnitOfWork(unitOfWork);
            } else {
              workInProgress = next;
            }
            ReactCurrentOwner$2.current = null;
          }
          function completeUnitOfWork(unitOfWork) {
            var completedWork = unitOfWork;
            do {
              var current2 = completedWork.alternate;
              var returnFiber = completedWork.return;
              if ((completedWork.flags & Incomplete) === NoFlags) {
                setCurrentFiber(completedWork);
                var next = void 0;
                if ((completedWork.mode & ProfileMode) === NoMode) {
                  next = completeWork(current2, completedWork, subtreeRenderLanes);
                } else {
                  startProfilerTimer(completedWork);
                  next = completeWork(current2, completedWork, subtreeRenderLanes);
                  stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);
                }
                resetCurrentFiber();
                if (next !== null) {
                  workInProgress = next;
                  return;
                }
                resetChildLanes(completedWork);
                if (returnFiber !== null && (returnFiber.flags & Incomplete) === NoFlags) {
                  if (returnFiber.firstEffect === null) {
                    returnFiber.firstEffect = completedWork.firstEffect;
                  }
                  if (completedWork.lastEffect !== null) {
                    if (returnFiber.lastEffect !== null) {
                      returnFiber.lastEffect.nextEffect = completedWork.firstEffect;
                    }
                    returnFiber.lastEffect = completedWork.lastEffect;
                  }
                  var flags = completedWork.flags;
                  if (flags > PerformedWork) {
                    if (returnFiber.lastEffect !== null) {
                      returnFiber.lastEffect.nextEffect = completedWork;
                    } else {
                      returnFiber.firstEffect = completedWork;
                    }
                    returnFiber.lastEffect = completedWork;
                  }
                }
              } else {
                var _next = unwindWork(completedWork);
                if (_next !== null) {
                  _next.flags &= HostEffectMask;
                  workInProgress = _next;
                  return;
                }
                if ((completedWork.mode & ProfileMode) !== NoMode) {
                  stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);
                  var actualDuration = completedWork.actualDuration;
                  var child = completedWork.child;
                  while (child !== null) {
                    actualDuration += child.actualDuration;
                    child = child.sibling;
                  }
                  completedWork.actualDuration = actualDuration;
                }
                if (returnFiber !== null) {
                  returnFiber.firstEffect = returnFiber.lastEffect = null;
                  returnFiber.flags |= Incomplete;
                }
              }
              var siblingFiber = completedWork.sibling;
              if (siblingFiber !== null) {
                workInProgress = siblingFiber;
                return;
              }
              completedWork = returnFiber;
              workInProgress = completedWork;
            } while (completedWork !== null);
            if (workInProgressRootExitStatus === RootIncomplete) {
              workInProgressRootExitStatus = RootCompleted;
            }
          }
          function resetChildLanes(completedWork) {
            if ((completedWork.tag === LegacyHiddenComponent || completedWork.tag === OffscreenComponent) && completedWork.memoizedState !== null && !includesSomeLane(subtreeRenderLanes, OffscreenLane) && (completedWork.mode & ConcurrentMode) !== NoLanes) {
              return;
            }
            var newChildLanes = NoLanes;
            if ((completedWork.mode & ProfileMode) !== NoMode) {
              var actualDuration = completedWork.actualDuration;
              var treeBaseDuration = completedWork.selfBaseDuration;
              var shouldBubbleActualDurations = completedWork.alternate === null || completedWork.child !== completedWork.alternate.child;
              var child = completedWork.child;
              while (child !== null) {
                newChildLanes = mergeLanes(newChildLanes, mergeLanes(child.lanes, child.childLanes));
                if (shouldBubbleActualDurations) {
                  actualDuration += child.actualDuration;
                }
                treeBaseDuration += child.treeBaseDuration;
                child = child.sibling;
              }
              var isTimedOutSuspense = completedWork.tag === SuspenseComponent && completedWork.memoizedState !== null;
              if (isTimedOutSuspense) {
                var primaryChildFragment = completedWork.child;
                if (primaryChildFragment !== null) {
                  treeBaseDuration -= primaryChildFragment.treeBaseDuration;
                }
              }
              completedWork.actualDuration = actualDuration;
              completedWork.treeBaseDuration = treeBaseDuration;
            } else {
              var _child = completedWork.child;
              while (_child !== null) {
                newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child.lanes, _child.childLanes));
                _child = _child.sibling;
              }
            }
            completedWork.childLanes = newChildLanes;
          }
          function commitRoot(root2) {
            var renderPriorityLevel = getCurrentPriorityLevel();
            runWithPriority$1(ImmediatePriority$1, commitRootImpl.bind(null, root2, renderPriorityLevel));
            return null;
          }
          function commitRootImpl(root2, renderPriorityLevel) {
            do {
              flushPassiveEffects();
            } while (rootWithPendingPassiveEffects !== null);
            flushRenderPhaseStrictModeWarningsInDEV();
            if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {
              {
                throw Error("Should not already be working.");
              }
            }
            var finishedWork = root2.finishedWork;
            var lanes = root2.finishedLanes;
            if (finishedWork === null) {
              return null;
            }
            root2.finishedWork = null;
            root2.finishedLanes = NoLanes;
            if (!(finishedWork !== root2.current)) {
              {
                throw Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
            root2.callbackNode = null;
            var remainingLanes = mergeLanes(finishedWork.lanes, finishedWork.childLanes);
            markRootFinished(root2, remainingLanes);
            if (rootsWithPendingDiscreteUpdates !== null) {
              if (!hasDiscreteLanes(remainingLanes) && rootsWithPendingDiscreteUpdates.has(root2)) {
                rootsWithPendingDiscreteUpdates.delete(root2);
              }
            }
            if (root2 === workInProgressRoot) {
              workInProgressRoot = null;
              workInProgress = null;
              workInProgressRootRenderLanes = NoLanes;
            }
            var firstEffect;
            if (finishedWork.flags > PerformedWork) {
              if (finishedWork.lastEffect !== null) {
                finishedWork.lastEffect.nextEffect = finishedWork;
                firstEffect = finishedWork.firstEffect;
              } else {
                firstEffect = finishedWork;
              }
            } else {
              firstEffect = finishedWork.firstEffect;
            }
            if (firstEffect !== null) {
              var prevExecutionContext = executionContext;
              executionContext |= CommitContext;
              var prevInteractions = pushInteractions(root2);
              ReactCurrentOwner$2.current = null;
              focusedInstanceHandle = prepareForCommit(root2.containerInfo);
              shouldFireAfterActiveInstanceBlur = false;
              nextEffect = firstEffect;
              do {
                {
                  invokeGuardedCallback(null, commitBeforeMutationEffects, null);
                  if (hasCaughtError()) {
                    if (!(nextEffect !== null)) {
                      {
                        throw Error("Should be working on an effect.");
                      }
                    }
                    var error2 = clearCaughtError();
                    captureCommitPhaseError(nextEffect, error2);
                    nextEffect = nextEffect.nextEffect;
                  }
                }
              } while (nextEffect !== null);
              focusedInstanceHandle = null;
              {
                recordCommitTime();
              }
              nextEffect = firstEffect;
              do {
                {
                  invokeGuardedCallback(null, commitMutationEffects, null, root2, renderPriorityLevel);
                  if (hasCaughtError()) {
                    if (!(nextEffect !== null)) {
                      {
                        throw Error("Should be working on an effect.");
                      }
                    }
                    var _error = clearCaughtError();
                    captureCommitPhaseError(nextEffect, _error);
                    nextEffect = nextEffect.nextEffect;
                  }
                }
              } while (nextEffect !== null);
              resetAfterCommit(root2.containerInfo);
              root2.current = finishedWork;
              nextEffect = firstEffect;
              do {
                {
                  invokeGuardedCallback(null, commitLayoutEffects, null, root2, lanes);
                  if (hasCaughtError()) {
                    if (!(nextEffect !== null)) {
                      {
                        throw Error("Should be working on an effect.");
                      }
                    }
                    var _error2 = clearCaughtError();
                    captureCommitPhaseError(nextEffect, _error2);
                    nextEffect = nextEffect.nextEffect;
                  }
                }
              } while (nextEffect !== null);
              nextEffect = null;
              requestPaint();
              {
                popInteractions(prevInteractions);
              }
              executionContext = prevExecutionContext;
            } else {
              root2.current = finishedWork;
              {
                recordCommitTime();
              }
            }
            var rootDidHavePassiveEffects = rootDoesHavePassiveEffects;
            if (rootDoesHavePassiveEffects) {
              rootDoesHavePassiveEffects = false;
              rootWithPendingPassiveEffects = root2;
              pendingPassiveEffectsLanes = lanes;
              pendingPassiveEffectsRenderPriority = renderPriorityLevel;
            } else {
              nextEffect = firstEffect;
              while (nextEffect !== null) {
                var nextNextEffect = nextEffect.nextEffect;
                nextEffect.nextEffect = null;
                if (nextEffect.flags & Deletion) {
                  detachFiberAfterEffects(nextEffect);
                }
                nextEffect = nextNextEffect;
              }
            }
            remainingLanes = root2.pendingLanes;
            if (remainingLanes !== NoLanes) {
              {
                if (spawnedWorkDuringRender !== null) {
                  var expirationTimes = spawnedWorkDuringRender;
                  spawnedWorkDuringRender = null;
                  for (var i2 = 0; i2 < expirationTimes.length; i2++) {
                    scheduleInteractions(root2, expirationTimes[i2], root2.memoizedInteractions);
                  }
                }
                schedulePendingInteractions(root2, remainingLanes);
              }
            } else {
              legacyErrorBoundariesThatAlreadyFailed = null;
            }
            {
              if (!rootDidHavePassiveEffects) {
                finishPendingInteractions(root2, lanes);
              }
            }
            if (remainingLanes === SyncLane) {
              if (root2 === rootWithNestedUpdates) {
                nestedUpdateCount++;
              } else {
                nestedUpdateCount = 0;
                rootWithNestedUpdates = root2;
              }
            } else {
              nestedUpdateCount = 0;
            }
            onCommitRoot(finishedWork.stateNode, renderPriorityLevel);
            {
              onCommitRoot$1();
            }
            ensureRootIsScheduled(root2, now());
            if (hasUncaughtError) {
              hasUncaughtError = false;
              var _error3 = firstUncaughtError;
              firstUncaughtError = null;
              throw _error3;
            }
            if ((executionContext & LegacyUnbatchedContext) !== NoContext) {
              return null;
            }
            flushSyncCallbackQueue();
            return null;
          }
          function commitBeforeMutationEffects() {
            while (nextEffect !== null) {
              var current2 = nextEffect.alternate;
              if (!shouldFireAfterActiveInstanceBlur && focusedInstanceHandle !== null) {
                if ((nextEffect.flags & Deletion) !== NoFlags) {
                  if (doesFiberContain(nextEffect, focusedInstanceHandle)) {
                    shouldFireAfterActiveInstanceBlur = true;
                  }
                } else {
                  if (nextEffect.tag === SuspenseComponent && isSuspenseBoundaryBeingHidden(current2, nextEffect) && doesFiberContain(nextEffect, focusedInstanceHandle)) {
                    shouldFireAfterActiveInstanceBlur = true;
                  }
                }
              }
              var flags = nextEffect.flags;
              if ((flags & Snapshot) !== NoFlags) {
                setCurrentFiber(nextEffect);
                commitBeforeMutationLifeCycles(current2, nextEffect);
                resetCurrentFiber();
              }
              if ((flags & Passive) !== NoFlags) {
                if (!rootDoesHavePassiveEffects) {
                  rootDoesHavePassiveEffects = true;
                  scheduleCallback(NormalPriority$1, function() {
                    flushPassiveEffects();
                    return null;
                  });
                }
              }
              nextEffect = nextEffect.nextEffect;
            }
          }
          function commitMutationEffects(root2, renderPriorityLevel) {
            while (nextEffect !== null) {
              setCurrentFiber(nextEffect);
              var flags = nextEffect.flags;
              if (flags & ContentReset) {
                commitResetTextContent(nextEffect);
              }
              if (flags & Ref) {
                var current2 = nextEffect.alternate;
                if (current2 !== null) {
                  commitDetachRef(current2);
                }
              }
              var primaryFlags = flags & (Placement | Update | Deletion | Hydrating);
              switch (primaryFlags) {
                case Placement: {
                  commitPlacement(nextEffect);
                  nextEffect.flags &= ~Placement;
                  break;
                }
                case PlacementAndUpdate: {
                  commitPlacement(nextEffect);
                  nextEffect.flags &= ~Placement;
                  var _current = nextEffect.alternate;
                  commitWork(_current, nextEffect);
                  break;
                }
                case Hydrating: {
                  nextEffect.flags &= ~Hydrating;
                  break;
                }
                case HydratingAndUpdate: {
                  nextEffect.flags &= ~Hydrating;
                  var _current2 = nextEffect.alternate;
                  commitWork(_current2, nextEffect);
                  break;
                }
                case Update: {
                  var _current3 = nextEffect.alternate;
                  commitWork(_current3, nextEffect);
                  break;
                }
                case Deletion: {
                  commitDeletion(root2, nextEffect);
                  break;
                }
              }
              resetCurrentFiber();
              nextEffect = nextEffect.nextEffect;
            }
          }
          function commitLayoutEffects(root2, committedLanes) {
            while (nextEffect !== null) {
              setCurrentFiber(nextEffect);
              var flags = nextEffect.flags;
              if (flags & (Update | Callback)) {
                var current2 = nextEffect.alternate;
                commitLifeCycles(root2, current2, nextEffect);
              }
              {
                if (flags & Ref) {
                  commitAttachRef(nextEffect);
                }
              }
              resetCurrentFiber();
              nextEffect = nextEffect.nextEffect;
            }
          }
          function flushPassiveEffects() {
            if (pendingPassiveEffectsRenderPriority !== NoPriority$1) {
              var priorityLevel = pendingPassiveEffectsRenderPriority > NormalPriority$1 ? NormalPriority$1 : pendingPassiveEffectsRenderPriority;
              pendingPassiveEffectsRenderPriority = NoPriority$1;
              {
                return runWithPriority$1(priorityLevel, flushPassiveEffectsImpl);
              }
            }
            return false;
          }
          function enqueuePendingPassiveHookEffectMount(fiber, effect) {
            pendingPassiveHookEffectsMount.push(effect, fiber);
            if (!rootDoesHavePassiveEffects) {
              rootDoesHavePassiveEffects = true;
              scheduleCallback(NormalPriority$1, function() {
                flushPassiveEffects();
                return null;
              });
            }
          }
          function enqueuePendingPassiveHookEffectUnmount(fiber, effect) {
            pendingPassiveHookEffectsUnmount.push(effect, fiber);
            {
              fiber.flags |= PassiveUnmountPendingDev;
              var alternate = fiber.alternate;
              if (alternate !== null) {
                alternate.flags |= PassiveUnmountPendingDev;
              }
            }
            if (!rootDoesHavePassiveEffects) {
              rootDoesHavePassiveEffects = true;
              scheduleCallback(NormalPriority$1, function() {
                flushPassiveEffects();
                return null;
              });
            }
          }
          function invokePassiveEffectCreate(effect) {
            var create = effect.create;
            effect.destroy = create();
          }
          function flushPassiveEffectsImpl() {
            if (rootWithPendingPassiveEffects === null) {
              return false;
            }
            var root2 = rootWithPendingPassiveEffects;
            var lanes = pendingPassiveEffectsLanes;
            rootWithPendingPassiveEffects = null;
            pendingPassiveEffectsLanes = NoLanes;
            if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {
              {
                throw Error("Cannot flush passive effects while already rendering.");
              }
            }
            {
              isFlushingPassiveEffects = true;
            }
            var prevExecutionContext = executionContext;
            executionContext |= CommitContext;
            var prevInteractions = pushInteractions(root2);
            var unmountEffects = pendingPassiveHookEffectsUnmount;
            pendingPassiveHookEffectsUnmount = [];
            for (var i2 = 0; i2 < unmountEffects.length; i2 += 2) {
              var _effect = unmountEffects[i2];
              var fiber = unmountEffects[i2 + 1];
              var destroy = _effect.destroy;
              _effect.destroy = void 0;
              {
                fiber.flags &= ~PassiveUnmountPendingDev;
                var alternate = fiber.alternate;
                if (alternate !== null) {
                  alternate.flags &= ~PassiveUnmountPendingDev;
                }
              }
              if (typeof destroy === "function") {
                {
                  setCurrentFiber(fiber);
                  {
                    invokeGuardedCallback(null, destroy, null);
                  }
                  if (hasCaughtError()) {
                    if (!(fiber !== null)) {
                      {
                        throw Error("Should be working on an effect.");
                      }
                    }
                    var error2 = clearCaughtError();
                    captureCommitPhaseError(fiber, error2);
                  }
                  resetCurrentFiber();
                }
              }
            }
            var mountEffects = pendingPassiveHookEffectsMount;
            pendingPassiveHookEffectsMount = [];
            for (var _i = 0; _i < mountEffects.length; _i += 2) {
              var _effect2 = mountEffects[_i];
              var _fiber = mountEffects[_i + 1];
              {
                setCurrentFiber(_fiber);
                {
                  invokeGuardedCallback(null, invokePassiveEffectCreate, null, _effect2);
                }
                if (hasCaughtError()) {
                  if (!(_fiber !== null)) {
                    {
                      throw Error("Should be working on an effect.");
                    }
                  }
                  var _error4 = clearCaughtError();
                  captureCommitPhaseError(_fiber, _error4);
                }
                resetCurrentFiber();
              }
            }
            var effect = root2.current.firstEffect;
            while (effect !== null) {
              var nextNextEffect = effect.nextEffect;
              effect.nextEffect = null;
              if (effect.flags & Deletion) {
                detachFiberAfterEffects(effect);
              }
              effect = nextNextEffect;
            }
            {
              popInteractions(prevInteractions);
              finishPendingInteractions(root2, lanes);
            }
            {
              isFlushingPassiveEffects = false;
            }
            executionContext = prevExecutionContext;
            flushSyncCallbackQueue();
            nestedPassiveUpdateCount = rootWithPendingPassiveEffects === null ? 0 : nestedPassiveUpdateCount + 1;
            return true;
          }
          function isAlreadyFailedLegacyErrorBoundary(instance) {
            return legacyErrorBoundariesThatAlreadyFailed !== null && legacyErrorBoundariesThatAlreadyFailed.has(instance);
          }
          function markLegacyErrorBoundaryAsFailed(instance) {
            if (legacyErrorBoundariesThatAlreadyFailed === null) {
              legacyErrorBoundariesThatAlreadyFailed = /* @__PURE__ */ new Set([instance]);
            } else {
              legacyErrorBoundariesThatAlreadyFailed.add(instance);
            }
          }
          function prepareToThrowUncaughtError(error2) {
            if (!hasUncaughtError) {
              hasUncaughtError = true;
              firstUncaughtError = error2;
            }
          }
          var onUncaughtError = prepareToThrowUncaughtError;
          function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error2) {
            var errorInfo = createCapturedValue(error2, sourceFiber);
            var update = createRootErrorUpdate(rootFiber, errorInfo, SyncLane);
            enqueueUpdate(rootFiber, update);
            var eventTime = requestEventTime();
            var root2 = markUpdateLaneFromFiberToRoot(rootFiber, SyncLane);
            if (root2 !== null) {
              markRootUpdated(root2, SyncLane, eventTime);
              ensureRootIsScheduled(root2, eventTime);
              schedulePendingInteractions(root2, SyncLane);
            }
          }
          function captureCommitPhaseError(sourceFiber, error2) {
            if (sourceFiber.tag === HostRoot) {
              captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error2);
              return;
            }
            var fiber = sourceFiber.return;
            while (fiber !== null) {
              if (fiber.tag === HostRoot) {
                captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error2);
                return;
              } else if (fiber.tag === ClassComponent) {
                var ctor = fiber.type;
                var instance = fiber.stateNode;
                if (typeof ctor.getDerivedStateFromError === "function" || typeof instance.componentDidCatch === "function" && !isAlreadyFailedLegacyErrorBoundary(instance)) {
                  var errorInfo = createCapturedValue(error2, sourceFiber);
                  var update = createClassErrorUpdate(fiber, errorInfo, SyncLane);
                  enqueueUpdate(fiber, update);
                  var eventTime = requestEventTime();
                  var root2 = markUpdateLaneFromFiberToRoot(fiber, SyncLane);
                  if (root2 !== null) {
                    markRootUpdated(root2, SyncLane, eventTime);
                    ensureRootIsScheduled(root2, eventTime);
                    schedulePendingInteractions(root2, SyncLane);
                  } else {
                    if (typeof instance.componentDidCatch === "function" && !isAlreadyFailedLegacyErrorBoundary(instance)) {
                      try {
                        instance.componentDidCatch(error2, errorInfo);
                      } catch (errorToIgnore) {
                      }
                    }
                  }
                  return;
                }
              }
              fiber = fiber.return;
            }
          }
          function pingSuspendedRoot(root2, wakeable, pingedLanes) {
            var pingCache = root2.pingCache;
            if (pingCache !== null) {
              pingCache.delete(wakeable);
            }
            var eventTime = requestEventTime();
            markRootPinged(root2, pingedLanes);
            if (workInProgressRoot === root2 && isSubsetOfLanes(workInProgressRootRenderLanes, pingedLanes)) {
              if (workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && includesOnlyRetries(workInProgressRootRenderLanes) && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS) {
                prepareFreshStack(root2, NoLanes);
              } else {
                workInProgressRootPingedLanes = mergeLanes(workInProgressRootPingedLanes, pingedLanes);
              }
            }
            ensureRootIsScheduled(root2, eventTime);
            schedulePendingInteractions(root2, pingedLanes);
          }
          function retryTimedOutBoundary(boundaryFiber, retryLane) {
            if (retryLane === NoLane) {
              retryLane = requestRetryLane(boundaryFiber);
            }
            var eventTime = requestEventTime();
            var root2 = markUpdateLaneFromFiberToRoot(boundaryFiber, retryLane);
            if (root2 !== null) {
              markRootUpdated(root2, retryLane, eventTime);
              ensureRootIsScheduled(root2, eventTime);
              schedulePendingInteractions(root2, retryLane);
            }
          }
          function resolveRetryWakeable(boundaryFiber, wakeable) {
            var retryLane = NoLane;
            var retryCache;
            {
              retryCache = boundaryFiber.stateNode;
            }
            if (retryCache !== null) {
              retryCache.delete(wakeable);
            }
            retryTimedOutBoundary(boundaryFiber, retryLane);
          }
          function jnd(timeElapsed) {
            return timeElapsed < 120 ? 120 : timeElapsed < 480 ? 480 : timeElapsed < 1080 ? 1080 : timeElapsed < 1920 ? 1920 : timeElapsed < 3e3 ? 3e3 : timeElapsed < 4320 ? 4320 : ceil(timeElapsed / 1960) * 1960;
          }
          function checkForNestedUpdates() {
            if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {
              nestedUpdateCount = 0;
              rootWithNestedUpdates = null;
              {
                {
                  throw Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.");
                }
              }
            }
            {
              if (nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT) {
                nestedPassiveUpdateCount = 0;
                error("Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.");
              }
            }
          }
          function flushRenderPhaseStrictModeWarningsInDEV() {
            {
              ReactStrictModeWarnings.flushLegacyContextWarning();
              {
                ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();
              }
            }
          }
          var didWarnStateUpdateForNotYetMountedComponent = null;
          function warnAboutUpdateOnNotYetMountedFiberInDEV(fiber) {
            {
              if ((executionContext & RenderContext) !== NoContext) {
                return;
              }
              if (!(fiber.mode & (BlockingMode | ConcurrentMode))) {
                return;
              }
              var tag = fiber.tag;
              if (tag !== IndeterminateComponent && tag !== HostRoot && tag !== ClassComponent && tag !== FunctionComponent && tag !== ForwardRef && tag !== MemoComponent && tag !== SimpleMemoComponent && tag !== Block) {
                return;
              }
              var componentName = getComponentName(fiber.type) || "ReactComponent";
              if (didWarnStateUpdateForNotYetMountedComponent !== null) {
                if (didWarnStateUpdateForNotYetMountedComponent.has(componentName)) {
                  return;
                }
                didWarnStateUpdateForNotYetMountedComponent.add(componentName);
              } else {
                didWarnStateUpdateForNotYetMountedComponent = /* @__PURE__ */ new Set([componentName]);
              }
              var previousFiber = current;
              try {
                setCurrentFiber(fiber);
                error("Can't perform a React state update on a component that hasn't mounted yet. This indicates that you have a side-effect in your render function that asynchronously later calls tries to update the component. Move this work to useEffect instead.");
              } finally {
                if (previousFiber) {
                  setCurrentFiber(fiber);
                } else {
                  resetCurrentFiber();
                }
              }
            }
          }
          var didWarnStateUpdateForUnmountedComponent = null;
          function warnAboutUpdateOnUnmountedFiberInDEV(fiber) {
            {
              var tag = fiber.tag;
              if (tag !== HostRoot && tag !== ClassComponent && tag !== FunctionComponent && tag !== ForwardRef && tag !== MemoComponent && tag !== SimpleMemoComponent && tag !== Block) {
                return;
              }
              if ((fiber.flags & PassiveUnmountPendingDev) !== NoFlags) {
                return;
              }
              var componentName = getComponentName(fiber.type) || "ReactComponent";
              if (didWarnStateUpdateForUnmountedComponent !== null) {
                if (didWarnStateUpdateForUnmountedComponent.has(componentName)) {
                  return;
                }
                didWarnStateUpdateForUnmountedComponent.add(componentName);
              } else {
                didWarnStateUpdateForUnmountedComponent = /* @__PURE__ */ new Set([componentName]);
              }
              if (isFlushingPassiveEffects)
                ;
              else {
                var previousFiber = current;
                try {
                  setCurrentFiber(fiber);
                  error("Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in %s.", tag === ClassComponent ? "the componentWillUnmount method" : "a useEffect cleanup function");
                } finally {
                  if (previousFiber) {
                    setCurrentFiber(fiber);
                  } else {
                    resetCurrentFiber();
                  }
                }
              }
            }
          }
          var beginWork$1;
          {
            var dummyFiber = null;
            beginWork$1 = function(current2, unitOfWork, lanes) {
              var originalWorkInProgressCopy = assignFiberPropertiesInDEV(dummyFiber, unitOfWork);
              try {
                return beginWork(current2, unitOfWork, lanes);
              } catch (originalError) {
                if (originalError !== null && typeof originalError === "object" && typeof originalError.then === "function") {
                  throw originalError;
                }
                resetContextDependencies();
                resetHooksAfterThrow();
                unwindInterruptedWork(unitOfWork);
                assignFiberPropertiesInDEV(unitOfWork, originalWorkInProgressCopy);
                if (unitOfWork.mode & ProfileMode) {
                  startProfilerTimer(unitOfWork);
                }
                invokeGuardedCallback(null, beginWork, null, current2, unitOfWork, lanes);
                if (hasCaughtError()) {
                  var replayError = clearCaughtError();
                  throw replayError;
                } else {
                  throw originalError;
                }
              }
            };
          }
          var didWarnAboutUpdateInRender = false;
          var didWarnAboutUpdateInRenderForAnotherComponent;
          {
            didWarnAboutUpdateInRenderForAnotherComponent = /* @__PURE__ */ new Set();
          }
          function warnAboutRenderPhaseUpdatesInDEV(fiber) {
            {
              if (isRendering && (executionContext & RenderContext) !== NoContext && !getIsUpdatingOpaqueValueInRenderPhaseInDEV()) {
                switch (fiber.tag) {
                  case FunctionComponent:
                  case ForwardRef:
                  case SimpleMemoComponent: {
                    var renderingComponentName = workInProgress && getComponentName(workInProgress.type) || "Unknown";
                    var dedupeKey = renderingComponentName;
                    if (!didWarnAboutUpdateInRenderForAnotherComponent.has(dedupeKey)) {
                      didWarnAboutUpdateInRenderForAnotherComponent.add(dedupeKey);
                      var setStateComponentName = getComponentName(fiber.type) || "Unknown";
                      error("Cannot update a component (`%s`) while rendering a different component (`%s`). To locate the bad setState() call inside `%s`, follow the stack trace as described in https://reactjs.org/link/setstate-in-render", setStateComponentName, renderingComponentName, renderingComponentName);
                    }
                    break;
                  }
                  case ClassComponent: {
                    if (!didWarnAboutUpdateInRender) {
                      error("Cannot update during an existing state transition (such as within `render`). Render methods should be a pure function of props and state.");
                      didWarnAboutUpdateInRender = true;
                    }
                    break;
                  }
                }
              }
            }
          }
          var IsThisRendererActing = {
            current: false
          };
          function warnIfNotScopedWithMatchingAct(fiber) {
            {
              if (IsSomeRendererActing.current === true && IsThisRendererActing.current !== true) {
                var previousFiber = current;
                try {
                  setCurrentFiber(fiber);
                  error("It looks like you're using the wrong act() around your test interactions.\nBe sure to use the matching version of act() corresponding to your renderer:\n\n// for react-dom:\nimport {act} from 'react-dom/test-utils';\n// ...\nact(() => ...);\n\n// for react-test-renderer:\nimport TestRenderer from react-test-renderer';\nconst {act} = TestRenderer;\n// ...\nact(() => ...);");
                } finally {
                  if (previousFiber) {
                    setCurrentFiber(fiber);
                  } else {
                    resetCurrentFiber();
                  }
                }
              }
            }
          }
          function warnIfNotCurrentlyActingEffectsInDEV(fiber) {
            {
              if ((fiber.mode & StrictMode) !== NoMode && IsSomeRendererActing.current === false && IsThisRendererActing.current === false) {
                error("An update to %s ran an effect, but was not wrapped in act(...).\n\nWhen testing, code that causes React state updates should be wrapped into act(...):\n\nact(() => {\n  /* fire events that update state */\n});\n/* assert on the output */\n\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act", getComponentName(fiber.type));
              }
            }
          }
          function warnIfNotCurrentlyActingUpdatesInDEV(fiber) {
            {
              if (executionContext === NoContext && IsSomeRendererActing.current === false && IsThisRendererActing.current === false) {
                var previousFiber = current;
                try {
                  setCurrentFiber(fiber);
                  error("An update to %s inside a test was not wrapped in act(...).\n\nWhen testing, code that causes React state updates should be wrapped into act(...):\n\nact(() => {\n  /* fire events that update state */\n});\n/* assert on the output */\n\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act", getComponentName(fiber.type));
                } finally {
                  if (previousFiber) {
                    setCurrentFiber(fiber);
                  } else {
                    resetCurrentFiber();
                  }
                }
              }
            }
          }
          var warnIfNotCurrentlyActingUpdatesInDev = warnIfNotCurrentlyActingUpdatesInDEV;
          var didWarnAboutUnmockedScheduler = false;
          function warnIfUnmockedScheduler(fiber) {
            {
              if (didWarnAboutUnmockedScheduler === false && Scheduler.unstable_flushAllWithoutAsserting === void 0) {
                if (fiber.mode & BlockingMode || fiber.mode & ConcurrentMode) {
                  didWarnAboutUnmockedScheduler = true;
                  error(`In Concurrent or Sync modes, the "scheduler" module needs to be mocked to guarantee consistent behaviour across tests and browsers. For example, with jest: 
jest.mock('scheduler', () => require('scheduler/unstable_mock'));

For more info, visit https://reactjs.org/link/mock-scheduler`);
                }
              }
            }
          }
          function computeThreadID(root2, lane) {
            return lane * 1e3 + root2.interactionThreadID;
          }
          function markSpawnedWork(lane) {
            if (spawnedWorkDuringRender === null) {
              spawnedWorkDuringRender = [lane];
            } else {
              spawnedWorkDuringRender.push(lane);
            }
          }
          function scheduleInteractions(root2, lane, interactions) {
            if (interactions.size > 0) {
              var pendingInteractionMap = root2.pendingInteractionMap;
              var pendingInteractions = pendingInteractionMap.get(lane);
              if (pendingInteractions != null) {
                interactions.forEach(function(interaction) {
                  if (!pendingInteractions.has(interaction)) {
                    interaction.__count++;
                  }
                  pendingInteractions.add(interaction);
                });
              } else {
                pendingInteractionMap.set(lane, new Set(interactions));
                interactions.forEach(function(interaction) {
                  interaction.__count++;
                });
              }
              var subscriber = tracing.__subscriberRef.current;
              if (subscriber !== null) {
                var threadID = computeThreadID(root2, lane);
                subscriber.onWorkScheduled(interactions, threadID);
              }
            }
          }
          function schedulePendingInteractions(root2, lane) {
            scheduleInteractions(root2, lane, tracing.__interactionsRef.current);
          }
          function startWorkOnPendingInteractions(root2, lanes) {
            var interactions = /* @__PURE__ */ new Set();
            root2.pendingInteractionMap.forEach(function(scheduledInteractions, scheduledLane) {
              if (includesSomeLane(lanes, scheduledLane)) {
                scheduledInteractions.forEach(function(interaction) {
                  return interactions.add(interaction);
                });
              }
            });
            root2.memoizedInteractions = interactions;
            if (interactions.size > 0) {
              var subscriber = tracing.__subscriberRef.current;
              if (subscriber !== null) {
                var threadID = computeThreadID(root2, lanes);
                try {
                  subscriber.onWorkStarted(interactions, threadID);
                } catch (error2) {
                  scheduleCallback(ImmediatePriority$1, function() {
                    throw error2;
                  });
                }
              }
            }
          }
          function finishPendingInteractions(root2, committedLanes) {
            var remainingLanesAfterCommit = root2.pendingLanes;
            var subscriber;
            try {
              subscriber = tracing.__subscriberRef.current;
              if (subscriber !== null && root2.memoizedInteractions.size > 0) {
                var threadID = computeThreadID(root2, committedLanes);
                subscriber.onWorkStopped(root2.memoizedInteractions, threadID);
              }
            } catch (error2) {
              scheduleCallback(ImmediatePriority$1, function() {
                throw error2;
              });
            } finally {
              var pendingInteractionMap = root2.pendingInteractionMap;
              pendingInteractionMap.forEach(function(scheduledInteractions, lane) {
                if (!includesSomeLane(remainingLanesAfterCommit, lane)) {
                  pendingInteractionMap.delete(lane);
                  scheduledInteractions.forEach(function(interaction) {
                    interaction.__count--;
                    if (subscriber !== null && interaction.__count === 0) {
                      try {
                        subscriber.onInteractionScheduledWorkCompleted(interaction);
                      } catch (error2) {
                        scheduleCallback(ImmediatePriority$1, function() {
                          throw error2;
                        });
                      }
                    }
                  });
                }
              });
            }
          }
          function shouldForceFlushFallbacksInDEV() {
            return actingUpdatesScopeDepth > 0;
          }
          var actingUpdatesScopeDepth = 0;
          function detachFiberAfterEffects(fiber) {
            fiber.sibling = null;
            fiber.stateNode = null;
          }
          var resolveFamily = null;
          var failedBoundaries = null;
          var setRefreshHandler = function(handler) {
            {
              resolveFamily = handler;
            }
          };
          function resolveFunctionForHotReloading(type) {
            {
              if (resolveFamily === null) {
                return type;
              }
              var family = resolveFamily(type);
              if (family === void 0) {
                return type;
              }
              return family.current;
            }
          }
          function resolveClassForHotReloading(type) {
            return resolveFunctionForHotReloading(type);
          }
          function resolveForwardRefForHotReloading(type) {
            {
              if (resolveFamily === null) {
                return type;
              }
              var family = resolveFamily(type);
              if (family === void 0) {
                if (type !== null && type !== void 0 && typeof type.render === "function") {
                  var currentRender = resolveFunctionForHotReloading(type.render);
                  if (type.render !== currentRender) {
                    var syntheticType = {
                      $$typeof: REACT_FORWARD_REF_TYPE,
                      render: currentRender
                    };
                    if (type.displayName !== void 0) {
                      syntheticType.displayName = type.displayName;
                    }
                    return syntheticType;
                  }
                }
                return type;
              }
              return family.current;
            }
          }
          function isCompatibleFamilyForHotReloading(fiber, element) {
            {
              if (resolveFamily === null) {
                return false;
              }
              var prevType = fiber.elementType;
              var nextType = element.type;
              var needsCompareFamilies = false;
              var $$typeofNextType = typeof nextType === "object" && nextType !== null ? nextType.$$typeof : null;
              switch (fiber.tag) {
                case ClassComponent: {
                  if (typeof nextType === "function") {
                    needsCompareFamilies = true;
                  }
                  break;
                }
                case FunctionComponent: {
                  if (typeof nextType === "function") {
                    needsCompareFamilies = true;
                  } else if ($$typeofNextType === REACT_LAZY_TYPE) {
                    needsCompareFamilies = true;
                  }
                  break;
                }
                case ForwardRef: {
                  if ($$typeofNextType === REACT_FORWARD_REF_TYPE) {
                    needsCompareFamilies = true;
                  } else if ($$typeofNextType === REACT_LAZY_TYPE) {
                    needsCompareFamilies = true;
                  }
                  break;
                }
                case MemoComponent:
                case SimpleMemoComponent: {
                  if ($$typeofNextType === REACT_MEMO_TYPE) {
                    needsCompareFamilies = true;
                  } else if ($$typeofNextType === REACT_LAZY_TYPE) {
                    needsCompareFamilies = true;
                  }
                  break;
                }
                default:
                  return false;
              }
              if (needsCompareFamilies) {
                var prevFamily = resolveFamily(prevType);
                if (prevFamily !== void 0 && prevFamily === resolveFamily(nextType)) {
                  return true;
                }
              }
              return false;
            }
          }
          function markFailedErrorBoundaryForHotReloading(fiber) {
            {
              if (resolveFamily === null) {
                return;
              }
              if (typeof WeakSet !== "function") {
                return;
              }
              if (failedBoundaries === null) {
                failedBoundaries = /* @__PURE__ */ new WeakSet();
              }
              failedBoundaries.add(fiber);
            }
          }
          var scheduleRefresh = function(root2, update) {
            {
              if (resolveFamily === null) {
                return;
              }
              var staleFamilies = update.staleFamilies, updatedFamilies = update.updatedFamilies;
              flushPassiveEffects();
              flushSync(function() {
                scheduleFibersWithFamiliesRecursively(root2.current, updatedFamilies, staleFamilies);
              });
            }
          };
          var scheduleRoot = function(root2, element) {
            {
              if (root2.context !== emptyContextObject) {
                return;
              }
              flushPassiveEffects();
              flushSync(function() {
                updateContainer(element, root2, null, null);
              });
            }
          };
          function scheduleFibersWithFamiliesRecursively(fiber, updatedFamilies, staleFamilies) {
            {
              var alternate = fiber.alternate, child = fiber.child, sibling = fiber.sibling, tag = fiber.tag, type = fiber.type;
              var candidateType = null;
              switch (tag) {
                case FunctionComponent:
                case SimpleMemoComponent:
                case ClassComponent:
                  candidateType = type;
                  break;
                case ForwardRef:
                  candidateType = type.render;
                  break;
              }
              if (resolveFamily === null) {
                throw new Error("Expected resolveFamily to be set during hot reload.");
              }
              var needsRender = false;
              var needsRemount = false;
              if (candidateType !== null) {
                var family = resolveFamily(candidateType);
                if (family !== void 0) {
                  if (staleFamilies.has(family)) {
                    needsRemount = true;
                  } else if (updatedFamilies.has(family)) {
                    if (tag === ClassComponent) {
                      needsRemount = true;
                    } else {
                      needsRender = true;
                    }
                  }
                }
              }
              if (failedBoundaries !== null) {
                if (failedBoundaries.has(fiber) || alternate !== null && failedBoundaries.has(alternate)) {
                  needsRemount = true;
                }
              }
              if (needsRemount) {
                fiber._debugNeedsRemount = true;
              }
              if (needsRemount || needsRender) {
                scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
              }
              if (child !== null && !needsRemount) {
                scheduleFibersWithFamiliesRecursively(child, updatedFamilies, staleFamilies);
              }
              if (sibling !== null) {
                scheduleFibersWithFamiliesRecursively(sibling, updatedFamilies, staleFamilies);
              }
            }
          }
          var findHostInstancesForRefresh = function(root2, families) {
            {
              var hostInstances = /* @__PURE__ */ new Set();
              var types = new Set(families.map(function(family) {
                return family.current;
              }));
              findHostInstancesForMatchingFibersRecursively(root2.current, types, hostInstances);
              return hostInstances;
            }
          };
          function findHostInstancesForMatchingFibersRecursively(fiber, types, hostInstances) {
            {
              var child = fiber.child, sibling = fiber.sibling, tag = fiber.tag, type = fiber.type;
              var candidateType = null;
              switch (tag) {
                case FunctionComponent:
                case SimpleMemoComponent:
                case ClassComponent:
                  candidateType = type;
                  break;
                case ForwardRef:
                  candidateType = type.render;
                  break;
              }
              var didMatch = false;
              if (candidateType !== null) {
                if (types.has(candidateType)) {
                  didMatch = true;
                }
              }
              if (didMatch) {
                findHostInstancesForFiberShallowly(fiber, hostInstances);
              } else {
                if (child !== null) {
                  findHostInstancesForMatchingFibersRecursively(child, types, hostInstances);
                }
              }
              if (sibling !== null) {
                findHostInstancesForMatchingFibersRecursively(sibling, types, hostInstances);
              }
            }
          }
          function findHostInstancesForFiberShallowly(fiber, hostInstances) {
            {
              var foundHostInstances = findChildHostInstancesForFiberShallowly(fiber, hostInstances);
              if (foundHostInstances) {
                return;
              }
              var node = fiber;
              while (true) {
                switch (node.tag) {
                  case HostComponent:
                    hostInstances.add(node.stateNode);
                    return;
                  case HostPortal:
                    hostInstances.add(node.stateNode.containerInfo);
                    return;
                  case HostRoot:
                    hostInstances.add(node.stateNode.containerInfo);
                    return;
                }
                if (node.return === null) {
                  throw new Error("Expected to reach root first.");
                }
                node = node.return;
              }
            }
          }
          function findChildHostInstancesForFiberShallowly(fiber, hostInstances) {
            {
              var node = fiber;
              var foundHostInstances = false;
              while (true) {
                if (node.tag === HostComponent) {
                  foundHostInstances = true;
                  hostInstances.add(node.stateNode);
                } else if (node.child !== null) {
                  node.child.return = node;
                  node = node.child;
                  continue;
                }
                if (node === fiber) {
                  return foundHostInstances;
                }
                while (node.sibling === null) {
                  if (node.return === null || node.return === fiber) {
                    return foundHostInstances;
                  }
                  node = node.return;
                }
                node.sibling.return = node.return;
                node = node.sibling;
              }
            }
            return false;
          }
          var hasBadMapPolyfill;
          {
            hasBadMapPolyfill = false;
            try {
              var nonExtensibleObject = Object.preventExtensions({});
              /* @__PURE__ */ new Map([[nonExtensibleObject, null]]);
              /* @__PURE__ */ new Set([nonExtensibleObject]);
            } catch (e2) {
              hasBadMapPolyfill = true;
            }
          }
          var debugCounter = 1;
          function FiberNode(tag, pendingProps, key, mode) {
            this.tag = tag;
            this.key = key;
            this.elementType = null;
            this.type = null;
            this.stateNode = null;
            this.return = null;
            this.child = null;
            this.sibling = null;
            this.index = 0;
            this.ref = null;
            this.pendingProps = pendingProps;
            this.memoizedProps = null;
            this.updateQueue = null;
            this.memoizedState = null;
            this.dependencies = null;
            this.mode = mode;
            this.flags = NoFlags;
            this.nextEffect = null;
            this.firstEffect = null;
            this.lastEffect = null;
            this.lanes = NoLanes;
            this.childLanes = NoLanes;
            this.alternate = null;
            {
              this.actualDuration = Number.NaN;
              this.actualStartTime = Number.NaN;
              this.selfBaseDuration = Number.NaN;
              this.treeBaseDuration = Number.NaN;
              this.actualDuration = 0;
              this.actualStartTime = -1;
              this.selfBaseDuration = 0;
              this.treeBaseDuration = 0;
            }
            {
              this._debugID = debugCounter++;
              this._debugSource = null;
              this._debugOwner = null;
              this._debugNeedsRemount = false;
              this._debugHookTypes = null;
              if (!hasBadMapPolyfill && typeof Object.preventExtensions === "function") {
                Object.preventExtensions(this);
              }
            }
          }
          var createFiber = function(tag, pendingProps, key, mode) {
            return new FiberNode(tag, pendingProps, key, mode);
          };
          function shouldConstruct$1(Component) {
            var prototype = Component.prototype;
            return !!(prototype && prototype.isReactComponent);
          }
          function isSimpleFunctionComponent(type) {
            return typeof type === "function" && !shouldConstruct$1(type) && type.defaultProps === void 0;
          }
          function resolveLazyComponentTag(Component) {
            if (typeof Component === "function") {
              return shouldConstruct$1(Component) ? ClassComponent : FunctionComponent;
            } else if (Component !== void 0 && Component !== null) {
              var $$typeof = Component.$$typeof;
              if ($$typeof === REACT_FORWARD_REF_TYPE) {
                return ForwardRef;
              }
              if ($$typeof === REACT_MEMO_TYPE) {
                return MemoComponent;
              }
            }
            return IndeterminateComponent;
          }
          function createWorkInProgress(current2, pendingProps) {
            var workInProgress2 = current2.alternate;
            if (workInProgress2 === null) {
              workInProgress2 = createFiber(current2.tag, pendingProps, current2.key, current2.mode);
              workInProgress2.elementType = current2.elementType;
              workInProgress2.type = current2.type;
              workInProgress2.stateNode = current2.stateNode;
              {
                workInProgress2._debugID = current2._debugID;
                workInProgress2._debugSource = current2._debugSource;
                workInProgress2._debugOwner = current2._debugOwner;
                workInProgress2._debugHookTypes = current2._debugHookTypes;
              }
              workInProgress2.alternate = current2;
              current2.alternate = workInProgress2;
            } else {
              workInProgress2.pendingProps = pendingProps;
              workInProgress2.type = current2.type;
              workInProgress2.flags = NoFlags;
              workInProgress2.nextEffect = null;
              workInProgress2.firstEffect = null;
              workInProgress2.lastEffect = null;
              {
                workInProgress2.actualDuration = 0;
                workInProgress2.actualStartTime = -1;
              }
            }
            workInProgress2.childLanes = current2.childLanes;
            workInProgress2.lanes = current2.lanes;
            workInProgress2.child = current2.child;
            workInProgress2.memoizedProps = current2.memoizedProps;
            workInProgress2.memoizedState = current2.memoizedState;
            workInProgress2.updateQueue = current2.updateQueue;
            var currentDependencies = current2.dependencies;
            workInProgress2.dependencies = currentDependencies === null ? null : {
              lanes: currentDependencies.lanes,
              firstContext: currentDependencies.firstContext
            };
            workInProgress2.sibling = current2.sibling;
            workInProgress2.index = current2.index;
            workInProgress2.ref = current2.ref;
            {
              workInProgress2.selfBaseDuration = current2.selfBaseDuration;
              workInProgress2.treeBaseDuration = current2.treeBaseDuration;
            }
            {
              workInProgress2._debugNeedsRemount = current2._debugNeedsRemount;
              switch (workInProgress2.tag) {
                case IndeterminateComponent:
                case FunctionComponent:
                case SimpleMemoComponent:
                  workInProgress2.type = resolveFunctionForHotReloading(current2.type);
                  break;
                case ClassComponent:
                  workInProgress2.type = resolveClassForHotReloading(current2.type);
                  break;
                case ForwardRef:
                  workInProgress2.type = resolveForwardRefForHotReloading(current2.type);
                  break;
              }
            }
            return workInProgress2;
          }
          function resetWorkInProgress(workInProgress2, renderLanes2) {
            workInProgress2.flags &= Placement;
            workInProgress2.nextEffect = null;
            workInProgress2.firstEffect = null;
            workInProgress2.lastEffect = null;
            var current2 = workInProgress2.alternate;
            if (current2 === null) {
              workInProgress2.childLanes = NoLanes;
              workInProgress2.lanes = renderLanes2;
              workInProgress2.child = null;
              workInProgress2.memoizedProps = null;
              workInProgress2.memoizedState = null;
              workInProgress2.updateQueue = null;
              workInProgress2.dependencies = null;
              workInProgress2.stateNode = null;
              {
                workInProgress2.selfBaseDuration = 0;
                workInProgress2.treeBaseDuration = 0;
              }
            } else {
              workInProgress2.childLanes = current2.childLanes;
              workInProgress2.lanes = current2.lanes;
              workInProgress2.child = current2.child;
              workInProgress2.memoizedProps = current2.memoizedProps;
              workInProgress2.memoizedState = current2.memoizedState;
              workInProgress2.updateQueue = current2.updateQueue;
              workInProgress2.type = current2.type;
              var currentDependencies = current2.dependencies;
              workInProgress2.dependencies = currentDependencies === null ? null : {
                lanes: currentDependencies.lanes,
                firstContext: currentDependencies.firstContext
              };
              {
                workInProgress2.selfBaseDuration = current2.selfBaseDuration;
                workInProgress2.treeBaseDuration = current2.treeBaseDuration;
              }
            }
            return workInProgress2;
          }
          function createHostRootFiber(tag) {
            var mode;
            if (tag === ConcurrentRoot) {
              mode = ConcurrentMode | BlockingMode | StrictMode;
            } else if (tag === BlockingRoot) {
              mode = BlockingMode | StrictMode;
            } else {
              mode = NoMode;
            }
            if (isDevToolsPresent) {
              mode |= ProfileMode;
            }
            return createFiber(HostRoot, null, null, mode);
          }
          function createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes) {
            var fiberTag = IndeterminateComponent;
            var resolvedType = type;
            if (typeof type === "function") {
              if (shouldConstruct$1(type)) {
                fiberTag = ClassComponent;
                {
                  resolvedType = resolveClassForHotReloading(resolvedType);
                }
              } else {
                {
                  resolvedType = resolveFunctionForHotReloading(resolvedType);
                }
              }
            } else if (typeof type === "string") {
              fiberTag = HostComponent;
            } else {
              getTag:
                switch (type) {
                  case REACT_FRAGMENT_TYPE:
                    return createFiberFromFragment(pendingProps.children, mode, lanes, key);
                  case REACT_DEBUG_TRACING_MODE_TYPE:
                    fiberTag = Mode;
                    mode |= DebugTracingMode;
                    break;
                  case REACT_STRICT_MODE_TYPE:
                    fiberTag = Mode;
                    mode |= StrictMode;
                    break;
                  case REACT_PROFILER_TYPE:
                    return createFiberFromProfiler(pendingProps, mode, lanes, key);
                  case REACT_SUSPENSE_TYPE:
                    return createFiberFromSuspense(pendingProps, mode, lanes, key);
                  case REACT_SUSPENSE_LIST_TYPE:
                    return createFiberFromSuspenseList(pendingProps, mode, lanes, key);
                  case REACT_OFFSCREEN_TYPE:
                    return createFiberFromOffscreen(pendingProps, mode, lanes, key);
                  case REACT_LEGACY_HIDDEN_TYPE:
                    return createFiberFromLegacyHidden(pendingProps, mode, lanes, key);
                  case REACT_SCOPE_TYPE:
                  default: {
                    if (typeof type === "object" && type !== null) {
                      switch (type.$$typeof) {
                        case REACT_PROVIDER_TYPE:
                          fiberTag = ContextProvider;
                          break getTag;
                        case REACT_CONTEXT_TYPE:
                          fiberTag = ContextConsumer;
                          break getTag;
                        case REACT_FORWARD_REF_TYPE:
                          fiberTag = ForwardRef;
                          {
                            resolvedType = resolveForwardRefForHotReloading(resolvedType);
                          }
                          break getTag;
                        case REACT_MEMO_TYPE:
                          fiberTag = MemoComponent;
                          break getTag;
                        case REACT_LAZY_TYPE:
                          fiberTag = LazyComponent;
                          resolvedType = null;
                          break getTag;
                        case REACT_BLOCK_TYPE:
                          fiberTag = Block;
                          break getTag;
                      }
                    }
                    var info = "";
                    {
                      if (type === void 0 || typeof type === "object" && type !== null && Object.keys(type).length === 0) {
                        info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
                      }
                      var ownerName = owner ? getComponentName(owner.type) : null;
                      if (ownerName) {
                        info += "\n\nCheck the render method of `" + ownerName + "`.";
                      }
                    }
                    {
                      {
                        throw Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: " + (type == null ? type : typeof type) + "." + info);
                      }
                    }
                  }
                }
            }
            var fiber = createFiber(fiberTag, pendingProps, key, mode);
            fiber.elementType = type;
            fiber.type = resolvedType;
            fiber.lanes = lanes;
            {
              fiber._debugOwner = owner;
            }
            return fiber;
          }
          function createFiberFromElement(element, mode, lanes) {
            var owner = null;
            {
              owner = element._owner;
            }
            var type = element.type;
            var key = element.key;
            var pendingProps = element.props;
            var fiber = createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes);
            {
              fiber._debugSource = element._source;
              fiber._debugOwner = element._owner;
            }
            return fiber;
          }
          function createFiberFromFragment(elements, mode, lanes, key) {
            var fiber = createFiber(Fragment3, elements, key, mode);
            fiber.lanes = lanes;
            return fiber;
          }
          function createFiberFromProfiler(pendingProps, mode, lanes, key) {
            {
              if (typeof pendingProps.id !== "string") {
                error('Profiler must specify an "id" as a prop');
              }
            }
            var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode);
            fiber.elementType = REACT_PROFILER_TYPE;
            fiber.type = REACT_PROFILER_TYPE;
            fiber.lanes = lanes;
            {
              fiber.stateNode = {
                effectDuration: 0,
                passiveEffectDuration: 0
              };
            }
            return fiber;
          }
          function createFiberFromSuspense(pendingProps, mode, lanes, key) {
            var fiber = createFiber(SuspenseComponent, pendingProps, key, mode);
            fiber.type = REACT_SUSPENSE_TYPE;
            fiber.elementType = REACT_SUSPENSE_TYPE;
            fiber.lanes = lanes;
            return fiber;
          }
          function createFiberFromSuspenseList(pendingProps, mode, lanes, key) {
            var fiber = createFiber(SuspenseListComponent, pendingProps, key, mode);
            {
              fiber.type = REACT_SUSPENSE_LIST_TYPE;
            }
            fiber.elementType = REACT_SUSPENSE_LIST_TYPE;
            fiber.lanes = lanes;
            return fiber;
          }
          function createFiberFromOffscreen(pendingProps, mode, lanes, key) {
            var fiber = createFiber(OffscreenComponent, pendingProps, key, mode);
            {
              fiber.type = REACT_OFFSCREEN_TYPE;
            }
            fiber.elementType = REACT_OFFSCREEN_TYPE;
            fiber.lanes = lanes;
            return fiber;
          }
          function createFiberFromLegacyHidden(pendingProps, mode, lanes, key) {
            var fiber = createFiber(LegacyHiddenComponent, pendingProps, key, mode);
            {
              fiber.type = REACT_LEGACY_HIDDEN_TYPE;
            }
            fiber.elementType = REACT_LEGACY_HIDDEN_TYPE;
            fiber.lanes = lanes;
            return fiber;
          }
          function createFiberFromText(content, mode, lanes) {
            var fiber = createFiber(HostText, content, null, mode);
            fiber.lanes = lanes;
            return fiber;
          }
          function createFiberFromHostInstanceForDeletion() {
            var fiber = createFiber(HostComponent, null, null, NoMode);
            fiber.elementType = "DELETED";
            fiber.type = "DELETED";
            return fiber;
          }
          function createFiberFromPortal(portal, mode, lanes) {
            var pendingProps = portal.children !== null ? portal.children : [];
            var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);
            fiber.lanes = lanes;
            fiber.stateNode = {
              containerInfo: portal.containerInfo,
              pendingChildren: null,
              implementation: portal.implementation
            };
            return fiber;
          }
          function assignFiberPropertiesInDEV(target, source) {
            if (target === null) {
              target = createFiber(IndeterminateComponent, null, null, NoMode);
            }
            target.tag = source.tag;
            target.key = source.key;
            target.elementType = source.elementType;
            target.type = source.type;
            target.stateNode = source.stateNode;
            target.return = source.return;
            target.child = source.child;
            target.sibling = source.sibling;
            target.index = source.index;
            target.ref = source.ref;
            target.pendingProps = source.pendingProps;
            target.memoizedProps = source.memoizedProps;
            target.updateQueue = source.updateQueue;
            target.memoizedState = source.memoizedState;
            target.dependencies = source.dependencies;
            target.mode = source.mode;
            target.flags = source.flags;
            target.nextEffect = source.nextEffect;
            target.firstEffect = source.firstEffect;
            target.lastEffect = source.lastEffect;
            target.lanes = source.lanes;
            target.childLanes = source.childLanes;
            target.alternate = source.alternate;
            {
              target.actualDuration = source.actualDuration;
              target.actualStartTime = source.actualStartTime;
              target.selfBaseDuration = source.selfBaseDuration;
              target.treeBaseDuration = source.treeBaseDuration;
            }
            target._debugID = source._debugID;
            target._debugSource = source._debugSource;
            target._debugOwner = source._debugOwner;
            target._debugNeedsRemount = source._debugNeedsRemount;
            target._debugHookTypes = source._debugHookTypes;
            return target;
          }
          function FiberRootNode(containerInfo, tag, hydrate2) {
            this.tag = tag;
            this.containerInfo = containerInfo;
            this.pendingChildren = null;
            this.current = null;
            this.pingCache = null;
            this.finishedWork = null;
            this.timeoutHandle = noTimeout;
            this.context = null;
            this.pendingContext = null;
            this.hydrate = hydrate2;
            this.callbackNode = null;
            this.callbackPriority = NoLanePriority;
            this.eventTimes = createLaneMap(NoLanes);
            this.expirationTimes = createLaneMap(NoTimestamp);
            this.pendingLanes = NoLanes;
            this.suspendedLanes = NoLanes;
            this.pingedLanes = NoLanes;
            this.expiredLanes = NoLanes;
            this.mutableReadLanes = NoLanes;
            this.finishedLanes = NoLanes;
            this.entangledLanes = NoLanes;
            this.entanglements = createLaneMap(NoLanes);
            {
              this.mutableSourceEagerHydrationData = null;
            }
            {
              this.interactionThreadID = tracing.unstable_getThreadID();
              this.memoizedInteractions = /* @__PURE__ */ new Set();
              this.pendingInteractionMap = /* @__PURE__ */ new Map();
            }
            {
              switch (tag) {
                case BlockingRoot:
                  this._debugRootType = "createBlockingRoot()";
                  break;
                case ConcurrentRoot:
                  this._debugRootType = "createRoot()";
                  break;
                case LegacyRoot:
                  this._debugRootType = "createLegacyRoot()";
                  break;
              }
            }
          }
          function createFiberRoot(containerInfo, tag, hydrate2, hydrationCallbacks) {
            var root2 = new FiberRootNode(containerInfo, tag, hydrate2);
            var uninitializedFiber = createHostRootFiber(tag);
            root2.current = uninitializedFiber;
            uninitializedFiber.stateNode = root2;
            initializeUpdateQueue(uninitializedFiber);
            return root2;
          }
          function registerMutableSourceForHydration(root2, mutableSource) {
            var getVersion = mutableSource._getVersion;
            var version = getVersion(mutableSource._source);
            if (root2.mutableSourceEagerHydrationData == null) {
              root2.mutableSourceEagerHydrationData = [mutableSource, version];
            } else {
              root2.mutableSourceEagerHydrationData.push(mutableSource, version);
            }
          }
          function createPortal(children, containerInfo, implementation) {
            var key = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null;
            return {
              $$typeof: REACT_PORTAL_TYPE,
              key: key == null ? null : "" + key,
              children,
              containerInfo,
              implementation
            };
          }
          var didWarnAboutNestedUpdates;
          var didWarnAboutFindNodeInStrictMode;
          {
            didWarnAboutNestedUpdates = false;
            didWarnAboutFindNodeInStrictMode = {};
          }
          function getContextForSubtree(parentComponent) {
            if (!parentComponent) {
              return emptyContextObject;
            }
            var fiber = get(parentComponent);
            var parentContext = findCurrentUnmaskedContext(fiber);
            if (fiber.tag === ClassComponent) {
              var Component = fiber.type;
              if (isContextProvider(Component)) {
                return processChildContext(fiber, Component, parentContext);
              }
            }
            return parentContext;
          }
          function findHostInstanceWithWarning(component, methodName) {
            {
              var fiber = get(component);
              if (fiber === void 0) {
                if (typeof component.render === "function") {
                  {
                    {
                      throw Error("Unable to find node on an unmounted component.");
                    }
                  }
                } else {
                  {
                    {
                      throw Error("Argument appears to not be a ReactComponent. Keys: " + Object.keys(component));
                    }
                  }
                }
              }
              var hostFiber = findCurrentHostFiber(fiber);
              if (hostFiber === null) {
                return null;
              }
              if (hostFiber.mode & StrictMode) {
                var componentName = getComponentName(fiber.type) || "Component";
                if (!didWarnAboutFindNodeInStrictMode[componentName]) {
                  didWarnAboutFindNodeInStrictMode[componentName] = true;
                  var previousFiber = current;
                  try {
                    setCurrentFiber(hostFiber);
                    if (fiber.mode & StrictMode) {
                      error("%s is deprecated in StrictMode. %s was passed an instance of %s which is inside StrictMode. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", methodName, methodName, componentName);
                    } else {
                      error("%s is deprecated in StrictMode. %s was passed an instance of %s which renders StrictMode children. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", methodName, methodName, componentName);
                    }
                  } finally {
                    if (previousFiber) {
                      setCurrentFiber(previousFiber);
                    } else {
                      resetCurrentFiber();
                    }
                  }
                }
              }
              return hostFiber.stateNode;
            }
          }
          function createContainer(containerInfo, tag, hydrate2, hydrationCallbacks) {
            return createFiberRoot(containerInfo, tag, hydrate2);
          }
          function updateContainer(element, container, parentComponent, callback) {
            {
              onScheduleRoot(container, element);
            }
            var current$1 = container.current;
            var eventTime = requestEventTime();
            {
              if (typeof jest !== "undefined") {
                warnIfUnmockedScheduler(current$1);
                warnIfNotScopedWithMatchingAct(current$1);
              }
            }
            var lane = requestUpdateLane(current$1);
            var context = getContextForSubtree(parentComponent);
            if (container.context === null) {
              container.context = context;
            } else {
              container.pendingContext = context;
            }
            {
              if (isRendering && current !== null && !didWarnAboutNestedUpdates) {
                didWarnAboutNestedUpdates = true;
                error("Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate.\n\nCheck the render method of %s.", getComponentName(current.type) || "Unknown");
              }
            }
            var update = createUpdate(eventTime, lane);
            update.payload = {
              element
            };
            callback = callback === void 0 ? null : callback;
            if (callback !== null) {
              {
                if (typeof callback !== "function") {
                  error("render(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callback);
                }
              }
              update.callback = callback;
            }
            enqueueUpdate(current$1, update);
            scheduleUpdateOnFiber(current$1, lane, eventTime);
            return lane;
          }
          function getPublicRootInstance(container) {
            var containerFiber = container.current;
            if (!containerFiber.child) {
              return null;
            }
            switch (containerFiber.child.tag) {
              case HostComponent:
                return getPublicInstance(containerFiber.child.stateNode);
              default:
                return containerFiber.child.stateNode;
            }
          }
          function markRetryLaneImpl(fiber, retryLane) {
            var suspenseState = fiber.memoizedState;
            if (suspenseState !== null && suspenseState.dehydrated !== null) {
              suspenseState.retryLane = higherPriorityLane(suspenseState.retryLane, retryLane);
            }
          }
          function markRetryLaneIfNotHydrated(fiber, retryLane) {
            markRetryLaneImpl(fiber, retryLane);
            var alternate = fiber.alternate;
            if (alternate) {
              markRetryLaneImpl(alternate, retryLane);
            }
          }
          function attemptUserBlockingHydration$1(fiber) {
            if (fiber.tag !== SuspenseComponent) {
              return;
            }
            var eventTime = requestEventTime();
            var lane = InputDiscreteHydrationLane;
            scheduleUpdateOnFiber(fiber, lane, eventTime);
            markRetryLaneIfNotHydrated(fiber, lane);
          }
          function attemptContinuousHydration$1(fiber) {
            if (fiber.tag !== SuspenseComponent) {
              return;
            }
            var eventTime = requestEventTime();
            var lane = SelectiveHydrationLane;
            scheduleUpdateOnFiber(fiber, lane, eventTime);
            markRetryLaneIfNotHydrated(fiber, lane);
          }
          function attemptHydrationAtCurrentPriority$1(fiber) {
            if (fiber.tag !== SuspenseComponent) {
              return;
            }
            var eventTime = requestEventTime();
            var lane = requestUpdateLane(fiber);
            scheduleUpdateOnFiber(fiber, lane, eventTime);
            markRetryLaneIfNotHydrated(fiber, lane);
          }
          function runWithPriority$2(priority, fn) {
            try {
              setCurrentUpdateLanePriority(priority);
              return fn();
            } finally {
            }
          }
          function findHostInstanceWithNoPortals(fiber) {
            var hostFiber = findCurrentHostFiberWithNoPortals(fiber);
            if (hostFiber === null) {
              return null;
            }
            if (hostFiber.tag === FundamentalComponent) {
              return hostFiber.stateNode.instance;
            }
            return hostFiber.stateNode;
          }
          var shouldSuspendImpl = function(fiber) {
            return false;
          };
          function shouldSuspend(fiber) {
            return shouldSuspendImpl(fiber);
          }
          var overrideHookState = null;
          var overrideHookStateDeletePath = null;
          var overrideHookStateRenamePath = null;
          var overrideProps = null;
          var overridePropsDeletePath = null;
          var overridePropsRenamePath = null;
          var scheduleUpdate = null;
          var setSuspenseHandler = null;
          {
            var copyWithDeleteImpl = function(obj, path, index3) {
              var key = path[index3];
              var updated = Array.isArray(obj) ? obj.slice() : _assign({}, obj);
              if (index3 + 1 === path.length) {
                if (Array.isArray(updated)) {
                  updated.splice(key, 1);
                } else {
                  delete updated[key];
                }
                return updated;
              }
              updated[key] = copyWithDeleteImpl(obj[key], path, index3 + 1);
              return updated;
            };
            var copyWithDelete = function(obj, path) {
              return copyWithDeleteImpl(obj, path, 0);
            };
            var copyWithRenameImpl = function(obj, oldPath, newPath, index3) {
              var oldKey = oldPath[index3];
              var updated = Array.isArray(obj) ? obj.slice() : _assign({}, obj);
              if (index3 + 1 === oldPath.length) {
                var newKey = newPath[index3];
                updated[newKey] = updated[oldKey];
                if (Array.isArray(updated)) {
                  updated.splice(oldKey, 1);
                } else {
                  delete updated[oldKey];
                }
              } else {
                updated[oldKey] = copyWithRenameImpl(obj[oldKey], oldPath, newPath, index3 + 1);
              }
              return updated;
            };
            var copyWithRename = function(obj, oldPath, newPath) {
              if (oldPath.length !== newPath.length) {
                warn("copyWithRename() expects paths of the same length");
                return;
              } else {
                for (var i2 = 0; i2 < newPath.length - 1; i2++) {
                  if (oldPath[i2] !== newPath[i2]) {
                    warn("copyWithRename() expects paths to be the same except for the deepest key");
                    return;
                  }
                }
              }
              return copyWithRenameImpl(obj, oldPath, newPath, 0);
            };
            var copyWithSetImpl = function(obj, path, index3, value) {
              if (index3 >= path.length) {
                return value;
              }
              var key = path[index3];
              var updated = Array.isArray(obj) ? obj.slice() : _assign({}, obj);
              updated[key] = copyWithSetImpl(obj[key], path, index3 + 1, value);
              return updated;
            };
            var copyWithSet = function(obj, path, value) {
              return copyWithSetImpl(obj, path, 0, value);
            };
            var findHook = function(fiber, id) {
              var currentHook2 = fiber.memoizedState;
              while (currentHook2 !== null && id > 0) {
                currentHook2 = currentHook2.next;
                id--;
              }
              return currentHook2;
            };
            overrideHookState = function(fiber, id, path, value) {
              var hook = findHook(fiber, id);
              if (hook !== null) {
                var newState = copyWithSet(hook.memoizedState, path, value);
                hook.memoizedState = newState;
                hook.baseState = newState;
                fiber.memoizedProps = _assign({}, fiber.memoizedProps);
                scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
              }
            };
            overrideHookStateDeletePath = function(fiber, id, path) {
              var hook = findHook(fiber, id);
              if (hook !== null) {
                var newState = copyWithDelete(hook.memoizedState, path);
                hook.memoizedState = newState;
                hook.baseState = newState;
                fiber.memoizedProps = _assign({}, fiber.memoizedProps);
                scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
              }
            };
            overrideHookStateRenamePath = function(fiber, id, oldPath, newPath) {
              var hook = findHook(fiber, id);
              if (hook !== null) {
                var newState = copyWithRename(hook.memoizedState, oldPath, newPath);
                hook.memoizedState = newState;
                hook.baseState = newState;
                fiber.memoizedProps = _assign({}, fiber.memoizedProps);
                scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
              }
            };
            overrideProps = function(fiber, path, value) {
              fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);
              if (fiber.alternate) {
                fiber.alternate.pendingProps = fiber.pendingProps;
              }
              scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
            };
            overridePropsDeletePath = function(fiber, path) {
              fiber.pendingProps = copyWithDelete(fiber.memoizedProps, path);
              if (fiber.alternate) {
                fiber.alternate.pendingProps = fiber.pendingProps;
              }
              scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
            };
            overridePropsRenamePath = function(fiber, oldPath, newPath) {
              fiber.pendingProps = copyWithRename(fiber.memoizedProps, oldPath, newPath);
              if (fiber.alternate) {
                fiber.alternate.pendingProps = fiber.pendingProps;
              }
              scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
            };
            scheduleUpdate = function(fiber) {
              scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
            };
            setSuspenseHandler = function(newShouldSuspendImpl) {
              shouldSuspendImpl = newShouldSuspendImpl;
            };
          }
          function findHostInstanceByFiber(fiber) {
            var hostFiber = findCurrentHostFiber(fiber);
            if (hostFiber === null) {
              return null;
            }
            return hostFiber.stateNode;
          }
          function emptyFindFiberByHostInstance(instance) {
            return null;
          }
          function getCurrentFiberForDevTools() {
            return current;
          }
          function injectIntoDevTools(devToolsConfig) {
            var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;
            var ReactCurrentDispatcher2 = ReactSharedInternals.ReactCurrentDispatcher;
            return injectInternals({
              bundleType: devToolsConfig.bundleType,
              version: devToolsConfig.version,
              rendererPackageName: devToolsConfig.rendererPackageName,
              rendererConfig: devToolsConfig.rendererConfig,
              overrideHookState,
              overrideHookStateDeletePath,
              overrideHookStateRenamePath,
              overrideProps,
              overridePropsDeletePath,
              overridePropsRenamePath,
              setSuspenseHandler,
              scheduleUpdate,
              currentDispatcherRef: ReactCurrentDispatcher2,
              findHostInstanceByFiber,
              findFiberByHostInstance: findFiberByHostInstance || emptyFindFiberByHostInstance,
              findHostInstancesForRefresh,
              scheduleRefresh,
              scheduleRoot,
              setRefreshHandler,
              getCurrentFiber: getCurrentFiberForDevTools
            });
          }
          function ReactDOMRoot(container, options2) {
            this._internalRoot = createRootImpl(container, ConcurrentRoot, options2);
          }
          function ReactDOMBlockingRoot(container, tag, options2) {
            this._internalRoot = createRootImpl(container, tag, options2);
          }
          ReactDOMRoot.prototype.render = ReactDOMBlockingRoot.prototype.render = function(children) {
            var root2 = this._internalRoot;
            {
              if (typeof arguments[1] === "function") {
                error("render(...): does not support the second callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().");
              }
              var container = root2.containerInfo;
              if (container.nodeType !== COMMENT_NODE) {
                var hostInstance = findHostInstanceWithNoPortals(root2.current);
                if (hostInstance) {
                  if (hostInstance.parentNode !== container) {
                    error("render(...): It looks like the React-rendered content of the root container was removed without using React. This is not supported and will cause errors. Instead, call root.unmount() to empty a root's container.");
                  }
                }
              }
            }
            updateContainer(children, root2, null, null);
          };
          ReactDOMRoot.prototype.unmount = ReactDOMBlockingRoot.prototype.unmount = function() {
            {
              if (typeof arguments[0] === "function") {
                error("unmount(...): does not support a callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().");
              }
            }
            var root2 = this._internalRoot;
            var container = root2.containerInfo;
            updateContainer(null, root2, null, function() {
              unmarkContainerAsRoot(container);
            });
          };
          function createRootImpl(container, tag, options2) {
            var hydrate2 = options2 != null && options2.hydrate === true;
            var hydrationCallbacks = options2 != null && options2.hydrationOptions || null;
            var mutableSources = options2 != null && options2.hydrationOptions != null && options2.hydrationOptions.mutableSources || null;
            var root2 = createContainer(container, tag, hydrate2);
            markContainerAsRoot(root2.current, container);
            var containerNodeType = container.nodeType;
            {
              var rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;
              listenToAllSupportedEvents(rootContainerElement);
            }
            if (mutableSources) {
              for (var i2 = 0; i2 < mutableSources.length; i2++) {
                var mutableSource = mutableSources[i2];
                registerMutableSourceForHydration(root2, mutableSource);
              }
            }
            return root2;
          }
          function createLegacyRoot(container, options2) {
            return new ReactDOMBlockingRoot(container, LegacyRoot, options2);
          }
          function isValidContainer(node) {
            return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || node.nodeType === COMMENT_NODE && node.nodeValue === " react-mount-point-unstable "));
          }
          var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner;
          var topLevelUpdateWarnings;
          var warnedAboutHydrateAPI = false;
          {
            topLevelUpdateWarnings = function(container) {
              if (container._reactRootContainer && container.nodeType !== COMMENT_NODE) {
                var hostInstance = findHostInstanceWithNoPortals(container._reactRootContainer._internalRoot.current);
                if (hostInstance) {
                  if (hostInstance.parentNode !== container) {
                    error("render(...): It looks like the React-rendered content of this container was removed without using React. This is not supported and will cause errors. Instead, call ReactDOM.unmountComponentAtNode to empty a container.");
                  }
                }
              }
              var isRootRenderedBySomeReact = !!container._reactRootContainer;
              var rootEl = getReactRootElementInContainer(container);
              var hasNonRootReactChild = !!(rootEl && getInstanceFromNode(rootEl));
              if (hasNonRootReactChild && !isRootRenderedBySomeReact) {
                error("render(...): Replacing React-rendered children with a new root component. If you intended to update the children of this node, you should instead have the existing children update their state and render the new components instead of calling ReactDOM.render.");
              }
              if (container.nodeType === ELEMENT_NODE && container.tagName && container.tagName.toUpperCase() === "BODY") {
                error("render(): Rendering components directly into document.body is discouraged, since its children are often manipulated by third-party scripts and browser extensions. This may lead to subtle reconciliation issues. Try rendering into a container element created for your app.");
              }
            };
          }
          function getReactRootElementInContainer(container) {
            if (!container) {
              return null;
            }
            if (container.nodeType === DOCUMENT_NODE) {
              return container.documentElement;
            } else {
              return container.firstChild;
            }
          }
          function shouldHydrateDueToLegacyHeuristic(container) {
            var rootElement = getReactRootElementInContainer(container);
            return !!(rootElement && rootElement.nodeType === ELEMENT_NODE && rootElement.hasAttribute(ROOT_ATTRIBUTE_NAME));
          }
          function legacyCreateRootFromDOMContainer(container, forceHydrate) {
            var shouldHydrate = forceHydrate || shouldHydrateDueToLegacyHeuristic(container);
            if (!shouldHydrate) {
              var warned = false;
              var rootSibling;
              while (rootSibling = container.lastChild) {
                {
                  if (!warned && rootSibling.nodeType === ELEMENT_NODE && rootSibling.hasAttribute(ROOT_ATTRIBUTE_NAME)) {
                    warned = true;
                    error("render(): Target node has markup rendered by React, but there are unrelated nodes as well. This is most commonly caused by white-space inserted around server-rendered markup.");
                  }
                }
                container.removeChild(rootSibling);
              }
            }
            {
              if (shouldHydrate && !forceHydrate && !warnedAboutHydrateAPI) {
                warnedAboutHydrateAPI = true;
                warn("render(): Calling ReactDOM.render() to hydrate server-rendered markup will stop working in React v18. Replace the ReactDOM.render() call with ReactDOM.hydrate() if you want React to attach to the server HTML.");
              }
            }
            return createLegacyRoot(container, shouldHydrate ? {
              hydrate: true
            } : void 0);
          }
          function warnOnInvalidCallback$1(callback, callerName) {
            {
              if (callback !== null && typeof callback !== "function") {
                error("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callerName, callback);
              }
            }
          }
          function legacyRenderSubtreeIntoContainer(parentComponent, children, container, forceHydrate, callback) {
            {
              topLevelUpdateWarnings(container);
              warnOnInvalidCallback$1(callback === void 0 ? null : callback, "render");
            }
            var root2 = container._reactRootContainer;
            var fiberRoot;
            if (!root2) {
              root2 = container._reactRootContainer = legacyCreateRootFromDOMContainer(container, forceHydrate);
              fiberRoot = root2._internalRoot;
              if (typeof callback === "function") {
                var originalCallback = callback;
                callback = function() {
                  var instance = getPublicRootInstance(fiberRoot);
                  originalCallback.call(instance);
                };
              }
              unbatchedUpdates(function() {
                updateContainer(children, fiberRoot, parentComponent, callback);
              });
            } else {
              fiberRoot = root2._internalRoot;
              if (typeof callback === "function") {
                var _originalCallback = callback;
                callback = function() {
                  var instance = getPublicRootInstance(fiberRoot);
                  _originalCallback.call(instance);
                };
              }
              updateContainer(children, fiberRoot, parentComponent, callback);
            }
            return getPublicRootInstance(fiberRoot);
          }
          function findDOMNode(componentOrElement) {
            {
              var owner = ReactCurrentOwner$3.current;
              if (owner !== null && owner.stateNode !== null) {
                var warnedAboutRefsInRender = owner.stateNode._warnedAboutRefsInRender;
                if (!warnedAboutRefsInRender) {
                  error("%s is accessing findDOMNode inside its render(). render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", getComponentName(owner.type) || "A component");
                }
                owner.stateNode._warnedAboutRefsInRender = true;
              }
            }
            if (componentOrElement == null) {
              return null;
            }
            if (componentOrElement.nodeType === ELEMENT_NODE) {
              return componentOrElement;
            }
            {
              return findHostInstanceWithWarning(componentOrElement, "findDOMNode");
            }
          }
          function hydrate(element, container, callback) {
            if (!isValidContainer(container)) {
              {
                throw Error("Target container is not a DOM element.");
              }
            }
            {
              var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === void 0;
              if (isModernRoot) {
                error("You are calling ReactDOM.hydrate() on a container that was previously passed to ReactDOM.createRoot(). This is not supported. Did you mean to call createRoot(container, {hydrate: true}).render(element)?");
              }
            }
            return legacyRenderSubtreeIntoContainer(null, element, container, true, callback);
          }
          function render(element, container, callback) {
            if (!isValidContainer(container)) {
              {
                throw Error("Target container is not a DOM element.");
              }
            }
            {
              var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === void 0;
              if (isModernRoot) {
                error("You are calling ReactDOM.render() on a container that was previously passed to ReactDOM.createRoot(). This is not supported. Did you mean to call root.render(element)?");
              }
            }
            return legacyRenderSubtreeIntoContainer(null, element, container, false, callback);
          }
          function unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {
            if (!isValidContainer(containerNode)) {
              {
                throw Error("Target container is not a DOM element.");
              }
            }
            if (!(parentComponent != null && has(parentComponent))) {
              {
                throw Error("parentComponent must be a valid React Component");
              }
            }
            return legacyRenderSubtreeIntoContainer(parentComponent, element, containerNode, false, callback);
          }
          function unmountComponentAtNode(container) {
            if (!isValidContainer(container)) {
              {
                throw Error("unmountComponentAtNode(...): Target container is not a DOM element.");
              }
            }
            {
              var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === void 0;
              if (isModernRoot) {
                error("You are calling ReactDOM.unmountComponentAtNode() on a container that was previously passed to ReactDOM.createRoot(). This is not supported. Did you mean to call root.unmount()?");
              }
            }
            if (container._reactRootContainer) {
              {
                var rootEl = getReactRootElementInContainer(container);
                var renderedByDifferentReact = rootEl && !getInstanceFromNode(rootEl);
                if (renderedByDifferentReact) {
                  error("unmountComponentAtNode(): The node you're attempting to unmount was rendered by another copy of React.");
                }
              }
              unbatchedUpdates(function() {
                legacyRenderSubtreeIntoContainer(null, null, container, false, function() {
                  container._reactRootContainer = null;
                  unmarkContainerAsRoot(container);
                });
              });
              return true;
            } else {
              {
                var _rootEl = getReactRootElementInContainer(container);
                var hasNonRootReactChild = !!(_rootEl && getInstanceFromNode(_rootEl));
                var isContainerReactRoot = container.nodeType === ELEMENT_NODE && isValidContainer(container.parentNode) && !!container.parentNode._reactRootContainer;
                if (hasNonRootReactChild) {
                  error("unmountComponentAtNode(): The node you're attempting to unmount was rendered by React and is not a top-level container. %s", isContainerReactRoot ? "You may have accidentally passed in a React root node instead of its container." : "Instead, have the parent component update its state and rerender in order to remove this component.");
                }
              }
              return false;
            }
          }
          setAttemptUserBlockingHydration(attemptUserBlockingHydration$1);
          setAttemptContinuousHydration(attemptContinuousHydration$1);
          setAttemptHydrationAtCurrentPriority(attemptHydrationAtCurrentPriority$1);
          setAttemptHydrationAtPriority(runWithPriority$2);
          var didWarnAboutUnstableCreatePortal = false;
          {
            if (typeof Map !== "function" || Map.prototype == null || typeof Map.prototype.forEach !== "function" || typeof Set !== "function" || Set.prototype == null || typeof Set.prototype.clear !== "function" || typeof Set.prototype.forEach !== "function") {
              error("React depends on Map and Set built-in types. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");
            }
          }
          setRestoreImplementation(restoreControlledState$3);
          setBatchingImplementation(batchedUpdates$1, discreteUpdates$1, flushDiscreteUpdates, batchedEventUpdates$1);
          function createPortal$1(children, container) {
            var key = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
            if (!isValidContainer(container)) {
              {
                throw Error("Target container is not a DOM element.");
              }
            }
            return createPortal(children, container, null, key);
          }
          function renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {
            return unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback);
          }
          function unstable_createPortal(children, container) {
            var key = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
            {
              if (!didWarnAboutUnstableCreatePortal) {
                didWarnAboutUnstableCreatePortal = true;
                warn('The ReactDOM.unstable_createPortal() alias has been deprecated, and will be removed in React 18+. Update your code to use ReactDOM.createPortal() instead. It has the exact same API, but without the "unstable_" prefix.');
              }
            }
            return createPortal$1(children, container, key);
          }
          var Internals = {
            Events: [
              getInstanceFromNode,
              getNodeFromInstance,
              getFiberCurrentPropsFromNode,
              enqueueStateRestore,
              restoreStateIfNeeded,
              flushPassiveEffects,
              IsThisRendererActing
            ]
          };
          var foundDevTools = injectIntoDevTools({
            findFiberByHostInstance: getClosestInstanceFromNode,
            bundleType: 1,
            version: ReactVersion,
            rendererPackageName: "react-dom"
          });
          {
            if (!foundDevTools && canUseDOM && window.top === window.self) {
              if (navigator.userAgent.indexOf("Chrome") > -1 && navigator.userAgent.indexOf("Edge") === -1 || navigator.userAgent.indexOf("Firefox") > -1) {
                var protocol = window.location.protocol;
                if (/^(https?|file):$/.test(protocol)) {
                  console.info("%cDownload the React DevTools for a better development experience: https://reactjs.org/link/react-devtools" + (protocol === "file:" ? "\nYou might need to use a local HTTP server (instead of file://): https://reactjs.org/link/react-devtools-faq" : ""), "font-weight:bold");
                }
              }
            }
          }
          exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Internals;
          exports.createPortal = createPortal$1;
          exports.findDOMNode = findDOMNode;
          exports.flushSync = flushSync;
          exports.hydrate = hydrate;
          exports.render = render;
          exports.unmountComponentAtNode = unmountComponentAtNode;
          exports.unstable_batchedUpdates = batchedUpdates$1;
          exports.unstable_createPortal = unstable_createPortal;
          exports.unstable_renderSubtreeIntoContainer = renderSubtreeIntoContainer;
          exports.version = ReactVersion;
        })();
      }
    }
  });

  // node_modules/react-dom/index.js
  var require_react_dom = __commonJS({
    "node_modules/react-dom/index.js"(exports, module) {
      "use strict";
      if (false) {
        checkDCE();
        module.exports = null;
      } else {
        module.exports = require_react_dom_development();
      }
    }
  });

  // node_modules/react-is/cjs/react-is.development.js
  var require_react_is_development = __commonJS({
    "node_modules/react-is/cjs/react-is.development.js"(exports) {
      "use strict";
      if (true) {
        (function() {
          "use strict";
          var REACT_ELEMENT_TYPE = 60103;
          var REACT_PORTAL_TYPE = 60106;
          var REACT_FRAGMENT_TYPE = 60107;
          var REACT_STRICT_MODE_TYPE = 60108;
          var REACT_PROFILER_TYPE = 60114;
          var REACT_PROVIDER_TYPE = 60109;
          var REACT_CONTEXT_TYPE = 60110;
          var REACT_FORWARD_REF_TYPE = 60112;
          var REACT_SUSPENSE_TYPE = 60113;
          var REACT_SUSPENSE_LIST_TYPE = 60120;
          var REACT_MEMO_TYPE = 60115;
          var REACT_LAZY_TYPE = 60116;
          var REACT_BLOCK_TYPE = 60121;
          var REACT_SERVER_BLOCK_TYPE = 60122;
          var REACT_FUNDAMENTAL_TYPE = 60117;
          var REACT_SCOPE_TYPE = 60119;
          var REACT_OPAQUE_ID_TYPE = 60128;
          var REACT_DEBUG_TRACING_MODE_TYPE = 60129;
          var REACT_OFFSCREEN_TYPE = 60130;
          var REACT_LEGACY_HIDDEN_TYPE = 60131;
          if (typeof Symbol === "function" && Symbol.for) {
            var symbolFor = Symbol.for;
            REACT_ELEMENT_TYPE = symbolFor("react.element");
            REACT_PORTAL_TYPE = symbolFor("react.portal");
            REACT_FRAGMENT_TYPE = symbolFor("react.fragment");
            REACT_STRICT_MODE_TYPE = symbolFor("react.strict_mode");
            REACT_PROFILER_TYPE = symbolFor("react.profiler");
            REACT_PROVIDER_TYPE = symbolFor("react.provider");
            REACT_CONTEXT_TYPE = symbolFor("react.context");
            REACT_FORWARD_REF_TYPE = symbolFor("react.forward_ref");
            REACT_SUSPENSE_TYPE = symbolFor("react.suspense");
            REACT_SUSPENSE_LIST_TYPE = symbolFor("react.suspense_list");
            REACT_MEMO_TYPE = symbolFor("react.memo");
            REACT_LAZY_TYPE = symbolFor("react.lazy");
            REACT_BLOCK_TYPE = symbolFor("react.block");
            REACT_SERVER_BLOCK_TYPE = symbolFor("react.server.block");
            REACT_FUNDAMENTAL_TYPE = symbolFor("react.fundamental");
            REACT_SCOPE_TYPE = symbolFor("react.scope");
            REACT_OPAQUE_ID_TYPE = symbolFor("react.opaque.id");
            REACT_DEBUG_TRACING_MODE_TYPE = symbolFor("react.debug_trace_mode");
            REACT_OFFSCREEN_TYPE = symbolFor("react.offscreen");
            REACT_LEGACY_HIDDEN_TYPE = symbolFor("react.legacy_hidden");
          }
          var enableScopeAPI = false;
          function isValidElementType(type) {
            if (typeof type === "string" || typeof type === "function") {
              return true;
            }
            if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || type === REACT_DEBUG_TRACING_MODE_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_LEGACY_HIDDEN_TYPE || enableScopeAPI) {
              return true;
            }
            if (typeof type === "object" && type !== null) {
              if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_BLOCK_TYPE || type[0] === REACT_SERVER_BLOCK_TYPE) {
                return true;
              }
            }
            return false;
          }
          function typeOf(object) {
            if (typeof object === "object" && object !== null) {
              var $$typeof = object.$$typeof;
              switch ($$typeof) {
                case REACT_ELEMENT_TYPE:
                  var type = object.type;
                  switch (type) {
                    case REACT_FRAGMENT_TYPE:
                    case REACT_PROFILER_TYPE:
                    case REACT_STRICT_MODE_TYPE:
                    case REACT_SUSPENSE_TYPE:
                    case REACT_SUSPENSE_LIST_TYPE:
                      return type;
                    default:
                      var $$typeofType = type && type.$$typeof;
                      switch ($$typeofType) {
                        case REACT_CONTEXT_TYPE:
                        case REACT_FORWARD_REF_TYPE:
                        case REACT_LAZY_TYPE:
                        case REACT_MEMO_TYPE:
                        case REACT_PROVIDER_TYPE:
                          return $$typeofType;
                        default:
                          return $$typeof;
                      }
                  }
                case REACT_PORTAL_TYPE:
                  return $$typeof;
              }
            }
            return void 0;
          }
          var ContextConsumer = REACT_CONTEXT_TYPE;
          var ContextProvider = REACT_PROVIDER_TYPE;
          var Element2 = REACT_ELEMENT_TYPE;
          var ForwardRef = REACT_FORWARD_REF_TYPE;
          var Fragment3 = REACT_FRAGMENT_TYPE;
          var Lazy = REACT_LAZY_TYPE;
          var Memo = REACT_MEMO_TYPE;
          var Portal = REACT_PORTAL_TYPE;
          var Profiler = REACT_PROFILER_TYPE;
          var StrictMode = REACT_STRICT_MODE_TYPE;
          var Suspense = REACT_SUSPENSE_TYPE;
          var hasWarnedAboutDeprecatedIsAsyncMode = false;
          var hasWarnedAboutDeprecatedIsConcurrentMode = false;
          function isAsyncMode(object) {
            {
              if (!hasWarnedAboutDeprecatedIsAsyncMode) {
                hasWarnedAboutDeprecatedIsAsyncMode = true;
                console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 18+.");
              }
            }
            return false;
          }
          function isConcurrentMode(object) {
            {
              if (!hasWarnedAboutDeprecatedIsConcurrentMode) {
                hasWarnedAboutDeprecatedIsConcurrentMode = true;
                console["warn"]("The ReactIs.isConcurrentMode() alias has been deprecated, and will be removed in React 18+.");
              }
            }
            return false;
          }
          function isContextConsumer(object) {
            return typeOf(object) === REACT_CONTEXT_TYPE;
          }
          function isContextProvider(object) {
            return typeOf(object) === REACT_PROVIDER_TYPE;
          }
          function isElement(object) {
            return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
          }
          function isForwardRef(object) {
            return typeOf(object) === REACT_FORWARD_REF_TYPE;
          }
          function isFragment(object) {
            return typeOf(object) === REACT_FRAGMENT_TYPE;
          }
          function isLazy(object) {
            return typeOf(object) === REACT_LAZY_TYPE;
          }
          function isMemo(object) {
            return typeOf(object) === REACT_MEMO_TYPE;
          }
          function isPortal(object) {
            return typeOf(object) === REACT_PORTAL_TYPE;
          }
          function isProfiler(object) {
            return typeOf(object) === REACT_PROFILER_TYPE;
          }
          function isStrictMode(object) {
            return typeOf(object) === REACT_STRICT_MODE_TYPE;
          }
          function isSuspense(object) {
            return typeOf(object) === REACT_SUSPENSE_TYPE;
          }
          exports.ContextConsumer = ContextConsumer;
          exports.ContextProvider = ContextProvider;
          exports.Element = Element2;
          exports.ForwardRef = ForwardRef;
          exports.Fragment = Fragment3;
          exports.Lazy = Lazy;
          exports.Memo = Memo;
          exports.Portal = Portal;
          exports.Profiler = Profiler;
          exports.StrictMode = StrictMode;
          exports.Suspense = Suspense;
          exports.isAsyncMode = isAsyncMode;
          exports.isConcurrentMode = isConcurrentMode;
          exports.isContextConsumer = isContextConsumer;
          exports.isContextProvider = isContextProvider;
          exports.isElement = isElement;
          exports.isForwardRef = isForwardRef;
          exports.isFragment = isFragment;
          exports.isLazy = isLazy;
          exports.isMemo = isMemo;
          exports.isPortal = isPortal;
          exports.isProfiler = isProfiler;
          exports.isStrictMode = isStrictMode;
          exports.isSuspense = isSuspense;
          exports.isValidElementType = isValidElementType;
          exports.typeOf = typeOf;
        })();
      }
    }
  });

  // node_modules/react-is/index.js
  var require_react_is = __commonJS({
    "node_modules/react-is/index.js"(exports, module) {
      "use strict";
      if (false) {
        module.exports = null;
      } else {
        module.exports = require_react_is_development();
      }
    }
  });

  // node_modules/shallowequal/index.js
  var require_shallowequal = __commonJS({
    "node_modules/shallowequal/index.js"(exports, module) {
      module.exports = function shallowEqual(objA, objB, compare, compareContext) {
        var ret = compare ? compare.call(compareContext, objA, objB) : void 0;
        if (ret !== void 0) {
          return !!ret;
        }
        if (objA === objB) {
          return true;
        }
        if (typeof objA !== "object" || !objA || typeof objB !== "object" || !objB) {
          return false;
        }
        var keysA = Object.keys(objA);
        var keysB = Object.keys(objB);
        if (keysA.length !== keysB.length) {
          return false;
        }
        var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);
        for (var idx = 0; idx < keysA.length; idx++) {
          var key = keysA[idx];
          if (!bHasOwnProperty(key)) {
            return false;
          }
          var valueA = objA[key];
          var valueB = objB[key];
          ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;
          if (ret === false || ret === void 0 && valueA !== valueB) {
            return false;
          }
        }
        return true;
      };
    }
  });

  // node_modules/@emotion/unitless/dist/unitless.browser.cjs.js
  var require_unitless_browser_cjs = __commonJS({
    "node_modules/@emotion/unitless/dist/unitless.browser.cjs.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      var unitlessKeys = {
        animationIterationCount: 1,
        borderImageOutset: 1,
        borderImageSlice: 1,
        borderImageWidth: 1,
        boxFlex: 1,
        boxFlexGroup: 1,
        boxOrdinalGroup: 1,
        columnCount: 1,
        columns: 1,
        flex: 1,
        flexGrow: 1,
        flexPositive: 1,
        flexShrink: 1,
        flexNegative: 1,
        flexOrder: 1,
        gridRow: 1,
        gridRowEnd: 1,
        gridRowSpan: 1,
        gridRowStart: 1,
        gridColumn: 1,
        gridColumnEnd: 1,
        gridColumnSpan: 1,
        gridColumnStart: 1,
        msGridRow: 1,
        msGridRowSpan: 1,
        msGridColumn: 1,
        msGridColumnSpan: 1,
        fontWeight: 1,
        lineHeight: 1,
        opacity: 1,
        order: 1,
        orphans: 1,
        tabSize: 1,
        widows: 1,
        zIndex: 1,
        zoom: 1,
        WebkitLineClamp: 1,
        fillOpacity: 1,
        floodOpacity: 1,
        stopOpacity: 1,
        strokeDasharray: 1,
        strokeDashoffset: 1,
        strokeMiterlimit: 1,
        strokeOpacity: 1,
        strokeWidth: 1
      };
      exports.default = unitlessKeys;
    }
  });

  // node_modules/hoist-non-react-statics/node_modules/react-is/cjs/react-is.development.js
  var require_react_is_development2 = __commonJS({
    "node_modules/hoist-non-react-statics/node_modules/react-is/cjs/react-is.development.js"(exports) {
      "use strict";
      if (true) {
        (function() {
          "use strict";
          var hasSymbol = typeof Symbol === "function" && Symbol.for;
          var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for("react.element") : 60103;
          var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for("react.portal") : 60106;
          var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for("react.fragment") : 60107;
          var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for("react.strict_mode") : 60108;
          var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for("react.profiler") : 60114;
          var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for("react.provider") : 60109;
          var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for("react.context") : 60110;
          var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for("react.async_mode") : 60111;
          var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for("react.concurrent_mode") : 60111;
          var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for("react.forward_ref") : 60112;
          var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for("react.suspense") : 60113;
          var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for("react.suspense_list") : 60120;
          var REACT_MEMO_TYPE = hasSymbol ? Symbol.for("react.memo") : 60115;
          var REACT_LAZY_TYPE = hasSymbol ? Symbol.for("react.lazy") : 60116;
          var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for("react.block") : 60121;
          var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for("react.fundamental") : 60117;
          var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for("react.responder") : 60118;
          var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for("react.scope") : 60119;
          function isValidElementType(type) {
            return typeof type === "string" || typeof type === "function" || type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === "object" && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
          }
          function typeOf(object) {
            if (typeof object === "object" && object !== null) {
              var $$typeof = object.$$typeof;
              switch ($$typeof) {
                case REACT_ELEMENT_TYPE:
                  var type = object.type;
                  switch (type) {
                    case REACT_ASYNC_MODE_TYPE:
                    case REACT_CONCURRENT_MODE_TYPE:
                    case REACT_FRAGMENT_TYPE:
                    case REACT_PROFILER_TYPE:
                    case REACT_STRICT_MODE_TYPE:
                    case REACT_SUSPENSE_TYPE:
                      return type;
                    default:
                      var $$typeofType = type && type.$$typeof;
                      switch ($$typeofType) {
                        case REACT_CONTEXT_TYPE:
                        case REACT_FORWARD_REF_TYPE:
                        case REACT_LAZY_TYPE:
                        case REACT_MEMO_TYPE:
                        case REACT_PROVIDER_TYPE:
                          return $$typeofType;
                        default:
                          return $$typeof;
                      }
                  }
                case REACT_PORTAL_TYPE:
                  return $$typeof;
              }
            }
            return void 0;
          }
          var AsyncMode = REACT_ASYNC_MODE_TYPE;
          var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
          var ContextConsumer = REACT_CONTEXT_TYPE;
          var ContextProvider = REACT_PROVIDER_TYPE;
          var Element2 = REACT_ELEMENT_TYPE;
          var ForwardRef = REACT_FORWARD_REF_TYPE;
          var Fragment3 = REACT_FRAGMENT_TYPE;
          var Lazy = REACT_LAZY_TYPE;
          var Memo = REACT_MEMO_TYPE;
          var Portal = REACT_PORTAL_TYPE;
          var Profiler = REACT_PROFILER_TYPE;
          var StrictMode = REACT_STRICT_MODE_TYPE;
          var Suspense = REACT_SUSPENSE_TYPE;
          var hasWarnedAboutDeprecatedIsAsyncMode = false;
          function isAsyncMode(object) {
            {
              if (!hasWarnedAboutDeprecatedIsAsyncMode) {
                hasWarnedAboutDeprecatedIsAsyncMode = true;
                console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.");
              }
            }
            return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
          }
          function isConcurrentMode(object) {
            return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
          }
          function isContextConsumer(object) {
            return typeOf(object) === REACT_CONTEXT_TYPE;
          }
          function isContextProvider(object) {
            return typeOf(object) === REACT_PROVIDER_TYPE;
          }
          function isElement(object) {
            return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
          }
          function isForwardRef(object) {
            return typeOf(object) === REACT_FORWARD_REF_TYPE;
          }
          function isFragment(object) {
            return typeOf(object) === REACT_FRAGMENT_TYPE;
          }
          function isLazy(object) {
            return typeOf(object) === REACT_LAZY_TYPE;
          }
          function isMemo(object) {
            return typeOf(object) === REACT_MEMO_TYPE;
          }
          function isPortal(object) {
            return typeOf(object) === REACT_PORTAL_TYPE;
          }
          function isProfiler(object) {
            return typeOf(object) === REACT_PROFILER_TYPE;
          }
          function isStrictMode(object) {
            return typeOf(object) === REACT_STRICT_MODE_TYPE;
          }
          function isSuspense(object) {
            return typeOf(object) === REACT_SUSPENSE_TYPE;
          }
          exports.AsyncMode = AsyncMode;
          exports.ConcurrentMode = ConcurrentMode;
          exports.ContextConsumer = ContextConsumer;
          exports.ContextProvider = ContextProvider;
          exports.Element = Element2;
          exports.ForwardRef = ForwardRef;
          exports.Fragment = Fragment3;
          exports.Lazy = Lazy;
          exports.Memo = Memo;
          exports.Portal = Portal;
          exports.Profiler = Profiler;
          exports.StrictMode = StrictMode;
          exports.Suspense = Suspense;
          exports.isAsyncMode = isAsyncMode;
          exports.isConcurrentMode = isConcurrentMode;
          exports.isContextConsumer = isContextConsumer;
          exports.isContextProvider = isContextProvider;
          exports.isElement = isElement;
          exports.isForwardRef = isForwardRef;
          exports.isFragment = isFragment;
          exports.isLazy = isLazy;
          exports.isMemo = isMemo;
          exports.isPortal = isPortal;
          exports.isProfiler = isProfiler;
          exports.isStrictMode = isStrictMode;
          exports.isSuspense = isSuspense;
          exports.isValidElementType = isValidElementType;
          exports.typeOf = typeOf;
        })();
      }
    }
  });

  // node_modules/hoist-non-react-statics/node_modules/react-is/index.js
  var require_react_is2 = __commonJS({
    "node_modules/hoist-non-react-statics/node_modules/react-is/index.js"(exports, module) {
      "use strict";
      if (false) {
        module.exports = null;
      } else {
        module.exports = require_react_is_development2();
      }
    }
  });

  // node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js
  var require_hoist_non_react_statics_cjs = __commonJS({
    "node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js"(exports, module) {
      "use strict";
      var reactIs = require_react_is2();
      var REACT_STATICS = {
        childContextTypes: true,
        contextType: true,
        contextTypes: true,
        defaultProps: true,
        displayName: true,
        getDefaultProps: true,
        getDerivedStateFromError: true,
        getDerivedStateFromProps: true,
        mixins: true,
        propTypes: true,
        type: true
      };
      var KNOWN_STATICS = {
        name: true,
        length: true,
        prototype: true,
        caller: true,
        callee: true,
        arguments: true,
        arity: true
      };
      var FORWARD_REF_STATICS = {
        "$$typeof": true,
        render: true,
        defaultProps: true,
        displayName: true,
        propTypes: true
      };
      var MEMO_STATICS = {
        "$$typeof": true,
        compare: true,
        defaultProps: true,
        displayName: true,
        propTypes: true,
        type: true
      };
      var TYPE_STATICS = {};
      TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
      TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;
      function getStatics(component) {
        if (reactIs.isMemo(component)) {
          return MEMO_STATICS;
        }
        return TYPE_STATICS[component["$$typeof"]] || REACT_STATICS;
      }
      var defineProperty = Object.defineProperty;
      var getOwnPropertyNames = Object.getOwnPropertyNames;
      var getOwnPropertySymbols = Object.getOwnPropertySymbols;
      var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
      var getPrototypeOf = Object.getPrototypeOf;
      var objectPrototype = Object.prototype;
      function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
        if (typeof sourceComponent !== "string") {
          if (objectPrototype) {
            var inheritedComponent = getPrototypeOf(sourceComponent);
            if (inheritedComponent && inheritedComponent !== objectPrototype) {
              hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
            }
          }
          var keys = getOwnPropertyNames(sourceComponent);
          if (getOwnPropertySymbols) {
            keys = keys.concat(getOwnPropertySymbols(sourceComponent));
          }
          var targetStatics = getStatics(targetComponent);
          var sourceStatics = getStatics(sourceComponent);
          for (var i2 = 0; i2 < keys.length; ++i2) {
            var key = keys[i2];
            if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
              var descriptor = getOwnPropertyDescriptor(sourceComponent, key);
              try {
                defineProperty(targetComponent, key, descriptor);
              } catch (e2) {
              }
            }
          }
        }
        return targetComponent;
      }
      module.exports = hoistNonReactStatics;
    }
  });

  // node_modules/prop-types/node_modules/react-is/cjs/react-is.development.js
  var require_react_is_development3 = __commonJS({
    "node_modules/prop-types/node_modules/react-is/cjs/react-is.development.js"(exports) {
      "use strict";
      if (true) {
        (function() {
          "use strict";
          var hasSymbol = typeof Symbol === "function" && Symbol.for;
          var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for("react.element") : 60103;
          var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for("react.portal") : 60106;
          var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for("react.fragment") : 60107;
          var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for("react.strict_mode") : 60108;
          var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for("react.profiler") : 60114;
          var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for("react.provider") : 60109;
          var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for("react.context") : 60110;
          var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for("react.async_mode") : 60111;
          var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for("react.concurrent_mode") : 60111;
          var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for("react.forward_ref") : 60112;
          var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for("react.suspense") : 60113;
          var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for("react.suspense_list") : 60120;
          var REACT_MEMO_TYPE = hasSymbol ? Symbol.for("react.memo") : 60115;
          var REACT_LAZY_TYPE = hasSymbol ? Symbol.for("react.lazy") : 60116;
          var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for("react.block") : 60121;
          var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for("react.fundamental") : 60117;
          var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for("react.responder") : 60118;
          var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for("react.scope") : 60119;
          function isValidElementType(type) {
            return typeof type === "string" || typeof type === "function" || type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === "object" && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
          }
          function typeOf(object) {
            if (typeof object === "object" && object !== null) {
              var $$typeof = object.$$typeof;
              switch ($$typeof) {
                case REACT_ELEMENT_TYPE:
                  var type = object.type;
                  switch (type) {
                    case REACT_ASYNC_MODE_TYPE:
                    case REACT_CONCURRENT_MODE_TYPE:
                    case REACT_FRAGMENT_TYPE:
                    case REACT_PROFILER_TYPE:
                    case REACT_STRICT_MODE_TYPE:
                    case REACT_SUSPENSE_TYPE:
                      return type;
                    default:
                      var $$typeofType = type && type.$$typeof;
                      switch ($$typeofType) {
                        case REACT_CONTEXT_TYPE:
                        case REACT_FORWARD_REF_TYPE:
                        case REACT_LAZY_TYPE:
                        case REACT_MEMO_TYPE:
                        case REACT_PROVIDER_TYPE:
                          return $$typeofType;
                        default:
                          return $$typeof;
                      }
                  }
                case REACT_PORTAL_TYPE:
                  return $$typeof;
              }
            }
            return void 0;
          }
          var AsyncMode = REACT_ASYNC_MODE_TYPE;
          var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
          var ContextConsumer = REACT_CONTEXT_TYPE;
          var ContextProvider = REACT_PROVIDER_TYPE;
          var Element2 = REACT_ELEMENT_TYPE;
          var ForwardRef = REACT_FORWARD_REF_TYPE;
          var Fragment3 = REACT_FRAGMENT_TYPE;
          var Lazy = REACT_LAZY_TYPE;
          var Memo = REACT_MEMO_TYPE;
          var Portal = REACT_PORTAL_TYPE;
          var Profiler = REACT_PROFILER_TYPE;
          var StrictMode = REACT_STRICT_MODE_TYPE;
          var Suspense = REACT_SUSPENSE_TYPE;
          var hasWarnedAboutDeprecatedIsAsyncMode = false;
          function isAsyncMode(object) {
            {
              if (!hasWarnedAboutDeprecatedIsAsyncMode) {
                hasWarnedAboutDeprecatedIsAsyncMode = true;
                console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.");
              }
            }
            return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
          }
          function isConcurrentMode(object) {
            return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
          }
          function isContextConsumer(object) {
            return typeOf(object) === REACT_CONTEXT_TYPE;
          }
          function isContextProvider(object) {
            return typeOf(object) === REACT_PROVIDER_TYPE;
          }
          function isElement(object) {
            return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
          }
          function isForwardRef(object) {
            return typeOf(object) === REACT_FORWARD_REF_TYPE;
          }
          function isFragment(object) {
            return typeOf(object) === REACT_FRAGMENT_TYPE;
          }
          function isLazy(object) {
            return typeOf(object) === REACT_LAZY_TYPE;
          }
          function isMemo(object) {
            return typeOf(object) === REACT_MEMO_TYPE;
          }
          function isPortal(object) {
            return typeOf(object) === REACT_PORTAL_TYPE;
          }
          function isProfiler(object) {
            return typeOf(object) === REACT_PROFILER_TYPE;
          }
          function isStrictMode(object) {
            return typeOf(object) === REACT_STRICT_MODE_TYPE;
          }
          function isSuspense(object) {
            return typeOf(object) === REACT_SUSPENSE_TYPE;
          }
          exports.AsyncMode = AsyncMode;
          exports.ConcurrentMode = ConcurrentMode;
          exports.ContextConsumer = ContextConsumer;
          exports.ContextProvider = ContextProvider;
          exports.Element = Element2;
          exports.ForwardRef = ForwardRef;
          exports.Fragment = Fragment3;
          exports.Lazy = Lazy;
          exports.Memo = Memo;
          exports.Portal = Portal;
          exports.Profiler = Profiler;
          exports.StrictMode = StrictMode;
          exports.Suspense = Suspense;
          exports.isAsyncMode = isAsyncMode;
          exports.isConcurrentMode = isConcurrentMode;
          exports.isContextConsumer = isContextConsumer;
          exports.isContextProvider = isContextProvider;
          exports.isElement = isElement;
          exports.isForwardRef = isForwardRef;
          exports.isFragment = isFragment;
          exports.isLazy = isLazy;
          exports.isMemo = isMemo;
          exports.isPortal = isPortal;
          exports.isProfiler = isProfiler;
          exports.isStrictMode = isStrictMode;
          exports.isSuspense = isSuspense;
          exports.isValidElementType = isValidElementType;
          exports.typeOf = typeOf;
        })();
      }
    }
  });

  // node_modules/prop-types/node_modules/react-is/index.js
  var require_react_is3 = __commonJS({
    "node_modules/prop-types/node_modules/react-is/index.js"(exports, module) {
      "use strict";
      if (false) {
        module.exports = null;
      } else {
        module.exports = require_react_is_development3();
      }
    }
  });

  // node_modules/prop-types/lib/ReactPropTypesSecret.js
  var require_ReactPropTypesSecret = __commonJS({
    "node_modules/prop-types/lib/ReactPropTypesSecret.js"(exports, module) {
      "use strict";
      var ReactPropTypesSecret = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
      module.exports = ReactPropTypesSecret;
    }
  });

  // node_modules/prop-types/checkPropTypes.js
  var require_checkPropTypes = __commonJS({
    "node_modules/prop-types/checkPropTypes.js"(exports, module) {
      "use strict";
      var printWarning = function() {
      };
      if (true) {
        ReactPropTypesSecret = require_ReactPropTypesSecret();
        loggedTypeFailures = {};
        has = Function.call.bind(Object.prototype.hasOwnProperty);
        printWarning = function(text) {
          var message = "Warning: " + text;
          if (typeof console !== "undefined") {
            console.error(message);
          }
          try {
            throw new Error(message);
          } catch (x2) {
          }
        };
      }
      var ReactPropTypesSecret;
      var loggedTypeFailures;
      var has;
      function checkPropTypes(typeSpecs, values2, location, componentName, getStack) {
        if (true) {
          for (var typeSpecName in typeSpecs) {
            if (has(typeSpecs, typeSpecName)) {
              var error;
              try {
                if (typeof typeSpecs[typeSpecName] !== "function") {
                  var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.");
                  err.name = "Invariant Violation";
                  throw err;
                }
                error = typeSpecs[typeSpecName](values2, typeSpecName, componentName, location, null, ReactPropTypesSecret);
              } catch (ex) {
                error = ex;
              }
              if (error && !(error instanceof Error)) {
                printWarning((componentName || "React class") + ": type specification of " + location + " `" + typeSpecName + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof error + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).");
              }
              if (error instanceof Error && !(error.message in loggedTypeFailures)) {
                loggedTypeFailures[error.message] = true;
                var stack = getStack ? getStack() : "";
                printWarning("Failed " + location + " type: " + error.message + (stack != null ? stack : ""));
              }
            }
          }
        }
      }
      checkPropTypes.resetWarningCache = function() {
        if (true) {
          loggedTypeFailures = {};
        }
      };
      module.exports = checkPropTypes;
    }
  });

  // node_modules/prop-types/factoryWithTypeCheckers.js
  var require_factoryWithTypeCheckers = __commonJS({
    "node_modules/prop-types/factoryWithTypeCheckers.js"(exports, module) {
      "use strict";
      var ReactIs = require_react_is3();
      var assign = require_object_assign();
      var ReactPropTypesSecret = require_ReactPropTypesSecret();
      var checkPropTypes = require_checkPropTypes();
      var has = Function.call.bind(Object.prototype.hasOwnProperty);
      var printWarning = function() {
      };
      if (true) {
        printWarning = function(text) {
          var message = "Warning: " + text;
          if (typeof console !== "undefined") {
            console.error(message);
          }
          try {
            throw new Error(message);
          } catch (x2) {
          }
        };
      }
      function emptyFunctionThatReturnsNull() {
        return null;
      }
      module.exports = function(isValidElement4, throwOnDirectAccess) {
        var ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
        var FAUX_ITERATOR_SYMBOL = "@@iterator";
        function getIteratorFn(maybeIterable) {
          var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
          if (typeof iteratorFn === "function") {
            return iteratorFn;
          }
        }
        var ANONYMOUS = "<<anonymous>>";
        var ReactPropTypes = {
          array: createPrimitiveTypeChecker("array"),
          bool: createPrimitiveTypeChecker("boolean"),
          func: createPrimitiveTypeChecker("function"),
          number: createPrimitiveTypeChecker("number"),
          object: createPrimitiveTypeChecker("object"),
          string: createPrimitiveTypeChecker("string"),
          symbol: createPrimitiveTypeChecker("symbol"),
          any: createAnyTypeChecker(),
          arrayOf: createArrayOfTypeChecker,
          element: createElementTypeChecker(),
          elementType: createElementTypeTypeChecker(),
          instanceOf: createInstanceTypeChecker,
          node: createNodeChecker(),
          objectOf: createObjectOfTypeChecker,
          oneOf: createEnumTypeChecker,
          oneOfType: createUnionTypeChecker,
          shape: createShapeTypeChecker,
          exact: createStrictShapeTypeChecker
        };
        function is(x2, y2) {
          if (x2 === y2) {
            return x2 !== 0 || 1 / x2 === 1 / y2;
          } else {
            return x2 !== x2 && y2 !== y2;
          }
        }
        function PropTypeError(message) {
          this.message = message;
          this.stack = "";
        }
        PropTypeError.prototype = Error.prototype;
        function createChainableTypeChecker(validate) {
          if (true) {
            var manualPropTypeCallCache = {};
            var manualPropTypeWarningCount = 0;
          }
          function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
            componentName = componentName || ANONYMOUS;
            propFullName = propFullName || propName;
            if (secret !== ReactPropTypesSecret) {
              if (throwOnDirectAccess) {
                var err = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types");
                err.name = "Invariant Violation";
                throw err;
              } else if (typeof console !== "undefined") {
                var cacheKey = componentName + ":" + propName;
                if (!manualPropTypeCallCache[cacheKey] && manualPropTypeWarningCount < 3) {
                  printWarning("You are manually calling a React.PropTypes validation function for the `" + propFullName + "` prop on `" + componentName + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details.");
                  manualPropTypeCallCache[cacheKey] = true;
                  manualPropTypeWarningCount++;
                }
              }
            }
            if (props[propName] == null) {
              if (isRequired) {
                if (props[propName] === null) {
                  return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required " + ("in `" + componentName + "`, but its value is `null`."));
                }
                return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required in " + ("`" + componentName + "`, but its value is `undefined`."));
              }
              return null;
            } else {
              return validate(props, propName, componentName, location, propFullName);
            }
          }
          var chainedCheckType = checkType.bind(null, false);
          chainedCheckType.isRequired = checkType.bind(null, true);
          return chainedCheckType;
        }
        function createPrimitiveTypeChecker(expectedType) {
          function validate(props, propName, componentName, location, propFullName, secret) {
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== expectedType) {
              var preciseType = getPreciseType(propValue);
              return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + preciseType + "` supplied to `" + componentName + "`, expected ") + ("`" + expectedType + "`."));
            }
            return null;
          }
          return createChainableTypeChecker(validate);
        }
        function createAnyTypeChecker() {
          return createChainableTypeChecker(emptyFunctionThatReturnsNull);
        }
        function createArrayOfTypeChecker(typeChecker) {
          function validate(props, propName, componentName, location, propFullName) {
            if (typeof typeChecker !== "function") {
              return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside arrayOf.");
            }
            var propValue = props[propName];
            if (!Array.isArray(propValue)) {
              var propType = getPropType(propValue);
              return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an array."));
            }
            for (var i2 = 0; i2 < propValue.length; i2++) {
              var error = typeChecker(propValue, i2, componentName, location, propFullName + "[" + i2 + "]", ReactPropTypesSecret);
              if (error instanceof Error) {
                return error;
              }
            }
            return null;
          }
          return createChainableTypeChecker(validate);
        }
        function createElementTypeChecker() {
          function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            if (!isValidElement4(propValue)) {
              var propType = getPropType(propValue);
              return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement."));
            }
            return null;
          }
          return createChainableTypeChecker(validate);
        }
        function createElementTypeTypeChecker() {
          function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            if (!ReactIs.isValidElementType(propValue)) {
              var propType = getPropType(propValue);
              return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement type."));
            }
            return null;
          }
          return createChainableTypeChecker(validate);
        }
        function createInstanceTypeChecker(expectedClass) {
          function validate(props, propName, componentName, location, propFullName) {
            if (!(props[propName] instanceof expectedClass)) {
              var expectedClassName = expectedClass.name || ANONYMOUS;
              var actualClassName = getClassName(props[propName]);
              return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + actualClassName + "` supplied to `" + componentName + "`, expected ") + ("instance of `" + expectedClassName + "`."));
            }
            return null;
          }
          return createChainableTypeChecker(validate);
        }
        function createEnumTypeChecker(expectedValues) {
          if (!Array.isArray(expectedValues)) {
            if (true) {
              if (arguments.length > 1) {
                printWarning("Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).");
              } else {
                printWarning("Invalid argument supplied to oneOf, expected an array.");
              }
            }
            return emptyFunctionThatReturnsNull;
          }
          function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            for (var i2 = 0; i2 < expectedValues.length; i2++) {
              if (is(propValue, expectedValues[i2])) {
                return null;
              }
            }
            var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
              var type = getPreciseType(value);
              if (type === "symbol") {
                return String(value);
              }
              return value;
            });
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of value `" + String(propValue) + "` " + ("supplied to `" + componentName + "`, expected one of " + valuesString + "."));
          }
          return createChainableTypeChecker(validate);
        }
        function createObjectOfTypeChecker(typeChecker) {
          function validate(props, propName, componentName, location, propFullName) {
            if (typeof typeChecker !== "function") {
              return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside objectOf.");
            }
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== "object") {
              return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an object."));
            }
            for (var key in propValue) {
              if (has(propValue, key)) {
                var error = typeChecker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
                if (error instanceof Error) {
                  return error;
                }
              }
            }
            return null;
          }
          return createChainableTypeChecker(validate);
        }
        function createUnionTypeChecker(arrayOfTypeCheckers) {
          if (!Array.isArray(arrayOfTypeCheckers)) {
            true ? printWarning("Invalid argument supplied to oneOfType, expected an instance of array.") : void 0;
            return emptyFunctionThatReturnsNull;
          }
          for (var i2 = 0; i2 < arrayOfTypeCheckers.length; i2++) {
            var checker = arrayOfTypeCheckers[i2];
            if (typeof checker !== "function") {
              printWarning("Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + getPostfixForTypeWarning(checker) + " at index " + i2 + ".");
              return emptyFunctionThatReturnsNull;
            }
          }
          function validate(props, propName, componentName, location, propFullName) {
            for (var i3 = 0; i3 < arrayOfTypeCheckers.length; i3++) {
              var checker2 = arrayOfTypeCheckers[i3];
              if (checker2(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
                return null;
              }
            }
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`."));
          }
          return createChainableTypeChecker(validate);
        }
        function createNodeChecker() {
          function validate(props, propName, componentName, location, propFullName) {
            if (!isNode(props[propName])) {
              return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`, expected a ReactNode."));
            }
            return null;
          }
          return createChainableTypeChecker(validate);
        }
        function createShapeTypeChecker(shapeTypes) {
          function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== "object") {
              return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
            }
            for (var key in shapeTypes) {
              var checker = shapeTypes[key];
              if (!checker) {
                continue;
              }
              var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
              if (error) {
                return error;
              }
            }
            return null;
          }
          return createChainableTypeChecker(validate);
        }
        function createStrictShapeTypeChecker(shapeTypes) {
          function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== "object") {
              return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
            }
            var allKeys = assign({}, props[propName], shapeTypes);
            for (var key in allKeys) {
              var checker = shapeTypes[key];
              if (!checker) {
                return new PropTypeError("Invalid " + location + " `" + propFullName + "` key `" + key + "` supplied to `" + componentName + "`.\nBad object: " + JSON.stringify(props[propName], null, "  ") + "\nValid keys: " + JSON.stringify(Object.keys(shapeTypes), null, "  "));
              }
              var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
              if (error) {
                return error;
              }
            }
            return null;
          }
          return createChainableTypeChecker(validate);
        }
        function isNode(propValue) {
          switch (typeof propValue) {
            case "number":
            case "string":
            case "undefined":
              return true;
            case "boolean":
              return !propValue;
            case "object":
              if (Array.isArray(propValue)) {
                return propValue.every(isNode);
              }
              if (propValue === null || isValidElement4(propValue)) {
                return true;
              }
              var iteratorFn = getIteratorFn(propValue);
              if (iteratorFn) {
                var iterator = iteratorFn.call(propValue);
                var step;
                if (iteratorFn !== propValue.entries) {
                  while (!(step = iterator.next()).done) {
                    if (!isNode(step.value)) {
                      return false;
                    }
                  }
                } else {
                  while (!(step = iterator.next()).done) {
                    var entry = step.value;
                    if (entry) {
                      if (!isNode(entry[1])) {
                        return false;
                      }
                    }
                  }
                }
              } else {
                return false;
              }
              return true;
            default:
              return false;
          }
        }
        function isSymbol(propType, propValue) {
          if (propType === "symbol") {
            return true;
          }
          if (!propValue) {
            return false;
          }
          if (propValue["@@toStringTag"] === "Symbol") {
            return true;
          }
          if (typeof Symbol === "function" && propValue instanceof Symbol) {
            return true;
          }
          return false;
        }
        function getPropType(propValue) {
          var propType = typeof propValue;
          if (Array.isArray(propValue)) {
            return "array";
          }
          if (propValue instanceof RegExp) {
            return "object";
          }
          if (isSymbol(propType, propValue)) {
            return "symbol";
          }
          return propType;
        }
        function getPreciseType(propValue) {
          if (typeof propValue === "undefined" || propValue === null) {
            return "" + propValue;
          }
          var propType = getPropType(propValue);
          if (propType === "object") {
            if (propValue instanceof Date) {
              return "date";
            } else if (propValue instanceof RegExp) {
              return "regexp";
            }
          }
          return propType;
        }
        function getPostfixForTypeWarning(value) {
          var type = getPreciseType(value);
          switch (type) {
            case "array":
            case "object":
              return "an " + type;
            case "boolean":
            case "date":
            case "regexp":
              return "a " + type;
            default:
              return type;
          }
        }
        function getClassName(propValue) {
          if (!propValue.constructor || !propValue.constructor.name) {
            return ANONYMOUS;
          }
          return propValue.constructor.name;
        }
        ReactPropTypes.checkPropTypes = checkPropTypes;
        ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
        ReactPropTypes.PropTypes = ReactPropTypes;
        return ReactPropTypes;
      };
    }
  });

  // node_modules/prop-types/index.js
  var require_prop_types = __commonJS({
    "node_modules/prop-types/index.js"(exports, module) {
      if (true) {
        ReactIs = require_react_is3();
        throwOnDirectAccess = true;
        module.exports = require_factoryWithTypeCheckers()(ReactIs.isElement, throwOnDirectAccess);
      } else {
        module.exports = null();
      }
      var ReactIs;
      var throwOnDirectAccess;
    }
  });

  // node_modules/clsx/dist/clsx.js
  var require_clsx = __commonJS({
    "node_modules/clsx/dist/clsx.js"(exports, module) {
      function toVal(mix) {
        var k2, y2, str = "";
        if (typeof mix === "string" || typeof mix === "number") {
          str += mix;
        } else if (typeof mix === "object") {
          if (Array.isArray(mix)) {
            for (k2 = 0; k2 < mix.length; k2++) {
              if (mix[k2]) {
                if (y2 = toVal(mix[k2])) {
                  str && (str += " ");
                  str += y2;
                }
              }
            }
          } else {
            for (k2 in mix) {
              if (mix[k2]) {
                str && (str += " ");
                str += k2;
              }
            }
          }
        }
        return str;
      }
      module.exports = function() {
        var i2 = 0, tmp, x2, str = "";
        while (i2 < arguments.length) {
          if (tmp = arguments[i2++]) {
            if (x2 = toVal(tmp)) {
              str && (str += " ");
              str += x2;
            }
          }
        }
        return str;
      };
    }
  });

  // node_modules/@mui/core/node_modules/@babel/runtime/helpers/interopRequireDefault.js
  var require_interopRequireDefault = __commonJS({
    "node_modules/@mui/core/node_modules/@babel/runtime/helpers/interopRequireDefault.js"(exports, module) {
      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          "default": obj
        };
      }
      module.exports = _interopRequireDefault;
      module.exports["default"] = module.exports, module.exports.__esModule = true;
    }
  });

  // node_modules/@mui/core/node_modules/@babel/runtime/helpers/extends.js
  var require_extends = __commonJS({
    "node_modules/@mui/core/node_modules/@babel/runtime/helpers/extends.js"(exports, module) {
      function _extends4() {
        module.exports = _extends4 = Object.assign || function(target) {
          for (var i2 = 1; i2 < arguments.length; i2++) {
            var source = arguments[i2];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };
        module.exports["default"] = module.exports, module.exports.__esModule = true;
        return _extends4.apply(this, arguments);
      }
      module.exports = _extends4;
      module.exports["default"] = module.exports, module.exports.__esModule = true;
    }
  });

  // node_modules/@mui/utils/node_modules/@babel/runtime/helpers/interopRequireDefault.js
  var require_interopRequireDefault2 = __commonJS({
    "node_modules/@mui/utils/node_modules/@babel/runtime/helpers/interopRequireDefault.js"(exports, module) {
      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          "default": obj
        };
      }
      module.exports = _interopRequireDefault;
      module.exports["default"] = module.exports, module.exports.__esModule = true;
    }
  });

  // node_modules/@mui/utils/chainPropTypes.js
  var require_chainPropTypes = __commonJS({
    "node_modules/@mui/utils/chainPropTypes.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = chainPropTypes3;
      function chainPropTypes3(propType1, propType2) {
        if (false) {
          return () => null;
        }
        return function validate(...args) {
          return propType1(...args) || propType2(...args);
        };
      }
    }
  });

  // node_modules/@mui/utils/node_modules/@babel/runtime/helpers/extends.js
  var require_extends2 = __commonJS({
    "node_modules/@mui/utils/node_modules/@babel/runtime/helpers/extends.js"(exports, module) {
      function _extends4() {
        module.exports = _extends4 = Object.assign || function(target) {
          for (var i2 = 1; i2 < arguments.length; i2++) {
            var source = arguments[i2];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };
        module.exports["default"] = module.exports, module.exports.__esModule = true;
        return _extends4.apply(this, arguments);
      }
      module.exports = _extends4;
      module.exports["default"] = module.exports, module.exports.__esModule = true;
    }
  });

  // node_modules/@mui/utils/deepmerge.js
  var require_deepmerge = __commonJS({
    "node_modules/@mui/utils/deepmerge.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault2();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = deepmerge4;
      exports.isPlainObject = isPlainObject;
      var _extends22 = _interopRequireDefault(require_extends2());
      function isPlainObject(item) {
        return item !== null && typeof item === "object" && item.constructor === Object;
      }
      function deepmerge4(target, source, options = {
        clone: true
      }) {
        const output = options.clone ? (0, _extends22.default)({}, target) : target;
        if (isPlainObject(target) && isPlainObject(source)) {
          Object.keys(source).forEach((key) => {
            if (key === "__proto__") {
              return;
            }
            if (isPlainObject(source[key]) && key in target && isPlainObject(target[key])) {
              output[key] = deepmerge4(target[key], source[key], options);
            } else {
              output[key] = source[key];
            }
          });
        }
        return output;
      }
    }
  });

  // node_modules/@mui/utils/elementAcceptingRef.js
  var require_elementAcceptingRef = __commonJS({
    "node_modules/@mui/utils/elementAcceptingRef.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault2();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _propTypes = _interopRequireDefault(require_prop_types());
      var _chainPropTypes = _interopRequireDefault(require_chainPropTypes());
      function isClassComponent(elementType) {
        const {
          prototype = {}
        } = elementType;
        return Boolean(prototype.isReactComponent);
      }
      function acceptingRef(props, propName, componentName, location, propFullName) {
        const element = props[propName];
        const safePropName = propFullName || propName;
        if (element == null || typeof window === "undefined") {
          return null;
        }
        let warningHint;
        const elementType = element.type;
        if (typeof elementType === "function" && !isClassComponent(elementType)) {
          warningHint = "Did you accidentally use a plain function component for an element instead?";
        }
        if (warningHint !== void 0) {
          return new Error(`Invalid ${location} \`${safePropName}\` supplied to \`${componentName}\`. Expected an element that can hold a ref. ${warningHint} For more information see https://mui.com/r/caveat-with-refs-guide`);
        }
        return null;
      }
      var elementAcceptingRef3 = (0, _chainPropTypes.default)(_propTypes.default.element, acceptingRef);
      elementAcceptingRef3.isRequired = (0, _chainPropTypes.default)(_propTypes.default.element.isRequired, acceptingRef);
      var _default = elementAcceptingRef3;
      exports.default = _default;
    }
  });

  // node_modules/@mui/utils/elementTypeAcceptingRef.js
  var require_elementTypeAcceptingRef = __commonJS({
    "node_modules/@mui/utils/elementTypeAcceptingRef.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault2();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _propTypes = _interopRequireDefault(require_prop_types());
      var _chainPropTypes = _interopRequireDefault(require_chainPropTypes());
      function isClassComponent(elementType) {
        const {
          prototype = {}
        } = elementType;
        return Boolean(prototype.isReactComponent);
      }
      function elementTypeAcceptingRef2(props, propName, componentName, location, propFullName) {
        const propValue = props[propName];
        const safePropName = propFullName || propName;
        if (propValue == null || typeof window === "undefined") {
          return null;
        }
        let warningHint;
        if (typeof propValue === "function" && !isClassComponent(propValue)) {
          warningHint = "Did you accidentally provide a plain function component instead?";
        }
        if (warningHint !== void 0) {
          return new Error(`Invalid ${location} \`${safePropName}\` supplied to \`${componentName}\`. Expected an element type that can hold a ref. ${warningHint} For more information see https://mui.com/r/caveat-with-refs-guide`);
        }
        return null;
      }
      var _default = (0, _chainPropTypes.default)(_propTypes.default.elementType, elementTypeAcceptingRef2);
      exports.default = _default;
    }
  });

  // node_modules/@mui/utils/exactProp.js
  var require_exactProp = __commonJS({
    "node_modules/@mui/utils/exactProp.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault2();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = exactProp2;
      var _extends22 = _interopRequireDefault(require_extends2());
      var specialProperty = "exact-prop: \u200B";
      function exactProp2(propTypes) {
        if (false) {
          return propTypes;
        }
        return (0, _extends22.default)({}, propTypes, {
          [specialProperty]: (props) => {
            const unsupportedProps = Object.keys(props).filter((prop) => !propTypes.hasOwnProperty(prop));
            if (unsupportedProps.length > 0) {
              return new Error(`The following props are not supported: ${unsupportedProps.map((prop) => `\`${prop}\``).join(", ")}. Please remove them.`);
            }
            return null;
          }
        });
      }
    }
  });

  // node_modules/@mui/utils/formatMuiErrorMessage.js
  var require_formatMuiErrorMessage = __commonJS({
    "node_modules/@mui/utils/formatMuiErrorMessage.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = formatMuiErrorMessage;
      function formatMuiErrorMessage(code) {
        let url = "https://mui.com/production-error/?code=" + code;
        for (let i2 = 1; i2 < arguments.length; i2 += 1) {
          url += "&args[]=" + encodeURIComponent(arguments[i2]);
        }
        return "Minified MUI error #" + code + "; visit " + url + " for the full message.";
      }
    }
  });

  // node_modules/@mui/utils/getDisplayName.js
  var require_getDisplayName = __commonJS({
    "node_modules/@mui/utils/getDisplayName.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = getDisplayName;
      exports.getFunctionName = getFunctionName;
      var _reactIs = require_react_is();
      var fnNameMatchRegex = /^\s*function(?:\s|\s*\/\*.*\*\/\s*)+([^(\s/]*)\s*/;
      function getFunctionName(fn) {
        const match = `${fn}`.match(fnNameMatchRegex);
        const name = match && match[1];
        return name || "";
      }
      function getFunctionComponentName(Component, fallback = "") {
        return Component.displayName || Component.name || getFunctionName(Component) || fallback;
      }
      function getWrappedName(outerType, innerType, wrapperName) {
        const functionName = getFunctionComponentName(innerType);
        return outerType.displayName || (functionName !== "" ? `${wrapperName}(${functionName})` : wrapperName);
      }
      function getDisplayName(Component) {
        if (Component == null) {
          return void 0;
        }
        if (typeof Component === "string") {
          return Component;
        }
        if (typeof Component === "function") {
          return getFunctionComponentName(Component, "Component");
        }
        if (typeof Component === "object") {
          switch (Component.$$typeof) {
            case _reactIs.ForwardRef:
              return getWrappedName(Component, Component.render, "ForwardRef");
            case _reactIs.Memo:
              return getWrappedName(Component, Component.type, "memo");
            default:
              return void 0;
          }
        }
        return void 0;
      }
    }
  });

  // node_modules/@mui/utils/HTMLElementType.js
  var require_HTMLElementType = __commonJS({
    "node_modules/@mui/utils/HTMLElementType.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = HTMLElementType;
      function HTMLElementType(props, propName, componentName, location, propFullName) {
        if (false) {
          return null;
        }
        const propValue = props[propName];
        const safePropName = propFullName || propName;
        if (propValue == null) {
          return null;
        }
        if (propValue && propValue.nodeType !== 1) {
          return new Error(`Invalid ${location} \`${safePropName}\` supplied to \`${componentName}\`. Expected an HTMLElement.`);
        }
        return null;
      }
    }
  });

  // node_modules/@mui/utils/ponyfillGlobal.js
  var require_ponyfillGlobal = __commonJS({
    "node_modules/@mui/utils/ponyfillGlobal.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _default = typeof window != "undefined" && window.Math == Math ? window : typeof self != "undefined" && self.Math == Math ? self : Function("return this")();
      exports.default = _default;
    }
  });

  // node_modules/@mui/utils/refType.js
  var require_refType = __commonJS({
    "node_modules/@mui/utils/refType.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault2();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _propTypes = _interopRequireDefault(require_prop_types());
      var refType4 = _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]);
      var _default = refType4;
      exports.default = _default;
    }
  });

  // node_modules/@mui/utils/capitalize.js
  var require_capitalize = __commonJS({
    "node_modules/@mui/utils/capitalize.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault2();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = capitalize2;
      var _formatMuiErrorMessage2 = _interopRequireDefault(require_formatMuiErrorMessage());
      function capitalize2(string) {
        if (typeof string !== "string") {
          throw new Error(true ? `MUI: \`capitalize(string)\` expects a string argument.` : (0, _formatMuiErrorMessage2.default)(7));
        }
        return string.charAt(0).toUpperCase() + string.slice(1);
      }
    }
  });

  // node_modules/@mui/utils/createChainedFunction.js
  var require_createChainedFunction = __commonJS({
    "node_modules/@mui/utils/createChainedFunction.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = createChainedFunction;
      function createChainedFunction(...funcs) {
        return funcs.reduce((acc, func) => {
          if (func == null) {
            return acc;
          }
          return function chainedFunction(...args) {
            acc.apply(this, args);
            func.apply(this, args);
          };
        }, () => {
        });
      }
    }
  });

  // node_modules/@mui/utils/debounce.js
  var require_debounce = __commonJS({
    "node_modules/@mui/utils/debounce.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = debounce;
      function debounce(func, wait = 166) {
        let timeout2;
        function debounced(...args) {
          const later = () => {
            func.apply(this, args);
          };
          clearTimeout(timeout2);
          timeout2 = setTimeout(later, wait);
        }
        debounced.clear = () => {
          clearTimeout(timeout2);
        };
        return debounced;
      }
    }
  });

  // node_modules/@mui/utils/deprecatedPropType.js
  var require_deprecatedPropType = __commonJS({
    "node_modules/@mui/utils/deprecatedPropType.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = deprecatedPropType;
      function deprecatedPropType(validator, reason) {
        if (false) {
          return () => null;
        }
        return (props, propName, componentName, location, propFullName) => {
          const componentNameSafe = componentName || "<<anonymous>>";
          const propFullNameSafe = propFullName || propName;
          if (typeof props[propName] !== "undefined") {
            return new Error(`The ${location} \`${propFullNameSafe}\` of \`${componentNameSafe}\` is deprecated. ${reason}`);
          }
          return null;
        };
      }
    }
  });

  // node_modules/@mui/utils/isMuiElement.js
  var require_isMuiElement = __commonJS({
    "node_modules/@mui/utils/isMuiElement.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = isMuiElement;
      var React40 = _interopRequireWildcard(require_react());
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
      function isMuiElement(element, muiNames) {
        return /* @__PURE__ */ React40.isValidElement(element) && muiNames.indexOf(element.type.muiName) !== -1;
      }
    }
  });

  // node_modules/@mui/utils/ownerDocument.js
  var require_ownerDocument = __commonJS({
    "node_modules/@mui/utils/ownerDocument.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = ownerDocument2;
      function ownerDocument2(node) {
        return node && node.ownerDocument || document;
      }
    }
  });

  // node_modules/@mui/utils/ownerWindow.js
  var require_ownerWindow = __commonJS({
    "node_modules/@mui/utils/ownerWindow.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault2();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = ownerWindow;
      var _ownerDocument = _interopRequireDefault(require_ownerDocument());
      function ownerWindow(node) {
        const doc = (0, _ownerDocument.default)(node);
        return doc.defaultView || window;
      }
    }
  });

  // node_modules/@mui/utils/requirePropFactory.js
  var require_requirePropFactory = __commonJS({
    "node_modules/@mui/utils/requirePropFactory.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault2();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = requirePropFactory;
      var _extends22 = _interopRequireDefault(require_extends2());
      function requirePropFactory(componentNameInError, Component) {
        if (false) {
          return () => null;
        }
        const prevPropTypes = Component ? (0, _extends22.default)({}, Component.propTypes) : null;
        const requireProp = (requiredProp) => (props, propName, componentName, location, propFullName, ...args) => {
          const propFullNameSafe = propFullName || propName;
          const defaultTypeChecker = prevPropTypes == null ? void 0 : prevPropTypes[propFullNameSafe];
          if (defaultTypeChecker) {
            const typeCheckerResult = defaultTypeChecker(props, propName, componentName, location, propFullName, ...args);
            if (typeCheckerResult) {
              return typeCheckerResult;
            }
          }
          if (typeof props[propName] !== "undefined" && !props[requiredProp]) {
            return new Error(`The prop \`${propFullNameSafe}\` of \`${componentNameInError}\` can only be used together with the \`${requiredProp}\` prop.`);
          }
          return null;
        };
        return requireProp;
      }
    }
  });

  // node_modules/@mui/utils/setRef.js
  var require_setRef = __commonJS({
    "node_modules/@mui/utils/setRef.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = setRef;
      function setRef(ref, value) {
        if (typeof ref === "function") {
          ref(value);
        } else if (ref) {
          ref.current = value;
        }
      }
    }
  });

  // node_modules/@mui/utils/useEnhancedEffect.js
  var require_useEnhancedEffect = __commonJS({
    "node_modules/@mui/utils/useEnhancedEffect.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var React40 = _interopRequireWildcard(require_react());
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
      var useEnhancedEffect = typeof window !== "undefined" ? React40.useLayoutEffect : React40.useEffect;
      var _default = useEnhancedEffect;
      exports.default = _default;
    }
  });

  // node_modules/@mui/utils/useId.js
  var require_useId = __commonJS({
    "node_modules/@mui/utils/useId.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = useId;
      var React40 = _interopRequireWildcard(require_react());
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
      function useId(idOverride) {
        const [defaultId, setDefaultId] = React40.useState(idOverride);
        const id = idOverride || defaultId;
        React40.useEffect(() => {
          if (defaultId == null) {
            setDefaultId(`mui-${Math.round(Math.random() * 1e9)}`);
          }
        }, [defaultId]);
        return id;
      }
    }
  });

  // node_modules/@mui/utils/unsupportedProp.js
  var require_unsupportedProp = __commonJS({
    "node_modules/@mui/utils/unsupportedProp.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = unsupportedProp;
      function unsupportedProp(props, propName, componentName, location, propFullName) {
        if (false) {
          return null;
        }
        const propFullNameSafe = propFullName || propName;
        if (typeof props[propName] !== "undefined") {
          return new Error(`The prop \`${propFullNameSafe}\` is not supported. Please remove it.`);
        }
        return null;
      }
    }
  });

  // node_modules/@mui/utils/useControlled.js
  var require_useControlled = __commonJS({
    "node_modules/@mui/utils/useControlled.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = useControlled3;
      var React40 = _interopRequireWildcard(require_react());
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
      function useControlled3({
        controlled,
        default: defaultProp,
        name,
        state = "value"
      }) {
        const {
          current: isControlled
        } = React40.useRef(controlled !== void 0);
        const [valueState, setValue] = React40.useState(defaultProp);
        const value = isControlled ? controlled : valueState;
        if (true) {
          React40.useEffect(() => {
            if (isControlled !== (controlled !== void 0)) {
              console.error([`MUI: A component is changing the ${isControlled ? "" : "un"}controlled ${state} state of ${name} to be ${isControlled ? "un" : ""}controlled.`, "Elements should not switch from uncontrolled to controlled (or vice versa).", `Decide between using a controlled or uncontrolled ${name} element for the lifetime of the component.`, "The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.", "More info: https://fb.me/react-controlled-components"].join("\n"));
            }
          }, [state, name, controlled]);
          const {
            current: defaultValue
          } = React40.useRef(defaultProp);
          React40.useEffect(() => {
            if (!isControlled && defaultValue !== defaultProp) {
              console.error([`MUI: A component is changing the default ${state} state of an uncontrolled ${name} after being initialized. To suppress this warning opt to use a controlled ${name}.`].join("\n"));
            }
          }, [JSON.stringify(defaultProp)]);
        }
        const setValueIfUncontrolled = React40.useCallback((newValue) => {
          if (!isControlled) {
            setValue(newValue);
          }
        }, []);
        return [value, setValueIfUncontrolled];
      }
    }
  });

  // node_modules/@mui/utils/useEventCallback.js
  var require_useEventCallback = __commonJS({
    "node_modules/@mui/utils/useEventCallback.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault2();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = useEventCallback3;
      var React40 = _interopRequireWildcard(require_react());
      var _useEnhancedEffect = _interopRequireDefault(require_useEnhancedEffect());
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
      function useEventCallback3(fn) {
        const ref = React40.useRef(fn);
        (0, _useEnhancedEffect.default)(() => {
          ref.current = fn;
        });
        return React40.useCallback((...args) => (0, ref.current)(...args), []);
      }
    }
  });

  // node_modules/@mui/utils/useForkRef.js
  var require_useForkRef = __commonJS({
    "node_modules/@mui/utils/useForkRef.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault2();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = useForkRef3;
      var React40 = _interopRequireWildcard(require_react());
      var _setRef = _interopRequireDefault(require_setRef());
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
      function useForkRef3(refA, refB) {
        return React40.useMemo(() => {
          if (refA == null && refB == null) {
            return null;
          }
          return (refValue) => {
            (0, _setRef.default)(refA, refValue);
            (0, _setRef.default)(refB, refValue);
          };
        }, [refA, refB]);
      }
    }
  });

  // node_modules/@mui/utils/useIsFocusVisible.js
  var require_useIsFocusVisible = __commonJS({
    "node_modules/@mui/utils/useIsFocusVisible.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = useIsFocusVisible2;
      exports.teardown = teardown;
      var React40 = _interopRequireWildcard(require_react());
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
      var hadKeyboardEvent = true;
      var hadFocusVisibleRecently = false;
      var hadFocusVisibleRecentlyTimeout = null;
      var inputTypesWhitelist = {
        text: true,
        search: true,
        url: true,
        tel: true,
        email: true,
        password: true,
        number: true,
        date: true,
        month: true,
        week: true,
        time: true,
        datetime: true,
        "datetime-local": true
      };
      function focusTriggersKeyboardModality(node) {
        const {
          type,
          tagName
        } = node;
        if (tagName === "INPUT" && inputTypesWhitelist[type] && !node.readOnly) {
          return true;
        }
        if (tagName === "TEXTAREA" && !node.readOnly) {
          return true;
        }
        if (node.isContentEditable) {
          return true;
        }
        return false;
      }
      function handleKeyDown(event) {
        if (event.metaKey || event.altKey || event.ctrlKey) {
          return;
        }
        hadKeyboardEvent = true;
      }
      function handlePointerDown() {
        hadKeyboardEvent = false;
      }
      function handleVisibilityChange() {
        if (this.visibilityState === "hidden") {
          if (hadFocusVisibleRecently) {
            hadKeyboardEvent = true;
          }
        }
      }
      function prepare(doc) {
        doc.addEventListener("keydown", handleKeyDown, true);
        doc.addEventListener("mousedown", handlePointerDown, true);
        doc.addEventListener("pointerdown", handlePointerDown, true);
        doc.addEventListener("touchstart", handlePointerDown, true);
        doc.addEventListener("visibilitychange", handleVisibilityChange, true);
      }
      function teardown(doc) {
        doc.removeEventListener("keydown", handleKeyDown, true);
        doc.removeEventListener("mousedown", handlePointerDown, true);
        doc.removeEventListener("pointerdown", handlePointerDown, true);
        doc.removeEventListener("touchstart", handlePointerDown, true);
        doc.removeEventListener("visibilitychange", handleVisibilityChange, true);
      }
      function isFocusVisible(event) {
        const {
          target
        } = event;
        try {
          return target.matches(":focus-visible");
        } catch (error) {
        }
        return hadKeyboardEvent || focusTriggersKeyboardModality(target);
      }
      function useIsFocusVisible2() {
        const ref = React40.useCallback((node) => {
          if (node != null) {
            prepare(node.ownerDocument);
          }
        }, []);
        const isFocusVisibleRef = React40.useRef(false);
        function handleBlurVisible() {
          if (isFocusVisibleRef.current) {
            hadFocusVisibleRecently = true;
            window.clearTimeout(hadFocusVisibleRecentlyTimeout);
            hadFocusVisibleRecentlyTimeout = window.setTimeout(() => {
              hadFocusVisibleRecently = false;
            }, 100);
            isFocusVisibleRef.current = false;
            return true;
          }
          return false;
        }
        function handleFocusVisible(event) {
          if (isFocusVisible(event)) {
            isFocusVisibleRef.current = true;
            return true;
          }
          return false;
        }
        return {
          isFocusVisibleRef,
          onFocus: handleFocusVisible,
          onBlur: handleBlurVisible,
          ref
        };
      }
    }
  });

  // node_modules/@mui/utils/getScrollbarSize.js
  var require_getScrollbarSize = __commonJS({
    "node_modules/@mui/utils/getScrollbarSize.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = getScrollbarSize;
      function getScrollbarSize(doc) {
        const documentWidth = doc.documentElement.clientWidth;
        return Math.abs(window.innerWidth - documentWidth);
      }
    }
  });

  // node_modules/@mui/utils/scrollLeft.js
  var require_scrollLeft = __commonJS({
    "node_modules/@mui/utils/scrollLeft.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.detectScrollType = detectScrollType;
      exports.getNormalizedScrollLeft = getNormalizedScrollLeft;
      var cachedType;
      function detectScrollType() {
        if (cachedType) {
          return cachedType;
        }
        const dummy = document.createElement("div");
        const container = document.createElement("div");
        container.style.width = "10px";
        container.style.height = "1px";
        dummy.appendChild(container);
        dummy.dir = "rtl";
        dummy.style.fontSize = "14px";
        dummy.style.width = "4px";
        dummy.style.height = "1px";
        dummy.style.position = "absolute";
        dummy.style.top = "-1000px";
        dummy.style.overflow = "scroll";
        document.body.appendChild(dummy);
        cachedType = "reverse";
        if (dummy.scrollLeft > 0) {
          cachedType = "default";
        } else {
          dummy.scrollLeft = 1;
          if (dummy.scrollLeft === 0) {
            cachedType = "negative";
          }
        }
        document.body.removeChild(dummy);
        return cachedType;
      }
      function getNormalizedScrollLeft(element, direction) {
        const scrollLeft = element.scrollLeft;
        if (direction !== "rtl") {
          return scrollLeft;
        }
        const type = detectScrollType();
        switch (type) {
          case "negative":
            return element.scrollWidth - element.clientWidth + scrollLeft;
          case "reverse":
            return element.scrollWidth - element.clientWidth - scrollLeft;
          default:
            return scrollLeft;
        }
      }
    }
  });

  // node_modules/@mui/utils/usePreviousProps.js
  var require_usePreviousProps = __commonJS({
    "node_modules/@mui/utils/usePreviousProps.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var React40 = _interopRequireWildcard(require_react());
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
      var usePreviousProps = (value) => {
        const ref = React40.useRef({});
        React40.useEffect(() => {
          ref.current = value;
        });
        return ref.current;
      };
      var _default = usePreviousProps;
      exports.default = _default;
    }
  });

  // node_modules/@mui/utils/visuallyHidden.js
  var require_visuallyHidden = __commonJS({
    "node_modules/@mui/utils/visuallyHidden.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var visuallyHidden = {
        border: 0,
        clip: "rect(0 0 0 0)",
        height: "1px",
        margin: -1,
        overflow: "hidden",
        padding: 0,
        position: "absolute",
        whiteSpace: "nowrap",
        width: "1px"
      };
      var _default = visuallyHidden;
      exports.default = _default;
    }
  });

  // node_modules/@mui/utils/integerPropType.js
  var require_integerPropType = __commonJS({
    "node_modules/@mui/utils/integerPropType.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      exports.getTypeByValue = getTypeByValue;
      function getTypeByValue(value) {
        const valueType = typeof value;
        switch (valueType) {
          case "number":
            if (Number.isNaN(value)) {
              return "NaN";
            }
            if (!Number.isFinite(value)) {
              return "Infinity";
            }
            if (value !== Math.floor(value)) {
              return "float";
            }
            return "number";
          case "object":
            if (value === null) {
              return "null";
            }
            return value.constructor.name;
          default:
            return valueType;
        }
      }
      function ponyfillIsInteger(x2) {
        return typeof x2 === "number" && isFinite(x2) && Math.floor(x2) === x2;
      }
      var isInteger = Number.isInteger || ponyfillIsInteger;
      function requiredInteger(props, propName, componentName, location) {
        const propValue = props[propName];
        if (propValue == null || !isInteger(propValue)) {
          const propType = getTypeByValue(propValue);
          return new RangeError(`Invalid ${location} \`${propName}\` of type \`${propType}\` supplied to \`${componentName}\`, expected \`integer\`.`);
        }
        return null;
      }
      function validator(props, propName, ...other) {
        const propValue = props[propName];
        if (propValue === void 0) {
          return null;
        }
        return requiredInteger(props, propName, ...other);
      }
      function validatorNoop() {
        return null;
      }
      validator.isRequired = requiredInteger;
      validatorNoop.isRequired = validatorNoop;
      var _default = false ? validatorNoop : validator;
      exports.default = _default;
    }
  });

  // node_modules/@mui/utils/index.js
  var require_utils = __commonJS({
    "node_modules/@mui/utils/index.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault2();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      Object.defineProperty(exports, "HTMLElementType", {
        enumerable: true,
        get: function() {
          return _HTMLElementType.default;
        }
      });
      Object.defineProperty(exports, "chainPropTypes", {
        enumerable: true,
        get: function() {
          return _chainPropTypes.default;
        }
      });
      Object.defineProperty(exports, "deepmerge", {
        enumerable: true,
        get: function() {
          return _deepmerge.default;
        }
      });
      Object.defineProperty(exports, "elementAcceptingRef", {
        enumerable: true,
        get: function() {
          return _elementAcceptingRef.default;
        }
      });
      Object.defineProperty(exports, "elementTypeAcceptingRef", {
        enumerable: true,
        get: function() {
          return _elementTypeAcceptingRef.default;
        }
      });
      Object.defineProperty(exports, "exactProp", {
        enumerable: true,
        get: function() {
          return _exactProp.default;
        }
      });
      Object.defineProperty(exports, "formatMuiErrorMessage", {
        enumerable: true,
        get: function() {
          return _formatMuiErrorMessage.default;
        }
      });
      Object.defineProperty(exports, "getDisplayName", {
        enumerable: true,
        get: function() {
          return _getDisplayName.default;
        }
      });
      Object.defineProperty(exports, "integerPropType", {
        enumerable: true,
        get: function() {
          return _integerPropType.default;
        }
      });
      Object.defineProperty(exports, "isPlainObject", {
        enumerable: true,
        get: function() {
          return _deepmerge.isPlainObject;
        }
      });
      Object.defineProperty(exports, "ponyfillGlobal", {
        enumerable: true,
        get: function() {
          return _ponyfillGlobal.default;
        }
      });
      Object.defineProperty(exports, "refType", {
        enumerable: true,
        get: function() {
          return _refType.default;
        }
      });
      Object.defineProperty(exports, "unstable_capitalize", {
        enumerable: true,
        get: function() {
          return _capitalize.default;
        }
      });
      Object.defineProperty(exports, "unstable_createChainedFunction", {
        enumerable: true,
        get: function() {
          return _createChainedFunction.default;
        }
      });
      Object.defineProperty(exports, "unstable_debounce", {
        enumerable: true,
        get: function() {
          return _debounce.default;
        }
      });
      Object.defineProperty(exports, "unstable_deprecatedPropType", {
        enumerable: true,
        get: function() {
          return _deprecatedPropType.default;
        }
      });
      Object.defineProperty(exports, "unstable_detectScrollType", {
        enumerable: true,
        get: function() {
          return _scrollLeft.detectScrollType;
        }
      });
      Object.defineProperty(exports, "unstable_getNormalizedScrollLeft", {
        enumerable: true,
        get: function() {
          return _scrollLeft.getNormalizedScrollLeft;
        }
      });
      Object.defineProperty(exports, "unstable_getScrollbarSize", {
        enumerable: true,
        get: function() {
          return _getScrollbarSize.default;
        }
      });
      Object.defineProperty(exports, "unstable_isMuiElement", {
        enumerable: true,
        get: function() {
          return _isMuiElement.default;
        }
      });
      Object.defineProperty(exports, "unstable_ownerDocument", {
        enumerable: true,
        get: function() {
          return _ownerDocument.default;
        }
      });
      Object.defineProperty(exports, "unstable_ownerWindow", {
        enumerable: true,
        get: function() {
          return _ownerWindow.default;
        }
      });
      Object.defineProperty(exports, "unstable_requirePropFactory", {
        enumerable: true,
        get: function() {
          return _requirePropFactory.default;
        }
      });
      Object.defineProperty(exports, "unstable_setRef", {
        enumerable: true,
        get: function() {
          return _setRef.default;
        }
      });
      Object.defineProperty(exports, "unstable_unsupportedProp", {
        enumerable: true,
        get: function() {
          return _unsupportedProp.default;
        }
      });
      Object.defineProperty(exports, "unstable_useControlled", {
        enumerable: true,
        get: function() {
          return _useControlled.default;
        }
      });
      Object.defineProperty(exports, "unstable_useEnhancedEffect", {
        enumerable: true,
        get: function() {
          return _useEnhancedEffect.default;
        }
      });
      Object.defineProperty(exports, "unstable_useEventCallback", {
        enumerable: true,
        get: function() {
          return _useEventCallback.default;
        }
      });
      Object.defineProperty(exports, "unstable_useForkRef", {
        enumerable: true,
        get: function() {
          return _useForkRef.default;
        }
      });
      Object.defineProperty(exports, "unstable_useId", {
        enumerable: true,
        get: function() {
          return _useId.default;
        }
      });
      Object.defineProperty(exports, "unstable_useIsFocusVisible", {
        enumerable: true,
        get: function() {
          return _useIsFocusVisible.default;
        }
      });
      Object.defineProperty(exports, "usePreviousProps", {
        enumerable: true,
        get: function() {
          return _usePreviousProps.default;
        }
      });
      Object.defineProperty(exports, "visuallyHidden", {
        enumerable: true,
        get: function() {
          return _visuallyHidden.default;
        }
      });
      var _chainPropTypes = _interopRequireDefault(require_chainPropTypes());
      var _deepmerge = _interopRequireWildcard(require_deepmerge());
      var _elementAcceptingRef = _interopRequireDefault(require_elementAcceptingRef());
      var _elementTypeAcceptingRef = _interopRequireDefault(require_elementTypeAcceptingRef());
      var _exactProp = _interopRequireDefault(require_exactProp());
      var _formatMuiErrorMessage = _interopRequireDefault(require_formatMuiErrorMessage());
      var _getDisplayName = _interopRequireDefault(require_getDisplayName());
      var _HTMLElementType = _interopRequireDefault(require_HTMLElementType());
      var _ponyfillGlobal = _interopRequireDefault(require_ponyfillGlobal());
      var _refType = _interopRequireDefault(require_refType());
      var _capitalize = _interopRequireDefault(require_capitalize());
      var _createChainedFunction = _interopRequireDefault(require_createChainedFunction());
      var _debounce = _interopRequireDefault(require_debounce());
      var _deprecatedPropType = _interopRequireDefault(require_deprecatedPropType());
      var _isMuiElement = _interopRequireDefault(require_isMuiElement());
      var _ownerDocument = _interopRequireDefault(require_ownerDocument());
      var _ownerWindow = _interopRequireDefault(require_ownerWindow());
      var _requirePropFactory = _interopRequireDefault(require_requirePropFactory());
      var _setRef = _interopRequireDefault(require_setRef());
      var _useEnhancedEffect = _interopRequireDefault(require_useEnhancedEffect());
      var _useId = _interopRequireDefault(require_useId());
      var _unsupportedProp = _interopRequireDefault(require_unsupportedProp());
      var _useControlled = _interopRequireDefault(require_useControlled());
      var _useEventCallback = _interopRequireDefault(require_useEventCallback());
      var _useForkRef = _interopRequireDefault(require_useForkRef());
      var _useIsFocusVisible = _interopRequireDefault(require_useIsFocusVisible());
      var _getScrollbarSize = _interopRequireDefault(require_getScrollbarSize());
      var _scrollLeft = require_scrollLeft();
      var _usePreviousProps = _interopRequireDefault(require_usePreviousProps());
      var _visuallyHidden = _interopRequireDefault(require_visuallyHidden());
      var _integerPropType = _interopRequireDefault(require_integerPropType());
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
    }
  });

  // node_modules/@mui/core/node/AutocompleteUnstyled/useAutocomplete.js
  var require_useAutocomplete = __commonJS({
    "node_modules/@mui/core/node/AutocompleteUnstyled/useAutocomplete.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.createFilterOptions = createFilterOptions;
      exports.default = useAutocomplete;
      var _extends22 = _interopRequireDefault(require_extends());
      var React40 = _interopRequireWildcard(require_react());
      var _utils = require_utils();
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
      function stripDiacritics(string) {
        return typeof string.normalize !== "undefined" ? string.normalize("NFD").replace(/[\u0300-\u036f]/g, "") : string;
      }
      function createFilterOptions(config = {}) {
        const {
          ignoreAccents = true,
          ignoreCase = true,
          limit,
          matchFrom = "any",
          stringify,
          trim = false
        } = config;
        return (options, {
          inputValue,
          getOptionLabel
        }) => {
          let input = trim ? inputValue.trim() : inputValue;
          if (ignoreCase) {
            input = input.toLowerCase();
          }
          if (ignoreAccents) {
            input = stripDiacritics(input);
          }
          const filteredOptions = options.filter((option) => {
            let candidate = (stringify || getOptionLabel)(option);
            if (ignoreCase) {
              candidate = candidate.toLowerCase();
            }
            if (ignoreAccents) {
              candidate = stripDiacritics(candidate);
            }
            return matchFrom === "start" ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;
          });
          return typeof limit === "number" ? filteredOptions.slice(0, limit) : filteredOptions;
        };
      }
      function findIndex(array, comp) {
        for (let i2 = 0; i2 < array.length; i2 += 1) {
          if (comp(array[i2])) {
            return i2;
          }
        }
        return -1;
      }
      var defaultFilterOptions = createFilterOptions();
      var pageSize = 5;
      function useAutocomplete(props) {
        const {
          autoComplete = false,
          autoHighlight = false,
          autoSelect = false,
          blurOnSelect = false,
          disabled: disabledProp,
          clearOnBlur = !props.freeSolo,
          clearOnEscape = false,
          componentName = "useAutocomplete",
          defaultValue = props.multiple ? [] : null,
          disableClearable = false,
          disableCloseOnSelect = false,
          disabledItemsFocusable = false,
          disableListWrap = false,
          filterOptions = defaultFilterOptions,
          filterSelectedOptions = false,
          freeSolo = false,
          getOptionDisabled,
          getOptionLabel: getOptionLabelProp = (option) => {
            var _option$label;
            return (_option$label = option.label) != null ? _option$label : option;
          },
          isOptionEqualToValue = (option, value2) => option === value2,
          groupBy,
          handleHomeEndKeys = !props.freeSolo,
          id: idProp,
          includeInputInList = false,
          inputValue: inputValueProp,
          multiple = false,
          onChange,
          onClose,
          onHighlightChange,
          onInputChange,
          onOpen,
          open: openProp,
          openOnFocus = false,
          options,
          selectOnFocus = !props.freeSolo,
          value: valueProp
        } = props;
        const id = (0, _utils.unstable_useId)(idProp);
        let getOptionLabel = getOptionLabelProp;
        getOptionLabel = (option) => {
          const optionLabel = getOptionLabelProp(option);
          if (typeof optionLabel !== "string") {
            if (true) {
              const erroneousReturn = optionLabel === void 0 ? "undefined" : `${typeof optionLabel} (${optionLabel})`;
              console.error(`MUI: The \`getOptionLabel\` method of ${componentName} returned ${erroneousReturn} instead of a string for ${JSON.stringify(option)}.`);
            }
            return String(optionLabel);
          }
          return optionLabel;
        };
        const ignoreFocus = React40.useRef(false);
        const firstFocus = React40.useRef(true);
        const inputRef = React40.useRef(null);
        const listboxRef = React40.useRef(null);
        const [anchorEl, setAnchorEl] = React40.useState(null);
        const [focusedTag, setFocusedTag] = React40.useState(-1);
        const defaultHighlighted = autoHighlight ? 0 : -1;
        const highlightedIndexRef = React40.useRef(defaultHighlighted);
        const [value, setValueState] = (0, _utils.unstable_useControlled)({
          controlled: valueProp,
          default: defaultValue,
          name: componentName
        });
        const [inputValue, setInputValueState] = (0, _utils.unstable_useControlled)({
          controlled: inputValueProp,
          default: "",
          name: componentName,
          state: "inputValue"
        });
        const [focused, setFocused] = React40.useState(false);
        const resetInputValue = React40.useCallback((event, newValue) => {
          const isOptionSelected = multiple ? value.length < newValue.length : newValue !== null;
          if (!isOptionSelected && !clearOnBlur) {
            return;
          }
          let newInputValue;
          if (multiple) {
            newInputValue = "";
          } else if (newValue == null) {
            newInputValue = "";
          } else {
            const optionLabel = getOptionLabel(newValue);
            newInputValue = typeof optionLabel === "string" ? optionLabel : "";
          }
          if (inputValue === newInputValue) {
            return;
          }
          setInputValueState(newInputValue);
          if (onInputChange) {
            onInputChange(event, newInputValue, "reset");
          }
        }, [getOptionLabel, inputValue, multiple, onInputChange, setInputValueState, clearOnBlur, value]);
        const prevValue = React40.useRef();
        React40.useEffect(() => {
          const valueChange = value !== prevValue.current;
          prevValue.current = value;
          if (focused && !valueChange) {
            return;
          }
          if (freeSolo && !valueChange) {
            return;
          }
          resetInputValue(null, value);
        }, [value, resetInputValue, focused, prevValue, freeSolo]);
        const [open, setOpenState] = (0, _utils.unstable_useControlled)({
          controlled: openProp,
          default: false,
          name: componentName,
          state: "open"
        });
        const [inputPristine, setInputPristine] = React40.useState(true);
        const inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);
        const popupOpen = open;
        const filteredOptions = popupOpen ? filterOptions(options.filter((option) => {
          if (filterSelectedOptions && (multiple ? value : [value]).some((value2) => value2 !== null && isOptionEqualToValue(option, value2))) {
            return false;
          }
          return true;
        }), {
          inputValue: inputValueIsSelectedValue && inputPristine ? "" : inputValue,
          getOptionLabel
        }) : [];
        const listboxAvailable = open && filteredOptions.length > 0;
        if (true) {
          if (value !== null && !freeSolo && options.length > 0) {
            const missingValue = (multiple ? value : [value]).filter((value2) => !options.some((option) => isOptionEqualToValue(option, value2)));
            if (missingValue.length > 0) {
              console.warn([`MUI: The value provided to ${componentName} is invalid.`, `None of the options match with \`${missingValue.length > 1 ? JSON.stringify(missingValue) : JSON.stringify(missingValue[0])}\`.`, "You can use the `isOptionEqualToValue` prop to customize the equality test."].join("\n"));
            }
          }
        }
        const focusTag = (0, _utils.unstable_useEventCallback)((tagToFocus) => {
          if (tagToFocus === -1) {
            inputRef.current.focus();
          } else {
            anchorEl.querySelector(`[data-tag-index="${tagToFocus}"]`).focus();
          }
        });
        React40.useEffect(() => {
          if (multiple && focusedTag > value.length - 1) {
            setFocusedTag(-1);
            focusTag(-1);
          }
        }, [value, multiple, focusedTag, focusTag]);
        function validOptionIndex(index2, direction) {
          if (!listboxRef.current || index2 === -1) {
            return -1;
          }
          let nextFocus = index2;
          while (true) {
            if (direction === "next" && nextFocus === filteredOptions.length || direction === "previous" && nextFocus === -1) {
              return -1;
            }
            const option = listboxRef.current.querySelector(`[data-option-index="${nextFocus}"]`);
            const nextFocusDisabled = disabledItemsFocusable ? false : !option || option.disabled || option.getAttribute("aria-disabled") === "true";
            if (option && !option.hasAttribute("tabindex") || nextFocusDisabled) {
              nextFocus += direction === "next" ? 1 : -1;
            } else {
              return nextFocus;
            }
          }
        }
        const setHighlightedIndex = (0, _utils.unstable_useEventCallback)(({
          event,
          index: index2,
          reason = "auto"
        }) => {
          highlightedIndexRef.current = index2;
          if (index2 === -1) {
            inputRef.current.removeAttribute("aria-activedescendant");
          } else {
            inputRef.current.setAttribute("aria-activedescendant", `${id}-option-${index2}`);
          }
          if (onHighlightChange) {
            onHighlightChange(event, index2 === -1 ? null : filteredOptions[index2], reason);
          }
          if (!listboxRef.current) {
            return;
          }
          const prev = listboxRef.current.querySelector('[role="option"].Mui-focused');
          if (prev) {
            prev.classList.remove("Mui-focused");
            prev.classList.remove("Mui-focusVisible");
          }
          const listboxNode = listboxRef.current.parentElement.querySelector('[role="listbox"]');
          if (!listboxNode) {
            return;
          }
          if (index2 === -1) {
            listboxNode.scrollTop = 0;
            return;
          }
          const option = listboxRef.current.querySelector(`[data-option-index="${index2}"]`);
          if (!option) {
            return;
          }
          option.classList.add("Mui-focused");
          if (reason === "keyboard") {
            option.classList.add("Mui-focusVisible");
          }
          if (listboxNode.scrollHeight > listboxNode.clientHeight && reason !== "mouse") {
            const element = option;
            const scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;
            const elementBottom = element.offsetTop + element.offsetHeight;
            if (elementBottom > scrollBottom) {
              listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;
            } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {
              listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);
            }
          }
        });
        const changeHighlightedIndex = (0, _utils.unstable_useEventCallback)(({
          event,
          diff,
          direction = "next",
          reason = "auto"
        }) => {
          if (!popupOpen) {
            return;
          }
          const getNextIndex = () => {
            const maxIndex = filteredOptions.length - 1;
            if (diff === "reset") {
              return defaultHighlighted;
            }
            if (diff === "start") {
              return 0;
            }
            if (diff === "end") {
              return maxIndex;
            }
            const newIndex = highlightedIndexRef.current + diff;
            if (newIndex < 0) {
              if (newIndex === -1 && includeInputInList) {
                return -1;
              }
              if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {
                return 0;
              }
              return maxIndex;
            }
            if (newIndex > maxIndex) {
              if (newIndex === maxIndex + 1 && includeInputInList) {
                return -1;
              }
              if (disableListWrap || Math.abs(diff) > 1) {
                return maxIndex;
              }
              return 0;
            }
            return newIndex;
          };
          const nextIndex = validOptionIndex(getNextIndex(), direction);
          setHighlightedIndex({
            index: nextIndex,
            reason,
            event
          });
          if (autoComplete && diff !== "reset") {
            if (nextIndex === -1) {
              inputRef.current.value = inputValue;
            } else {
              const option = getOptionLabel(filteredOptions[nextIndex]);
              inputRef.current.value = option;
              const index2 = option.toLowerCase().indexOf(inputValue.toLowerCase());
              if (index2 === 0 && inputValue.length > 0) {
                inputRef.current.setSelectionRange(inputValue.length, option.length);
              }
            }
          }
        });
        const syncHighlightedIndex = React40.useCallback(() => {
          if (!popupOpen) {
            return;
          }
          const valueItem = multiple ? value[0] : value;
          if (filteredOptions.length === 0 || valueItem == null) {
            changeHighlightedIndex({
              diff: "reset"
            });
            return;
          }
          if (!listboxRef.current) {
            return;
          }
          if (valueItem != null) {
            const currentOption = filteredOptions[highlightedIndexRef.current];
            if (multiple && currentOption && findIndex(value, (val) => isOptionEqualToValue(currentOption, val)) !== -1) {
              return;
            }
            const itemIndex = findIndex(filteredOptions, (optionItem) => isOptionEqualToValue(optionItem, valueItem));
            if (itemIndex === -1) {
              changeHighlightedIndex({
                diff: "reset"
              });
            } else {
              setHighlightedIndex({
                index: itemIndex
              });
            }
            return;
          }
          if (highlightedIndexRef.current >= filteredOptions.length - 1) {
            setHighlightedIndex({
              index: filteredOptions.length - 1
            });
            return;
          }
          setHighlightedIndex({
            index: highlightedIndexRef.current
          });
        }, [
          filteredOptions.length,
          multiple ? false : value,
          filterSelectedOptions,
          changeHighlightedIndex,
          setHighlightedIndex,
          popupOpen,
          inputValue,
          multiple
        ]);
        const handleListboxRef = (0, _utils.unstable_useEventCallback)((node) => {
          (0, _utils.unstable_setRef)(listboxRef, node);
          if (!node) {
            return;
          }
          syncHighlightedIndex();
        });
        if (true) {
          React40.useEffect(() => {
            if (!inputRef.current || inputRef.current.nodeName !== "INPUT") {
              console.error([`MUI: Unable to find the input element. It was resolved to ${inputRef.current} while an HTMLInputElement was expected.`, `Instead, ${componentName} expects an input element.`, "", componentName === "useAutocomplete" ? "Make sure you have binded getInputProps correctly and that the normal ref/effect resolutions order is guaranteed." : "Make sure you have customized the input component correctly."].join("\n"));
            }
          }, [componentName]);
        }
        React40.useEffect(() => {
          syncHighlightedIndex();
        }, [syncHighlightedIndex]);
        const handleOpen = (event) => {
          if (open) {
            return;
          }
          setOpenState(true);
          setInputPristine(true);
          if (onOpen) {
            onOpen(event);
          }
        };
        const handleClose = (event, reason) => {
          if (!open) {
            return;
          }
          setOpenState(false);
          if (onClose) {
            onClose(event, reason);
          }
        };
        const handleValue = (event, newValue, reason, details) => {
          if (value === newValue) {
            return;
          }
          if (onChange) {
            onChange(event, newValue, reason, details);
          }
          setValueState(newValue);
        };
        const isTouch = React40.useRef(false);
        const selectNewValue = (event, option, reasonProp = "selectOption", origin = "options") => {
          let reason = reasonProp;
          let newValue = option;
          if (multiple) {
            newValue = Array.isArray(value) ? value.slice() : [];
            if (true) {
              const matches = newValue.filter((val) => isOptionEqualToValue(option, val));
              if (matches.length > 1) {
                console.error([`MUI: The \`isOptionEqualToValue\` method of ${componentName} do not handle the arguments correctly.`, `The component expects a single value to match a given option but found ${matches.length} matches.`].join("\n"));
              }
            }
            const itemIndex = findIndex(newValue, (valueItem) => isOptionEqualToValue(option, valueItem));
            if (itemIndex === -1) {
              newValue.push(option);
            } else if (origin !== "freeSolo") {
              newValue.splice(itemIndex, 1);
              reason = "removeOption";
            }
          }
          resetInputValue(event, newValue);
          handleValue(event, newValue, reason, {
            option
          });
          if (!disableCloseOnSelect && !event.ctrlKey && !event.metaKey) {
            handleClose(event, reason);
          }
          if (blurOnSelect === true || blurOnSelect === "touch" && isTouch.current || blurOnSelect === "mouse" && !isTouch.current) {
            inputRef.current.blur();
          }
        };
        function validTagIndex(index2, direction) {
          if (index2 === -1) {
            return -1;
          }
          let nextFocus = index2;
          while (true) {
            if (direction === "next" && nextFocus === value.length || direction === "previous" && nextFocus === -1) {
              return -1;
            }
            const option = anchorEl.querySelector(`[data-tag-index="${nextFocus}"]`);
            if (!option || !option.hasAttribute("tabindex") || option.disabled || option.getAttribute("aria-disabled") === "true") {
              nextFocus += direction === "next" ? 1 : -1;
            } else {
              return nextFocus;
            }
          }
        }
        const handleFocusTag = (event, direction) => {
          if (!multiple) {
            return;
          }
          handleClose(event, "toggleInput");
          let nextTag = focusedTag;
          if (focusedTag === -1) {
            if (inputValue === "" && direction === "previous") {
              nextTag = value.length - 1;
            }
          } else {
            nextTag += direction === "next" ? 1 : -1;
            if (nextTag < 0) {
              nextTag = 0;
            }
            if (nextTag === value.length) {
              nextTag = -1;
            }
          }
          nextTag = validTagIndex(nextTag, direction);
          setFocusedTag(nextTag);
          focusTag(nextTag);
        };
        const handleClear = (event) => {
          ignoreFocus.current = true;
          setInputValueState("");
          if (onInputChange) {
            onInputChange(event, "", "clear");
          }
          handleValue(event, multiple ? [] : null, "clear");
        };
        const handleKeyDown = (other) => (event) => {
          if (other.onKeyDown) {
            other.onKeyDown(event);
          }
          if (event.defaultMuiPrevented) {
            return;
          }
          if (focusedTag !== -1 && ["ArrowLeft", "ArrowRight"].indexOf(event.key) === -1) {
            setFocusedTag(-1);
            focusTag(-1);
          }
          if (event.which !== 229) {
            switch (event.key) {
              case "Home":
                if (popupOpen && handleHomeEndKeys) {
                  event.preventDefault();
                  changeHighlightedIndex({
                    diff: "start",
                    direction: "next",
                    reason: "keyboard",
                    event
                  });
                }
                break;
              case "End":
                if (popupOpen && handleHomeEndKeys) {
                  event.preventDefault();
                  changeHighlightedIndex({
                    diff: "end",
                    direction: "previous",
                    reason: "keyboard",
                    event
                  });
                }
                break;
              case "PageUp":
                event.preventDefault();
                changeHighlightedIndex({
                  diff: -pageSize,
                  direction: "previous",
                  reason: "keyboard",
                  event
                });
                handleOpen(event);
                break;
              case "PageDown":
                event.preventDefault();
                changeHighlightedIndex({
                  diff: pageSize,
                  direction: "next",
                  reason: "keyboard",
                  event
                });
                handleOpen(event);
                break;
              case "ArrowDown":
                event.preventDefault();
                changeHighlightedIndex({
                  diff: 1,
                  direction: "next",
                  reason: "keyboard",
                  event
                });
                handleOpen(event);
                break;
              case "ArrowUp":
                event.preventDefault();
                changeHighlightedIndex({
                  diff: -1,
                  direction: "previous",
                  reason: "keyboard",
                  event
                });
                handleOpen(event);
                break;
              case "ArrowLeft":
                handleFocusTag(event, "previous");
                break;
              case "ArrowRight":
                handleFocusTag(event, "next");
                break;
              case "Enter":
                if (highlightedIndexRef.current !== -1 && popupOpen) {
                  const option = filteredOptions[highlightedIndexRef.current];
                  const disabled = getOptionDisabled ? getOptionDisabled(option) : false;
                  event.preventDefault();
                  if (disabled) {
                    return;
                  }
                  selectNewValue(event, option, "selectOption");
                  if (autoComplete) {
                    inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);
                  }
                } else if (freeSolo && inputValue !== "" && inputValueIsSelectedValue === false) {
                  if (multiple) {
                    event.preventDefault();
                  }
                  selectNewValue(event, inputValue, "createOption", "freeSolo");
                }
                break;
              case "Escape":
                if (popupOpen) {
                  event.preventDefault();
                  event.stopPropagation();
                  handleClose(event, "escape");
                } else if (clearOnEscape && (inputValue !== "" || multiple && value.length > 0)) {
                  event.preventDefault();
                  event.stopPropagation();
                  handleClear(event);
                }
                break;
              case "Backspace":
                if (multiple && inputValue === "" && value.length > 0) {
                  const index2 = focusedTag === -1 ? value.length - 1 : focusedTag;
                  const newValue = value.slice();
                  newValue.splice(index2, 1);
                  handleValue(event, newValue, "removeOption", {
                    option: value[index2]
                  });
                }
                break;
              default:
            }
          }
        };
        const handleFocus = (event) => {
          setFocused(true);
          if (openOnFocus && !ignoreFocus.current) {
            handleOpen(event);
          }
        };
        const handleBlur = (event) => {
          if (listboxRef.current !== null && listboxRef.current.parentElement.contains(document.activeElement)) {
            inputRef.current.focus();
            return;
          }
          setFocused(false);
          firstFocus.current = true;
          ignoreFocus.current = false;
          if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {
            selectNewValue(event, filteredOptions[highlightedIndexRef.current], "blur");
          } else if (autoSelect && freeSolo && inputValue !== "") {
            selectNewValue(event, inputValue, "blur", "freeSolo");
          } else if (clearOnBlur) {
            resetInputValue(event, value);
          }
          handleClose(event, "blur");
        };
        const handleInputChange = (event) => {
          const newValue = event.target.value;
          if (inputValue !== newValue) {
            setInputValueState(newValue);
            setInputPristine(false);
            if (onInputChange) {
              onInputChange(event, newValue, "input");
            }
          }
          if (newValue === "") {
            if (!disableClearable && !multiple) {
              handleValue(event, null, "clear");
            }
          } else {
            handleOpen(event);
          }
        };
        const handleOptionMouseOver = (event) => {
          setHighlightedIndex({
            event,
            index: Number(event.currentTarget.getAttribute("data-option-index")),
            reason: "mouse"
          });
        };
        const handleOptionTouchStart = () => {
          isTouch.current = true;
        };
        const handleOptionClick = (event) => {
          const index2 = Number(event.currentTarget.getAttribute("data-option-index"));
          selectNewValue(event, filteredOptions[index2], "selectOption");
          isTouch.current = false;
        };
        const handleTagDelete = (index2) => (event) => {
          const newValue = value.slice();
          newValue.splice(index2, 1);
          handleValue(event, newValue, "removeOption", {
            option: value[index2]
          });
        };
        const handlePopupIndicator = (event) => {
          if (open) {
            handleClose(event, "toggleInput");
          } else {
            handleOpen(event);
          }
        };
        const handleMouseDown = (event) => {
          if (event.target.getAttribute("id") !== id) {
            event.preventDefault();
          }
        };
        const handleClick = () => {
          inputRef.current.focus();
          if (selectOnFocus && firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {
            inputRef.current.select();
          }
          firstFocus.current = false;
        };
        const handleInputMouseDown = (event) => {
          if (inputValue === "" || !open) {
            handlePopupIndicator(event);
          }
        };
        let dirty = freeSolo && inputValue.length > 0;
        dirty = dirty || (multiple ? value.length > 0 : value !== null);
        let groupedOptions = filteredOptions;
        if (groupBy) {
          const indexBy = /* @__PURE__ */ new Map();
          let warn = false;
          groupedOptions = filteredOptions.reduce((acc, option, index2) => {
            const group = groupBy(option);
            if (acc.length > 0 && acc[acc.length - 1].group === group) {
              acc[acc.length - 1].options.push(option);
            } else {
              if (true) {
                if (indexBy.get(group) && !warn) {
                  console.warn(`MUI: The options provided combined with the \`groupBy\` method of ${componentName} returns duplicated headers.`, "You can solve the issue by sorting the options with the output of `groupBy`.");
                  warn = true;
                }
                indexBy.set(group, true);
              }
              acc.push({
                key: index2,
                index: index2,
                group,
                options: [option]
              });
            }
            return acc;
          }, []);
        }
        if (disabledProp && focused) {
          handleBlur();
        }
        return {
          getRootProps: (other = {}) => (0, _extends22.default)({
            "aria-owns": listboxAvailable ? `${id}-listbox` : null,
            role: "combobox",
            "aria-expanded": listboxAvailable
          }, other, {
            onKeyDown: handleKeyDown(other),
            onMouseDown: handleMouseDown,
            onClick: handleClick
          }),
          getInputLabelProps: () => ({
            id: `${id}-label`,
            htmlFor: id
          }),
          getInputProps: () => ({
            id,
            value: inputValue,
            onBlur: handleBlur,
            onFocus: handleFocus,
            onChange: handleInputChange,
            onMouseDown: handleInputMouseDown,
            "aria-activedescendant": popupOpen ? "" : null,
            "aria-autocomplete": autoComplete ? "both" : "list",
            "aria-controls": listboxAvailable ? `${id}-listbox` : null,
            autoComplete: "off",
            ref: inputRef,
            autoCapitalize: "none",
            spellCheck: "false"
          }),
          getClearProps: () => ({
            tabIndex: -1,
            onClick: handleClear
          }),
          getPopupIndicatorProps: () => ({
            tabIndex: -1,
            onClick: handlePopupIndicator
          }),
          getTagProps: ({
            index: index2
          }) => ({
            key: index2,
            "data-tag-index": index2,
            tabIndex: -1,
            onDelete: handleTagDelete(index2)
          }),
          getListboxProps: () => ({
            role: "listbox",
            id: `${id}-listbox`,
            "aria-labelledby": `${id}-label`,
            ref: handleListboxRef,
            onMouseDown: (event) => {
              event.preventDefault();
            }
          }),
          getOptionProps: ({
            index: index2,
            option
          }) => {
            const selected = (multiple ? value : [value]).some((value2) => value2 != null && isOptionEqualToValue(option, value2));
            const disabled = getOptionDisabled ? getOptionDisabled(option) : false;
            return {
              key: getOptionLabel(option),
              tabIndex: -1,
              role: "option",
              id: `${id}-option-${index2}`,
              onMouseOver: handleOptionMouseOver,
              onClick: handleOptionClick,
              onTouchStart: handleOptionTouchStart,
              "data-option-index": index2,
              "aria-disabled": disabled,
              "aria-selected": selected
            };
          },
          id,
          inputValue,
          value,
          dirty,
          popupOpen,
          focused: focused || focusedTag !== -1,
          anchorEl,
          setAnchorEl,
          focusedTag,
          groupedOptions
        };
      }
    }
  });

  // node_modules/@mui/core/node/AutocompleteUnstyled/index.js
  var require_AutocompleteUnstyled = __commonJS({
    "node_modules/@mui/core/node/AutocompleteUnstyled/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      Object.defineProperty(exports, "createFilterOptions", {
        enumerable: true,
        get: function() {
          return _useAutocomplete.createFilterOptions;
        }
      });
      Object.defineProperty(exports, "useAutocomplete", {
        enumerable: true,
        get: function() {
          return _useAutocomplete.default;
        }
      });
      var _useAutocomplete = _interopRequireWildcard(require_useAutocomplete());
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
    }
  });

  // node_modules/@mui/core/node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js
  var require_objectWithoutPropertiesLoose = __commonJS({
    "node_modules/@mui/core/node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js"(exports, module) {
      function _objectWithoutPropertiesLoose4(source, excluded) {
        if (source == null)
          return {};
        var target = {};
        var sourceKeys = Object.keys(source);
        var key, i2;
        for (i2 = 0; i2 < sourceKeys.length; i2++) {
          key = sourceKeys[i2];
          if (excluded.indexOf(key) >= 0)
            continue;
          target[key] = source[key];
        }
        return target;
      }
      module.exports = _objectWithoutPropertiesLoose4;
      module.exports["default"] = module.exports, module.exports.__esModule = true;
    }
  });

  // node_modules/@mui/core/node/composeClasses/composeClasses.js
  var require_composeClasses = __commonJS({
    "node_modules/@mui/core/node/composeClasses/composeClasses.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = composeClasses12;
      function composeClasses12(slots, getUtilityClass, classes) {
        const output = {};
        Object.keys(slots).forEach((slot) => {
          output[slot] = slots[slot].reduce((acc, key) => {
            if (key) {
              if (classes && classes[key]) {
                acc.push(classes[key]);
              }
              acc.push(getUtilityClass(key));
            }
            return acc;
          }, []).join(" ");
        });
        return output;
      }
    }
  });

  // node_modules/@mui/core/node/composeClasses/index.js
  var require_composeClasses2 = __commonJS({
    "node_modules/@mui/core/node/composeClasses/index.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      Object.defineProperty(exports, "default", {
        enumerable: true,
        get: function() {
          return _composeClasses.default;
        }
      });
      var _composeClasses = _interopRequireDefault(require_composeClasses());
    }
  });

  // node_modules/@mui/core/node/utils/isHostComponent.js
  var require_isHostComponent = __commonJS({
    "node_modules/@mui/core/node/utils/isHostComponent.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      function isHostComponent(element) {
        return typeof element === "string";
      }
      var _default = isHostComponent;
      exports.default = _default;
    }
  });

  // node_modules/@mui/core/node/generateUtilityClass/ClassNameGenerator.js
  var require_ClassNameGenerator = __commonJS({
    "node_modules/@mui/core/node/generateUtilityClass/ClassNameGenerator.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var defaultGenerator = (componentName) => componentName;
      var createClassNameGenerator = () => {
        let generate = defaultGenerator;
        return {
          configure(generator) {
            generate = generator;
          },
          generate(componentName) {
            return generate(componentName);
          },
          reset() {
            generate = defaultGenerator;
          }
        };
      };
      var ClassNameGenerator = createClassNameGenerator();
      var _default = ClassNameGenerator;
      exports.default = _default;
    }
  });

  // node_modules/@mui/core/node/generateUtilityClass/generateUtilityClass.js
  var require_generateUtilityClass = __commonJS({
    "node_modules/@mui/core/node/generateUtilityClass/generateUtilityClass.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = generateUtilityClass14;
      var _ClassNameGenerator = _interopRequireDefault(require_ClassNameGenerator());
      var globalStateClassesMapping = {
        active: "Mui-active",
        checked: "Mui-checked",
        completed: "Mui-completed",
        disabled: "Mui-disabled",
        error: "Mui-error",
        expanded: "Mui-expanded",
        focused: "Mui-focused",
        focusVisible: "Mui-focusVisible",
        required: "Mui-required",
        selected: "Mui-selected"
      };
      function generateUtilityClass14(componentName, slot) {
        const globalStateClass = globalStateClassesMapping[slot];
        return globalStateClass || `${_ClassNameGenerator.default.generate(componentName)}-${slot}`;
      }
    }
  });

  // node_modules/@mui/core/node/generateUtilityClass/index.js
  var require_generateUtilityClass2 = __commonJS({
    "node_modules/@mui/core/node/generateUtilityClass/index.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      Object.defineProperty(exports, "default", {
        enumerable: true,
        get: function() {
          return _generateUtilityClass.default;
        }
      });
      var _generateUtilityClass = _interopRequireDefault(require_generateUtilityClass());
    }
  });

  // node_modules/@mui/core/node/generateUtilityClasses/generateUtilityClasses.js
  var require_generateUtilityClasses = __commonJS({
    "node_modules/@mui/core/node/generateUtilityClasses/generateUtilityClasses.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = generateUtilityClasses13;
      var _generateUtilityClass = _interopRequireDefault(require_generateUtilityClass2());
      function generateUtilityClasses13(componentName, slots) {
        const result = {};
        slots.forEach((slot) => {
          result[slot] = (0, _generateUtilityClass.default)(componentName, slot);
        });
        return result;
      }
    }
  });

  // node_modules/@mui/core/node/generateUtilityClasses/index.js
  var require_generateUtilityClasses2 = __commonJS({
    "node_modules/@mui/core/node/generateUtilityClasses/index.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      Object.defineProperty(exports, "default", {
        enumerable: true,
        get: function() {
          return _generateUtilityClasses.default;
        }
      });
      var _generateUtilityClasses = _interopRequireDefault(require_generateUtilityClasses());
    }
  });

  // node_modules/@mui/core/node/BackdropUnstyled/backdropUnstyledClasses.js
  var require_backdropUnstyledClasses = __commonJS({
    "node_modules/@mui/core/node/BackdropUnstyled/backdropUnstyledClasses.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      exports.getBackdropUtilityClass = getBackdropUtilityClass;
      var _generateUtilityClasses = _interopRequireDefault(require_generateUtilityClasses2());
      var _generateUtilityClass = _interopRequireDefault(require_generateUtilityClass2());
      function getBackdropUtilityClass(slot) {
        return (0, _generateUtilityClass.default)("MuiBackdrop", slot);
      }
      var backdropUnstyledClasses = (0, _generateUtilityClasses.default)("MuiBackdrop", ["root", "invisible"]);
      var _default = backdropUnstyledClasses;
      exports.default = _default;
    }
  });

  // node_modules/react/cjs/react-jsx-runtime.development.js
  var require_react_jsx_runtime_development = __commonJS({
    "node_modules/react/cjs/react-jsx-runtime.development.js"(exports) {
      "use strict";
      if (true) {
        (function() {
          "use strict";
          var React40 = require_react();
          var _assign = require_object_assign();
          var REACT_ELEMENT_TYPE = 60103;
          var REACT_PORTAL_TYPE = 60106;
          exports.Fragment = 60107;
          var REACT_STRICT_MODE_TYPE = 60108;
          var REACT_PROFILER_TYPE = 60114;
          var REACT_PROVIDER_TYPE = 60109;
          var REACT_CONTEXT_TYPE = 60110;
          var REACT_FORWARD_REF_TYPE = 60112;
          var REACT_SUSPENSE_TYPE = 60113;
          var REACT_SUSPENSE_LIST_TYPE = 60120;
          var REACT_MEMO_TYPE = 60115;
          var REACT_LAZY_TYPE = 60116;
          var REACT_BLOCK_TYPE = 60121;
          var REACT_SERVER_BLOCK_TYPE = 60122;
          var REACT_FUNDAMENTAL_TYPE = 60117;
          var REACT_SCOPE_TYPE = 60119;
          var REACT_OPAQUE_ID_TYPE = 60128;
          var REACT_DEBUG_TRACING_MODE_TYPE = 60129;
          var REACT_OFFSCREEN_TYPE = 60130;
          var REACT_LEGACY_HIDDEN_TYPE = 60131;
          if (typeof Symbol === "function" && Symbol.for) {
            var symbolFor = Symbol.for;
            REACT_ELEMENT_TYPE = symbolFor("react.element");
            REACT_PORTAL_TYPE = symbolFor("react.portal");
            exports.Fragment = symbolFor("react.fragment");
            REACT_STRICT_MODE_TYPE = symbolFor("react.strict_mode");
            REACT_PROFILER_TYPE = symbolFor("react.profiler");
            REACT_PROVIDER_TYPE = symbolFor("react.provider");
            REACT_CONTEXT_TYPE = symbolFor("react.context");
            REACT_FORWARD_REF_TYPE = symbolFor("react.forward_ref");
            REACT_SUSPENSE_TYPE = symbolFor("react.suspense");
            REACT_SUSPENSE_LIST_TYPE = symbolFor("react.suspense_list");
            REACT_MEMO_TYPE = symbolFor("react.memo");
            REACT_LAZY_TYPE = symbolFor("react.lazy");
            REACT_BLOCK_TYPE = symbolFor("react.block");
            REACT_SERVER_BLOCK_TYPE = symbolFor("react.server.block");
            REACT_FUNDAMENTAL_TYPE = symbolFor("react.fundamental");
            REACT_SCOPE_TYPE = symbolFor("react.scope");
            REACT_OPAQUE_ID_TYPE = symbolFor("react.opaque.id");
            REACT_DEBUG_TRACING_MODE_TYPE = symbolFor("react.debug_trace_mode");
            REACT_OFFSCREEN_TYPE = symbolFor("react.offscreen");
            REACT_LEGACY_HIDDEN_TYPE = symbolFor("react.legacy_hidden");
          }
          var MAYBE_ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
          var FAUX_ITERATOR_SYMBOL = "@@iterator";
          function getIteratorFn(maybeIterable) {
            if (maybeIterable === null || typeof maybeIterable !== "object") {
              return null;
            }
            var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
            if (typeof maybeIterator === "function") {
              return maybeIterator;
            }
            return null;
          }
          var ReactSharedInternals = React40.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
          function error(format) {
            {
              for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                args[_key2 - 1] = arguments[_key2];
              }
              printWarning("error", format, args);
            }
          }
          function printWarning(level, format, args) {
            {
              var ReactDebugCurrentFrame2 = ReactSharedInternals.ReactDebugCurrentFrame;
              var stack = ReactDebugCurrentFrame2.getStackAddendum();
              if (stack !== "") {
                format += "%s";
                args = args.concat([stack]);
              }
              var argsWithFormat = args.map(function(item) {
                return "" + item;
              });
              argsWithFormat.unshift("Warning: " + format);
              Function.prototype.apply.call(console[level], console, argsWithFormat);
            }
          }
          var enableScopeAPI = false;
          function isValidElementType(type) {
            if (typeof type === "string" || typeof type === "function") {
              return true;
            }
            if (type === exports.Fragment || type === REACT_PROFILER_TYPE || type === REACT_DEBUG_TRACING_MODE_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_LEGACY_HIDDEN_TYPE || enableScopeAPI) {
              return true;
            }
            if (typeof type === "object" && type !== null) {
              if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_BLOCK_TYPE || type[0] === REACT_SERVER_BLOCK_TYPE) {
                return true;
              }
            }
            return false;
          }
          function getWrappedName(outerType, innerType, wrapperName) {
            var functionName = innerType.displayName || innerType.name || "";
            return outerType.displayName || (functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName);
          }
          function getContextName(type) {
            return type.displayName || "Context";
          }
          function getComponentName(type) {
            if (type == null) {
              return null;
            }
            {
              if (typeof type.tag === "number") {
                error("Received an unexpected object in getComponentName(). This is likely a bug in React. Please file an issue.");
              }
            }
            if (typeof type === "function") {
              return type.displayName || type.name || null;
            }
            if (typeof type === "string") {
              return type;
            }
            switch (type) {
              case exports.Fragment:
                return "Fragment";
              case REACT_PORTAL_TYPE:
                return "Portal";
              case REACT_PROFILER_TYPE:
                return "Profiler";
              case REACT_STRICT_MODE_TYPE:
                return "StrictMode";
              case REACT_SUSPENSE_TYPE:
                return "Suspense";
              case REACT_SUSPENSE_LIST_TYPE:
                return "SuspenseList";
            }
            if (typeof type === "object") {
              switch (type.$$typeof) {
                case REACT_CONTEXT_TYPE:
                  var context = type;
                  return getContextName(context) + ".Consumer";
                case REACT_PROVIDER_TYPE:
                  var provider = type;
                  return getContextName(provider._context) + ".Provider";
                case REACT_FORWARD_REF_TYPE:
                  return getWrappedName(type, type.render, "ForwardRef");
                case REACT_MEMO_TYPE:
                  return getComponentName(type.type);
                case REACT_BLOCK_TYPE:
                  return getComponentName(type._render);
                case REACT_LAZY_TYPE: {
                  var lazyComponent = type;
                  var payload = lazyComponent._payload;
                  var init = lazyComponent._init;
                  try {
                    return getComponentName(init(payload));
                  } catch (x2) {
                    return null;
                  }
                }
              }
            }
            return null;
          }
          var disabledDepth = 0;
          var prevLog;
          var prevInfo;
          var prevWarn;
          var prevError;
          var prevGroup;
          var prevGroupCollapsed;
          var prevGroupEnd;
          function disabledLog() {
          }
          disabledLog.__reactDisabledLog = true;
          function disableLogs() {
            {
              if (disabledDepth === 0) {
                prevLog = console.log;
                prevInfo = console.info;
                prevWarn = console.warn;
                prevError = console.error;
                prevGroup = console.group;
                prevGroupCollapsed = console.groupCollapsed;
                prevGroupEnd = console.groupEnd;
                var props = {
                  configurable: true,
                  enumerable: true,
                  value: disabledLog,
                  writable: true
                };
                Object.defineProperties(console, {
                  info: props,
                  log: props,
                  warn: props,
                  error: props,
                  group: props,
                  groupCollapsed: props,
                  groupEnd: props
                });
              }
              disabledDepth++;
            }
          }
          function reenableLogs() {
            {
              disabledDepth--;
              if (disabledDepth === 0) {
                var props = {
                  configurable: true,
                  enumerable: true,
                  writable: true
                };
                Object.defineProperties(console, {
                  log: _assign({}, props, {
                    value: prevLog
                  }),
                  info: _assign({}, props, {
                    value: prevInfo
                  }),
                  warn: _assign({}, props, {
                    value: prevWarn
                  }),
                  error: _assign({}, props, {
                    value: prevError
                  }),
                  group: _assign({}, props, {
                    value: prevGroup
                  }),
                  groupCollapsed: _assign({}, props, {
                    value: prevGroupCollapsed
                  }),
                  groupEnd: _assign({}, props, {
                    value: prevGroupEnd
                  })
                });
              }
              if (disabledDepth < 0) {
                error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
              }
            }
          }
          var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
          var prefix;
          function describeBuiltInComponentFrame(name, source, ownerFn) {
            {
              if (prefix === void 0) {
                try {
                  throw Error();
                } catch (x2) {
                  var match = x2.stack.trim().match(/\n( *(at )?)/);
                  prefix = match && match[1] || "";
                }
              }
              return "\n" + prefix + name;
            }
          }
          var reentry = false;
          var componentFrameCache;
          {
            var PossiblyWeakMap = typeof WeakMap === "function" ? WeakMap : Map;
            componentFrameCache = new PossiblyWeakMap();
          }
          function describeNativeComponentFrame(fn, construct) {
            if (!fn || reentry) {
              return "";
            }
            {
              var frame = componentFrameCache.get(fn);
              if (frame !== void 0) {
                return frame;
              }
            }
            var control;
            reentry = true;
            var previousPrepareStackTrace = Error.prepareStackTrace;
            Error.prepareStackTrace = void 0;
            var previousDispatcher;
            {
              previousDispatcher = ReactCurrentDispatcher.current;
              ReactCurrentDispatcher.current = null;
              disableLogs();
            }
            try {
              if (construct) {
                var Fake = function() {
                  throw Error();
                };
                Object.defineProperty(Fake.prototype, "props", {
                  set: function() {
                    throw Error();
                  }
                });
                if (typeof Reflect === "object" && Reflect.construct) {
                  try {
                    Reflect.construct(Fake, []);
                  } catch (x2) {
                    control = x2;
                  }
                  Reflect.construct(fn, [], Fake);
                } else {
                  try {
                    Fake.call();
                  } catch (x2) {
                    control = x2;
                  }
                  fn.call(Fake.prototype);
                }
              } else {
                try {
                  throw Error();
                } catch (x2) {
                  control = x2;
                }
                fn();
              }
            } catch (sample) {
              if (sample && control && typeof sample.stack === "string") {
                var sampleLines = sample.stack.split("\n");
                var controlLines = control.stack.split("\n");
                var s2 = sampleLines.length - 1;
                var c2 = controlLines.length - 1;
                while (s2 >= 1 && c2 >= 0 && sampleLines[s2] !== controlLines[c2]) {
                  c2--;
                }
                for (; s2 >= 1 && c2 >= 0; s2--, c2--) {
                  if (sampleLines[s2] !== controlLines[c2]) {
                    if (s2 !== 1 || c2 !== 1) {
                      do {
                        s2--;
                        c2--;
                        if (c2 < 0 || sampleLines[s2] !== controlLines[c2]) {
                          var _frame = "\n" + sampleLines[s2].replace(" at new ", " at ");
                          {
                            if (typeof fn === "function") {
                              componentFrameCache.set(fn, _frame);
                            }
                          }
                          return _frame;
                        }
                      } while (s2 >= 1 && c2 >= 0);
                    }
                    break;
                  }
                }
              }
            } finally {
              reentry = false;
              {
                ReactCurrentDispatcher.current = previousDispatcher;
                reenableLogs();
              }
              Error.prepareStackTrace = previousPrepareStackTrace;
            }
            var name = fn ? fn.displayName || fn.name : "";
            var syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
            {
              if (typeof fn === "function") {
                componentFrameCache.set(fn, syntheticFrame);
              }
            }
            return syntheticFrame;
          }
          function describeFunctionComponentFrame(fn, source, ownerFn) {
            {
              return describeNativeComponentFrame(fn, false);
            }
          }
          function shouldConstruct(Component) {
            var prototype = Component.prototype;
            return !!(prototype && prototype.isReactComponent);
          }
          function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
            if (type == null) {
              return "";
            }
            if (typeof type === "function") {
              {
                return describeNativeComponentFrame(type, shouldConstruct(type));
              }
            }
            if (typeof type === "string") {
              return describeBuiltInComponentFrame(type);
            }
            switch (type) {
              case REACT_SUSPENSE_TYPE:
                return describeBuiltInComponentFrame("Suspense");
              case REACT_SUSPENSE_LIST_TYPE:
                return describeBuiltInComponentFrame("SuspenseList");
            }
            if (typeof type === "object") {
              switch (type.$$typeof) {
                case REACT_FORWARD_REF_TYPE:
                  return describeFunctionComponentFrame(type.render);
                case REACT_MEMO_TYPE:
                  return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
                case REACT_BLOCK_TYPE:
                  return describeFunctionComponentFrame(type._render);
                case REACT_LAZY_TYPE: {
                  var lazyComponent = type;
                  var payload = lazyComponent._payload;
                  var init = lazyComponent._init;
                  try {
                    return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
                  } catch (x2) {
                  }
                }
              }
            }
            return "";
          }
          var loggedTypeFailures = {};
          var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
          function setCurrentlyValidatingElement(element) {
            {
              if (element) {
                var owner = element._owner;
                var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
                ReactDebugCurrentFrame.setExtraStackFrame(stack);
              } else {
                ReactDebugCurrentFrame.setExtraStackFrame(null);
              }
            }
          }
          function checkPropTypes(typeSpecs, values2, location, componentName, element) {
            {
              var has = Function.call.bind(Object.prototype.hasOwnProperty);
              for (var typeSpecName in typeSpecs) {
                if (has(typeSpecs, typeSpecName)) {
                  var error$1 = void 0;
                  try {
                    if (typeof typeSpecs[typeSpecName] !== "function") {
                      var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                      err.name = "Invariant Violation";
                      throw err;
                    }
                    error$1 = typeSpecs[typeSpecName](values2, typeSpecName, componentName, location, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
                  } catch (ex) {
                    error$1 = ex;
                  }
                  if (error$1 && !(error$1 instanceof Error)) {
                    setCurrentlyValidatingElement(element);
                    error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location, typeSpecName, typeof error$1);
                    setCurrentlyValidatingElement(null);
                  }
                  if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                    loggedTypeFailures[error$1.message] = true;
                    setCurrentlyValidatingElement(element);
                    error("Failed %s type: %s", location, error$1.message);
                    setCurrentlyValidatingElement(null);
                  }
                }
              }
            }
          }
          var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
          var hasOwnProperty = Object.prototype.hasOwnProperty;
          var RESERVED_PROPS = {
            key: true,
            ref: true,
            __self: true,
            __source: true
          };
          var specialPropKeyWarningShown;
          var specialPropRefWarningShown;
          var didWarnAboutStringRefs;
          {
            didWarnAboutStringRefs = {};
          }
          function hasValidRef(config) {
            {
              if (hasOwnProperty.call(config, "ref")) {
                var getter = Object.getOwnPropertyDescriptor(config, "ref").get;
                if (getter && getter.isReactWarning) {
                  return false;
                }
              }
            }
            return config.ref !== void 0;
          }
          function hasValidKey(config) {
            {
              if (hasOwnProperty.call(config, "key")) {
                var getter = Object.getOwnPropertyDescriptor(config, "key").get;
                if (getter && getter.isReactWarning) {
                  return false;
                }
              }
            }
            return config.key !== void 0;
          }
          function warnIfStringRefCannotBeAutoConverted(config, self2) {
            {
              if (typeof config.ref === "string" && ReactCurrentOwner.current && self2 && ReactCurrentOwner.current.stateNode !== self2) {
                var componentName = getComponentName(ReactCurrentOwner.current.type);
                if (!didWarnAboutStringRefs[componentName]) {
                  error('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', getComponentName(ReactCurrentOwner.current.type), config.ref);
                  didWarnAboutStringRefs[componentName] = true;
                }
              }
            }
          }
          function defineKeyPropWarningGetter(props, displayName) {
            {
              var warnAboutAccessingKey = function() {
                if (!specialPropKeyWarningShown) {
                  specialPropKeyWarningShown = true;
                  error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
                }
              };
              warnAboutAccessingKey.isReactWarning = true;
              Object.defineProperty(props, "key", {
                get: warnAboutAccessingKey,
                configurable: true
              });
            }
          }
          function defineRefPropWarningGetter(props, displayName) {
            {
              var warnAboutAccessingRef = function() {
                if (!specialPropRefWarningShown) {
                  specialPropRefWarningShown = true;
                  error("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
                }
              };
              warnAboutAccessingRef.isReactWarning = true;
              Object.defineProperty(props, "ref", {
                get: warnAboutAccessingRef,
                configurable: true
              });
            }
          }
          var ReactElement = function(type, key, ref, self2, source, owner, props) {
            var element = {
              $$typeof: REACT_ELEMENT_TYPE,
              type,
              key,
              ref,
              props,
              _owner: owner
            };
            {
              element._store = {};
              Object.defineProperty(element._store, "validated", {
                configurable: false,
                enumerable: false,
                writable: true,
                value: false
              });
              Object.defineProperty(element, "_self", {
                configurable: false,
                enumerable: false,
                writable: false,
                value: self2
              });
              Object.defineProperty(element, "_source", {
                configurable: false,
                enumerable: false,
                writable: false,
                value: source
              });
              if (Object.freeze) {
                Object.freeze(element.props);
                Object.freeze(element);
              }
            }
            return element;
          };
          function jsxDEV(type, config, maybeKey, source, self2) {
            {
              var propName;
              var props = {};
              var key = null;
              var ref = null;
              if (maybeKey !== void 0) {
                key = "" + maybeKey;
              }
              if (hasValidKey(config)) {
                key = "" + config.key;
              }
              if (hasValidRef(config)) {
                ref = config.ref;
                warnIfStringRefCannotBeAutoConverted(config, self2);
              }
              for (propName in config) {
                if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
                  props[propName] = config[propName];
                }
              }
              if (type && type.defaultProps) {
                var defaultProps2 = type.defaultProps;
                for (propName in defaultProps2) {
                  if (props[propName] === void 0) {
                    props[propName] = defaultProps2[propName];
                  }
                }
              }
              if (key || ref) {
                var displayName = typeof type === "function" ? type.displayName || type.name || "Unknown" : type;
                if (key) {
                  defineKeyPropWarningGetter(props, displayName);
                }
                if (ref) {
                  defineRefPropWarningGetter(props, displayName);
                }
              }
              return ReactElement(type, key, ref, self2, source, ReactCurrentOwner.current, props);
            }
          }
          var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
          var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
          function setCurrentlyValidatingElement$1(element) {
            {
              if (element) {
                var owner = element._owner;
                var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
                ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
              } else {
                ReactDebugCurrentFrame$1.setExtraStackFrame(null);
              }
            }
          }
          var propTypesMisspellWarningShown;
          {
            propTypesMisspellWarningShown = false;
          }
          function isValidElement4(object) {
            {
              return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
            }
          }
          function getDeclarationErrorAddendum() {
            {
              if (ReactCurrentOwner$1.current) {
                var name = getComponentName(ReactCurrentOwner$1.current.type);
                if (name) {
                  return "\n\nCheck the render method of `" + name + "`.";
                }
              }
              return "";
            }
          }
          function getSourceInfoErrorAddendum(source) {
            {
              if (source !== void 0) {
                var fileName = source.fileName.replace(/^.*[\\\/]/, "");
                var lineNumber = source.lineNumber;
                return "\n\nCheck your code at " + fileName + ":" + lineNumber + ".";
              }
              return "";
            }
          }
          var ownerHasKeyUseWarning = {};
          function getCurrentComponentErrorInfo(parentType) {
            {
              var info = getDeclarationErrorAddendum();
              if (!info) {
                var parentName = typeof parentType === "string" ? parentType : parentType.displayName || parentType.name;
                if (parentName) {
                  info = "\n\nCheck the top-level render call using <" + parentName + ">.";
                }
              }
              return info;
            }
          }
          function validateExplicitKey(element, parentType) {
            {
              if (!element._store || element._store.validated || element.key != null) {
                return;
              }
              element._store.validated = true;
              var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
              if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
                return;
              }
              ownerHasKeyUseWarning[currentComponentErrorInfo] = true;
              var childOwner = "";
              if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {
                childOwner = " It was passed a child from " + getComponentName(element._owner.type) + ".";
              }
              setCurrentlyValidatingElement$1(element);
              error('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);
              setCurrentlyValidatingElement$1(null);
            }
          }
          function validateChildKeys(node, parentType) {
            {
              if (typeof node !== "object") {
                return;
              }
              if (Array.isArray(node)) {
                for (var i2 = 0; i2 < node.length; i2++) {
                  var child = node[i2];
                  if (isValidElement4(child)) {
                    validateExplicitKey(child, parentType);
                  }
                }
              } else if (isValidElement4(node)) {
                if (node._store) {
                  node._store.validated = true;
                }
              } else if (node) {
                var iteratorFn = getIteratorFn(node);
                if (typeof iteratorFn === "function") {
                  if (iteratorFn !== node.entries) {
                    var iterator = iteratorFn.call(node);
                    var step;
                    while (!(step = iterator.next()).done) {
                      if (isValidElement4(step.value)) {
                        validateExplicitKey(step.value, parentType);
                      }
                    }
                  }
                }
              }
            }
          }
          function validatePropTypes(element) {
            {
              var type = element.type;
              if (type === null || type === void 0 || typeof type === "string") {
                return;
              }
              var propTypes;
              if (typeof type === "function") {
                propTypes = type.propTypes;
              } else if (typeof type === "object" && (type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_MEMO_TYPE)) {
                propTypes = type.propTypes;
              } else {
                return;
              }
              if (propTypes) {
                var name = getComponentName(type);
                checkPropTypes(propTypes, element.props, "prop", name, element);
              } else if (type.PropTypes !== void 0 && !propTypesMisspellWarningShown) {
                propTypesMisspellWarningShown = true;
                var _name = getComponentName(type);
                error("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", _name || "Unknown");
              }
              if (typeof type.getDefaultProps === "function" && !type.getDefaultProps.isReactClassApproved) {
                error("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
              }
            }
          }
          function validateFragmentProps(fragment) {
            {
              var keys = Object.keys(fragment.props);
              for (var i2 = 0; i2 < keys.length; i2++) {
                var key = keys[i2];
                if (key !== "children" && key !== "key") {
                  setCurrentlyValidatingElement$1(fragment);
                  error("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", key);
                  setCurrentlyValidatingElement$1(null);
                  break;
                }
              }
              if (fragment.ref !== null) {
                setCurrentlyValidatingElement$1(fragment);
                error("Invalid attribute `ref` supplied to `React.Fragment`.");
                setCurrentlyValidatingElement$1(null);
              }
            }
          }
          function jsxWithValidation(type, props, key, isStaticChildren, source, self2) {
            {
              var validType = isValidElementType(type);
              if (!validType) {
                var info = "";
                if (type === void 0 || typeof type === "object" && type !== null && Object.keys(type).length === 0) {
                  info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
                }
                var sourceInfo = getSourceInfoErrorAddendum(source);
                if (sourceInfo) {
                  info += sourceInfo;
                } else {
                  info += getDeclarationErrorAddendum();
                }
                var typeString;
                if (type === null) {
                  typeString = "null";
                } else if (Array.isArray(type)) {
                  typeString = "array";
                } else if (type !== void 0 && type.$$typeof === REACT_ELEMENT_TYPE) {
                  typeString = "<" + (getComponentName(type.type) || "Unknown") + " />";
                  info = " Did you accidentally export a JSX literal instead of a component?";
                } else {
                  typeString = typeof type;
                }
                error("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", typeString, info);
              }
              var element = jsxDEV(type, props, key, source, self2);
              if (element == null) {
                return element;
              }
              if (validType) {
                var children = props.children;
                if (children !== void 0) {
                  if (isStaticChildren) {
                    if (Array.isArray(children)) {
                      for (var i2 = 0; i2 < children.length; i2++) {
                        validateChildKeys(children[i2], type);
                      }
                      if (Object.freeze) {
                        Object.freeze(children);
                      }
                    } else {
                      error("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
                    }
                  } else {
                    validateChildKeys(children, type);
                  }
                }
              }
              if (type === exports.Fragment) {
                validateFragmentProps(element);
              } else {
                validatePropTypes(element);
              }
              return element;
            }
          }
          function jsxWithValidationStatic(type, props, key) {
            {
              return jsxWithValidation(type, props, key, true);
            }
          }
          function jsxWithValidationDynamic(type, props, key) {
            {
              return jsxWithValidation(type, props, key, false);
            }
          }
          var jsx = jsxWithValidationDynamic;
          var jsxs = jsxWithValidationStatic;
          exports.jsx = jsx;
          exports.jsxs = jsxs;
        })();
      }
    }
  });

  // node_modules/react/jsx-runtime.js
  var require_jsx_runtime = __commonJS({
    "node_modules/react/jsx-runtime.js"(exports, module) {
      "use strict";
      if (false) {
        module.exports = null;
      } else {
        module.exports = require_react_jsx_runtime_development();
      }
    }
  });

  // node_modules/@mui/core/node/BackdropUnstyled/BackdropUnstyled.js
  var require_BackdropUnstyled = __commonJS({
    "node_modules/@mui/core/node/BackdropUnstyled/BackdropUnstyled.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _extends22 = _interopRequireDefault(require_extends());
      var _objectWithoutPropertiesLoose22 = _interopRequireDefault(require_objectWithoutPropertiesLoose());
      var React40 = _interopRequireWildcard(require_react());
      var _propTypes = _interopRequireDefault(require_prop_types());
      var _clsx = _interopRequireDefault(require_clsx());
      var _composeClasses = _interopRequireDefault(require_composeClasses2());
      var _isHostComponent = _interopRequireDefault(require_isHostComponent());
      var _backdropUnstyledClasses = require_backdropUnstyledClasses();
      var _jsxRuntime = require_jsx_runtime();
      var _excluded21 = ["classes", "className", "invisible", "component", "components", "componentsProps", "theme"];
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
      var useUtilityClasses12 = (ownerState) => {
        const {
          classes,
          invisible
        } = ownerState;
        const slots = {
          root: ["root", invisible && "invisible"]
        };
        return (0, _composeClasses.default)(slots, _backdropUnstyledClasses.getBackdropUtilityClass, classes);
      };
      var BackdropUnstyled = /* @__PURE__ */ React40.forwardRef(function BackdropUnstyled2(props, ref) {
        const {
          classes: classesProp,
          className,
          invisible = false,
          component = "div",
          components = {},
          componentsProps = {},
          theme
        } = props, other = (0, _objectWithoutPropertiesLoose22.default)(props, _excluded21);
        const ownerState = (0, _extends22.default)({}, props, {
          classes: classesProp,
          invisible
        });
        const classes = useUtilityClasses12(ownerState);
        const Root = components.Root || component;
        const rootProps = componentsProps.root || {};
        return /* @__PURE__ */ (0, _jsxRuntime.jsx)(Root, (0, _extends22.default)({
          "aria-hidden": true
        }, rootProps, !(0, _isHostComponent.default)(Root) && {
          as: component,
          ownerState: (0, _extends22.default)({}, ownerState, rootProps.ownerState),
          theme
        }, {
          ref
        }, other, {
          className: (0, _clsx.default)(classes.root, rootProps.className, className)
        }));
      });
      true ? BackdropUnstyled.propTypes = {
        children: _propTypes.default.node,
        classes: _propTypes.default.object,
        className: _propTypes.default.string,
        component: _propTypes.default.elementType,
        components: _propTypes.default.shape({
          Root: _propTypes.default.elementType
        }),
        componentsProps: _propTypes.default.object,
        invisible: _propTypes.default.bool
      } : void 0;
      var _default = BackdropUnstyled;
      exports.default = _default;
    }
  });

  // node_modules/@mui/core/node/BackdropUnstyled/index.js
  var require_BackdropUnstyled2 = __commonJS({
    "node_modules/@mui/core/node/BackdropUnstyled/index.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      Object.defineProperty(exports, "backdropUnstyledClasses", {
        enumerable: true,
        get: function() {
          return _backdropUnstyledClasses.default;
        }
      });
      Object.defineProperty(exports, "default", {
        enumerable: true,
        get: function() {
          return _BackdropUnstyled.default;
        }
      });
      Object.defineProperty(exports, "getBackdropUtilityClass", {
        enumerable: true,
        get: function() {
          return _backdropUnstyledClasses.getBackdropUtilityClass;
        }
      });
      var _BackdropUnstyled = _interopRequireDefault(require_BackdropUnstyled());
      var _backdropUnstyledClasses = _interopRequireWildcard(require_backdropUnstyledClasses());
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
    }
  });

  // node_modules/@mui/core/node/BadgeUnstyled/badgeUnstyledClasses.js
  var require_badgeUnstyledClasses = __commonJS({
    "node_modules/@mui/core/node/BadgeUnstyled/badgeUnstyledClasses.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      exports.getBadgeUtilityClass = getBadgeUtilityClass;
      var _generateUtilityClasses = _interopRequireDefault(require_generateUtilityClasses2());
      var _generateUtilityClass = _interopRequireDefault(require_generateUtilityClass2());
      function getBadgeUtilityClass(slot) {
        return (0, _generateUtilityClass.default)("MuiBadge", slot);
      }
      var badgeUnstyledClasses = (0, _generateUtilityClasses.default)("MuiBadge", ["root", "badge", "dot", "standard", "anchorOriginTopLeftCircular", "anchorOriginTopLeftRectangular", "anchorOriginTopRightCircular", "anchorOriginTopRightRectangular", "anchorOriginBottomLeftCircular", "anchorOriginBottomLeftRectangular", "anchorOriginBottomRightCircular", "anchorOriginBottomRightRectangular", "invisible"]);
      var _default = badgeUnstyledClasses;
      exports.default = _default;
    }
  });

  // node_modules/@mui/core/node/BadgeUnstyled/BadgeUnstyled.js
  var require_BadgeUnstyled = __commonJS({
    "node_modules/@mui/core/node/BadgeUnstyled/BadgeUnstyled.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _extends22 = _interopRequireDefault(require_extends());
      var _objectWithoutPropertiesLoose22 = _interopRequireDefault(require_objectWithoutPropertiesLoose());
      var React40 = _interopRequireWildcard(require_react());
      var _propTypes = _interopRequireDefault(require_prop_types());
      var _clsx = _interopRequireDefault(require_clsx());
      var _utils = require_utils();
      var _isHostComponent = _interopRequireDefault(require_isHostComponent());
      var _composeClasses = _interopRequireDefault(require_composeClasses2());
      var _badgeUnstyledClasses = require_badgeUnstyledClasses();
      var _jsxRuntime = require_jsx_runtime();
      var _excluded21 = ["anchorOrigin", "classes", "badgeContent", "component", "children", "className", "components", "componentsProps", "invisible", "max", "overlap", "showZero", "variant", "theme"];
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
      var useUtilityClasses12 = (ownerState) => {
        const {
          variant,
          anchorOrigin,
          overlap,
          invisible,
          classes
        } = ownerState;
        const slots = {
          root: ["root"],
          badge: ["badge", variant, `anchorOrigin${(0, _utils.unstable_capitalize)(anchorOrigin.vertical)}${(0, _utils.unstable_capitalize)(anchorOrigin.horizontal)}${(0, _utils.unstable_capitalize)(overlap)}`, invisible && "invisible"]
        };
        return (0, _composeClasses.default)(slots, _badgeUnstyledClasses.getBadgeUtilityClass, classes);
      };
      var BadgeUnstyled = /* @__PURE__ */ React40.forwardRef(function BadgeUnstyled2(props, ref) {
        const {
          anchorOrigin: anchorOriginProp = {
            vertical: "top",
            horizontal: "right"
          },
          classes: classesProp,
          badgeContent: badgeContentProp,
          component = "span",
          children,
          className,
          components = {},
          componentsProps = {},
          invisible: invisibleProp,
          max: maxProp = 99,
          overlap: overlapProp = "rectangular",
          showZero = false,
          variant: variantProp = "standard",
          theme
        } = props, other = (0, _objectWithoutPropertiesLoose22.default)(props, _excluded21);
        const prevProps = (0, _utils.usePreviousProps)({
          anchorOrigin: anchorOriginProp,
          badgeContent: badgeContentProp,
          max: maxProp,
          overlap: overlapProp,
          variant: variantProp
        });
        let invisible = invisibleProp;
        if (invisibleProp == null && (badgeContentProp === 0 && !showZero || badgeContentProp == null && variantProp !== "dot")) {
          invisible = true;
        }
        const {
          anchorOrigin = anchorOriginProp,
          badgeContent,
          max = maxProp,
          overlap = overlapProp,
          variant = variantProp
        } = invisible ? prevProps : props;
        const ownerState = (0, _extends22.default)({}, props, {
          anchorOrigin,
          badgeContent,
          classes: classesProp,
          invisible,
          max,
          overlap,
          variant
        });
        let displayValue = "";
        if (variant !== "dot") {
          displayValue = badgeContent > max ? `${max}+` : badgeContent;
        }
        const classes = useUtilityClasses12(ownerState);
        const Root = components.Root || component;
        const rootProps = componentsProps.root || {};
        const Badge = components.Badge || "span";
        const badgeProps = componentsProps.badge || {};
        return /* @__PURE__ */ (0, _jsxRuntime.jsxs)(Root, (0, _extends22.default)({}, rootProps, !(0, _isHostComponent.default)(Root) && {
          as: component,
          ownerState: (0, _extends22.default)({}, ownerState, rootProps.ownerState),
          theme
        }, {
          ref
        }, other, {
          className: (0, _clsx.default)(classes.root, rootProps.className, className),
          children: [children, /* @__PURE__ */ (0, _jsxRuntime.jsx)(Badge, (0, _extends22.default)({}, badgeProps, !(0, _isHostComponent.default)(Badge) && {
            ownerState: (0, _extends22.default)({}, ownerState, badgeProps.ownerState),
            theme
          }, {
            className: (0, _clsx.default)(classes.badge, badgeProps.className),
            children: displayValue
          }))]
        }));
      });
      true ? BadgeUnstyled.propTypes = {
        anchorOrigin: _propTypes.default.shape({
          horizontal: _propTypes.default.oneOf(["left", "right"]).isRequired,
          vertical: _propTypes.default.oneOf(["bottom", "top"]).isRequired
        }),
        badgeContent: _propTypes.default.node,
        children: _propTypes.default.node,
        classes: _propTypes.default.object,
        className: _propTypes.default.string,
        component: _propTypes.default.elementType,
        components: _propTypes.default.shape({
          Badge: _propTypes.default.elementType,
          Root: _propTypes.default.elementType
        }),
        componentsProps: _propTypes.default.object,
        invisible: _propTypes.default.bool,
        max: _propTypes.default.number,
        overlap: _propTypes.default.oneOf(["circular", "rectangular"]),
        showZero: _propTypes.default.bool,
        variant: _propTypes.default.string
      } : void 0;
      var _default = BadgeUnstyled;
      exports.default = _default;
    }
  });

  // node_modules/@mui/core/node/BadgeUnstyled/index.js
  var require_BadgeUnstyled2 = __commonJS({
    "node_modules/@mui/core/node/BadgeUnstyled/index.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      Object.defineProperty(exports, "badgeUnstyledClasses", {
        enumerable: true,
        get: function() {
          return _badgeUnstyledClasses.default;
        }
      });
      Object.defineProperty(exports, "default", {
        enumerable: true,
        get: function() {
          return _BadgeUnstyled.default;
        }
      });
      Object.defineProperty(exports, "getBadgeUtilityClass", {
        enumerable: true,
        get: function() {
          return _badgeUnstyledClasses.getBadgeUtilityClass;
        }
      });
      var _BadgeUnstyled = _interopRequireDefault(require_BadgeUnstyled());
      var _badgeUnstyledClasses = _interopRequireWildcard(require_badgeUnstyledClasses());
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
    }
  });

  // node_modules/@mui/core/node/ButtonUnstyled/buttonUnstyledClasses.js
  var require_buttonUnstyledClasses = __commonJS({
    "node_modules/@mui/core/node/ButtonUnstyled/buttonUnstyledClasses.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      exports.getButtonUnstyledUtilityClass = getButtonUnstyledUtilityClass;
      var _generateUtilityClass = _interopRequireDefault(require_generateUtilityClass2());
      var _generateUtilityClasses = _interopRequireDefault(require_generateUtilityClasses2());
      function getButtonUnstyledUtilityClass(slot) {
        return (0, _generateUtilityClass.default)("ButtonUnstyled", slot);
      }
      var buttonUnstyledClasses = (0, _generateUtilityClasses.default)("ButtonUnstyled", ["root", "active", "disabled", "focusVisible"]);
      var _default = buttonUnstyledClasses;
      exports.default = _default;
    }
  });

  // node_modules/@mui/core/node/utils/extractEventHandlers.js
  var require_extractEventHandlers = __commonJS({
    "node_modules/@mui/core/node/utils/extractEventHandlers.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = extractEventHandlers;
      function extractEventHandlers(object, excludeKeys = []) {
        if (object === void 0) {
          return {};
        }
        const result = {};
        Object.keys(object).filter((prop) => prop.match(/^on[A-Z]/) && typeof object[prop] === "function" && !excludeKeys.includes(prop)).forEach((prop) => {
          result[prop] = object[prop];
        });
        return result;
      }
    }
  });

  // node_modules/@mui/core/node/ButtonUnstyled/useButton.js
  var require_useButton = __commonJS({
    "node_modules/@mui/core/node/ButtonUnstyled/useButton.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = useButton;
      var _extends22 = _interopRequireDefault(require_extends());
      var React40 = _interopRequireWildcard(require_react());
      var _utils = require_utils();
      var _extractEventHandlers = _interopRequireDefault(require_extractEventHandlers());
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
      function useButton(props) {
        var _ref;
        const {
          component,
          components = {},
          disabled = false,
          href,
          ref,
          tabIndex = 0,
          to,
          type
        } = props;
        const buttonRef = React40.useRef();
        const [active, setActive] = React40.useState(false);
        const {
          isFocusVisibleRef,
          onFocus: handleFocusVisible,
          onBlur: handleBlurVisible,
          ref: focusVisibleRef
        } = (0, _utils.unstable_useIsFocusVisible)();
        const [focusVisible, setFocusVisible] = React40.useState(false);
        if (disabled && focusVisible) {
          setFocusVisible(false);
        }
        React40.useEffect(() => {
          isFocusVisibleRef.current = focusVisible;
        }, [focusVisible, isFocusVisibleRef]);
        const createHandleMouseLeave = (otherHandlers) => (event) => {
          var _otherHandlers$onMous;
          if (focusVisible) {
            event.preventDefault();
          }
          (_otherHandlers$onMous = otherHandlers.onMouseLeave) == null ? void 0 : _otherHandlers$onMous.call(otherHandlers, event);
        };
        const createHandleBlur = (otherHandlers) => (event) => {
          var _otherHandlers$onBlur;
          handleBlurVisible(event);
          if (isFocusVisibleRef.current === false) {
            setFocusVisible(false);
          }
          (_otherHandlers$onBlur = otherHandlers.onBlur) == null ? void 0 : _otherHandlers$onBlur.call(otherHandlers, event);
        };
        const createHandleFocus = (otherHandlers) => (event) => {
          var _otherHandlers$onFocu2;
          if (!buttonRef.current) {
            buttonRef.current = event.currentTarget;
          }
          handleFocusVisible(event);
          if (isFocusVisibleRef.current === true) {
            var _otherHandlers$onFocu;
            setFocusVisible(true);
            (_otherHandlers$onFocu = otherHandlers.onFocusVisible) == null ? void 0 : _otherHandlers$onFocu.call(otherHandlers, event);
          }
          (_otherHandlers$onFocu2 = otherHandlers.onFocus) == null ? void 0 : _otherHandlers$onFocu2.call(otherHandlers, event);
        };
        const elementType = (_ref = component != null ? component : components.Root) != null ? _ref : "button";
        const isNonNativeButton = () => {
          const button = buttonRef.current;
          return elementType !== "button" && !((button == null ? void 0 : button.tagName) === "A" && button != null && button.href);
        };
        const createHandleMouseDown = (otherHandlers) => (event) => {
          var _otherHandlers$onMous2;
          if (event.target === event.currentTarget && !disabled) {
            setActive(true);
          }
          (_otherHandlers$onMous2 = otherHandlers.onMouseDown) == null ? void 0 : _otherHandlers$onMous2.call(otherHandlers, event);
        };
        const createHandleMouseUp = (otherHandlers) => (event) => {
          var _otherHandlers$onMous3;
          if (event.target === event.currentTarget) {
            setActive(false);
          }
          (_otherHandlers$onMous3 = otherHandlers.onMouseUp) == null ? void 0 : _otherHandlers$onMous3.call(otherHandlers, event);
        };
        const createHandleKeyDown = (otherHandlers) => (event) => {
          var _otherHandlers$onKeyD;
          if (event.target === event.currentTarget && isNonNativeButton() && event.key === " ") {
            event.preventDefault();
          }
          if (event.target === event.currentTarget && event.key === " " && !disabled) {
            setActive(true);
          }
          (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null ? void 0 : _otherHandlers$onKeyD.call(otherHandlers, event);
          if (event.target === event.currentTarget && isNonNativeButton() && event.key === "Enter" && !disabled) {
            var _otherHandlers$onClic;
            event.preventDefault();
            (_otherHandlers$onClic = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic.call(otherHandlers, event);
          }
        };
        const createHandleKeyUp = (otherHandlers) => (event) => {
          var _otherHandlers$onKeyU;
          if (event.target === event.currentTarget) {
            setActive(false);
          }
          (_otherHandlers$onKeyU = otherHandlers.onKeyUp) == null ? void 0 : _otherHandlers$onKeyU.call(otherHandlers, event);
          if (event.target === event.currentTarget && isNonNativeButton() && event.key === " " && !event.defaultPrevented) {
            var _otherHandlers$onClic2;
            (_otherHandlers$onClic2 = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic2.call(otherHandlers, event);
          }
        };
        const handleOwnRef = (0, _utils.unstable_useForkRef)(focusVisibleRef, buttonRef);
        const handleRef = (0, _utils.unstable_useForkRef)(ref, handleOwnRef);
        const [hostElementName, setHostElementName] = React40.useState("");
        const updateRef = (instance) => {
          var _instance$tagName;
          setHostElementName((_instance$tagName = instance == null ? void 0 : instance.tagName) != null ? _instance$tagName : "");
          (0, _utils.unstable_setRef)(handleRef, instance);
        };
        const buttonProps = {};
        if (hostElementName === "BUTTON") {
          buttonProps.type = type != null ? type : "button";
          buttonProps.disabled = disabled;
        } else if (hostElementName !== "") {
          if (!href && !to) {
            buttonProps.role = "button";
          }
          if (disabled) {
            buttonProps["aria-disabled"] = disabled;
          }
        }
        const getRootProps = (otherHandlers) => {
          const propsEventHandlers = (0, _extractEventHandlers.default)(props);
          const externalEventHandlers = (0, _extends22.default)({}, propsEventHandlers, otherHandlers);
          const ownEventHandlers = {
            onBlur: createHandleBlur(externalEventHandlers),
            onFocus: createHandleFocus(externalEventHandlers),
            onKeyDown: createHandleKeyDown(externalEventHandlers),
            onKeyUp: createHandleKeyUp(externalEventHandlers),
            onMouseDown: createHandleMouseDown(externalEventHandlers),
            onMouseLeave: createHandleMouseLeave(externalEventHandlers),
            onMouseUp: createHandleMouseUp(externalEventHandlers)
          };
          const mergedEventHandlers = (0, _extends22.default)({}, externalEventHandlers, ownEventHandlers);
          delete mergedEventHandlers.onFocusVisible;
          return (0, _extends22.default)({
            tabIndex: disabled ? -1 : tabIndex,
            type,
            ref: updateRef
          }, buttonProps, mergedEventHandlers);
        };
        return {
          getRootProps,
          focusVisible,
          setFocusVisible,
          disabled,
          active
        };
      }
    }
  });

  // node_modules/@mui/core/node/utils/appendOwnerState.js
  var require_appendOwnerState = __commonJS({
    "node_modules/@mui/core/node/utils/appendOwnerState.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = appendOwnerState;
      var _extends22 = _interopRequireDefault(require_extends());
      var _isHostComponent = _interopRequireDefault(require_isHostComponent());
      function appendOwnerState(elementType, existingProps, ownerState) {
        if ((0, _isHostComponent.default)(elementType)) {
          return existingProps;
        }
        return (0, _extends22.default)({}, existingProps, {
          ownerState: (0, _extends22.default)({}, existingProps.ownerState, ownerState)
        });
      }
    }
  });

  // node_modules/@mui/core/node/ButtonUnstyled/ButtonUnstyled.js
  var require_ButtonUnstyled = __commonJS({
    "node_modules/@mui/core/node/ButtonUnstyled/ButtonUnstyled.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _extends22 = _interopRequireDefault(require_extends());
      var _objectWithoutPropertiesLoose22 = _interopRequireDefault(require_objectWithoutPropertiesLoose());
      var React40 = _interopRequireWildcard(require_react());
      var _propTypes = _interopRequireDefault(require_prop_types());
      var _clsx = _interopRequireDefault(require_clsx());
      var _utils = require_utils();
      var _composeClasses = _interopRequireDefault(require_composeClasses2());
      var _buttonUnstyledClasses = require_buttonUnstyledClasses();
      var _useButton = _interopRequireDefault(require_useButton());
      var _appendOwnerState = _interopRequireDefault(require_appendOwnerState());
      var _jsxRuntime = require_jsx_runtime();
      var _excluded21 = ["className", "component", "components", "componentsProps", "children", "disabled", "action", "onBlur", "onClick", "onFocus", "onFocusVisible", "onKeyDown", "onKeyUp", "onMouseLeave"];
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
      var useUtilityClasses12 = (ownerState) => {
        const {
          active,
          disabled,
          focusVisible
        } = ownerState;
        const slots = {
          root: ["root", disabled && "disabled", focusVisible && "focusVisible", active && "active"]
        };
        return (0, _composeClasses.default)(slots, _buttonUnstyledClasses.getButtonUnstyledUtilityClass, {});
      };
      var ButtonUnstyled = /* @__PURE__ */ React40.forwardRef(function ButtonUnstyled2(props, ref) {
        var _ref;
        const {
          className,
          component,
          components = {},
          componentsProps = {},
          children,
          action
        } = props, other = (0, _objectWithoutPropertiesLoose22.default)(props, _excluded21);
        const buttonRef = React40.useRef();
        const handleRef = (0, _utils.unstable_useForkRef)(buttonRef, ref);
        const {
          active,
          focusVisible,
          setFocusVisible,
          getRootProps
        } = (0, _useButton.default)((0, _extends22.default)({}, props, {
          ref: handleRef
        }));
        React40.useImperativeHandle(action, () => ({
          focusVisible: () => {
            setFocusVisible(true);
            buttonRef.current.focus();
          }
        }), [setFocusVisible]);
        const ownerState = (0, _extends22.default)({}, props, {
          active,
          focusVisible
        });
        const ButtonRoot = (_ref = component != null ? component : components.Root) != null ? _ref : "button";
        const buttonRootProps = (0, _appendOwnerState.default)(ButtonRoot, (0, _extends22.default)({}, other, componentsProps.root), ownerState);
        const classes = useUtilityClasses12(ownerState);
        return /* @__PURE__ */ (0, _jsxRuntime.jsx)(ButtonRoot, (0, _extends22.default)({}, getRootProps(), buttonRootProps, {
          className: (0, _clsx.default)(classes.root, className, buttonRootProps.className),
          children
        }));
      });
      true ? ButtonUnstyled.propTypes = {
        action: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.shape({
          current: _propTypes.default.shape({
            focusVisible: _propTypes.default.func.isRequired
          })
        })]),
        children: _propTypes.default.node,
        className: _propTypes.default.string,
        component: _propTypes.default.elementType,
        components: _propTypes.default.shape({
          Root: _propTypes.default.elementType
        }),
        componentsProps: _propTypes.default.object,
        disabled: _propTypes.default.bool,
        onClick: _propTypes.default.func,
        onFocusVisible: _propTypes.default.func
      } : void 0;
      var _default = ButtonUnstyled;
      exports.default = _default;
    }
  });

  // node_modules/@mui/core/node/ButtonUnstyled/ButtonUnstyledProps.js
  var require_ButtonUnstyledProps = __commonJS({
    "node_modules/@mui/core/node/ButtonUnstyled/ButtonUnstyledProps.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
    }
  });

  // node_modules/@mui/core/node/ButtonUnstyled/index.js
  var require_ButtonUnstyled2 = __commonJS({
    "node_modules/@mui/core/node/ButtonUnstyled/index.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      var _exportNames = {
        buttonUnstyledClasses: true,
        getButtonUnstyledUtilityClass: true,
        useButton: true
      };
      Object.defineProperty(exports, "buttonUnstyledClasses", {
        enumerable: true,
        get: function() {
          return _buttonUnstyledClasses.default;
        }
      });
      Object.defineProperty(exports, "default", {
        enumerable: true,
        get: function() {
          return _ButtonUnstyled.default;
        }
      });
      Object.defineProperty(exports, "getButtonUnstyledUtilityClass", {
        enumerable: true,
        get: function() {
          return _buttonUnstyledClasses.getButtonUnstyledUtilityClass;
        }
      });
      Object.defineProperty(exports, "useButton", {
        enumerable: true,
        get: function() {
          return _useButton.default;
        }
      });
      var _ButtonUnstyled = _interopRequireDefault(require_ButtonUnstyled());
      var _buttonUnstyledClasses = _interopRequireWildcard(require_buttonUnstyledClasses());
      var _ButtonUnstyledProps = require_ButtonUnstyledProps();
      Object.keys(_ButtonUnstyledProps).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (Object.prototype.hasOwnProperty.call(_exportNames, key))
          return;
        if (key in exports && exports[key] === _ButtonUnstyledProps[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _ButtonUnstyledProps[key];
          }
        });
      });
      var _useButton = _interopRequireDefault(require_useButton());
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
    }
  });

  // node_modules/@mui/core/node/FormControlUnstyled/FormControlContext.js
  var require_FormControlContext = __commonJS({
    "node_modules/@mui/core/node/FormControlUnstyled/FormControlContext.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var React40 = _interopRequireWildcard(require_react());
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
      var FormControlUnstyledContext = /* @__PURE__ */ React40.createContext(void 0);
      if (true) {
        FormControlUnstyledContext.displayName = "FormControlUnstyledContext";
      }
      var _default = FormControlUnstyledContext;
      exports.default = _default;
    }
  });

  // node_modules/@mui/core/node/FormControlUnstyled/formControlUnstyledClasses.js
  var require_formControlUnstyledClasses = __commonJS({
    "node_modules/@mui/core/node/FormControlUnstyled/formControlUnstyledClasses.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      exports.getFormControlUnstyledUtilityClasses = getFormControlUnstyledUtilityClasses;
      var _generateUtilityClass = _interopRequireDefault(require_generateUtilityClass2());
      var _generateUtilityClasses = _interopRequireDefault(require_generateUtilityClasses2());
      function getFormControlUnstyledUtilityClasses(slot) {
        return (0, _generateUtilityClass.default)("MuiFormControl", slot);
      }
      var formControlUnstyledClasses = (0, _generateUtilityClasses.default)("MuiFormControl", ["root", "disabled"]);
      var _default = formControlUnstyledClasses;
      exports.default = _default;
    }
  });

  // node_modules/@mui/core/node/FormControlUnstyled/FormControlUnstyled.js
  var require_FormControlUnstyled = __commonJS({
    "node_modules/@mui/core/node/FormControlUnstyled/FormControlUnstyled.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _extends22 = _interopRequireDefault(require_extends());
      var _objectWithoutPropertiesLoose22 = _interopRequireDefault(require_objectWithoutPropertiesLoose());
      var React40 = _interopRequireWildcard(require_react());
      var _propTypes = _interopRequireDefault(require_prop_types());
      var _clsx = _interopRequireDefault(require_clsx());
      var _utils = require_utils();
      var _FormControlContext = _interopRequireDefault(require_FormControlContext());
      var _appendOwnerState = _interopRequireDefault(require_appendOwnerState());
      var _formControlUnstyledClasses = _interopRequireDefault(require_formControlUnstyledClasses());
      var _jsxRuntime = require_jsx_runtime();
      var _excluded21 = ["defaultValue", "children", "className", "component", "components", "componentsProps", "disabled", "error", "focused", "onChange", "required", "value"];
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
      function hasValue(value) {
        return value != null && !(Array.isArray(value) && value.length === 0) && value !== "";
      }
      var FormControlUnstyled = /* @__PURE__ */ React40.forwardRef(function FormControlUnstyled2(props, ref) {
        var _ref;
        const {
          defaultValue,
          children,
          className,
          component,
          components = {},
          componentsProps = {},
          disabled = false,
          error = false,
          focused: visuallyFocused = false,
          onChange,
          required = false,
          value: incomingValue
        } = props, other = (0, _objectWithoutPropertiesLoose22.default)(props, _excluded21);
        const [value, setValue] = (0, _utils.unstable_useControlled)({
          controlled: incomingValue,
          default: defaultValue,
          name: "FormControl",
          state: "value"
        });
        const filled = hasValue(value);
        const [focusedState, setFocused] = React40.useState(false);
        if (disabled && focusedState) {
          setFocused(false);
        }
        const focused = visuallyFocused !== void 0 && !disabled ? visuallyFocused : focusedState;
        const ownerState = (0, _extends22.default)({}, props, {
          disabled,
          error,
          filled,
          focused,
          required
        });
        let registerEffect = () => {
        };
        if (true) {
          const registeredInput = React40.useRef(false);
          registerEffect = () => {
            if (registeredInput.current) {
              console.error(["MUI: There are multiple `Input` components inside a FormControl.", "This creates visual inconsistencies, only use one `Input`."].join("\n"));
            }
            registeredInput.current = true;
            return () => {
              registeredInput.current = false;
            };
          };
        }
        const handleChange = (event) => {
          setValue(event.target.value);
          onChange == null ? void 0 : onChange(event);
        };
        const childContext = {
          disabled,
          error,
          filled,
          focused,
          onBlur: () => {
            setFocused(false);
          },
          onChange: handleChange,
          onFocus: () => {
            setFocused(true);
          },
          registerEffect,
          required,
          value: value != null ? value : ""
        };
        const Root = (_ref = component != null ? component : components.Root) != null ? _ref : "div";
        const rootProps = (0, _appendOwnerState.default)(Root, (0, _extends22.default)({}, other, componentsProps.root), ownerState);
        return /* @__PURE__ */ (0, _jsxRuntime.jsx)(_FormControlContext.default.Provider, {
          value: childContext,
          children: /* @__PURE__ */ (0, _jsxRuntime.jsx)(Root, (0, _extends22.default)({
            ref
          }, rootProps, {
            className: (0, _clsx.default)(_formControlUnstyledClasses.default.root, className, rootProps == null ? void 0 : rootProps.className, disabled && _formControlUnstyledClasses.default.disabled),
            children
          }))
        });
      });
      true ? FormControlUnstyled.propTypes = {
        children: _propTypes.default.node,
        className: _propTypes.default.string,
        component: _propTypes.default.elementType,
        components: _propTypes.default.shape({
          Root: _propTypes.default.elementType
        }),
        componentsProps: _propTypes.default.object,
        defaultValue: _propTypes.default.any,
        disabled: _propTypes.default.bool,
        error: _propTypes.default.bool,
        focused: _propTypes.default.bool,
        onChange: _propTypes.default.func,
        required: _propTypes.default.bool,
        value: _propTypes.default.any
      } : void 0;
      var _default = FormControlUnstyled;
      exports.default = _default;
    }
  });

  // node_modules/@mui/core/node/FormControlUnstyled/useFormControl.js
  var require_useFormControl = __commonJS({
    "node_modules/@mui/core/node/FormControlUnstyled/useFormControl.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = useFormControlUnstyled;
      var React40 = _interopRequireWildcard(require_react());
      var _FormControlContext = _interopRequireDefault(require_FormControlContext());
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
      function useFormControlUnstyled() {
        return React40.useContext(_FormControlContext.default);
      }
    }
  });

  // node_modules/@mui/core/node/FormControlUnstyled/index.js
  var require_FormControlUnstyled2 = __commonJS({
    "node_modules/@mui/core/node/FormControlUnstyled/index.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      var _exportNames = {
        FormControlUnstyledContext: true,
        formControlUnstyledClasses: true,
        useFormControlUnstyled: true
      };
      Object.defineProperty(exports, "FormControlUnstyledContext", {
        enumerable: true,
        get: function() {
          return _FormControlContext.default;
        }
      });
      Object.defineProperty(exports, "default", {
        enumerable: true,
        get: function() {
          return _FormControlUnstyled.default;
        }
      });
      Object.defineProperty(exports, "formControlUnstyledClasses", {
        enumerable: true,
        get: function() {
          return _formControlUnstyledClasses.default;
        }
      });
      Object.defineProperty(exports, "useFormControlUnstyled", {
        enumerable: true,
        get: function() {
          return _useFormControl.default;
        }
      });
      var _FormControlUnstyled = _interopRequireDefault(require_FormControlUnstyled());
      var _FormControlContext = _interopRequireDefault(require_FormControlContext());
      var _formControlUnstyledClasses = _interopRequireWildcard(require_formControlUnstyledClasses());
      Object.keys(_formControlUnstyledClasses).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (Object.prototype.hasOwnProperty.call(_exportNames, key))
          return;
        if (key in exports && exports[key] === _formControlUnstyledClasses[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _formControlUnstyledClasses[key];
          }
        });
      });
      var _useFormControl = _interopRequireDefault(require_useFormControl());
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
    }
  });

  // node_modules/@mui/core/node/InputUnstyled/inputUnstyledClasses.js
  var require_inputUnstyledClasses = __commonJS({
    "node_modules/@mui/core/node/InputUnstyled/inputUnstyledClasses.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      exports.getInputUnstyledUtilityClass = getInputUnstyledUtilityClass;
      var _generateUtilityClass = _interopRequireDefault(require_generateUtilityClass2());
      var _generateUtilityClasses = _interopRequireDefault(require_generateUtilityClasses2());
      function getInputUnstyledUtilityClass(slot) {
        return (0, _generateUtilityClass.default)("MuiInput", slot);
      }
      var inputBaseClasses = (0, _generateUtilityClasses.default)("MuiInput", ["root", "formControl", "focused", "disabled", "error", "multiline", "input", "inputMultiline", "inputTypeSearch", "adornedStart", "adornedEnd"]);
      var _default = inputBaseClasses;
      exports.default = _default;
    }
  });

  // node_modules/@mui/core/node/InputUnstyled/useInput.js
  var require_useInput = __commonJS({
    "node_modules/@mui/core/node/InputUnstyled/useInput.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = useInput;
      var _extends22 = _interopRequireDefault(require_extends());
      var _utils = require_utils();
      var React40 = _interopRequireWildcard(require_react());
      var _useFormControl = _interopRequireDefault(require_useFormControl());
      var _extractEventHandlers = _interopRequireDefault(require_extractEventHandlers());
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
      function useInput(props, inputRef) {
        const {
          defaultValue,
          disabled: disabledProp = false,
          error: errorProp = false,
          onBlur,
          onChange,
          onFocus,
          required: requiredProp = false,
          value: valueProp
        } = props;
        const formControlContext = (0, _useFormControl.default)();
        let value;
        let required;
        let disabled;
        let error;
        if (formControlContext) {
          var _formControlContext$d, _formControlContext$r, _formControlContext$e;
          value = formControlContext.value;
          disabled = (_formControlContext$d = formControlContext.disabled) != null ? _formControlContext$d : false;
          required = (_formControlContext$r = formControlContext.required) != null ? _formControlContext$r : false;
          error = (_formControlContext$e = formControlContext.error) != null ? _formControlContext$e : false;
        } else {
          value = valueProp;
          disabled = disabledProp;
          required = requiredProp;
          error = errorProp;
        }
        const {
          current: isControlled
        } = React40.useRef(value != null);
        const handleInputRefWarning = React40.useCallback((instance) => {
          if (true) {
            if (instance && instance.nodeName !== "INPUT" && !instance.focus) {
              console.error(["MUI: You have provided a `components.Input` to the input component", "that does not correctly handle the `ref` prop.", "Make sure the `ref` prop is called with a HTMLInputElement."].join("\n"));
            }
          }
        }, []);
        const internalInputRef = React40.useRef(null);
        const handleIncomingRef = (0, _utils.unstable_useForkRef)(inputRef, handleInputRefWarning);
        const handleInputRef = (0, _utils.unstable_useForkRef)(internalInputRef, handleIncomingRef);
        const [focused, setFocused] = React40.useState(false);
        React40.useEffect(() => {
          if (!formControlContext && disabled && focused) {
            setFocused(false);
            onBlur == null ? void 0 : onBlur();
          }
        }, [formControlContext, disabled, focused, onBlur]);
        const handleFocus = (otherHandlers) => (event) => {
          var _otherHandlers$onFocu;
          if (formControlContext != null && formControlContext.disabled) {
            event.stopPropagation();
            return;
          }
          (_otherHandlers$onFocu = otherHandlers.onFocus) == null ? void 0 : _otherHandlers$onFocu.call(otherHandlers, event);
          if (formControlContext && formControlContext.onFocus) {
            var _formControlContext$o;
            formControlContext == null ? void 0 : (_formControlContext$o = formControlContext.onFocus) == null ? void 0 : _formControlContext$o.call(formControlContext);
          } else {
            setFocused(true);
          }
        };
        const handleBlur = (otherHandlers) => (event) => {
          var _otherHandlers$onBlur;
          (_otherHandlers$onBlur = otherHandlers.onBlur) == null ? void 0 : _otherHandlers$onBlur.call(otherHandlers, event);
          if (formControlContext && formControlContext.onBlur) {
            formControlContext.onBlur();
          } else {
            setFocused(false);
          }
        };
        const handleChange = (otherHandlers) => (event, ...args) => {
          var _formControlContext$o2, _otherHandlers$onChan;
          if (!isControlled) {
            const element = event.target || internalInputRef.current;
            if (element == null) {
              throw new Error(true ? `MUI: Expected valid input target. Did you use a custom \`components.Input\` and forget to forward refs? See https://mui.com/r/input-component-ref-interface for more info.` : (0, _utils.formatMuiErrorMessage)(17));
            }
          }
          formControlContext == null ? void 0 : (_formControlContext$o2 = formControlContext.onChange) == null ? void 0 : _formControlContext$o2.call(formControlContext, event);
          (_otherHandlers$onChan = otherHandlers.onChange) == null ? void 0 : _otherHandlers$onChan.call(otherHandlers, event, ...args);
        };
        const handleClick = (otherHandlers) => (event) => {
          var _otherHandlers$onClic;
          if (internalInputRef.current && event.currentTarget === event.target) {
            internalInputRef.current.focus();
          }
          (_otherHandlers$onClic = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic.call(otherHandlers, event);
        };
        const getRootProps = (externalProps) => {
          const propsEventHandlers = (0, _extractEventHandlers.default)(props, ["onBlur", "onChange", "onFocus"]);
          const externalEventHandlers = (0, _extends22.default)({}, propsEventHandlers, (0, _extractEventHandlers.default)(externalProps));
          return (0, _extends22.default)({}, externalProps, externalEventHandlers, {
            onClick: handleClick(externalEventHandlers)
          });
        };
        const getInputProps = (externalProps) => {
          const propsEventHandlers = {
            onBlur,
            onChange,
            onFocus
          };
          const externalEventHandlers = (0, _extends22.default)({}, propsEventHandlers, (0, _extractEventHandlers.default)(externalProps));
          const mergedEventHandlers = (0, _extends22.default)({}, externalProps, externalEventHandlers, {
            onBlur: handleBlur(externalEventHandlers),
            onChange: handleChange(externalEventHandlers),
            onFocus: handleFocus(externalEventHandlers)
          });
          return (0, _extends22.default)({}, mergedEventHandlers, {
            "aria-invalid": error || void 0,
            defaultValue,
            ref: handleInputRef,
            value,
            required,
            disabled
          });
        };
        return {
          disabled,
          error,
          focused,
          formControlContext,
          getInputProps,
          getRootProps,
          required,
          value
        };
      }
    }
  });

  // node_modules/@mui/core/node/InputUnstyled/InputUnstyled.js
  var require_InputUnstyled = __commonJS({
    "node_modules/@mui/core/node/InputUnstyled/InputUnstyled.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _extends22 = _interopRequireDefault(require_extends());
      var _objectWithoutPropertiesLoose22 = _interopRequireDefault(require_objectWithoutPropertiesLoose());
      var React40 = _interopRequireWildcard(require_react());
      var _clsx = _interopRequireDefault(require_clsx());
      var _propTypes = _interopRequireDefault(require_prop_types());
      var _appendOwnerState = _interopRequireDefault(require_appendOwnerState());
      var _isHostComponent = _interopRequireDefault(require_isHostComponent());
      var _inputUnstyledClasses = _interopRequireDefault(require_inputUnstyledClasses());
      var _useInput = _interopRequireDefault(require_useInput());
      var _jsxRuntime = require_jsx_runtime();
      var _excluded21 = ["aria-describedby", "aria-label", "aria-labelledby", "autoComplete", "autoFocus", "className", "component", "components", "componentsProps", "defaultValue", "disabled", "endAdornment", "error", "id", "maxRows", "minRows", "multiline", "name", "onClick", "onChange", "onKeyDown", "onKeyUp", "onFocus", "onBlur", "placeholder", "readOnly", "required", "rows", "type", "startAdornment", "value"];
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
      var InputUnstyled = /* @__PURE__ */ React40.forwardRef(function InputUnstyled2(props, ref) {
        var _componentsProps$inpu, _ref, _componentsProps$root, _components$Input, _componentsProps$inpu2;
        const {
          "aria-describedby": ariaDescribedby,
          "aria-label": ariaLabel,
          "aria-labelledby": ariaLabelledby,
          autoComplete,
          autoFocus,
          className,
          component,
          components = {},
          componentsProps = {},
          defaultValue,
          disabled,
          endAdornment,
          error,
          id,
          maxRows,
          minRows,
          multiline = false,
          name,
          onClick,
          onChange,
          onKeyDown,
          onKeyUp,
          onFocus,
          onBlur,
          placeholder,
          readOnly,
          required,
          rows,
          type = "text",
          startAdornment,
          value
        } = props, other = (0, _objectWithoutPropertiesLoose22.default)(props, _excluded21);
        const {
          getRootProps,
          getInputProps,
          focused,
          formControlContext,
          error: errorState,
          disabled: disabledState
        } = (0, _useInput.default)({
          disabled,
          defaultValue,
          error,
          onBlur,
          onClick,
          onChange,
          onFocus,
          required,
          value
        }, (_componentsProps$inpu = componentsProps.input) == null ? void 0 : _componentsProps$inpu.ref);
        const ownerState = (0, _extends22.default)({}, props, {
          disabled: disabledState,
          error: errorState,
          focused,
          formControlContext,
          multiline,
          type
        });
        const rootStateClasses = (0, _clsx.default)(disabledState && _inputUnstyledClasses.default.disabled, errorState && _inputUnstyledClasses.default.error, focused && _inputUnstyledClasses.default.focused, Boolean(formControlContext) && _inputUnstyledClasses.default.formControl, multiline && _inputUnstyledClasses.default.multiline, Boolean(startAdornment) && _inputUnstyledClasses.default.adornedStart, Boolean(endAdornment) && _inputUnstyledClasses.default.adornedEnd);
        const inputStateClasses = (0, _clsx.default)(disabledState && _inputUnstyledClasses.default.disabled, multiline && _inputUnstyledClasses.default.multiline);
        const propsToForward = {
          "aria-describedby": ariaDescribedby,
          "aria-label": ariaLabel,
          "aria-labelledby": ariaLabelledby,
          autoComplete,
          autoFocus,
          id,
          onKeyDown,
          onKeyUp,
          name,
          placeholder,
          readOnly,
          type
        };
        const Root = (_ref = component != null ? component : components.Root) != null ? _ref : "div";
        const rootProps = (0, _appendOwnerState.default)(Root, (0, _extends22.default)({}, getRootProps((0, _extends22.default)({}, other, componentsProps.root)), {
          className: (0, _clsx.default)(_inputUnstyledClasses.default.root, rootStateClasses, className, (_componentsProps$root = componentsProps.root) == null ? void 0 : _componentsProps$root.className)
        }), ownerState);
        let Input = (_components$Input = components.Input) != null ? _components$Input : "input";
        let inputProps = (0, _appendOwnerState.default)(Input, (0, _extends22.default)({}, getInputProps((0, _extends22.default)({}, componentsProps.input, propsToForward)), {
          className: (0, _clsx.default)(_inputUnstyledClasses.default.input, inputStateClasses, (_componentsProps$inpu2 = componentsProps.input) == null ? void 0 : _componentsProps$inpu2.className)
        }), ownerState);
        if (multiline) {
          var _components$Textarea, _components$Textarea2;
          const hasHostTexarea = (0, _isHostComponent.default)((_components$Textarea = components.Textarea) != null ? _components$Textarea : "textarea");
          if (rows) {
            if (true) {
              if (minRows || maxRows) {
                console.warn("Material-UI: You can not use the `minRows` or `maxRows` props when the input `rows` prop is set.");
              }
            }
            inputProps = (0, _extends22.default)({
              type: void 0,
              minRows: hasHostTexarea ? void 0 : rows,
              maxRows: hasHostTexarea ? void 0 : rows
            }, inputProps);
          } else {
            inputProps = (0, _extends22.default)({
              type: void 0,
              maxRows: hasHostTexarea ? void 0 : maxRows,
              minRows: hasHostTexarea ? void 0 : minRows
            }, inputProps);
          }
          Input = (_components$Textarea2 = components.Textarea) != null ? _components$Textarea2 : "textarea";
        }
        return /* @__PURE__ */ (0, _jsxRuntime.jsxs)(Root, (0, _extends22.default)({}, rootProps, {
          ref,
          children: [startAdornment, /* @__PURE__ */ (0, _jsxRuntime.jsx)(Input, (0, _extends22.default)({}, inputProps)), endAdornment]
        }));
      });
      true ? InputUnstyled.propTypes = {
        "aria-describedby": _propTypes.default.string,
        "aria-label": _propTypes.default.string,
        "aria-labelledby": _propTypes.default.string,
        autoComplete: _propTypes.default.string,
        autoFocus: _propTypes.default.bool,
        children: _propTypes.default.node,
        className: _propTypes.default.string,
        component: _propTypes.default.elementType,
        components: _propTypes.default.shape({
          Input: _propTypes.default.elementType,
          Root: _propTypes.default.elementType,
          Textarea: _propTypes.default.elementType
        }),
        componentsProps: _propTypes.default.object,
        defaultValue: _propTypes.default.any,
        disabled: _propTypes.default.bool,
        endAdornment: _propTypes.default.node,
        error: _propTypes.default.bool,
        id: _propTypes.default.string,
        maxRows: _propTypes.default.number,
        minRows: _propTypes.default.number,
        multiline: _propTypes.default.bool,
        name: _propTypes.default.string,
        onBlur: _propTypes.default.func,
        onChange: _propTypes.default.func,
        onClick: _propTypes.default.func,
        onFocus: _propTypes.default.func,
        onKeyDown: _propTypes.default.func,
        onKeyUp: _propTypes.default.func,
        placeholder: _propTypes.default.string,
        readOnly: _propTypes.default.bool,
        required: _propTypes.default.bool,
        rows: _propTypes.default.number,
        startAdornment: _propTypes.default.node,
        type: _propTypes.default.string,
        value: _propTypes.default.any
      } : void 0;
      var _default = InputUnstyled;
      exports.default = _default;
    }
  });

  // node_modules/@mui/core/node/InputUnstyled/InputUnstyledProps.js
  var require_InputUnstyledProps = __commonJS({
    "node_modules/@mui/core/node/InputUnstyled/InputUnstyledProps.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
    }
  });

  // node_modules/@mui/core/node/InputUnstyled/index.js
  var require_InputUnstyled2 = __commonJS({
    "node_modules/@mui/core/node/InputUnstyled/index.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      var _exportNames = {
        useInput: true,
        inputUnstyledClasses: true
      };
      Object.defineProperty(exports, "default", {
        enumerable: true,
        get: function() {
          return _InputUnstyled.default;
        }
      });
      Object.defineProperty(exports, "inputUnstyledClasses", {
        enumerable: true,
        get: function() {
          return _inputUnstyledClasses.default;
        }
      });
      Object.defineProperty(exports, "useInput", {
        enumerable: true,
        get: function() {
          return _useInput.default;
        }
      });
      var _InputUnstyled = _interopRequireDefault(require_InputUnstyled());
      var _InputUnstyledProps = require_InputUnstyledProps();
      Object.keys(_InputUnstyledProps).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (Object.prototype.hasOwnProperty.call(_exportNames, key))
          return;
        if (key in exports && exports[key] === _InputUnstyledProps[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _InputUnstyledProps[key];
          }
        });
      });
      var _useInput = _interopRequireDefault(require_useInput());
      var _inputUnstyledClasses = _interopRequireWildcard(require_inputUnstyledClasses());
      Object.keys(_inputUnstyledClasses).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (Object.prototype.hasOwnProperty.call(_exportNames, key))
          return;
        if (key in exports && exports[key] === _inputUnstyledClasses[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _inputUnstyledClasses[key];
          }
        });
      });
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
    }
  });

  // node_modules/@mui/core/node/Portal/Portal.js
  var require_Portal = __commonJS({
    "node_modules/@mui/core/node/Portal/Portal.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var React40 = _interopRequireWildcard(require_react());
      var ReactDOM3 = _interopRequireWildcard(require_react_dom());
      var _propTypes = _interopRequireDefault(require_prop_types());
      var _utils = require_utils();
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
      function getContainer(container) {
        return typeof container === "function" ? container() : container;
      }
      var Portal = /* @__PURE__ */ React40.forwardRef(function Portal2(props, ref) {
        const {
          children,
          container,
          disablePortal = false
        } = props;
        const [mountNode, setMountNode] = React40.useState(null);
        const handleRef = (0, _utils.unstable_useForkRef)(/* @__PURE__ */ React40.isValidElement(children) ? children.ref : null, ref);
        (0, _utils.unstable_useEnhancedEffect)(() => {
          if (!disablePortal) {
            setMountNode(getContainer(container) || document.body);
          }
        }, [container, disablePortal]);
        (0, _utils.unstable_useEnhancedEffect)(() => {
          if (mountNode && !disablePortal) {
            (0, _utils.unstable_setRef)(ref, mountNode);
            return () => {
              (0, _utils.unstable_setRef)(ref, null);
            };
          }
          return void 0;
        }, [ref, mountNode, disablePortal]);
        if (disablePortal) {
          if (/* @__PURE__ */ React40.isValidElement(children)) {
            return /* @__PURE__ */ React40.cloneElement(children, {
              ref: handleRef
            });
          }
          return children;
        }
        return mountNode ? /* @__PURE__ */ ReactDOM3.createPortal(children, mountNode) : mountNode;
      });
      true ? Portal.propTypes = {
        children: _propTypes.default.node,
        container: _propTypes.default.oneOfType([_utils.HTMLElementType, _propTypes.default.func]),
        disablePortal: _propTypes.default.bool
      } : void 0;
      if (true) {
        Portal["propTypes"] = (0, _utils.exactProp)(Portal.propTypes);
      }
      var _default = Portal;
      exports.default = _default;
    }
  });

  // node_modules/@mui/core/node/Portal/index.js
  var require_Portal2 = __commonJS({
    "node_modules/@mui/core/node/Portal/index.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      Object.defineProperty(exports, "default", {
        enumerable: true,
        get: function() {
          return _Portal.default;
        }
      });
      var _Portal = _interopRequireDefault(require_Portal());
    }
  });

  // node_modules/@mui/core/node/ModalUnstyled/ModalManager.js
  var require_ModalManager = __commonJS({
    "node_modules/@mui/core/node/ModalUnstyled/ModalManager.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.ariaHidden = ariaHidden;
      exports.default = void 0;
      var _utils = require_utils();
      function isOverflowing(container) {
        const doc = (0, _utils.unstable_ownerDocument)(container);
        if (doc.body === container) {
          return (0, _utils.unstable_ownerWindow)(container).innerWidth > doc.documentElement.clientWidth;
        }
        return container.scrollHeight > container.clientHeight;
      }
      function ariaHidden(element, show) {
        if (show) {
          element.setAttribute("aria-hidden", "true");
        } else {
          element.removeAttribute("aria-hidden");
        }
      }
      function getPaddingRight(element) {
        return parseInt((0, _utils.unstable_ownerWindow)(element).getComputedStyle(element).paddingRight, 10) || 0;
      }
      function ariaHiddenSiblings(container, mountElement, currentElement, elementsToExclude = [], show) {
        const blacklist = [mountElement, currentElement, ...elementsToExclude];
        const blacklistTagNames = ["TEMPLATE", "SCRIPT", "STYLE"];
        [].forEach.call(container.children, (element) => {
          if (blacklist.indexOf(element) === -1 && blacklistTagNames.indexOf(element.tagName) === -1) {
            ariaHidden(element, show);
          }
        });
      }
      function findIndexOf(items, callback) {
        let idx = -1;
        items.some((item, index2) => {
          if (callback(item)) {
            idx = index2;
            return true;
          }
          return false;
        });
        return idx;
      }
      function handleContainer(containerInfo, props) {
        const restoreStyle = [];
        const container = containerInfo.container;
        if (!props.disableScrollLock) {
          if (isOverflowing(container)) {
            const scrollbarSize = (0, _utils.unstable_getScrollbarSize)((0, _utils.unstable_ownerDocument)(container));
            restoreStyle.push({
              value: container.style.paddingRight,
              property: "padding-right",
              el: container
            });
            container.style.paddingRight = `${getPaddingRight(container) + scrollbarSize}px`;
            const fixedElements = (0, _utils.unstable_ownerDocument)(container).querySelectorAll(".mui-fixed");
            [].forEach.call(fixedElements, (element) => {
              restoreStyle.push({
                value: element.style.paddingRight,
                property: "padding-right",
                el: element
              });
              element.style.paddingRight = `${getPaddingRight(element) + scrollbarSize}px`;
            });
          }
          const parent = container.parentElement;
          const containerWindow = (0, _utils.unstable_ownerWindow)(container);
          const scrollContainer = (parent == null ? void 0 : parent.nodeName) === "HTML" && containerWindow.getComputedStyle(parent).overflowY === "scroll" ? parent : container;
          restoreStyle.push({
            value: scrollContainer.style.overflow,
            property: "overflow",
            el: scrollContainer
          }, {
            value: scrollContainer.style.overflowX,
            property: "overflow-x",
            el: scrollContainer
          }, {
            value: scrollContainer.style.overflowY,
            property: "overflow-y",
            el: scrollContainer
          });
          scrollContainer.style.overflow = "hidden";
        }
        const restore = () => {
          restoreStyle.forEach(({
            value,
            el,
            property
          }) => {
            if (value) {
              el.style.setProperty(property, value);
            } else {
              el.style.removeProperty(property);
            }
          });
        };
        return restore;
      }
      function getHiddenSiblings(container) {
        const hiddenSiblings = [];
        [].forEach.call(container.children, (element) => {
          if (element.getAttribute("aria-hidden") === "true") {
            hiddenSiblings.push(element);
          }
        });
        return hiddenSiblings;
      }
      var ModalManager = class {
        constructor() {
          this.containers = void 0;
          this.modals = void 0;
          this.modals = [];
          this.containers = [];
        }
        add(modal, container) {
          let modalIndex = this.modals.indexOf(modal);
          if (modalIndex !== -1) {
            return modalIndex;
          }
          modalIndex = this.modals.length;
          this.modals.push(modal);
          if (modal.modalRef) {
            ariaHidden(modal.modalRef, false);
          }
          const hiddenSiblings = getHiddenSiblings(container);
          ariaHiddenSiblings(container, modal.mount, modal.modalRef, hiddenSiblings, true);
          const containerIndex = findIndexOf(this.containers, (item) => item.container === container);
          if (containerIndex !== -1) {
            this.containers[containerIndex].modals.push(modal);
            return modalIndex;
          }
          this.containers.push({
            modals: [modal],
            container,
            restore: null,
            hiddenSiblings
          });
          return modalIndex;
        }
        mount(modal, props) {
          const containerIndex = findIndexOf(this.containers, (item) => item.modals.indexOf(modal) !== -1);
          const containerInfo = this.containers[containerIndex];
          if (!containerInfo.restore) {
            containerInfo.restore = handleContainer(containerInfo, props);
          }
        }
        remove(modal) {
          const modalIndex = this.modals.indexOf(modal);
          if (modalIndex === -1) {
            return modalIndex;
          }
          const containerIndex = findIndexOf(this.containers, (item) => item.modals.indexOf(modal) !== -1);
          const containerInfo = this.containers[containerIndex];
          containerInfo.modals.splice(containerInfo.modals.indexOf(modal), 1);
          this.modals.splice(modalIndex, 1);
          if (containerInfo.modals.length === 0) {
            if (containerInfo.restore) {
              containerInfo.restore();
            }
            if (modal.modalRef) {
              ariaHidden(modal.modalRef, true);
            }
            ariaHiddenSiblings(containerInfo.container, modal.mount, modal.modalRef, containerInfo.hiddenSiblings, false);
            this.containers.splice(containerIndex, 1);
          } else {
            const nextTop = containerInfo.modals[containerInfo.modals.length - 1];
            if (nextTop.modalRef) {
              ariaHidden(nextTop.modalRef, false);
            }
          }
          return modalIndex;
        }
        isTopModal(modal) {
          return this.modals.length > 0 && this.modals[this.modals.length - 1] === modal;
        }
      };
      exports.default = ModalManager;
    }
  });

  // node_modules/@mui/core/node/Unstable_TrapFocus/Unstable_TrapFocus.js
  var require_Unstable_TrapFocus = __commonJS({
    "node_modules/@mui/core/node/Unstable_TrapFocus/Unstable_TrapFocus.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var React40 = _interopRequireWildcard(require_react());
      var _propTypes = _interopRequireDefault(require_prop_types());
      var _utils = require_utils();
      var _jsxRuntime = require_jsx_runtime();
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
      var candidatesSelector = ["input", "select", "textarea", "a[href]", "button", "[tabindex]", "audio[controls]", "video[controls]", '[contenteditable]:not([contenteditable="false"])'].join(",");
      function getTabIndex(node) {
        const tabindexAttr = parseInt(node.getAttribute("tabindex"), 10);
        if (!Number.isNaN(tabindexAttr)) {
          return tabindexAttr;
        }
        if (node.contentEditable === "true" || (node.nodeName === "AUDIO" || node.nodeName === "VIDEO" || node.nodeName === "DETAILS") && node.getAttribute("tabindex") === null) {
          return 0;
        }
        return node.tabIndex;
      }
      function isNonTabbableRadio(node) {
        if (node.tagName !== "INPUT" || node.type !== "radio") {
          return false;
        }
        if (!node.name) {
          return false;
        }
        const getRadio = (selector) => node.ownerDocument.querySelector(`input[type="radio"]${selector}`);
        let roving = getRadio(`[name="${node.name}"]:checked`);
        if (!roving) {
          roving = getRadio(`[name="${node.name}"]`);
        }
        return roving !== node;
      }
      function isNodeMatchingSelectorFocusable(node) {
        if (node.disabled || node.tagName === "INPUT" && node.type === "hidden" || isNonTabbableRadio(node)) {
          return false;
        }
        return true;
      }
      function defaultGetTabbable(root) {
        const regularTabNodes = [];
        const orderedTabNodes = [];
        Array.from(root.querySelectorAll(candidatesSelector)).forEach((node, i2) => {
          const nodeTabIndex = getTabIndex(node);
          if (nodeTabIndex === -1 || !isNodeMatchingSelectorFocusable(node)) {
            return;
          }
          if (nodeTabIndex === 0) {
            regularTabNodes.push(node);
          } else {
            orderedTabNodes.push({
              documentOrder: i2,
              tabIndex: nodeTabIndex,
              node
            });
          }
        });
        return orderedTabNodes.sort((a2, b2) => a2.tabIndex === b2.tabIndex ? a2.documentOrder - b2.documentOrder : a2.tabIndex - b2.tabIndex).map((a2) => a2.node).concat(regularTabNodes);
      }
      function defaultIsEnabled() {
        return true;
      }
      function Unstable_TrapFocus(props) {
        const {
          children,
          disableAutoFocus = false,
          disableEnforceFocus = false,
          disableRestoreFocus = false,
          getTabbable = defaultGetTabbable,
          isEnabled = defaultIsEnabled,
          open
        } = props;
        const ignoreNextEnforceFocus = React40.useRef();
        const sentinelStart = React40.useRef(null);
        const sentinelEnd = React40.useRef(null);
        const nodeToRestore = React40.useRef(null);
        const reactFocusEventTarget = React40.useRef(null);
        const activated = React40.useRef(false);
        const rootRef = React40.useRef(null);
        const handleRef = (0, _utils.unstable_useForkRef)(children.ref, rootRef);
        const lastKeydown = React40.useRef(null);
        React40.useEffect(() => {
          if (!open || !rootRef.current) {
            return;
          }
          activated.current = !disableAutoFocus;
        }, [disableAutoFocus, open]);
        React40.useEffect(() => {
          if (!open || !rootRef.current) {
            return;
          }
          const doc = (0, _utils.unstable_ownerDocument)(rootRef.current);
          if (!rootRef.current.contains(doc.activeElement)) {
            if (!rootRef.current.hasAttribute("tabIndex")) {
              if (true) {
                console.error(["MUI: The modal content node does not accept focus.", 'For the benefit of assistive technologies, the tabIndex of the node is being set to "-1".'].join("\n"));
              }
              rootRef.current.setAttribute("tabIndex", -1);
            }
            if (activated.current) {
              rootRef.current.focus();
            }
          }
          return () => {
            if (!disableRestoreFocus) {
              if (nodeToRestore.current && nodeToRestore.current.focus) {
                ignoreNextEnforceFocus.current = true;
                nodeToRestore.current.focus();
              }
              nodeToRestore.current = null;
            }
          };
        }, [open]);
        React40.useEffect(() => {
          if (!open || !rootRef.current) {
            return;
          }
          const doc = (0, _utils.unstable_ownerDocument)(rootRef.current);
          const contain = (nativeEvent) => {
            const {
              current: rootElement
            } = rootRef;
            if (rootElement === null) {
              return;
            }
            if (!doc.hasFocus() || disableEnforceFocus || !isEnabled() || ignoreNextEnforceFocus.current) {
              ignoreNextEnforceFocus.current = false;
              return;
            }
            if (!rootElement.contains(doc.activeElement)) {
              if (nativeEvent && reactFocusEventTarget.current !== nativeEvent.target || doc.activeElement !== reactFocusEventTarget.current) {
                reactFocusEventTarget.current = null;
              } else if (reactFocusEventTarget.current !== null) {
                return;
              }
              if (!activated.current) {
                return;
              }
              let tabbable = [];
              if (doc.activeElement === sentinelStart.current || doc.activeElement === sentinelEnd.current) {
                tabbable = getTabbable(rootRef.current);
              }
              if (tabbable.length > 0) {
                var _lastKeydown$current, _lastKeydown$current2;
                const isShiftTab = Boolean(((_lastKeydown$current = lastKeydown.current) == null ? void 0 : _lastKeydown$current.shiftKey) && ((_lastKeydown$current2 = lastKeydown.current) == null ? void 0 : _lastKeydown$current2.key) === "Tab");
                const focusNext = tabbable[0];
                const focusPrevious = tabbable[tabbable.length - 1];
                if (isShiftTab) {
                  focusPrevious.focus();
                } else {
                  focusNext.focus();
                }
              } else {
                rootElement.focus();
              }
            }
          };
          const loopFocus = (nativeEvent) => {
            lastKeydown.current = nativeEvent;
            if (disableEnforceFocus || !isEnabled() || nativeEvent.key !== "Tab") {
              return;
            }
            if (doc.activeElement === rootRef.current && nativeEvent.shiftKey) {
              ignoreNextEnforceFocus.current = true;
              sentinelEnd.current.focus();
            }
          };
          doc.addEventListener("focusin", contain);
          doc.addEventListener("keydown", loopFocus, true);
          const interval = setInterval(() => {
            if (doc.activeElement.tagName === "BODY") {
              contain();
            }
          }, 50);
          return () => {
            clearInterval(interval);
            doc.removeEventListener("focusin", contain);
            doc.removeEventListener("keydown", loopFocus, true);
          };
        }, [disableAutoFocus, disableEnforceFocus, disableRestoreFocus, isEnabled, open, getTabbable]);
        const onFocus = (event) => {
          if (nodeToRestore.current === null) {
            nodeToRestore.current = event.relatedTarget;
          }
          activated.current = true;
          reactFocusEventTarget.current = event.target;
          const childrenPropsHandler = children.props.onFocus;
          if (childrenPropsHandler) {
            childrenPropsHandler(event);
          }
        };
        const handleFocusSentinel = (event) => {
          if (nodeToRestore.current === null) {
            nodeToRestore.current = event.relatedTarget;
          }
          activated.current = true;
        };
        return /* @__PURE__ */ (0, _jsxRuntime.jsxs)(React40.Fragment, {
          children: [/* @__PURE__ */ (0, _jsxRuntime.jsx)("div", {
            tabIndex: 0,
            onFocus: handleFocusSentinel,
            ref: sentinelStart,
            "data-test": "sentinelStart"
          }), /* @__PURE__ */ React40.cloneElement(children, {
            ref: handleRef,
            onFocus
          }), /* @__PURE__ */ (0, _jsxRuntime.jsx)("div", {
            tabIndex: 0,
            onFocus: handleFocusSentinel,
            ref: sentinelEnd,
            "data-test": "sentinelEnd"
          })]
        });
      }
      true ? Unstable_TrapFocus.propTypes = {
        children: _utils.elementAcceptingRef,
        disableAutoFocus: _propTypes.default.bool,
        disableEnforceFocus: _propTypes.default.bool,
        disableRestoreFocus: _propTypes.default.bool,
        getTabbable: _propTypes.default.func,
        isEnabled: _propTypes.default.func,
        open: _propTypes.default.bool.isRequired
      } : void 0;
      if (true) {
        Unstable_TrapFocus["propTypes"] = (0, _utils.exactProp)(Unstable_TrapFocus.propTypes);
      }
      var _default = Unstable_TrapFocus;
      exports.default = _default;
    }
  });

  // node_modules/@mui/core/node/Unstable_TrapFocus/index.js
  var require_Unstable_TrapFocus2 = __commonJS({
    "node_modules/@mui/core/node/Unstable_TrapFocus/index.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      Object.defineProperty(exports, "default", {
        enumerable: true,
        get: function() {
          return _Unstable_TrapFocus.default;
        }
      });
      var _Unstable_TrapFocus = _interopRequireDefault(require_Unstable_TrapFocus());
    }
  });

  // node_modules/@mui/core/node/ModalUnstyled/modalUnstyledClasses.js
  var require_modalUnstyledClasses = __commonJS({
    "node_modules/@mui/core/node/ModalUnstyled/modalUnstyledClasses.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      exports.getModalUtilityClass = getModalUtilityClass;
      var _generateUtilityClasses = _interopRequireDefault(require_generateUtilityClasses2());
      var _generateUtilityClass = _interopRequireDefault(require_generateUtilityClass2());
      function getModalUtilityClass(slot) {
        return (0, _generateUtilityClass.default)("MuiModal", slot);
      }
      var modalUnstyledClasses = (0, _generateUtilityClasses.default)("MuiModal", ["root", "hidden"]);
      var _default = modalUnstyledClasses;
      exports.default = _default;
    }
  });

  // node_modules/@mui/core/node/ModalUnstyled/ModalUnstyled.js
  var require_ModalUnstyled = __commonJS({
    "node_modules/@mui/core/node/ModalUnstyled/ModalUnstyled.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _extends22 = _interopRequireDefault(require_extends());
      var _objectWithoutPropertiesLoose22 = _interopRequireDefault(require_objectWithoutPropertiesLoose());
      var React40 = _interopRequireWildcard(require_react());
      var _propTypes = _interopRequireDefault(require_prop_types());
      var _clsx = _interopRequireDefault(require_clsx());
      var _utils = require_utils();
      var _composeClasses = _interopRequireDefault(require_composeClasses2());
      var _isHostComponent = _interopRequireDefault(require_isHostComponent());
      var _Portal = _interopRequireDefault(require_Portal2());
      var _ModalManager = _interopRequireWildcard(require_ModalManager());
      var _Unstable_TrapFocus = _interopRequireDefault(require_Unstable_TrapFocus2());
      var _modalUnstyledClasses = require_modalUnstyledClasses();
      var _jsxRuntime = require_jsx_runtime();
      var _excluded21 = ["BackdropComponent", "BackdropProps", "children", "classes", "className", "closeAfterTransition", "component", "components", "componentsProps", "container", "disableAutoFocus", "disableEnforceFocus", "disableEscapeKeyDown", "disablePortal", "disableRestoreFocus", "disableScrollLock", "hideBackdrop", "keepMounted", "manager", "onBackdropClick", "onClose", "onKeyDown", "open", "theme", "onTransitionEnter", "onTransitionExited"];
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
      var useUtilityClasses12 = (ownerState) => {
        const {
          open,
          exited,
          classes
        } = ownerState;
        const slots = {
          root: ["root", !open && exited && "hidden"]
        };
        return (0, _composeClasses.default)(slots, _modalUnstyledClasses.getModalUtilityClass, classes);
      };
      function getContainer(container) {
        return typeof container === "function" ? container() : container;
      }
      function getHasTransition(props) {
        return props.children ? props.children.props.hasOwnProperty("in") : false;
      }
      var defaultManager = new _ModalManager.default();
      var ModalUnstyled = /* @__PURE__ */ React40.forwardRef(function ModalUnstyled2(props, ref) {
        const {
          BackdropComponent,
          BackdropProps,
          children,
          classes: classesProp,
          className,
          closeAfterTransition = false,
          component = "div",
          components = {},
          componentsProps = {},
          container,
          disableAutoFocus = false,
          disableEnforceFocus = false,
          disableEscapeKeyDown = false,
          disablePortal = false,
          disableRestoreFocus = false,
          disableScrollLock = false,
          hideBackdrop = false,
          keepMounted = false,
          manager = defaultManager,
          onBackdropClick,
          onClose,
          onKeyDown,
          open,
          theme,
          onTransitionEnter,
          onTransitionExited
        } = props, other = (0, _objectWithoutPropertiesLoose22.default)(props, _excluded21);
        const [exited, setExited] = React40.useState(true);
        const modal = React40.useRef({});
        const mountNodeRef = React40.useRef(null);
        const modalRef = React40.useRef(null);
        const handleRef = (0, _utils.unstable_useForkRef)(modalRef, ref);
        const hasTransition = getHasTransition(props);
        const getDoc = () => (0, _utils.unstable_ownerDocument)(mountNodeRef.current);
        const getModal = () => {
          modal.current.modalRef = modalRef.current;
          modal.current.mountNode = mountNodeRef.current;
          return modal.current;
        };
        const handleMounted = () => {
          manager.mount(getModal(), {
            disableScrollLock
          });
          modalRef.current.scrollTop = 0;
        };
        const handleOpen = (0, _utils.unstable_useEventCallback)(() => {
          const resolvedContainer = getContainer(container) || getDoc().body;
          manager.add(getModal(), resolvedContainer);
          if (modalRef.current) {
            handleMounted();
          }
        });
        const isTopModal = React40.useCallback(() => manager.isTopModal(getModal()), [manager]);
        const handlePortalRef = (0, _utils.unstable_useEventCallback)((node) => {
          mountNodeRef.current = node;
          if (!node) {
            return;
          }
          if (open && isTopModal()) {
            handleMounted();
          } else {
            (0, _ModalManager.ariaHidden)(modalRef.current, true);
          }
        });
        const handleClose = React40.useCallback(() => {
          manager.remove(getModal());
        }, [manager]);
        React40.useEffect(() => {
          return () => {
            handleClose();
          };
        }, [handleClose]);
        React40.useEffect(() => {
          if (open) {
            handleOpen();
          } else if (!hasTransition || !closeAfterTransition) {
            handleClose();
          }
        }, [open, handleClose, hasTransition, closeAfterTransition, handleOpen]);
        const ownerState = (0, _extends22.default)({}, props, {
          classes: classesProp,
          closeAfterTransition,
          disableAutoFocus,
          disableEnforceFocus,
          disableEscapeKeyDown,
          disablePortal,
          disableRestoreFocus,
          disableScrollLock,
          exited,
          hideBackdrop,
          keepMounted
        });
        const classes = useUtilityClasses12(ownerState);
        if (!keepMounted && !open && (!hasTransition || exited)) {
          return null;
        }
        const handleEnter = () => {
          setExited(false);
          if (onTransitionEnter) {
            onTransitionEnter();
          }
        };
        const handleExited = () => {
          setExited(true);
          if (onTransitionExited) {
            onTransitionExited();
          }
          if (closeAfterTransition) {
            handleClose();
          }
        };
        const handleBackdropClick = (event) => {
          if (event.target !== event.currentTarget) {
            return;
          }
          if (onBackdropClick) {
            onBackdropClick(event);
          }
          if (onClose) {
            onClose(event, "backdropClick");
          }
        };
        const handleKeyDown = (event) => {
          if (onKeyDown) {
            onKeyDown(event);
          }
          if (event.key !== "Escape" || !isTopModal()) {
            return;
          }
          if (!disableEscapeKeyDown) {
            event.stopPropagation();
            if (onClose) {
              onClose(event, "escapeKeyDown");
            }
          }
        };
        const childProps = {};
        if (children.props.tabIndex === void 0) {
          childProps.tabIndex = "-1";
        }
        if (hasTransition) {
          childProps.onEnter = (0, _utils.unstable_createChainedFunction)(handleEnter, children.props.onEnter);
          childProps.onExited = (0, _utils.unstable_createChainedFunction)(handleExited, children.props.onExited);
        }
        const Root = components.Root || component;
        const rootProps = componentsProps.root || {};
        return /* @__PURE__ */ (0, _jsxRuntime.jsx)(_Portal.default, {
          ref: handlePortalRef,
          container,
          disablePortal,
          children: /* @__PURE__ */ (0, _jsxRuntime.jsxs)(Root, (0, _extends22.default)({
            role: "presentation"
          }, rootProps, !(0, _isHostComponent.default)(Root) && {
            as: component,
            ownerState: (0, _extends22.default)({}, ownerState, rootProps.ownerState),
            theme
          }, other, {
            ref: handleRef,
            onKeyDown: handleKeyDown,
            className: (0, _clsx.default)(classes.root, rootProps.className, className),
            children: [!hideBackdrop && BackdropComponent ? /* @__PURE__ */ (0, _jsxRuntime.jsx)(BackdropComponent, (0, _extends22.default)({
              open,
              onClick: handleBackdropClick
            }, BackdropProps)) : null, /* @__PURE__ */ (0, _jsxRuntime.jsx)(_Unstable_TrapFocus.default, {
              disableEnforceFocus,
              disableAutoFocus,
              disableRestoreFocus,
              isEnabled: isTopModal,
              open,
              children: /* @__PURE__ */ React40.cloneElement(children, childProps)
            })]
          }))
        });
      });
      true ? ModalUnstyled.propTypes = {
        BackdropComponent: _propTypes.default.elementType,
        BackdropProps: _propTypes.default.object,
        children: _utils.elementAcceptingRef.isRequired,
        classes: _propTypes.default.object,
        className: _propTypes.default.string,
        closeAfterTransition: _propTypes.default.bool,
        component: _propTypes.default.elementType,
        components: _propTypes.default.shape({
          Root: _propTypes.default.elementType
        }),
        componentsProps: _propTypes.default.object,
        container: _propTypes.default.oneOfType([_utils.HTMLElementType, _propTypes.default.func]),
        disableAutoFocus: _propTypes.default.bool,
        disableEnforceFocus: _propTypes.default.bool,
        disableEscapeKeyDown: _propTypes.default.bool,
        disablePortal: _propTypes.default.bool,
        disableRestoreFocus: _propTypes.default.bool,
        disableScrollLock: _propTypes.default.bool,
        hideBackdrop: _propTypes.default.bool,
        keepMounted: _propTypes.default.bool,
        onBackdropClick: _propTypes.default.func,
        onClose: _propTypes.default.func,
        onKeyDown: _propTypes.default.func,
        open: _propTypes.default.bool.isRequired
      } : void 0;
      var _default = ModalUnstyled;
      exports.default = _default;
    }
  });

  // node_modules/@mui/core/node/ModalUnstyled/index.js
  var require_ModalUnstyled2 = __commonJS({
    "node_modules/@mui/core/node/ModalUnstyled/index.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      Object.defineProperty(exports, "ModalManager", {
        enumerable: true,
        get: function() {
          return _ModalManager.default;
        }
      });
      Object.defineProperty(exports, "default", {
        enumerable: true,
        get: function() {
          return _ModalUnstyled.default;
        }
      });
      Object.defineProperty(exports, "getModalUtilityClass", {
        enumerable: true,
        get: function() {
          return _modalUnstyledClasses.getModalUtilityClass;
        }
      });
      Object.defineProperty(exports, "modalUnstyledClasses", {
        enumerable: true,
        get: function() {
          return _modalUnstyledClasses.default;
        }
      });
      var _ModalUnstyled = _interopRequireDefault(require_ModalUnstyled());
      var _ModalManager = _interopRequireDefault(require_ModalManager());
      var _modalUnstyledClasses = _interopRequireWildcard(require_modalUnstyledClasses());
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
    }
  });

  // node_modules/@mui/core/node/NoSsr/NoSsr.js
  var require_NoSsr = __commonJS({
    "node_modules/@mui/core/node/NoSsr/NoSsr.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var React40 = _interopRequireWildcard(require_react());
      var _propTypes = _interopRequireDefault(require_prop_types());
      var _utils = require_utils();
      var _jsxRuntime = require_jsx_runtime();
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
      function NoSsr(props) {
        const {
          children,
          defer = false,
          fallback = null
        } = props;
        const [mountedState, setMountedState] = React40.useState(false);
        (0, _utils.unstable_useEnhancedEffect)(() => {
          if (!defer) {
            setMountedState(true);
          }
        }, [defer]);
        React40.useEffect(() => {
          if (defer) {
            setMountedState(true);
          }
        }, [defer]);
        return /* @__PURE__ */ (0, _jsxRuntime.jsx)(React40.Fragment, {
          children: mountedState ? children : fallback
        });
      }
      true ? NoSsr.propTypes = {
        children: _propTypes.default.node,
        defer: _propTypes.default.bool,
        fallback: _propTypes.default.node
      } : void 0;
      if (true) {
        NoSsr["propTypes"] = (0, _utils.exactProp)(NoSsr.propTypes);
      }
      var _default = NoSsr;
      exports.default = _default;
    }
  });

  // node_modules/@mui/core/node/NoSsr/index.js
  var require_NoSsr2 = __commonJS({
    "node_modules/@mui/core/node/NoSsr/index.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      Object.defineProperty(exports, "default", {
        enumerable: true,
        get: function() {
          return _NoSsr.default;
        }
      });
      var _NoSsr = _interopRequireDefault(require_NoSsr());
    }
  });

  // node_modules/@mui/system/node_modules/@babel/runtime/helpers/interopRequireDefault.js
  var require_interopRequireDefault3 = __commonJS({
    "node_modules/@mui/system/node_modules/@babel/runtime/helpers/interopRequireDefault.js"(exports, module) {
      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          "default": obj
        };
      }
      module.exports = _interopRequireDefault;
      module.exports["default"] = module.exports, module.exports.__esModule = true;
    }
  });

  // node_modules/@mui/styled-engine/node_modules/@babel/runtime/helpers/interopRequireDefault.js
  var require_interopRequireDefault4 = __commonJS({
    "node_modules/@mui/styled-engine/node_modules/@babel/runtime/helpers/interopRequireDefault.js"(exports, module) {
      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          "default": obj
        };
      }
      module.exports = _interopRequireDefault;
      module.exports["default"] = module.exports, module.exports.__esModule = true;
    }
  });

  // node_modules/@emotion/styled/node_modules/@babel/runtime/helpers/extends.js
  var require_extends3 = __commonJS({
    "node_modules/@emotion/styled/node_modules/@babel/runtime/helpers/extends.js"(exports, module) {
      function _extends4() {
        module.exports = _extends4 = Object.assign || function(target) {
          for (var i2 = 1; i2 < arguments.length; i2++) {
            var source = arguments[i2];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };
        module.exports["default"] = module.exports, module.exports.__esModule = true;
        return _extends4.apply(this, arguments);
      }
      module.exports = _extends4;
      module.exports["default"] = module.exports, module.exports.__esModule = true;
    }
  });

  // node_modules/@emotion/memoize/dist/emotion-memoize.browser.cjs.js
  var require_emotion_memoize_browser_cjs = __commonJS({
    "node_modules/@emotion/memoize/dist/emotion-memoize.browser.cjs.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      function memoize2(fn) {
        var cache = /* @__PURE__ */ Object.create(null);
        return function(arg) {
          if (cache[arg] === void 0)
            cache[arg] = fn(arg);
          return cache[arg];
        };
      }
      exports.default = memoize2;
    }
  });

  // node_modules/@emotion/is-prop-valid/dist/emotion-is-prop-valid.browser.cjs.js
  var require_emotion_is_prop_valid_browser_cjs = __commonJS({
    "node_modules/@emotion/is-prop-valid/dist/emotion-is-prop-valid.browser.cjs.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      var memoize2 = require_emotion_memoize_browser_cjs();
      function _interopDefault(e2) {
        return e2 && e2.__esModule ? e2 : { "default": e2 };
      }
      var memoize__default = /* @__PURE__ */ _interopDefault(memoize2);
      var reactPropsRegex2 = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/;
      var isPropValid = /* @__PURE__ */ memoize__default["default"](function(prop) {
        return reactPropsRegex2.test(prop) || prop.charCodeAt(0) === 111 && prop.charCodeAt(1) === 110 && prop.charCodeAt(2) < 91;
      });
      exports.default = isPropValid;
    }
  });

  // node_modules/@emotion/sheet/dist/emotion-sheet.browser.cjs.js
  var require_emotion_sheet_browser_cjs = __commonJS({
    "node_modules/@emotion/sheet/dist/emotion-sheet.browser.cjs.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      function sheetForTag(tag) {
        if (tag.sheet) {
          return tag.sheet;
        }
        for (var i2 = 0; i2 < document.styleSheets.length; i2++) {
          if (document.styleSheets[i2].ownerNode === tag) {
            return document.styleSheets[i2];
          }
        }
      }
      function createStyleElement(options) {
        var tag = document.createElement("style");
        tag.setAttribute("data-emotion", options.key);
        if (options.nonce !== void 0) {
          tag.setAttribute("nonce", options.nonce);
        }
        tag.appendChild(document.createTextNode(""));
        tag.setAttribute("data-s", "");
        return tag;
      }
      var StyleSheet = /* @__PURE__ */ function() {
        function StyleSheet2(options) {
          var _this = this;
          this._insertTag = function(tag) {
            var before;
            if (_this.tags.length === 0) {
              if (_this.insertionPoint) {
                before = _this.insertionPoint.nextSibling;
              } else if (_this.prepend) {
                before = _this.container.firstChild;
              } else {
                before = _this.before;
              }
            } else {
              before = _this.tags[_this.tags.length - 1].nextSibling;
            }
            _this.container.insertBefore(tag, before);
            _this.tags.push(tag);
          };
          this.isSpeedy = options.speedy === void 0 ? false : options.speedy;
          this.tags = [];
          this.ctr = 0;
          this.nonce = options.nonce;
          this.key = options.key;
          this.container = options.container;
          this.prepend = options.prepend;
          this.insertionPoint = options.insertionPoint;
          this.before = null;
        }
        var _proto = StyleSheet2.prototype;
        _proto.hydrate = function hydrate(nodes) {
          nodes.forEach(this._insertTag);
        };
        _proto.insert = function insert(rule) {
          if (this.ctr % (this.isSpeedy ? 65e3 : 1) === 0) {
            this._insertTag(createStyleElement(this));
          }
          var tag = this.tags[this.tags.length - 1];
          if (true) {
            var isImportRule = rule.charCodeAt(0) === 64 && rule.charCodeAt(1) === 105;
            if (isImportRule && this._alreadyInsertedOrderInsensitiveRule) {
              console.error("You're attempting to insert the following rule:\n" + rule + "\n\n`@import` rules must be before all other types of rules in a stylesheet but other rules have already been inserted. Please ensure that `@import` rules are before all other rules.");
            }
            this._alreadyInsertedOrderInsensitiveRule = this._alreadyInsertedOrderInsensitiveRule || !isImportRule;
          }
          if (this.isSpeedy) {
            var sheet = sheetForTag(tag);
            try {
              sheet.insertRule(rule, sheet.cssRules.length);
            } catch (e2) {
              if (!/:(-moz-placeholder|-moz-focus-inner|-moz-focusring|-ms-input-placeholder|-moz-read-write|-moz-read-only|-ms-clear){/.test(rule)) {
                console.error('There was a problem inserting the following rule: "' + rule + '"', e2);
              }
            }
          } else {
            tag.appendChild(document.createTextNode(rule));
          }
          this.ctr++;
        };
        _proto.flush = function flush() {
          this.tags.forEach(function(tag) {
            return tag.parentNode && tag.parentNode.removeChild(tag);
          });
          this.tags = [];
          this.ctr = 0;
          if (true) {
            this._alreadyInsertedOrderInsensitiveRule = false;
          }
        };
        return StyleSheet2;
      }();
      exports.StyleSheet = StyleSheet;
    }
  });

  // node_modules/stylis/dist/umd/stylis.js
  var require_stylis = __commonJS({
    "node_modules/stylis/dist/umd/stylis.js"(exports, module) {
      (function(e2, r3) {
        typeof exports === "object" && typeof module !== "undefined" ? r3(exports) : typeof define === "function" && define.amd ? define(["exports"], r3) : (e2 = e2 || self, r3(e2.stylis = {}));
      })(exports, function(e2) {
        "use strict";
        var r3 = "-ms-";
        var a2 = "-moz-";
        var c2 = "-webkit-";
        var t2 = "comm";
        var n2 = "rule";
        var s2 = "decl";
        var i2 = "@page";
        var u2 = "@media";
        var o2 = "@import";
        var f2 = "@charset";
        var l2 = "@viewport";
        var h2 = "@supports";
        var p = "@document";
        var v2 = "@namespace";
        var b2 = "@keyframes";
        var m = "@font-face";
        var w2 = "@counter-style";
        var d2 = "@font-feature-values";
        var $2 = Math.abs;
        var k2 = String.fromCharCode;
        function g2(e3, r4) {
          return (((r4 << 2 ^ A2(e3, 0)) << 2 ^ A2(e3, 1)) << 2 ^ A2(e3, 2)) << 2 ^ A2(e3, 3);
        }
        function x2(e3) {
          return e3.trim();
        }
        function E3(e3, r4) {
          return (e3 = r4.exec(e3)) ? e3[0] : e3;
        }
        function y2(e3, r4, a3) {
          return e3.replace(r4, a3);
        }
        function T2(e3, r4) {
          return e3.indexOf(r4);
        }
        function A2(e3, r4) {
          return e3.charCodeAt(r4) | 0;
        }
        function O2(e3, r4, a3) {
          return e3.slice(r4, a3);
        }
        function M2(e3) {
          return e3.length;
        }
        function C2(e3) {
          return e3.length;
        }
        function S2(e3, r4) {
          return r4.push(e3), e3;
        }
        function R2(e3, r4) {
          return e3.map(r4).join("");
        }
        e2.line = 1;
        e2.column = 1;
        e2.length = 0;
        e2.position = 0;
        e2.character = 0;
        e2.characters = "";
        function z2(r4, a3, c3, t3, n3, s3, i3) {
          return { value: r4, root: a3, parent: c3, type: t3, props: n3, children: s3, line: e2.line, column: e2.column, length: i3, return: "" };
        }
        function N2(e3, r4, a3) {
          return z2(e3, r4.root, r4.parent, a3, r4.props, r4.children, 0);
        }
        function P2() {
          return e2.character;
        }
        function U2() {
          e2.character = e2.position > 0 ? A2(e2.characters, --e2.position) : 0;
          if (e2.column--, e2.character === 10)
            e2.column = 1, e2.line--;
          return e2.character;
        }
        function _3() {
          e2.character = e2.position < e2.length ? A2(e2.characters, e2.position++) : 0;
          if (e2.column++, e2.character === 10)
            e2.column = 1, e2.line++;
          return e2.character;
        }
        function j2() {
          return A2(e2.characters, e2.position);
        }
        function F3() {
          return e2.position;
        }
        function I3(r4, a3) {
          return O2(e2.characters, r4, a3);
        }
        function L2(e3) {
          switch (e3) {
            case 0:
            case 9:
            case 10:
            case 13:
            case 32:
              return 5;
            case 33:
            case 43:
            case 44:
            case 47:
            case 62:
            case 64:
            case 126:
            case 59:
            case 123:
            case 125:
              return 4;
            case 58:
              return 3;
            case 34:
            case 39:
            case 40:
            case 91:
              return 2;
            case 41:
            case 93:
              return 1;
          }
          return 0;
        }
        function D3(r4) {
          return e2.line = e2.column = 1, e2.length = M2(e2.characters = r4), e2.position = 0, [];
        }
        function K2(r4) {
          return e2.characters = "", r4;
        }
        function V2(r4) {
          return x2(I3(e2.position - 1, H3(r4 === 91 ? r4 + 2 : r4 === 40 ? r4 + 1 : r4)));
        }
        function W2(e3) {
          return K2(B3(D3(e3)));
        }
        function Y2(r4) {
          while (e2.character = j2())
            if (e2.character < 33)
              _3();
            else
              break;
          return L2(r4) > 2 || L2(e2.character) > 3 ? "" : " ";
        }
        function B3(r4) {
          while (_3())
            switch (L2(e2.character)) {
              case 0:
                S2(q2(e2.position - 1), r4);
                break;
              case 2:
                S2(V2(e2.character), r4);
                break;
              default:
                S2(k2(e2.character), r4);
            }
          return r4;
        }
        function G2(r4, a3) {
          while (--a3 && _3())
            if (e2.character < 48 || e2.character > 102 || e2.character > 57 && e2.character < 65 || e2.character > 70 && e2.character < 97)
              break;
          return I3(r4, F3() + (a3 < 6 && j2() == 32 && _3() == 32));
        }
        function H3(r4) {
          while (_3())
            switch (e2.character) {
              case r4:
                return e2.position;
              case 34:
              case 39:
                return H3(r4 === 34 || r4 === 39 ? r4 : e2.character);
              case 40:
                if (r4 === 41)
                  H3(r4);
                break;
              case 92:
                _3();
                break;
            }
          return e2.position;
        }
        function Z2(r4, a3) {
          while (_3())
            if (r4 + e2.character === 47 + 10)
              break;
            else if (r4 + e2.character === 42 + 42 && j2() === 47)
              break;
          return "/*" + I3(a3, e2.position - 1) + "*" + k2(r4 === 47 ? r4 : _3());
        }
        function q2(r4) {
          while (!L2(j2()))
            _3();
          return I3(r4, e2.position);
        }
        function J3(e3) {
          return K2(Q2("", null, null, null, [""], e3 = D3(e3), 0, [0], e3));
        }
        function Q2(e3, r4, a3, c3, t3, n3, s3, i3, u3) {
          var o3 = 0;
          var f3 = 0;
          var l3 = s3;
          var h3 = 0;
          var p2 = 0;
          var v3 = 0;
          var b3 = 1;
          var m2 = 1;
          var w3 = 1;
          var d3 = 0;
          var $3 = "";
          var g3 = t3;
          var x3 = n3;
          var E4 = c3;
          var T3 = $3;
          while (m2)
            switch (v3 = d3, d3 = _3()) {
              case 34:
              case 39:
              case 91:
              case 40:
                T3 += V2(d3);
                break;
              case 9:
              case 10:
              case 13:
              case 32:
                T3 += Y2(v3);
                break;
              case 92:
                T3 += G2(F3() - 1, 7);
                continue;
              case 47:
                switch (j2()) {
                  case 42:
                  case 47:
                    S2(ee2(Z2(_3(), F3()), r4, a3), u3);
                    break;
                  default:
                    T3 += "/";
                }
                break;
              case 123 * b3:
                i3[o3++] = M2(T3) * w3;
              case 125 * b3:
              case 59:
              case 0:
                switch (d3) {
                  case 0:
                  case 125:
                    m2 = 0;
                  case 59 + f3:
                    if (p2 > 0 && M2(T3) - l3)
                      S2(p2 > 32 ? re2(T3 + ";", c3, a3, l3 - 1) : re2(y2(T3, " ", "") + ";", c3, a3, l3 - 2), u3);
                    break;
                  case 59:
                    T3 += ";";
                  default:
                    S2(E4 = X2(T3, r4, a3, o3, f3, t3, i3, $3, g3 = [], x3 = [], l3), n3);
                    if (d3 === 123)
                      if (f3 === 0)
                        Q2(T3, r4, E4, E4, g3, n3, l3, i3, x3);
                      else
                        switch (h3) {
                          case 100:
                          case 109:
                          case 115:
                            Q2(e3, E4, E4, c3 && S2(X2(e3, E4, E4, 0, 0, t3, i3, $3, t3, g3 = [], l3), x3), t3, x3, l3, i3, c3 ? g3 : x3);
                            break;
                          default:
                            Q2(T3, E4, E4, E4, [""], x3, l3, i3, x3);
                        }
                }
                o3 = f3 = p2 = 0, b3 = w3 = 1, $3 = T3 = "", l3 = s3;
                break;
              case 58:
                l3 = 1 + M2(T3), p2 = v3;
              default:
                if (b3 < 1) {
                  if (d3 == 123)
                    --b3;
                  else if (d3 == 125 && b3++ == 0 && U2() == 125)
                    continue;
                }
                switch (T3 += k2(d3), d3 * b3) {
                  case 38:
                    w3 = f3 > 0 ? 1 : (T3 += "\f", -1);
                    break;
                  case 44:
                    i3[o3++] = (M2(T3) - 1) * w3, w3 = 1;
                    break;
                  case 64:
                    if (j2() === 45)
                      T3 += V2(_3());
                    h3 = j2(), f3 = M2($3 = T3 += q2(F3())), d3++;
                    break;
                  case 45:
                    if (v3 === 45 && M2(T3) == 2)
                      b3 = 0;
                }
            }
          return n3;
        }
        function X2(e3, r4, a3, c3, t3, s3, i3, u3, o3, f3, l3) {
          var h3 = t3 - 1;
          var p2 = t3 === 0 ? s3 : [""];
          var v3 = C2(p2);
          for (var b3 = 0, m2 = 0, w3 = 0; b3 < c3; ++b3)
            for (var d3 = 0, k3 = O2(e3, h3 + 1, h3 = $2(m2 = i3[b3])), g3 = e3; d3 < v3; ++d3)
              if (g3 = x2(m2 > 0 ? p2[d3] + " " + k3 : y2(k3, /&\f/g, p2[d3])))
                o3[w3++] = g3;
          return z2(e3, r4, a3, t3 === 0 ? n2 : u3, o3, f3, l3);
        }
        function ee2(e3, r4, a3) {
          return z2(e3, r4, a3, t2, k2(P2()), O2(e3, 2, -2), 0);
        }
        function re2(e3, r4, a3, c3) {
          return z2(e3, r4, a3, s2, O2(e3, 0, c3), O2(e3, c3 + 1, -1), c3);
        }
        function ae2(e3, t3) {
          switch (g2(e3, t3)) {
            case 5103:
              return c2 + "print-" + e3 + e3;
            case 5737:
            case 4201:
            case 3177:
            case 3433:
            case 1641:
            case 4457:
            case 2921:
            case 5572:
            case 6356:
            case 5844:
            case 3191:
            case 6645:
            case 3005:
            case 6391:
            case 5879:
            case 5623:
            case 6135:
            case 4599:
            case 4855:
            case 4215:
            case 6389:
            case 5109:
            case 5365:
            case 5621:
            case 3829:
              return c2 + e3 + e3;
            case 5349:
            case 4246:
            case 4810:
            case 6968:
            case 2756:
              return c2 + e3 + a2 + e3 + r3 + e3 + e3;
            case 6828:
            case 4268:
              return c2 + e3 + r3 + e3 + e3;
            case 6165:
              return c2 + e3 + r3 + "flex-" + e3 + e3;
            case 5187:
              return c2 + e3 + y2(e3, /(\w+).+(:[^]+)/, c2 + "box-$1$2" + r3 + "flex-$1$2") + e3;
            case 5443:
              return c2 + e3 + r3 + "flex-item-" + y2(e3, /flex-|-self/, "") + e3;
            case 4675:
              return c2 + e3 + r3 + "flex-line-pack" + y2(e3, /align-content|flex-|-self/, "") + e3;
            case 5548:
              return c2 + e3 + r3 + y2(e3, "shrink", "negative") + e3;
            case 5292:
              return c2 + e3 + r3 + y2(e3, "basis", "preferred-size") + e3;
            case 6060:
              return c2 + "box-" + y2(e3, "-grow", "") + c2 + e3 + r3 + y2(e3, "grow", "positive") + e3;
            case 4554:
              return c2 + y2(e3, /([^-])(transform)/g, "$1" + c2 + "$2") + e3;
            case 6187:
              return y2(y2(y2(e3, /(zoom-|grab)/, c2 + "$1"), /(image-set)/, c2 + "$1"), e3, "") + e3;
            case 5495:
            case 3959:
              return y2(e3, /(image-set\([^]*)/, c2 + "$1$`$1");
            case 4968:
              return y2(y2(e3, /(.+:)(flex-)?(.*)/, c2 + "box-pack:$3" + r3 + "flex-pack:$3"), /s.+-b[^;]+/, "justify") + c2 + e3 + e3;
            case 4095:
            case 3583:
            case 4068:
            case 2532:
              return y2(e3, /(.+)-inline(.+)/, c2 + "$1$2") + e3;
            case 8116:
            case 7059:
            case 5753:
            case 5535:
            case 5445:
            case 5701:
            case 4933:
            case 4677:
            case 5533:
            case 5789:
            case 5021:
            case 4765:
              if (M2(e3) - 1 - t3 > 6)
                switch (A2(e3, t3 + 1)) {
                  case 109:
                    if (A2(e3, t3 + 4) !== 45)
                      break;
                  case 102:
                    return y2(e3, /(.+:)(.+)-([^]+)/, "$1" + c2 + "$2-$3$1" + a2 + (A2(e3, t3 + 3) == 108 ? "$3" : "$2-$3")) + e3;
                  case 115:
                    return ~T2(e3, "stretch") ? ae2(y2(e3, "stretch", "fill-available"), t3) + e3 : e3;
                }
              break;
            case 4949:
              if (A2(e3, t3 + 1) !== 115)
                break;
            case 6444:
              switch (A2(e3, M2(e3) - 3 - (~T2(e3, "!important") && 10))) {
                case 107:
                  return y2(e3, ":", ":" + c2) + e3;
                case 101:
                  return y2(e3, /(.+:)([^;!]+)(;|!.+)?/, "$1" + c2 + (A2(e3, 14) === 45 ? "inline-" : "") + "box$3$1" + c2 + "$2$3$1" + r3 + "$2box$3") + e3;
              }
              break;
            case 5936:
              switch (A2(e3, t3 + 11)) {
                case 114:
                  return c2 + e3 + r3 + y2(e3, /[svh]\w+-[tblr]{2}/, "tb") + e3;
                case 108:
                  return c2 + e3 + r3 + y2(e3, /[svh]\w+-[tblr]{2}/, "tb-rl") + e3;
                case 45:
                  return c2 + e3 + r3 + y2(e3, /[svh]\w+-[tblr]{2}/, "lr") + e3;
              }
              return c2 + e3 + r3 + e3 + e3;
          }
          return e3;
        }
        function ce2(e3, r4) {
          var a3 = "";
          var c3 = C2(e3);
          for (var t3 = 0; t3 < c3; t3++)
            a3 += r4(e3[t3], t3, e3, r4) || "";
          return a3;
        }
        function te2(e3, r4, a3, c3) {
          switch (e3.type) {
            case o2:
            case s2:
              return e3.return = e3.return || e3.value;
            case t2:
              return "";
            case n2:
              e3.value = e3.props.join(",");
          }
          return M2(a3 = ce2(e3.children, c3)) ? e3.return = e3.value + "{" + a3 + "}" : "";
        }
        function ne2(e3) {
          var r4 = C2(e3);
          return function(a3, c3, t3, n3) {
            var s3 = "";
            for (var i3 = 0; i3 < r4; i3++)
              s3 += e3[i3](a3, c3, t3, n3) || "";
            return s3;
          };
        }
        function se2(e3) {
          return function(r4) {
            if (!r4.root) {
              if (r4 = r4.return)
                e3(r4);
            }
          };
        }
        function ie2(e3, t3, i3, u3) {
          if (!e3.return)
            switch (e3.type) {
              case s2:
                e3.return = ae2(e3.value, e3.length);
                break;
              case b2:
                return ce2([N2(y2(e3.value, "@", "@" + c2), e3, "")], u3);
              case n2:
                if (e3.length)
                  return R2(e3.props, function(t4) {
                    switch (E3(t4, /(::plac\w+|:read-\w+)/)) {
                      case ":read-only":
                      case ":read-write":
                        return ce2([N2(y2(t4, /:(read-\w+)/, ":" + a2 + "$1"), e3, "")], u3);
                      case "::placeholder":
                        return ce2([N2(y2(t4, /:(plac\w+)/, ":" + c2 + "input-$1"), e3, ""), N2(y2(t4, /:(plac\w+)/, ":" + a2 + "$1"), e3, ""), N2(y2(t4, /:(plac\w+)/, r3 + "input-$1"), e3, "")], u3);
                    }
                    return "";
                  });
            }
        }
        function ue2(e3) {
          switch (e3.type) {
            case n2:
              e3.props = e3.props.map(function(r4) {
                return R2(W2(r4), function(r5, a3, c3) {
                  switch (A2(r5, 0)) {
                    case 12:
                      return O2(r5, 1, M2(r5));
                    case 0:
                    case 40:
                    case 43:
                    case 62:
                    case 126:
                      return r5;
                    case 58:
                      if (c3[++a3] === "global")
                        c3[a3] = "", c3[++a3] = "\f" + O2(c3[a3], a3 = 1, -1);
                    case 32:
                      return a3 === 1 ? "" : r5;
                    default:
                      switch (a3) {
                        case 0:
                          e3 = r5;
                          return C2(c3) > 1 ? "" : r5;
                        case (a3 = C2(c3) - 1):
                        case 2:
                          return a3 === 2 ? r5 + e3 + e3 : r5 + e3;
                        default:
                          return r5;
                      }
                  }
                });
              });
          }
        }
        e2.CHARSET = f2;
        e2.COMMENT = t2;
        e2.COUNTER_STYLE = w2;
        e2.DECLARATION = s2;
        e2.DOCUMENT = p;
        e2.FONT_FACE = m;
        e2.FONT_FEATURE_VALUES = d2;
        e2.IMPORT = o2;
        e2.KEYFRAMES = b2;
        e2.MEDIA = u2;
        e2.MOZ = a2;
        e2.MS = r3;
        e2.NAMESPACE = v2;
        e2.PAGE = i2;
        e2.RULESET = n2;
        e2.SUPPORTS = h2;
        e2.VIEWPORT = l2;
        e2.WEBKIT = c2;
        e2.abs = $2;
        e2.alloc = D3;
        e2.append = S2;
        e2.caret = F3;
        e2.char = P2;
        e2.charat = A2;
        e2.combine = R2;
        e2.comment = ee2;
        e2.commenter = Z2;
        e2.compile = J3;
        e2.copy = N2;
        e2.dealloc = K2;
        e2.declaration = re2;
        e2.delimit = V2;
        e2.delimiter = H3;
        e2.escaping = G2;
        e2.from = k2;
        e2.hash = g2;
        e2.identifier = q2;
        e2.indexof = T2;
        e2.match = E3;
        e2.middleware = ne2;
        e2.namespace = ue2;
        e2.next = _3;
        e2.node = z2;
        e2.parse = Q2;
        e2.peek = j2;
        e2.prefix = ae2;
        e2.prefixer = ie2;
        e2.prev = U2;
        e2.replace = y2;
        e2.ruleset = X2;
        e2.rulesheet = se2;
        e2.serialize = ce2;
        e2.sizeof = C2;
        e2.slice = I3;
        e2.stringify = te2;
        e2.strlen = M2;
        e2.substr = O2;
        e2.token = L2;
        e2.tokenize = W2;
        e2.tokenizer = B3;
        e2.trim = x2;
        e2.whitespace = Y2;
        Object.defineProperty(e2, "__esModule", { value: true });
      });
    }
  });

  // node_modules/@emotion/weak-memoize/dist/weak-memoize.browser.cjs.js
  var require_weak_memoize_browser_cjs = __commonJS({
    "node_modules/@emotion/weak-memoize/dist/weak-memoize.browser.cjs.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      var weakMemoize = function weakMemoize2(func) {
        var cache = /* @__PURE__ */ new WeakMap();
        return function(arg) {
          if (cache.has(arg)) {
            return cache.get(arg);
          }
          var ret = func(arg);
          cache.set(arg, ret);
          return ret;
        };
      };
      exports.default = weakMemoize;
    }
  });

  // node_modules/@emotion/cache/dist/emotion-cache.browser.cjs.js
  var require_emotion_cache_browser_cjs = __commonJS({
    "node_modules/@emotion/cache/dist/emotion-cache.browser.cjs.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      var sheet = require_emotion_sheet_browser_cjs();
      var stylis = require_stylis();
      require_weak_memoize_browser_cjs();
      require_emotion_memoize_browser_cjs();
      var last = function last2(arr) {
        return arr.length ? arr[arr.length - 1] : null;
      };
      var identifierWithPointTracking = function identifierWithPointTracking2(begin, points, index2) {
        var previous = 0;
        var character = 0;
        while (true) {
          previous = character;
          character = stylis.peek();
          if (previous === 38 && character === 12) {
            points[index2] = 1;
          }
          if (stylis.token(character)) {
            break;
          }
          stylis.next();
        }
        return stylis.slice(begin, stylis.position);
      };
      var toRules = function toRules2(parsed, points) {
        var index2 = -1;
        var character = 44;
        do {
          switch (stylis.token(character)) {
            case 0:
              if (character === 38 && stylis.peek() === 12) {
                points[index2] = 1;
              }
              parsed[index2] += identifierWithPointTracking(stylis.position - 1, points, index2);
              break;
            case 2:
              parsed[index2] += stylis.delimit(character);
              break;
            case 4:
              if (character === 44) {
                parsed[++index2] = stylis.peek() === 58 ? "&\f" : "";
                points[index2] = parsed[index2].length;
                break;
              }
            default:
              parsed[index2] += stylis.from(character);
          }
        } while (character = stylis.next());
        return parsed;
      };
      var getRules = function getRules2(value, points) {
        return stylis.dealloc(toRules(stylis.alloc(value), points));
      };
      var fixedElements = /* @__PURE__ */ new WeakMap();
      var compat = function compat2(element) {
        if (element.type !== "rule" || !element.parent || !element.length) {
          return;
        }
        var value = element.value, parent = element.parent;
        var isImplicitRule = element.column === parent.column && element.line === parent.line;
        while (parent.type !== "rule") {
          parent = parent.parent;
          if (!parent)
            return;
        }
        if (element.props.length === 1 && value.charCodeAt(0) !== 58 && !fixedElements.get(parent)) {
          return;
        }
        if (isImplicitRule) {
          return;
        }
        fixedElements.set(element, true);
        var points = [];
        var rules = getRules(value, points);
        var parentRules = parent.props;
        for (var i2 = 0, k2 = 0; i2 < rules.length; i2++) {
          for (var j2 = 0; j2 < parentRules.length; j2++, k2++) {
            element.props[k2] = points[i2] ? rules[i2].replace(/&\f/g, parentRules[j2]) : parentRules[j2] + " " + rules[i2];
          }
        }
      };
      var removeLabel = function removeLabel2(element) {
        if (element.type === "decl") {
          var value = element.value;
          if (value.charCodeAt(0) === 108 && value.charCodeAt(2) === 98) {
            element["return"] = "";
            element.value = "";
          }
        }
      };
      var ignoreFlag = "emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason";
      var isIgnoringComment = function isIgnoringComment2(element) {
        return !!element && element.type === "comm" && element.children.indexOf(ignoreFlag) > -1;
      };
      var createUnsafeSelectorsAlarm = function createUnsafeSelectorsAlarm2(cache) {
        return function(element, index2, children) {
          if (element.type !== "rule")
            return;
          var unsafePseudoClasses = element.value.match(/(:first|:nth|:nth-last)-child/g);
          if (unsafePseudoClasses && cache.compat !== true) {
            var prevElement = index2 > 0 ? children[index2 - 1] : null;
            if (prevElement && isIgnoringComment(last(prevElement.children))) {
              return;
            }
            unsafePseudoClasses.forEach(function(unsafePseudoClass) {
              console.error('The pseudo class "' + unsafePseudoClass + '" is potentially unsafe when doing server-side rendering. Try changing it to "' + unsafePseudoClass.split("-child")[0] + '-of-type".');
            });
          }
        };
      };
      var isImportRule = function isImportRule2(element) {
        return element.type.charCodeAt(1) === 105 && element.type.charCodeAt(0) === 64;
      };
      var isPrependedWithRegularRules = function isPrependedWithRegularRules2(index2, children) {
        for (var i2 = index2 - 1; i2 >= 0; i2--) {
          if (!isImportRule(children[i2])) {
            return true;
          }
        }
        return false;
      };
      var nullifyElement = function nullifyElement2(element) {
        element.type = "";
        element.value = "";
        element["return"] = "";
        element.children = "";
        element.props = "";
      };
      var incorrectImportAlarm = function incorrectImportAlarm2(element, index2, children) {
        if (!isImportRule(element)) {
          return;
        }
        if (element.parent) {
          console.error("`@import` rules can't be nested inside other rules. Please move it to the top level and put it before regular rules. Keep in mind that they can only be used within global styles.");
          nullifyElement(element);
        } else if (isPrependedWithRegularRules(index2, children)) {
          console.error("`@import` rules can't be after other rules. Please put your `@import` rules before your other rules.");
          nullifyElement(element);
        }
      };
      var defaultStylisPlugins = [stylis.prefixer];
      var createCache = function createCache2(options) {
        var key = options.key;
        if (!key) {
          throw new Error("You have to configure `key` for your cache. Please make sure it's unique (and not equal to 'css') as it's used for linking styles to your cache.\nIf multiple caches share the same key they might \"fight\" for each other's style elements.");
        }
        if (key === "css") {
          var ssrStyles = document.querySelectorAll("style[data-emotion]:not([data-s])");
          Array.prototype.forEach.call(ssrStyles, function(node) {
            var dataEmotionAttribute = node.getAttribute("data-emotion");
            if (dataEmotionAttribute.indexOf(" ") === -1) {
              return;
            }
            document.head.appendChild(node);
            node.setAttribute("data-s", "");
          });
        }
        var stylisPlugins = options.stylisPlugins || defaultStylisPlugins;
        if (true) {
          if (/[^a-z-]/.test(key)) {
            throw new Error('Emotion key must only contain lower case alphabetical characters and - but "' + key + '" was passed');
          }
        }
        var inserted = {};
        var container;
        var nodesToHydrate = [];
        {
          container = options.container || document.head;
          Array.prototype.forEach.call(document.querySelectorAll('style[data-emotion^="' + key + ' "]'), function(node) {
            var attrib = node.getAttribute("data-emotion").split(" ");
            for (var i2 = 1; i2 < attrib.length; i2++) {
              inserted[attrib[i2]] = true;
            }
            nodesToHydrate.push(node);
          });
        }
        var _insert;
        var omnipresentPlugins = [compat, removeLabel];
        if (true) {
          omnipresentPlugins.push(createUnsafeSelectorsAlarm({
            get compat() {
              return cache.compat;
            }
          }), incorrectImportAlarm);
        }
        {
          var currentSheet;
          var finalizingPlugins = [stylis.stringify, true ? function(element) {
            if (!element.root) {
              if (element["return"]) {
                currentSheet.insert(element["return"]);
              } else if (element.value && element.type !== stylis.COMMENT) {
                currentSheet.insert(element.value + "{}");
              }
            }
          } : stylis.rulesheet(function(rule) {
            currentSheet.insert(rule);
          })];
          var serializer = stylis.middleware(omnipresentPlugins.concat(stylisPlugins, finalizingPlugins));
          var stylis$1 = function stylis$12(styles2) {
            return stylis.serialize(stylis.compile(styles2), serializer);
          };
          _insert = function insert(selector, serialized, sheet2, shouldCache) {
            currentSheet = sheet2;
            if (serialized.map !== void 0) {
              currentSheet = {
                insert: function insert2(rule) {
                  sheet2.insert(rule + serialized.map);
                }
              };
            }
            stylis$1(selector ? selector + "{" + serialized.styles + "}" : serialized.styles);
            if (shouldCache) {
              cache.inserted[serialized.name] = true;
            }
          };
        }
        var cache = {
          key,
          sheet: new sheet.StyleSheet({
            key,
            container,
            nonce: options.nonce,
            speedy: options.speedy,
            prepend: options.prepend,
            insertionPoint: options.insertionPoint
          }),
          nonce: options.nonce,
          inserted,
          registered: {},
          insert: _insert
        };
        cache.sheet.hydrate(nodesToHydrate);
        return cache;
      };
      exports.default = createCache;
    }
  });

  // node_modules/@emotion/react/node_modules/@babel/runtime/helpers/extends.js
  var require_extends4 = __commonJS({
    "node_modules/@emotion/react/node_modules/@babel/runtime/helpers/extends.js"(exports, module) {
      function _extends4() {
        module.exports = _extends4 = Object.assign || function(target) {
          for (var i2 = 1; i2 < arguments.length; i2++) {
            var source = arguments[i2];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };
        module.exports["default"] = module.exports, module.exports.__esModule = true;
        return _extends4.apply(this, arguments);
      }
      module.exports = _extends4;
      module.exports["default"] = module.exports, module.exports.__esModule = true;
    }
  });

  // node_modules/@emotion/react/_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.cjs.js
  var require_emotion_react_isolated_hnrs_browser_cjs = __commonJS({
    "node_modules/@emotion/react/_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.cjs.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      var hoistNonReactStatics$1 = require_hoist_non_react_statics_cjs();
      function _interopDefault(e2) {
        return e2 && e2.__esModule ? e2 : { "default": e2 };
      }
      var hoistNonReactStatics__default = /* @__PURE__ */ _interopDefault(hoistNonReactStatics$1);
      var hoistNonReactStatics = function(targetComponent, sourceComponent) {
        return hoistNonReactStatics__default["default"](targetComponent, sourceComponent);
      };
      exports.default = hoistNonReactStatics;
    }
  });

  // node_modules/@emotion/utils/dist/emotion-utils.browser.cjs.js
  var require_emotion_utils_browser_cjs = __commonJS({
    "node_modules/@emotion/utils/dist/emotion-utils.browser.cjs.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      var isBrowser = true;
      function getRegisteredStyles(registered, registeredStyles, classNames) {
        var rawClassName = "";
        classNames.split(" ").forEach(function(className) {
          if (registered[className] !== void 0) {
            registeredStyles.push(registered[className] + ";");
          } else {
            rawClassName += className + " ";
          }
        });
        return rawClassName;
      }
      var insertStyles = function insertStyles2(cache, serialized, isStringTag) {
        var className = cache.key + "-" + serialized.name;
        if ((isStringTag === false || isBrowser === false) && cache.registered[className] === void 0) {
          cache.registered[className] = serialized.styles;
        }
        if (cache.inserted[serialized.name] === void 0) {
          var current = serialized;
          do {
            var maybeStyles = cache.insert(serialized === current ? "." + className : "", current, cache.sheet, true);
            current = current.next;
          } while (current !== void 0);
        }
      };
      exports.getRegisteredStyles = getRegisteredStyles;
      exports.insertStyles = insertStyles;
    }
  });

  // node_modules/@emotion/hash/dist/hash.browser.cjs.js
  var require_hash_browser_cjs = __commonJS({
    "node_modules/@emotion/hash/dist/hash.browser.cjs.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      function murmur2(str) {
        var h2 = 0;
        var k2, i2 = 0, len = str.length;
        for (; len >= 4; ++i2, len -= 4) {
          k2 = str.charCodeAt(i2) & 255 | (str.charCodeAt(++i2) & 255) << 8 | (str.charCodeAt(++i2) & 255) << 16 | (str.charCodeAt(++i2) & 255) << 24;
          k2 = (k2 & 65535) * 1540483477 + ((k2 >>> 16) * 59797 << 16);
          k2 ^= k2 >>> 24;
          h2 = (k2 & 65535) * 1540483477 + ((k2 >>> 16) * 59797 << 16) ^ (h2 & 65535) * 1540483477 + ((h2 >>> 16) * 59797 << 16);
        }
        switch (len) {
          case 3:
            h2 ^= (str.charCodeAt(i2 + 2) & 255) << 16;
          case 2:
            h2 ^= (str.charCodeAt(i2 + 1) & 255) << 8;
          case 1:
            h2 ^= str.charCodeAt(i2) & 255;
            h2 = (h2 & 65535) * 1540483477 + ((h2 >>> 16) * 59797 << 16);
        }
        h2 ^= h2 >>> 13;
        h2 = (h2 & 65535) * 1540483477 + ((h2 >>> 16) * 59797 << 16);
        return ((h2 ^ h2 >>> 15) >>> 0).toString(36);
      }
      exports.default = murmur2;
    }
  });

  // node_modules/@emotion/serialize/dist/emotion-serialize.browser.cjs.js
  var require_emotion_serialize_browser_cjs = __commonJS({
    "node_modules/@emotion/serialize/dist/emotion-serialize.browser.cjs.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      var hashString = require_hash_browser_cjs();
      var unitless = require_unitless_browser_cjs();
      var memoize2 = require_emotion_memoize_browser_cjs();
      function _interopDefault(e2) {
        return e2 && e2.__esModule ? e2 : { "default": e2 };
      }
      var hashString__default = /* @__PURE__ */ _interopDefault(hashString);
      var unitless__default = /* @__PURE__ */ _interopDefault(unitless);
      var memoize__default = /* @__PURE__ */ _interopDefault(memoize2);
      var ILLEGAL_ESCAPE_SEQUENCE_ERROR = `You have illegal escape sequence in your template literal, most likely inside content's property value.
Because you write your CSS inside a JavaScript string you actually have to do double escaping, so for example "content: '\\00d7';" should become "content: '\\\\00d7';".
You can read more about this here:
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences`;
      var UNDEFINED_AS_OBJECT_KEY_ERROR = "You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).";
      var hyphenateRegex = /[A-Z]|^ms/g;
      var animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;
      var isCustomProperty = function isCustomProperty2(property) {
        return property.charCodeAt(1) === 45;
      };
      var isProcessableValue = function isProcessableValue2(value) {
        return value != null && typeof value !== "boolean";
      };
      var processStyleName = /* @__PURE__ */ memoize__default["default"](function(styleName) {
        return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, "-$&").toLowerCase();
      });
      var processStyleValue = function processStyleValue2(key, value) {
        switch (key) {
          case "animation":
          case "animationName": {
            if (typeof value === "string") {
              return value.replace(animationRegex, function(match, p1, p2) {
                cursor2 = {
                  name: p1,
                  styles: p2,
                  next: cursor2
                };
                return p1;
              });
            }
          }
        }
        if (unitless__default["default"][key] !== 1 && !isCustomProperty(key) && typeof value === "number" && value !== 0) {
          return value + "px";
        }
        return value;
      };
      if (true) {
        contentValuePattern = /(attr|counters?|url|(((repeating-)?(linear|radial))|conic)-gradient)\(|(no-)?(open|close)-quote/;
        contentValues = ["normal", "none", "initial", "inherit", "unset"];
        oldProcessStyleValue = processStyleValue;
        msPattern = /^-ms-/;
        hyphenPattern = /-(.)/g;
        hyphenatedCache = {};
        processStyleValue = function processStyleValue2(key, value) {
          if (key === "content") {
            if (typeof value !== "string" || contentValues.indexOf(value) === -1 && !contentValuePattern.test(value) && (value.charAt(0) !== value.charAt(value.length - 1) || value.charAt(0) !== '"' && value.charAt(0) !== "'")) {
              throw new Error("You seem to be using a value for 'content' without quotes, try replacing it with `content: '\"" + value + "\"'`");
            }
          }
          var processed = oldProcessStyleValue(key, value);
          if (processed !== "" && !isCustomProperty(key) && key.indexOf("-") !== -1 && hyphenatedCache[key] === void 0) {
            hyphenatedCache[key] = true;
            console.error("Using kebab-case for css properties in objects is not supported. Did you mean " + key.replace(msPattern, "ms-").replace(hyphenPattern, function(str, _char) {
              return _char.toUpperCase();
            }) + "?");
          }
          return processed;
        };
      }
      var contentValuePattern;
      var contentValues;
      var oldProcessStyleValue;
      var msPattern;
      var hyphenPattern;
      var hyphenatedCache;
      function handleInterpolation(mergedProps, registered, interpolation) {
        if (interpolation == null) {
          return "";
        }
        if (interpolation.__emotion_styles !== void 0) {
          if (interpolation.toString() === "NO_COMPONENT_SELECTOR") {
            throw new Error("Component selectors can only be used in conjunction with @emotion/babel-plugin.");
          }
          return interpolation;
        }
        switch (typeof interpolation) {
          case "boolean": {
            return "";
          }
          case "object": {
            if (interpolation.anim === 1) {
              cursor2 = {
                name: interpolation.name,
                styles: interpolation.styles,
                next: cursor2
              };
              return interpolation.name;
            }
            if (interpolation.styles !== void 0) {
              var next = interpolation.next;
              if (next !== void 0) {
                while (next !== void 0) {
                  cursor2 = {
                    name: next.name,
                    styles: next.styles,
                    next: cursor2
                  };
                  next = next.next;
                }
              }
              var styles2 = interpolation.styles + ";";
              if (interpolation.map !== void 0) {
                styles2 += interpolation.map;
              }
              return styles2;
            }
            return createStringFromObject(mergedProps, registered, interpolation);
          }
          case "function": {
            if (mergedProps !== void 0) {
              var previousCursor = cursor2;
              var result = interpolation(mergedProps);
              cursor2 = previousCursor;
              return handleInterpolation(mergedProps, registered, result);
            } else if (true) {
              console.error("Functions that are interpolated in css calls will be stringified.\nIf you want to have a css call based on props, create a function that returns a css call like this\nlet dynamicStyle = (props) => css`color: ${props.color}`\nIt can be called directly with props or interpolated in a styled call like this\nlet SomeComponent = styled('div')`${dynamicStyle}`");
            }
            break;
          }
          case "string":
            if (true) {
              var matched = [];
              var replaced = interpolation.replace(animationRegex, function(match, p1, p2) {
                var fakeVarName = "animation" + matched.length;
                matched.push("const " + fakeVarName + " = keyframes`" + p2.replace(/^@keyframes animation-\w+/, "") + "`");
                return "${" + fakeVarName + "}";
              });
              if (matched.length) {
                console.error("`keyframes` output got interpolated into plain string, please wrap it with `css`.\n\nInstead of doing this:\n\n" + [].concat(matched, ["`" + replaced + "`"]).join("\n") + "\n\nYou should wrap it with `css` like this:\n\n" + ("css`" + replaced + "`"));
              }
            }
            break;
        }
        if (registered == null) {
          return interpolation;
        }
        var cached = registered[interpolation];
        return cached !== void 0 ? cached : interpolation;
      }
      function createStringFromObject(mergedProps, registered, obj) {
        var string = "";
        if (Array.isArray(obj)) {
          for (var i2 = 0; i2 < obj.length; i2++) {
            string += handleInterpolation(mergedProps, registered, obj[i2]) + ";";
          }
        } else {
          for (var _key in obj) {
            var value = obj[_key];
            if (typeof value !== "object") {
              if (registered != null && registered[value] !== void 0) {
                string += _key + "{" + registered[value] + "}";
              } else if (isProcessableValue(value)) {
                string += processStyleName(_key) + ":" + processStyleValue(_key, value) + ";";
              }
            } else {
              if (_key === "NO_COMPONENT_SELECTOR" && true) {
                throw new Error("Component selectors can only be used in conjunction with @emotion/babel-plugin.");
              }
              if (Array.isArray(value) && typeof value[0] === "string" && (registered == null || registered[value[0]] === void 0)) {
                for (var _i = 0; _i < value.length; _i++) {
                  if (isProcessableValue(value[_i])) {
                    string += processStyleName(_key) + ":" + processStyleValue(_key, value[_i]) + ";";
                  }
                }
              } else {
                var interpolated = handleInterpolation(mergedProps, registered, value);
                switch (_key) {
                  case "animation":
                  case "animationName": {
                    string += processStyleName(_key) + ":" + interpolated + ";";
                    break;
                  }
                  default: {
                    if (_key === "undefined") {
                      console.error(UNDEFINED_AS_OBJECT_KEY_ERROR);
                    }
                    string += _key + "{" + interpolated + "}";
                  }
                }
              }
            }
          }
        }
        return string;
      }
      var labelPattern = /label:\s*([^\s;\n{]+)\s*(;|$)/g;
      var sourceMapPattern;
      if (true) {
        sourceMapPattern = /\/\*#\ssourceMappingURL=data:application\/json;\S+\s+\*\//g;
      }
      var cursor2;
      var serializeStyles = function serializeStyles2(args, registered, mergedProps) {
        if (args.length === 1 && typeof args[0] === "object" && args[0] !== null && args[0].styles !== void 0) {
          return args[0];
        }
        var stringMode = true;
        var styles2 = "";
        cursor2 = void 0;
        var strings = args[0];
        if (strings == null || strings.raw === void 0) {
          stringMode = false;
          styles2 += handleInterpolation(mergedProps, registered, strings);
        } else {
          if (strings[0] === void 0) {
            console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);
          }
          styles2 += strings[0];
        }
        for (var i2 = 1; i2 < args.length; i2++) {
          styles2 += handleInterpolation(mergedProps, registered, args[i2]);
          if (stringMode) {
            if (strings[i2] === void 0) {
              console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);
            }
            styles2 += strings[i2];
          }
        }
        var sourceMap;
        if (true) {
          styles2 = styles2.replace(sourceMapPattern, function(match2) {
            sourceMap = match2;
            return "";
          });
        }
        labelPattern.lastIndex = 0;
        var identifierName = "";
        var match;
        while ((match = labelPattern.exec(styles2)) !== null) {
          identifierName += "-" + match[1];
        }
        var name = hashString__default["default"](styles2) + identifierName;
        if (true) {
          return {
            name,
            styles: styles2,
            map: sourceMap,
            next: cursor2,
            toString: function toString() {
              return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).";
            }
          };
        }
        return {
          name,
          styles: styles2,
          next: cursor2
        };
      };
      exports.serializeStyles = serializeStyles;
    }
  });

  // node_modules/@emotion/react/dist/emotion-element-309b0b58.browser.cjs.js
  var require_emotion_element_309b0b58_browser_cjs = __commonJS({
    "node_modules/@emotion/react/dist/emotion-element-309b0b58.browser.cjs.js"(exports) {
      "use strict";
      var React40 = require_react();
      var createCache = require_emotion_cache_browser_cjs();
      var _extends4 = require_extends4();
      var weakMemoize = require_weak_memoize_browser_cjs();
      var _isolatedHnrs_dist_emotionReact_isolatedHnrs = require_emotion_react_isolated_hnrs_browser_cjs();
      var utils = require_emotion_utils_browser_cjs();
      var serialize = require_emotion_serialize_browser_cjs();
      function _interopDefault(e2) {
        return e2 && e2.__esModule ? e2 : { "default": e2 };
      }
      var createCache__default = /* @__PURE__ */ _interopDefault(createCache);
      var _extends__default = /* @__PURE__ */ _interopDefault(_extends4);
      var weakMemoize__default = /* @__PURE__ */ _interopDefault(weakMemoize);
      var hasOwnProperty = {}.hasOwnProperty;
      var EmotionCacheContext = /* @__PURE__ */ React40.createContext(typeof HTMLElement !== "undefined" ? /* @__PURE__ */ createCache__default["default"]({
        key: "css"
      }) : null);
      if (true) {
        EmotionCacheContext.displayName = "EmotionCacheContext";
      }
      var CacheProvider = EmotionCacheContext.Provider;
      var __unsafe_useEmotionCache = function useEmotionCache() {
        return React40.useContext(EmotionCacheContext);
      };
      var withEmotionCache = function withEmotionCache2(func) {
        return /* @__PURE__ */ React40.forwardRef(function(props, ref) {
          var cache = React40.useContext(EmotionCacheContext);
          return func(props, cache, ref);
        });
      };
      var ThemeContext = /* @__PURE__ */ React40.createContext({});
      if (true) {
        ThemeContext.displayName = "EmotionThemeContext";
      }
      var useTheme3 = function useTheme4() {
        return React40.useContext(ThemeContext);
      };
      var getTheme = function getTheme2(outerTheme, theme) {
        if (typeof theme === "function") {
          var mergedTheme = theme(outerTheme);
          if (mergedTheme == null || typeof mergedTheme !== "object" || Array.isArray(mergedTheme)) {
            throw new Error("[ThemeProvider] Please return an object from your theme function, i.e. theme={() => ({})}!");
          }
          return mergedTheme;
        }
        if (theme == null || typeof theme !== "object" || Array.isArray(theme)) {
          throw new Error("[ThemeProvider] Please make your theme prop a plain object");
        }
        return _extends__default["default"]({}, outerTheme, theme);
      };
      var createCacheWithTheme = /* @__PURE__ */ weakMemoize__default["default"](function(outerTheme) {
        return weakMemoize__default["default"](function(theme) {
          return getTheme(outerTheme, theme);
        });
      });
      var ThemeProvider = function ThemeProvider2(props) {
        var theme = React40.useContext(ThemeContext);
        if (props.theme !== theme) {
          theme = createCacheWithTheme(theme)(props.theme);
        }
        return /* @__PURE__ */ React40.createElement(ThemeContext.Provider, {
          value: theme
        }, props.children);
      };
      function withTheme(Component) {
        var componentName = Component.displayName || Component.name || "Component";
        var render = function render2(props, ref) {
          var theme = React40.useContext(ThemeContext);
          return /* @__PURE__ */ React40.createElement(Component, _extends__default["default"]({
            theme,
            ref
          }, props));
        };
        var WithTheme = /* @__PURE__ */ React40.forwardRef(render);
        WithTheme.displayName = "WithTheme(" + componentName + ")";
        return _isolatedHnrs_dist_emotionReact_isolatedHnrs["default"](WithTheme, Component);
      }
      var sanitizeIdentifier = function sanitizeIdentifier2(identifier) {
        return identifier.replace(/\$/g, "-");
      };
      var typePropName = "__EMOTION_TYPE_PLEASE_DO_NOT_USE__";
      var labelPropName = "__EMOTION_LABEL_PLEASE_DO_NOT_USE__";
      var createEmotionProps = function createEmotionProps2(type, props) {
        if (typeof props.css === "string" && props.css.indexOf(":") !== -1) {
          throw new Error("Strings are not allowed as css prop values, please wrap it in a css template literal from '@emotion/react' like this: css`" + props.css + "`");
        }
        var newProps = {};
        for (var key in props) {
          if (hasOwnProperty.call(props, key)) {
            newProps[key] = props[key];
          }
        }
        newProps[typePropName] = type;
        if (true) {
          var error = new Error();
          if (error.stack) {
            var match = error.stack.match(/at (?:Object\.|Module\.|)(?:jsx|createEmotionProps).*\n\s+at (?:Object\.|)([A-Z][A-Za-z0-9$]+) /);
            if (!match) {
              match = error.stack.match(/.*\n([A-Z][A-Za-z0-9$]+)@/);
            }
            if (match) {
              newProps[labelPropName] = sanitizeIdentifier(match[1]);
            }
          }
        }
        return newProps;
      };
      var Noop = function Noop2() {
        return null;
      };
      var Emotion = /* @__PURE__ */ withEmotionCache(function(props, cache, ref) {
        var cssProp = props.css;
        if (typeof cssProp === "string" && cache.registered[cssProp] !== void 0) {
          cssProp = cache.registered[cssProp];
        }
        var type = props[typePropName];
        var registeredStyles = [cssProp];
        var className = "";
        if (typeof props.className === "string") {
          className = utils.getRegisteredStyles(cache.registered, registeredStyles, props.className);
        } else if (props.className != null) {
          className = props.className + " ";
        }
        var serialized = serialize.serializeStyles(registeredStyles, void 0, React40.useContext(ThemeContext));
        if (serialized.name.indexOf("-") === -1) {
          var labelFromStack = props[labelPropName];
          if (labelFromStack) {
            serialized = serialize.serializeStyles([serialized, "label:" + labelFromStack + ";"]);
          }
        }
        var rules = utils.insertStyles(cache, serialized, typeof type === "string");
        className += cache.key + "-" + serialized.name;
        var newProps = {};
        for (var key in props) {
          if (hasOwnProperty.call(props, key) && key !== "css" && key !== typePropName && key !== labelPropName) {
            newProps[key] = props[key];
          }
        }
        newProps.ref = ref;
        newProps.className = className;
        var ele = /* @__PURE__ */ React40.createElement(type, newProps);
        var possiblyStyleElement = /* @__PURE__ */ React40.createElement(Noop, null);
        return /* @__PURE__ */ React40.createElement(React40.Fragment, null, possiblyStyleElement, ele);
      });
      if (true) {
        Emotion.displayName = "EmotionCssPropInternal";
      }
      exports.CacheProvider = CacheProvider;
      exports.Emotion = Emotion;
      exports.ThemeContext = ThemeContext;
      exports.ThemeProvider = ThemeProvider;
      exports.__unsafe_useEmotionCache = __unsafe_useEmotionCache;
      exports.createEmotionProps = createEmotionProps;
      exports.hasOwnProperty = hasOwnProperty;
      exports.useTheme = useTheme3;
      exports.withEmotionCache = withEmotionCache;
      exports.withTheme = withTheme;
    }
  });

  // node_modules/@emotion/react/dist/emotion-react.browser.cjs.js
  var require_emotion_react_browser_cjs = __commonJS({
    "node_modules/@emotion/react/dist/emotion-react.browser.cjs.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      var React40 = require_react();
      require_emotion_cache_browser_cjs();
      var emotionElement = require_emotion_element_309b0b58_browser_cjs();
      require_extends4();
      require_weak_memoize_browser_cjs();
      require_hoist_non_react_statics_cjs();
      require_emotion_react_isolated_hnrs_browser_cjs();
      var utils = require_emotion_utils_browser_cjs();
      var serialize = require_emotion_serialize_browser_cjs();
      var sheet = require_emotion_sheet_browser_cjs();
      var pkg = {
        name: "@emotion/react",
        version: "11.6.0",
        main: "dist/emotion-react.cjs.js",
        module: "dist/emotion-react.esm.js",
        browser: {
          "./dist/emotion-react.cjs.js": "./dist/emotion-react.browser.cjs.js",
          "./dist/emotion-react.esm.js": "./dist/emotion-react.browser.esm.js"
        },
        types: "types/index.d.ts",
        files: [
          "src",
          "dist",
          "jsx-runtime",
          "jsx-dev-runtime",
          "_isolated-hnrs",
          "types/*.d.ts",
          "macro.js",
          "macro.d.ts",
          "macro.js.flow"
        ],
        sideEffects: false,
        author: "mitchellhamilton <mitchell@mitchellhamilton.me>",
        license: "MIT",
        scripts: {
          "test:typescript": "dtslint types"
        },
        dependencies: {
          "@babel/runtime": "^7.13.10",
          "@emotion/cache": "^11.6.0",
          "@emotion/serialize": "^1.0.2",
          "@emotion/sheet": "^1.1.0",
          "@emotion/utils": "^1.0.0",
          "@emotion/weak-memoize": "^0.2.5",
          "hoist-non-react-statics": "^3.3.1"
        },
        peerDependencies: {
          "@babel/core": "^7.0.0",
          react: ">=16.8.0"
        },
        peerDependenciesMeta: {
          "@babel/core": {
            optional: true
          },
          "@types/react": {
            optional: true
          }
        },
        devDependencies: {
          "@babel/core": "^7.13.10",
          "@emotion/css": "11.5.0",
          "@emotion/css-prettifier": "1.0.0",
          "@emotion/server": "11.4.0",
          "@emotion/styled": "11.6.0",
          "@types/react": "^16.9.11",
          dtslint: "^0.3.0",
          "html-tag-names": "^1.1.2",
          react: "16.14.0",
          "svg-tag-names": "^1.1.1"
        },
        repository: "https://github.com/emotion-js/emotion/tree/main/packages/react",
        publishConfig: {
          access: "public"
        },
        "umd:main": "dist/emotion-react.umd.min.js",
        preconstruct: {
          entrypoints: [
            "./index.js",
            "./jsx-runtime.js",
            "./jsx-dev-runtime.js",
            "./_isolated-hnrs.js"
          ],
          umdName: "emotionReact"
        }
      };
      var jsx = function jsx2(type, props) {
        var args = arguments;
        if (props == null || !emotionElement.hasOwnProperty.call(props, "css")) {
          return React40.createElement.apply(void 0, args);
        }
        var argsLength = args.length;
        var createElementArgArray = new Array(argsLength);
        createElementArgArray[0] = emotionElement.Emotion;
        createElementArgArray[1] = emotionElement.createEmotionProps(type, props);
        for (var i2 = 2; i2 < argsLength; i2++) {
          createElementArgArray[i2] = args[i2];
        }
        return React40.createElement.apply(null, createElementArgArray);
      };
      var warnedAboutCssPropForGlobal = false;
      var Global = /* @__PURE__ */ emotionElement.withEmotionCache(function(props, cache) {
        if (!warnedAboutCssPropForGlobal && (props.className || props.css)) {
          console.error("It looks like you're using the css prop on Global, did you mean to use the styles prop instead?");
          warnedAboutCssPropForGlobal = true;
        }
        var styles2 = props.styles;
        var serialized = serialize.serializeStyles([styles2], void 0, React40.useContext(emotionElement.ThemeContext));
        var sheetRef = React40.useRef();
        React40.useLayoutEffect(function() {
          var key = cache.key + "-global";
          var sheet$1 = new sheet.StyleSheet({
            key,
            nonce: cache.sheet.nonce,
            container: cache.sheet.container,
            speedy: cache.sheet.isSpeedy
          });
          var rehydrating = false;
          var node = document.querySelector('style[data-emotion="' + key + " " + serialized.name + '"]');
          if (cache.sheet.tags.length) {
            sheet$1.before = cache.sheet.tags[0];
          }
          if (node !== null) {
            rehydrating = true;
            node.setAttribute("data-emotion", key);
            sheet$1.hydrate([node]);
          }
          sheetRef.current = [sheet$1, rehydrating];
          return function() {
            sheet$1.flush();
          };
        }, [cache]);
        React40.useLayoutEffect(function() {
          var sheetRefCurrent = sheetRef.current;
          var sheet2 = sheetRefCurrent[0], rehydrating = sheetRefCurrent[1];
          if (rehydrating) {
            sheetRefCurrent[1] = false;
            return;
          }
          if (serialized.next !== void 0) {
            utils.insertStyles(cache, serialized.next, true);
          }
          if (sheet2.tags.length) {
            var element = sheet2.tags[sheet2.tags.length - 1].nextElementSibling;
            sheet2.before = element;
            sheet2.flush();
          }
          cache.insert("", serialized, sheet2, false);
        }, [cache, serialized.name]);
        return null;
      });
      if (true) {
        Global.displayName = "EmotionGlobal";
      }
      function css() {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        return serialize.serializeStyles(args);
      }
      var keyframes2 = function keyframes3() {
        var insertable = css.apply(void 0, arguments);
        var name = "animation-" + insertable.name;
        return {
          name,
          styles: "@keyframes " + name + "{" + insertable.styles + "}",
          anim: 1,
          toString: function toString() {
            return "_EMO_" + this.name + "_" + this.styles + "_EMO_";
          }
        };
      };
      var classnames = function classnames2(args) {
        var len = args.length;
        var i2 = 0;
        var cls = "";
        for (; i2 < len; i2++) {
          var arg = args[i2];
          if (arg == null)
            continue;
          var toAdd = void 0;
          switch (typeof arg) {
            case "boolean":
              break;
            case "object": {
              if (Array.isArray(arg)) {
                toAdd = classnames2(arg);
              } else {
                if (arg.styles !== void 0 && arg.name !== void 0) {
                  console.error("You have passed styles created with `css` from `@emotion/react` package to the `cx`.\n`cx` is meant to compose class names (strings) so you should convert those styles to a class name by passing them to the `css` received from <ClassNames/> component.");
                }
                toAdd = "";
                for (var k2 in arg) {
                  if (arg[k2] && k2) {
                    toAdd && (toAdd += " ");
                    toAdd += k2;
                  }
                }
              }
              break;
            }
            default: {
              toAdd = arg;
            }
          }
          if (toAdd) {
            cls && (cls += " ");
            cls += toAdd;
          }
        }
        return cls;
      };
      function merge(registered, css2, className) {
        var registeredStyles = [];
        var rawClassName = utils.getRegisteredStyles(registered, registeredStyles, className);
        if (registeredStyles.length < 2) {
          return className;
        }
        return rawClassName + css2(registeredStyles);
      }
      var Noop = function Noop2() {
        return null;
      };
      var ClassNames = /* @__PURE__ */ emotionElement.withEmotionCache(function(props, cache) {
        var hasRendered = false;
        var css2 = function css3() {
          if (hasRendered && true) {
            throw new Error("css can only be used during render");
          }
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          var serialized = serialize.serializeStyles(args, cache.registered);
          {
            utils.insertStyles(cache, serialized, false);
          }
          return cache.key + "-" + serialized.name;
        };
        var cx = function cx2() {
          if (hasRendered && true) {
            throw new Error("cx can only be used during render");
          }
          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            args[_key2] = arguments[_key2];
          }
          return merge(cache.registered, css2, classnames(args));
        };
        var content = {
          css: css2,
          cx,
          theme: React40.useContext(emotionElement.ThemeContext)
        };
        var ele = props.children(content);
        hasRendered = true;
        var possiblyStyleElement = /* @__PURE__ */ React40.createElement(Noop, null);
        return /* @__PURE__ */ React40.createElement(React40.Fragment, null, possiblyStyleElement, ele);
      });
      if (true) {
        ClassNames.displayName = "EmotionClassNames";
      }
      if (true) {
        isBrowser = true;
        isJest = typeof jest !== "undefined";
        if (isBrowser && !isJest) {
          globalContext = typeof globalThis !== "undefined" ? globalThis : isBrowser ? window : global;
          globalKey = "__EMOTION_REACT_" + pkg.version.split(".")[0] + "__";
          if (globalContext[globalKey]) {
            console.warn("You are loading @emotion/react when it is already loaded. Running multiple instances may cause problems. This can happen if multiple versions are used, or if multiple builds of the same version are used.");
          }
          globalContext[globalKey] = true;
        }
      }
      var isBrowser;
      var isJest;
      var globalContext;
      var globalKey;
      exports.CacheProvider = emotionElement.CacheProvider;
      exports.ThemeContext = emotionElement.ThemeContext;
      exports.ThemeProvider = emotionElement.ThemeProvider;
      exports.__unsafe_useEmotionCache = emotionElement.__unsafe_useEmotionCache;
      exports.useTheme = emotionElement.useTheme;
      exports.withEmotionCache = emotionElement.withEmotionCache;
      exports.withTheme = emotionElement.withTheme;
      exports.ClassNames = ClassNames;
      exports.Global = Global;
      exports.createElement = jsx;
      exports.css = css;
      exports.jsx = jsx;
      exports.keyframes = keyframes2;
    }
  });

  // node_modules/@emotion/styled/base/dist/emotion-styled-base.browser.cjs.js
  var require_emotion_styled_base_browser_cjs = __commonJS({
    "node_modules/@emotion/styled/base/dist/emotion-styled-base.browser.cjs.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      var _extends4 = require_extends3();
      var React40 = require_react();
      var isPropValid = require_emotion_is_prop_valid_browser_cjs();
      var react = require_emotion_react_browser_cjs();
      var utils = require_emotion_utils_browser_cjs();
      var serialize = require_emotion_serialize_browser_cjs();
      function _interopDefault(e2) {
        return e2 && e2.__esModule ? e2 : { "default": e2 };
      }
      var _extends__default = /* @__PURE__ */ _interopDefault(_extends4);
      var isPropValid__default = /* @__PURE__ */ _interopDefault(isPropValid);
      var testOmitPropsOnStringTag = isPropValid__default["default"];
      var testOmitPropsOnComponent = function testOmitPropsOnComponent2(key) {
        return key !== "theme";
      };
      var getDefaultShouldForwardProp = function getDefaultShouldForwardProp2(tag) {
        return typeof tag === "string" && tag.charCodeAt(0) > 96 ? testOmitPropsOnStringTag : testOmitPropsOnComponent;
      };
      var composeShouldForwardProps = function composeShouldForwardProps2(tag, options, isReal) {
        var shouldForwardProp2;
        if (options) {
          var optionsShouldForwardProp = options.shouldForwardProp;
          shouldForwardProp2 = tag.__emotion_forwardProp && optionsShouldForwardProp ? function(propName) {
            return tag.__emotion_forwardProp(propName) && optionsShouldForwardProp(propName);
          } : optionsShouldForwardProp;
        }
        if (typeof shouldForwardProp2 !== "function" && isReal) {
          shouldForwardProp2 = tag.__emotion_forwardProp;
        }
        return shouldForwardProp2;
      };
      var ILLEGAL_ESCAPE_SEQUENCE_ERROR = `You have illegal escape sequence in your template literal, most likely inside content's property value.
Because you write your CSS inside a JavaScript string you actually have to do double escaping, so for example "content: '\\00d7';" should become "content: '\\\\00d7';".
You can read more about this here:
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences`;
      var Noop = function Noop2() {
        return null;
      };
      var createStyled2 = function createStyled3(tag, options) {
        if (true) {
          if (tag === void 0) {
            throw new Error("You are trying to create a styled element with an undefined component.\nYou may have forgotten to import it.");
          }
        }
        var isReal = tag.__emotion_real === tag;
        var baseTag = isReal && tag.__emotion_base || tag;
        var identifierName;
        var targetClassName;
        if (options !== void 0) {
          identifierName = options.label;
          targetClassName = options.target;
        }
        var shouldForwardProp2 = composeShouldForwardProps(tag, options, isReal);
        var defaultShouldForwardProp = shouldForwardProp2 || getDefaultShouldForwardProp(baseTag);
        var shouldUseAs = !defaultShouldForwardProp("as");
        return function() {
          var args = arguments;
          var styles2 = isReal && tag.__emotion_styles !== void 0 ? tag.__emotion_styles.slice(0) : [];
          if (identifierName !== void 0) {
            styles2.push("label:" + identifierName + ";");
          }
          if (args[0] == null || args[0].raw === void 0) {
            styles2.push.apply(styles2, args);
          } else {
            if (args[0][0] === void 0) {
              console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);
            }
            styles2.push(args[0][0]);
            var len = args.length;
            var i2 = 1;
            for (; i2 < len; i2++) {
              if (args[0][i2] === void 0) {
                console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);
              }
              styles2.push(args[i2], args[0][i2]);
            }
          }
          var Styled = react.withEmotionCache(function(props, cache, ref) {
            var finalTag = shouldUseAs && props.as || baseTag;
            var className = "";
            var classInterpolations = [];
            var mergedProps = props;
            if (props.theme == null) {
              mergedProps = {};
              for (var key in props) {
                mergedProps[key] = props[key];
              }
              mergedProps.theme = React40.useContext(react.ThemeContext);
            }
            if (typeof props.className === "string") {
              className = utils.getRegisteredStyles(cache.registered, classInterpolations, props.className);
            } else if (props.className != null) {
              className = props.className + " ";
            }
            var serialized = serialize.serializeStyles(styles2.concat(classInterpolations), cache.registered, mergedProps);
            var rules = utils.insertStyles(cache, serialized, typeof finalTag === "string");
            className += cache.key + "-" + serialized.name;
            if (targetClassName !== void 0) {
              className += " " + targetClassName;
            }
            var finalShouldForwardProp = shouldUseAs && shouldForwardProp2 === void 0 ? getDefaultShouldForwardProp(finalTag) : defaultShouldForwardProp;
            var newProps = {};
            for (var _key in props) {
              if (shouldUseAs && _key === "as")
                continue;
              if (finalShouldForwardProp(_key)) {
                newProps[_key] = props[_key];
              }
            }
            newProps.className = className;
            newProps.ref = ref;
            var ele = /* @__PURE__ */ React40.createElement(finalTag, newProps);
            var possiblyStyleElement = /* @__PURE__ */ React40.createElement(Noop, null);
            return /* @__PURE__ */ React40.createElement(React40.Fragment, null, possiblyStyleElement, ele);
          });
          Styled.displayName = identifierName !== void 0 ? identifierName : "Styled(" + (typeof baseTag === "string" ? baseTag : baseTag.displayName || baseTag.name || "Component") + ")";
          Styled.defaultProps = tag.defaultProps;
          Styled.__emotion_real = Styled;
          Styled.__emotion_base = baseTag;
          Styled.__emotion_styles = styles2;
          Styled.__emotion_forwardProp = shouldForwardProp2;
          Object.defineProperty(Styled, "toString", {
            value: function value() {
              if (targetClassName === void 0 && true) {
                return "NO_COMPONENT_SELECTOR";
              }
              return "." + targetClassName;
            }
          });
          Styled.withComponent = function(nextTag, nextOptions) {
            return createStyled3(nextTag, _extends__default["default"]({}, options, nextOptions, {
              shouldForwardProp: composeShouldForwardProps(Styled, nextOptions, true)
            })).apply(void 0, styles2);
          };
          return Styled;
        };
      };
      exports.default = createStyled2;
    }
  });

  // node_modules/@emotion/styled/dist/emotion-styled.browser.cjs.js
  var require_emotion_styled_browser_cjs = __commonJS({
    "node_modules/@emotion/styled/dist/emotion-styled.browser.cjs.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      require_extends3();
      require_react();
      require_emotion_is_prop_valid_browser_cjs();
      var base_dist_emotionStyledBase = require_emotion_styled_base_browser_cjs();
      require_emotion_react_browser_cjs();
      require_emotion_utils_browser_cjs();
      require_emotion_serialize_browser_cjs();
      var tags = [
        "a",
        "abbr",
        "address",
        "area",
        "article",
        "aside",
        "audio",
        "b",
        "base",
        "bdi",
        "bdo",
        "big",
        "blockquote",
        "body",
        "br",
        "button",
        "canvas",
        "caption",
        "cite",
        "code",
        "col",
        "colgroup",
        "data",
        "datalist",
        "dd",
        "del",
        "details",
        "dfn",
        "dialog",
        "div",
        "dl",
        "dt",
        "em",
        "embed",
        "fieldset",
        "figcaption",
        "figure",
        "footer",
        "form",
        "h1",
        "h2",
        "h3",
        "h4",
        "h5",
        "h6",
        "head",
        "header",
        "hgroup",
        "hr",
        "html",
        "i",
        "iframe",
        "img",
        "input",
        "ins",
        "kbd",
        "keygen",
        "label",
        "legend",
        "li",
        "link",
        "main",
        "map",
        "mark",
        "marquee",
        "menu",
        "menuitem",
        "meta",
        "meter",
        "nav",
        "noscript",
        "object",
        "ol",
        "optgroup",
        "option",
        "output",
        "p",
        "param",
        "picture",
        "pre",
        "progress",
        "q",
        "rp",
        "rt",
        "ruby",
        "s",
        "samp",
        "script",
        "section",
        "select",
        "small",
        "source",
        "span",
        "strong",
        "style",
        "sub",
        "summary",
        "sup",
        "table",
        "tbody",
        "td",
        "textarea",
        "tfoot",
        "th",
        "thead",
        "time",
        "title",
        "tr",
        "track",
        "u",
        "ul",
        "var",
        "video",
        "wbr",
        "circle",
        "clipPath",
        "defs",
        "ellipse",
        "foreignObject",
        "g",
        "image",
        "line",
        "linearGradient",
        "mask",
        "path",
        "pattern",
        "polygon",
        "polyline",
        "radialGradient",
        "rect",
        "stop",
        "svg",
        "text",
        "tspan"
      ];
      var newStyled = base_dist_emotionStyledBase["default"].bind();
      tags.forEach(function(tagName) {
        newStyled[tagName] = newStyled(tagName);
      });
      exports.default = newStyled;
    }
  });

  // node_modules/@mui/styled-engine/node/StyledEngineProvider/StyledEngineProvider.js
  var require_StyledEngineProvider = __commonJS({
    "node_modules/@mui/styled-engine/node/StyledEngineProvider/StyledEngineProvider.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault4();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = StyledEngineProvider;
      var React40 = _interopRequireWildcard(require_react());
      var _propTypes = _interopRequireDefault(require_prop_types());
      var _react2 = require_emotion_react_browser_cjs();
      var _cache = _interopRequireDefault(require_emotion_cache_browser_cjs());
      var _jsxRuntime = require_jsx_runtime();
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache2 = _getRequireWildcardCache(nodeInterop);
        if (cache2 && cache2.has(obj)) {
          return cache2.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache2) {
          cache2.set(obj, newObj);
        }
        return newObj;
      }
      var cache = (0, _cache.default)({
        key: "css",
        prepend: true
      });
      function StyledEngineProvider(props) {
        const {
          injectFirst,
          children
        } = props;
        return injectFirst ? /* @__PURE__ */ (0, _jsxRuntime.jsx)(_react2.CacheProvider, {
          value: cache,
          children
        }) : children;
      }
      true ? StyledEngineProvider.propTypes = {
        children: _propTypes.default.node,
        injectFirst: _propTypes.default.bool
      } : void 0;
    }
  });

  // node_modules/@mui/styled-engine/node/StyledEngineProvider/index.js
  var require_StyledEngineProvider2 = __commonJS({
    "node_modules/@mui/styled-engine/node/StyledEngineProvider/index.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault4();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      Object.defineProperty(exports, "default", {
        enumerable: true,
        get: function() {
          return _StyledEngineProvider.default;
        }
      });
      var _StyledEngineProvider = _interopRequireDefault(require_StyledEngineProvider());
    }
  });

  // node_modules/@mui/styled-engine/node/GlobalStyles/GlobalStyles.js
  var require_GlobalStyles = __commonJS({
    "node_modules/@mui/styled-engine/node/GlobalStyles/GlobalStyles.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault4();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = GlobalStyles;
      var React40 = _interopRequireWildcard(require_react());
      var _propTypes = _interopRequireDefault(require_prop_types());
      var _react2 = require_emotion_react_browser_cjs();
      var _jsxRuntime = require_jsx_runtime();
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
      function isEmpty(obj) {
        return obj === void 0 || obj === null || Object.keys(obj).length === 0;
      }
      function GlobalStyles(props) {
        const {
          styles: styles2,
          defaultTheme: defaultTheme2 = {}
        } = props;
        const globalStyles = typeof styles2 === "function" ? (themeInput) => styles2(isEmpty(themeInput) ? defaultTheme2 : themeInput) : styles2;
        return /* @__PURE__ */ (0, _jsxRuntime.jsx)(_react2.Global, {
          styles: globalStyles
        });
      }
      true ? GlobalStyles.propTypes = {
        defaultTheme: _propTypes.default.object,
        styles: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.object, _propTypes.default.func])
      } : void 0;
    }
  });

  // node_modules/@mui/styled-engine/node/GlobalStyles/index.js
  var require_GlobalStyles2 = __commonJS({
    "node_modules/@mui/styled-engine/node/GlobalStyles/index.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault4();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      Object.defineProperty(exports, "default", {
        enumerable: true,
        get: function() {
          return _GlobalStyles.default;
        }
      });
      var _GlobalStyles = _interopRequireDefault(require_GlobalStyles());
    }
  });

  // node_modules/@mui/styled-engine/node/index.js
  var require_node = __commonJS({
    "node_modules/@mui/styled-engine/node/index.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault4();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      Object.defineProperty(exports, "GlobalStyles", {
        enumerable: true,
        get: function() {
          return _GlobalStyles.default;
        }
      });
      Object.defineProperty(exports, "StyledEngineProvider", {
        enumerable: true,
        get: function() {
          return _StyledEngineProvider.default;
        }
      });
      Object.defineProperty(exports, "ThemeContext", {
        enumerable: true,
        get: function() {
          return _react.ThemeContext;
        }
      });
      Object.defineProperty(exports, "css", {
        enumerable: true,
        get: function() {
          return _react.css;
        }
      });
      exports.default = styled2;
      Object.defineProperty(exports, "keyframes", {
        enumerable: true,
        get: function() {
          return _react.keyframes;
        }
      });
      var _styled = _interopRequireDefault(require_emotion_styled_browser_cjs());
      var _react = require_emotion_react_browser_cjs();
      var _StyledEngineProvider = _interopRequireDefault(require_StyledEngineProvider2());
      var _GlobalStyles = _interopRequireDefault(require_GlobalStyles2());
      function styled2(tag, options) {
        const stylesFactory = (0, _styled.default)(tag, options);
        if (true) {
          return (...styles2) => {
            const component = typeof tag === "string" ? `"${tag}"` : "component";
            if (styles2.length === 0) {
              console.error([`MUI: Seems like you called \`styled(${component})()\` without a \`style\` argument.`, 'You must provide a `styles` argument: `styled("div")(styleYouForgotToPass)`.'].join("\n"));
            } else if (styles2.some((style) => style === void 0)) {
              console.error(`MUI: the styled(${component})(...args) API requires all its args to be defined.`);
            }
            return stylesFactory(...styles2);
          };
        }
        return stylesFactory;
      }
    }
  });

  // node_modules/@mui/system/responsivePropType.js
  var require_responsivePropType = __commonJS({
    "node_modules/@mui/system/responsivePropType.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault3();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _propTypes = _interopRequireDefault(require_prop_types());
      var responsivePropType = true ? _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string, _propTypes.default.object, _propTypes.default.array]) : {};
      var _default = responsivePropType;
      exports.default = _default;
    }
  });

  // node_modules/@mui/system/node_modules/@babel/runtime/helpers/extends.js
  var require_extends5 = __commonJS({
    "node_modules/@mui/system/node_modules/@babel/runtime/helpers/extends.js"(exports, module) {
      function _extends4() {
        module.exports = _extends4 = Object.assign || function(target) {
          for (var i2 = 1; i2 < arguments.length; i2++) {
            var source = arguments[i2];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };
        module.exports["default"] = module.exports, module.exports.__esModule = true;
        return _extends4.apply(this, arguments);
      }
      module.exports = _extends4;
      module.exports["default"] = module.exports, module.exports.__esModule = true;
    }
  });

  // node_modules/@mui/system/merge.js
  var require_merge = __commonJS({
    "node_modules/@mui/system/merge.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _utils = require_utils();
      function merge(acc, item) {
        if (!item) {
          return acc;
        }
        return (0, _utils.deepmerge)(acc, item, {
          clone: false
        });
      }
      var _default = merge;
      exports.default = _default;
    }
  });

  // node_modules/@mui/system/breakpoints.js
  var require_breakpoints = __commonJS({
    "node_modules/@mui/system/breakpoints.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault3();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.computeBreakpointsBase = computeBreakpointsBase;
      exports.createEmptyBreakpointObject = createEmptyBreakpointObject;
      exports.default = void 0;
      exports.handleBreakpoints = handleBreakpoints;
      exports.mergeBreakpointsInOrder = mergeBreakpointsInOrder;
      exports.removeUnusedBreakpoints = removeUnusedBreakpoints;
      exports.resolveBreakpointValues = resolveBreakpointValues;
      exports.values = void 0;
      var _extends22 = _interopRequireDefault(require_extends5());
      var _propTypes = _interopRequireDefault(require_prop_types());
      var _utils = require_utils();
      var _merge = _interopRequireDefault(require_merge());
      var values2 = {
        xs: 0,
        sm: 600,
        md: 900,
        lg: 1200,
        xl: 1536
      };
      exports.values = values2;
      var defaultBreakpoints = {
        keys: ["xs", "sm", "md", "lg", "xl"],
        up: (key) => `@media (min-width:${values2[key]}px)`
      };
      function handleBreakpoints(props, propValue, styleFromPropValue) {
        const theme = props.theme || {};
        if (Array.isArray(propValue)) {
          const themeBreakpoints = theme.breakpoints || defaultBreakpoints;
          return propValue.reduce((acc, item, index2) => {
            acc[themeBreakpoints.up(themeBreakpoints.keys[index2])] = styleFromPropValue(propValue[index2]);
            return acc;
          }, {});
        }
        if (typeof propValue === "object") {
          const themeBreakpoints = theme.breakpoints || defaultBreakpoints;
          return Object.keys(propValue).reduce((acc, breakpoint) => {
            if (Object.keys(themeBreakpoints.values || values2).indexOf(breakpoint) !== -1) {
              const mediaKey = themeBreakpoints.up(breakpoint);
              acc[mediaKey] = styleFromPropValue(propValue[breakpoint], breakpoint);
            } else {
              const cssKey = breakpoint;
              acc[cssKey] = propValue[cssKey];
            }
            return acc;
          }, {});
        }
        const output = styleFromPropValue(propValue);
        return output;
      }
      function breakpoints(styleFunction) {
        const newStyleFunction = (props) => {
          const theme = props.theme || {};
          const base = styleFunction(props);
          const themeBreakpoints = theme.breakpoints || defaultBreakpoints;
          const extended = themeBreakpoints.keys.reduce((acc, key) => {
            if (props[key]) {
              acc = acc || {};
              acc[themeBreakpoints.up(key)] = styleFunction((0, _extends22.default)({
                theme
              }, props[key]));
            }
            return acc;
          }, null);
          return (0, _merge.default)(base, extended);
        };
        newStyleFunction.propTypes = true ? (0, _extends22.default)({}, styleFunction.propTypes, {
          xs: _propTypes.default.object,
          sm: _propTypes.default.object,
          md: _propTypes.default.object,
          lg: _propTypes.default.object,
          xl: _propTypes.default.object
        }) : {};
        newStyleFunction.filterProps = ["xs", "sm", "md", "lg", "xl", ...styleFunction.filterProps];
        return newStyleFunction;
      }
      function createEmptyBreakpointObject(breakpointsInput = {}) {
        var _breakpointsInput$key;
        const breakpointsInOrder = breakpointsInput == null ? void 0 : (_breakpointsInput$key = breakpointsInput.keys) == null ? void 0 : _breakpointsInput$key.reduce((acc, key) => {
          const breakpointStyleKey = breakpointsInput.up(key);
          acc[breakpointStyleKey] = {};
          return acc;
        }, {});
        return breakpointsInOrder || {};
      }
      function removeUnusedBreakpoints(breakpointKeys, style) {
        return breakpointKeys.reduce((acc, key) => {
          const breakpointOutput = acc[key];
          const isBreakpointUnused = Object.keys(breakpointOutput).length === 0;
          if (isBreakpointUnused) {
            delete acc[key];
          }
          return acc;
        }, style);
      }
      function mergeBreakpointsInOrder(breakpointsInput, ...styles2) {
        const emptyBreakpoints = createEmptyBreakpointObject(breakpointsInput);
        const mergedOutput = [emptyBreakpoints, ...styles2].reduce((prev, next) => (0, _utils.deepmerge)(prev, next), {});
        return removeUnusedBreakpoints(Object.keys(emptyBreakpoints), mergedOutput);
      }
      function computeBreakpointsBase(breakpointValues, themeBreakpoints) {
        if (typeof breakpointValues !== "object") {
          return {};
        }
        const base = {};
        const breakpointsKeys = Object.keys(themeBreakpoints);
        if (Array.isArray(breakpointValues)) {
          breakpointsKeys.forEach((breakpoint, i2) => {
            if (i2 < breakpointValues.length) {
              base[breakpoint] = true;
            }
          });
        } else {
          breakpointsKeys.forEach((breakpoint) => {
            if (breakpointValues[breakpoint] != null) {
              base[breakpoint] = true;
            }
          });
        }
        return base;
      }
      function resolveBreakpointValues({
        values: breakpointValues,
        breakpoints: themeBreakpoints,
        base: customBase
      }) {
        const base = customBase || computeBreakpointsBase(breakpointValues, themeBreakpoints);
        const keys = Object.keys(base);
        if (keys.length === 0) {
          return breakpointValues;
        }
        let previous;
        return keys.reduce((acc, breakpoint, i2) => {
          if (Array.isArray(breakpointValues)) {
            acc[breakpoint] = breakpointValues[i2] != null ? breakpointValues[i2] : breakpointValues[previous];
            previous = i2;
          } else {
            acc[breakpoint] = breakpointValues[breakpoint] != null ? breakpointValues[breakpoint] : breakpointValues[previous] || breakpointValues;
            previous = breakpoint;
          }
          return acc;
        }, {});
      }
      var _default = breakpoints;
      exports.default = _default;
    }
  });

  // node_modules/@mui/system/style.js
  var require_style = __commonJS({
    "node_modules/@mui/system/style.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault3();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      exports.getPath = getPath;
      var _utils = require_utils();
      var _responsivePropType = _interopRequireDefault(require_responsivePropType());
      var _breakpoints = require_breakpoints();
      function getPath(obj, path) {
        if (!path || typeof path !== "string") {
          return null;
        }
        return path.split(".").reduce((acc, item) => acc && acc[item] ? acc[item] : null, obj);
      }
      function getValue(themeMapping, transform, propValueFinal, userValue = propValueFinal) {
        let value;
        if (typeof themeMapping === "function") {
          value = themeMapping(propValueFinal);
        } else if (Array.isArray(themeMapping)) {
          value = themeMapping[propValueFinal] || userValue;
        } else {
          value = getPath(themeMapping, propValueFinal) || userValue;
        }
        if (transform) {
          value = transform(value);
        }
        return value;
      }
      function style(options) {
        const {
          prop,
          cssProperty = options.prop,
          themeKey,
          transform
        } = options;
        const fn = (props) => {
          if (props[prop] == null) {
            return null;
          }
          const propValue = props[prop];
          const theme = props.theme;
          const themeMapping = getPath(theme, themeKey) || {};
          const styleFromPropValue = (propValueFinal) => {
            let value = getValue(themeMapping, transform, propValueFinal);
            if (propValueFinal === value && typeof propValueFinal === "string") {
              value = getValue(themeMapping, transform, `${prop}${propValueFinal === "default" ? "" : (0, _utils.unstable_capitalize)(propValueFinal)}`, propValueFinal);
            }
            if (cssProperty === false) {
              return value;
            }
            return {
              [cssProperty]: value
            };
          };
          return (0, _breakpoints.handleBreakpoints)(props, propValue, styleFromPropValue);
        };
        fn.propTypes = true ? {
          [prop]: _responsivePropType.default
        } : {};
        fn.filterProps = [prop];
        return fn;
      }
      var _default = style;
      exports.default = _default;
    }
  });

  // node_modules/@mui/system/compose.js
  var require_compose = __commonJS({
    "node_modules/@mui/system/compose.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault3();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _merge = _interopRequireDefault(require_merge());
      function compose(...styles2) {
        const handlers = styles2.reduce((acc, style) => {
          style.filterProps.forEach((prop) => {
            acc[prop] = style;
          });
          return acc;
        }, {});
        const fn = (props) => {
          return Object.keys(props).reduce((acc, prop) => {
            if (handlers[prop]) {
              return (0, _merge.default)(acc, handlers[prop](props));
            }
            return acc;
          }, {});
        };
        fn.propTypes = true ? styles2.reduce((acc, style) => Object.assign(acc, style.propTypes), {}) : {};
        fn.filterProps = styles2.reduce((acc, style) => acc.concat(style.filterProps), []);
        return fn;
      }
      var _default = compose;
      exports.default = _default;
    }
  });

  // node_modules/@mui/system/memoize.js
  var require_memoize = __commonJS({
    "node_modules/@mui/system/memoize.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = memoize2;
      function memoize2(fn) {
        const cache = {};
        return (arg) => {
          if (cache[arg] === void 0) {
            cache[arg] = fn(arg);
          }
          return cache[arg];
        };
      }
    }
  });

  // node_modules/@mui/system/spacing.js
  var require_spacing = __commonJS({
    "node_modules/@mui/system/spacing.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault3();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.createUnarySpacing = createUnarySpacing;
      exports.createUnaryUnit = createUnaryUnit;
      exports.default = void 0;
      exports.getStyleFromPropValue = getStyleFromPropValue;
      exports.getValue = getValue;
      exports.margin = margin;
      exports.padding = padding;
      var _responsivePropType = _interopRequireDefault(require_responsivePropType());
      var _breakpoints = require_breakpoints();
      var _style = require_style();
      var _merge = _interopRequireDefault(require_merge());
      var _memoize = _interopRequireDefault(require_memoize());
      var properties = {
        m: "margin",
        p: "padding"
      };
      var directions = {
        t: "Top",
        r: "Right",
        b: "Bottom",
        l: "Left",
        x: ["Left", "Right"],
        y: ["Top", "Bottom"]
      };
      var aliases = {
        marginX: "mx",
        marginY: "my",
        paddingX: "px",
        paddingY: "py"
      };
      var getCssProperties = (0, _memoize.default)((prop) => {
        if (prop.length > 2) {
          if (aliases[prop]) {
            prop = aliases[prop];
          } else {
            return [prop];
          }
        }
        const [a2, b2] = prop.split("");
        const property = properties[a2];
        const direction = directions[b2] || "";
        return Array.isArray(direction) ? direction.map((dir) => property + dir) : [property + direction];
      });
      var marginKeys = ["m", "mt", "mr", "mb", "ml", "mx", "my", "margin", "marginTop", "marginRight", "marginBottom", "marginLeft", "marginX", "marginY", "marginInline", "marginInlineStart", "marginInlineEnd", "marginBlock", "marginBlockStart", "marginBlockEnd"];
      var paddingKeys = ["p", "pt", "pr", "pb", "pl", "px", "py", "padding", "paddingTop", "paddingRight", "paddingBottom", "paddingLeft", "paddingX", "paddingY", "paddingInline", "paddingInlineStart", "paddingInlineEnd", "paddingBlock", "paddingBlockStart", "paddingBlockEnd"];
      var spacingKeys = [...marginKeys, ...paddingKeys];
      function createUnaryUnit(theme, themeKey, defaultValue, propName) {
        const themeSpacing = (0, _style.getPath)(theme, themeKey) || defaultValue;
        if (typeof themeSpacing === "number") {
          return (abs) => {
            if (typeof abs === "string") {
              return abs;
            }
            if (true) {
              if (typeof abs !== "number") {
                console.error(`MUI: Expected ${propName} argument to be a number or a string, got ${abs}.`);
              }
            }
            return themeSpacing * abs;
          };
        }
        if (Array.isArray(themeSpacing)) {
          return (abs) => {
            if (typeof abs === "string") {
              return abs;
            }
            if (true) {
              if (!Number.isInteger(abs)) {
                console.error([`MUI: The \`theme.${themeKey}\` array type cannot be combined with non integer values.You should either use an integer value that can be used as index, or define the \`theme.${themeKey}\` as a number.`].join("\n"));
              } else if (abs > themeSpacing.length - 1) {
                console.error([`MUI: The value provided (${abs}) overflows.`, `The supported values are: ${JSON.stringify(themeSpacing)}.`, `${abs} > ${themeSpacing.length - 1}, you need to add the missing values.`].join("\n"));
              }
            }
            return themeSpacing[abs];
          };
        }
        if (typeof themeSpacing === "function") {
          return themeSpacing;
        }
        if (true) {
          console.error([`MUI: The \`theme.${themeKey}\` value (${themeSpacing}) is invalid.`, "It should be a number, an array or a function."].join("\n"));
        }
        return () => void 0;
      }
      function createUnarySpacing(theme) {
        return createUnaryUnit(theme, "spacing", 8, "spacing");
      }
      function getValue(transformer, propValue) {
        if (typeof propValue === "string" || propValue == null) {
          return propValue;
        }
        const abs = Math.abs(propValue);
        const transformed = transformer(abs);
        if (propValue >= 0) {
          return transformed;
        }
        if (typeof transformed === "number") {
          return -transformed;
        }
        return `-${transformed}`;
      }
      function getStyleFromPropValue(cssProperties, transformer) {
        return (propValue) => cssProperties.reduce((acc, cssProperty) => {
          acc[cssProperty] = getValue(transformer, propValue);
          return acc;
        }, {});
      }
      function resolveCssProperty(props, keys, prop, transformer) {
        if (keys.indexOf(prop) === -1) {
          return null;
        }
        const cssProperties = getCssProperties(prop);
        const styleFromPropValue = getStyleFromPropValue(cssProperties, transformer);
        const propValue = props[prop];
        return (0, _breakpoints.handleBreakpoints)(props, propValue, styleFromPropValue);
      }
      function style(props, keys) {
        const transformer = createUnarySpacing(props.theme);
        return Object.keys(props).map((prop) => resolveCssProperty(props, keys, prop, transformer)).reduce(_merge.default, {});
      }
      function margin(props) {
        return style(props, marginKeys);
      }
      margin.propTypes = true ? marginKeys.reduce((obj, key) => {
        obj[key] = _responsivePropType.default;
        return obj;
      }, {}) : {};
      margin.filterProps = marginKeys;
      function padding(props) {
        return style(props, paddingKeys);
      }
      padding.propTypes = true ? paddingKeys.reduce((obj, key) => {
        obj[key] = _responsivePropType.default;
        return obj;
      }, {}) : {};
      padding.filterProps = paddingKeys;
      function spacing(props) {
        return style(props, spacingKeys);
      }
      spacing.propTypes = true ? spacingKeys.reduce((obj, key) => {
        obj[key] = _responsivePropType.default;
        return obj;
      }, {}) : {};
      spacing.filterProps = spacingKeys;
      var _default = spacing;
      exports.default = _default;
    }
  });

  // node_modules/@mui/system/borders.js
  var require_borders = __commonJS({
    "node_modules/@mui/system/borders.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault3();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = exports.borderTopColor = exports.borderTop = exports.borderRightColor = exports.borderRight = exports.borderRadius = exports.borderLeftColor = exports.borderLeft = exports.borderColor = exports.borderBottomColor = exports.borderBottom = exports.border = void 0;
      var _responsivePropType = _interopRequireDefault(require_responsivePropType());
      var _style = _interopRequireDefault(require_style());
      var _compose = _interopRequireDefault(require_compose());
      var _spacing = require_spacing();
      var _breakpoints = require_breakpoints();
      function getBorder(value) {
        if (typeof value !== "number") {
          return value;
        }
        return `${value}px solid`;
      }
      var border = (0, _style.default)({
        prop: "border",
        themeKey: "borders",
        transform: getBorder
      });
      exports.border = border;
      var borderTop = (0, _style.default)({
        prop: "borderTop",
        themeKey: "borders",
        transform: getBorder
      });
      exports.borderTop = borderTop;
      var borderRight = (0, _style.default)({
        prop: "borderRight",
        themeKey: "borders",
        transform: getBorder
      });
      exports.borderRight = borderRight;
      var borderBottom = (0, _style.default)({
        prop: "borderBottom",
        themeKey: "borders",
        transform: getBorder
      });
      exports.borderBottom = borderBottom;
      var borderLeft = (0, _style.default)({
        prop: "borderLeft",
        themeKey: "borders",
        transform: getBorder
      });
      exports.borderLeft = borderLeft;
      var borderColor = (0, _style.default)({
        prop: "borderColor",
        themeKey: "palette"
      });
      exports.borderColor = borderColor;
      var borderTopColor = (0, _style.default)({
        prop: "borderTopColor",
        themeKey: "palette"
      });
      exports.borderTopColor = borderTopColor;
      var borderRightColor = (0, _style.default)({
        prop: "borderRightColor",
        themeKey: "palette"
      });
      exports.borderRightColor = borderRightColor;
      var borderBottomColor = (0, _style.default)({
        prop: "borderBottomColor",
        themeKey: "palette"
      });
      exports.borderBottomColor = borderBottomColor;
      var borderLeftColor = (0, _style.default)({
        prop: "borderLeftColor",
        themeKey: "palette"
      });
      exports.borderLeftColor = borderLeftColor;
      var borderRadius = (props) => {
        if (props.borderRadius !== void 0 && props.borderRadius !== null) {
          const transformer = (0, _spacing.createUnaryUnit)(props.theme, "shape.borderRadius", 4, "borderRadius");
          const styleFromPropValue = (propValue) => ({
            borderRadius: (0, _spacing.getValue)(transformer, propValue)
          });
          return (0, _breakpoints.handleBreakpoints)(props, props.borderRadius, styleFromPropValue);
        }
        return null;
      };
      exports.borderRadius = borderRadius;
      borderRadius.propTypes = true ? {
        borderRadius: _responsivePropType.default
      } : {};
      borderRadius.filterProps = ["borderRadius"];
      var borders = (0, _compose.default)(border, borderTop, borderRight, borderBottom, borderLeft, borderColor, borderTopColor, borderRightColor, borderBottomColor, borderLeftColor, borderRadius);
      var _default = borders;
      exports.default = _default;
    }
  });

  // node_modules/@mui/system/display.js
  var require_display = __commonJS({
    "node_modules/@mui/system/display.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault3();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.whiteSpace = exports.visibility = exports.textOverflow = exports.overflow = exports.displayRaw = exports.displayPrint = exports.default = void 0;
      var _style = _interopRequireDefault(require_style());
      var _compose = _interopRequireDefault(require_compose());
      var displayPrint = (0, _style.default)({
        prop: "displayPrint",
        cssProperty: false,
        transform: (value) => ({
          "@media print": {
            display: value
          }
        })
      });
      exports.displayPrint = displayPrint;
      var displayRaw = (0, _style.default)({
        prop: "display"
      });
      exports.displayRaw = displayRaw;
      var overflow = (0, _style.default)({
        prop: "overflow"
      });
      exports.overflow = overflow;
      var textOverflow = (0, _style.default)({
        prop: "textOverflow"
      });
      exports.textOverflow = textOverflow;
      var visibility = (0, _style.default)({
        prop: "visibility"
      });
      exports.visibility = visibility;
      var whiteSpace = (0, _style.default)({
        prop: "whiteSpace"
      });
      exports.whiteSpace = whiteSpace;
      var _default = (0, _compose.default)(displayPrint, displayRaw, overflow, textOverflow, visibility, whiteSpace);
      exports.default = _default;
    }
  });

  // node_modules/@mui/system/flexbox.js
  var require_flexbox = __commonJS({
    "node_modules/@mui/system/flexbox.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault3();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.order = exports.justifySelf = exports.justifyItems = exports.justifyContent = exports.flexWrap = exports.flexShrink = exports.flexGrow = exports.flexDirection = exports.flexBasis = exports.flex = exports.default = exports.alignSelf = exports.alignItems = exports.alignContent = void 0;
      var _style = _interopRequireDefault(require_style());
      var _compose = _interopRequireDefault(require_compose());
      var flexBasis = (0, _style.default)({
        prop: "flexBasis"
      });
      exports.flexBasis = flexBasis;
      var flexDirection = (0, _style.default)({
        prop: "flexDirection"
      });
      exports.flexDirection = flexDirection;
      var flexWrap = (0, _style.default)({
        prop: "flexWrap"
      });
      exports.flexWrap = flexWrap;
      var justifyContent = (0, _style.default)({
        prop: "justifyContent"
      });
      exports.justifyContent = justifyContent;
      var alignItems = (0, _style.default)({
        prop: "alignItems"
      });
      exports.alignItems = alignItems;
      var alignContent = (0, _style.default)({
        prop: "alignContent"
      });
      exports.alignContent = alignContent;
      var order = (0, _style.default)({
        prop: "order"
      });
      exports.order = order;
      var flex = (0, _style.default)({
        prop: "flex"
      });
      exports.flex = flex;
      var flexGrow = (0, _style.default)({
        prop: "flexGrow"
      });
      exports.flexGrow = flexGrow;
      var flexShrink = (0, _style.default)({
        prop: "flexShrink"
      });
      exports.flexShrink = flexShrink;
      var alignSelf = (0, _style.default)({
        prop: "alignSelf"
      });
      exports.alignSelf = alignSelf;
      var justifyItems = (0, _style.default)({
        prop: "justifyItems"
      });
      exports.justifyItems = justifyItems;
      var justifySelf = (0, _style.default)({
        prop: "justifySelf"
      });
      exports.justifySelf = justifySelf;
      var flexbox = (0, _compose.default)(flexBasis, flexDirection, flexWrap, justifyContent, alignItems, alignContent, order, flex, flexGrow, flexShrink, alignSelf, justifyItems, justifySelf);
      var _default = flexbox;
      exports.default = _default;
    }
  });

  // node_modules/@mui/system/grid.js
  var require_grid = __commonJS({
    "node_modules/@mui/system/grid.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault3();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.rowGap = exports.gridTemplateRows = exports.gridTemplateColumns = exports.gridTemplateAreas = exports.gridRow = exports.gridColumn = exports.gridAutoRows = exports.gridAutoFlow = exports.gridAutoColumns = exports.gridArea = exports.gap = exports.default = exports.columnGap = void 0;
      var _style = _interopRequireDefault(require_style());
      var _compose = _interopRequireDefault(require_compose());
      var _spacing = require_spacing();
      var _breakpoints = require_breakpoints();
      var _responsivePropType = _interopRequireDefault(require_responsivePropType());
      var gap = (props) => {
        if (props.gap !== void 0 && props.gap !== null) {
          const transformer = (0, _spacing.createUnaryUnit)(props.theme, "spacing", 8, "gap");
          const styleFromPropValue = (propValue) => ({
            gap: (0, _spacing.getValue)(transformer, propValue)
          });
          return (0, _breakpoints.handleBreakpoints)(props, props.gap, styleFromPropValue);
        }
        return null;
      };
      exports.gap = gap;
      gap.propTypes = true ? {
        gap: _responsivePropType.default
      } : {};
      gap.filterProps = ["gap"];
      var columnGap = (props) => {
        if (props.columnGap !== void 0 && props.columnGap !== null) {
          const transformer = (0, _spacing.createUnaryUnit)(props.theme, "spacing", 8, "columnGap");
          const styleFromPropValue = (propValue) => ({
            columnGap: (0, _spacing.getValue)(transformer, propValue)
          });
          return (0, _breakpoints.handleBreakpoints)(props, props.columnGap, styleFromPropValue);
        }
        return null;
      };
      exports.columnGap = columnGap;
      columnGap.propTypes = true ? {
        columnGap: _responsivePropType.default
      } : {};
      columnGap.filterProps = ["columnGap"];
      var rowGap = (props) => {
        if (props.rowGap !== void 0 && props.rowGap !== null) {
          const transformer = (0, _spacing.createUnaryUnit)(props.theme, "spacing", 8, "rowGap");
          const styleFromPropValue = (propValue) => ({
            rowGap: (0, _spacing.getValue)(transformer, propValue)
          });
          return (0, _breakpoints.handleBreakpoints)(props, props.rowGap, styleFromPropValue);
        }
        return null;
      };
      exports.rowGap = rowGap;
      rowGap.propTypes = true ? {
        rowGap: _responsivePropType.default
      } : {};
      rowGap.filterProps = ["rowGap"];
      var gridColumn = (0, _style.default)({
        prop: "gridColumn"
      });
      exports.gridColumn = gridColumn;
      var gridRow = (0, _style.default)({
        prop: "gridRow"
      });
      exports.gridRow = gridRow;
      var gridAutoFlow = (0, _style.default)({
        prop: "gridAutoFlow"
      });
      exports.gridAutoFlow = gridAutoFlow;
      var gridAutoColumns = (0, _style.default)({
        prop: "gridAutoColumns"
      });
      exports.gridAutoColumns = gridAutoColumns;
      var gridAutoRows = (0, _style.default)({
        prop: "gridAutoRows"
      });
      exports.gridAutoRows = gridAutoRows;
      var gridTemplateColumns = (0, _style.default)({
        prop: "gridTemplateColumns"
      });
      exports.gridTemplateColumns = gridTemplateColumns;
      var gridTemplateRows = (0, _style.default)({
        prop: "gridTemplateRows"
      });
      exports.gridTemplateRows = gridTemplateRows;
      var gridTemplateAreas = (0, _style.default)({
        prop: "gridTemplateAreas"
      });
      exports.gridTemplateAreas = gridTemplateAreas;
      var gridArea = (0, _style.default)({
        prop: "gridArea"
      });
      exports.gridArea = gridArea;
      var grid = (0, _compose.default)(gap, columnGap, rowGap, gridColumn, gridRow, gridAutoFlow, gridAutoColumns, gridAutoRows, gridTemplateColumns, gridTemplateRows, gridTemplateAreas, gridArea);
      var _default = grid;
      exports.default = _default;
    }
  });

  // node_modules/@mui/system/palette.js
  var require_palette = __commonJS({
    "node_modules/@mui/system/palette.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault3();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = exports.color = exports.bgcolor = exports.backgroundColor = void 0;
      var _style = _interopRequireDefault(require_style());
      var _compose = _interopRequireDefault(require_compose());
      var color = (0, _style.default)({
        prop: "color",
        themeKey: "palette"
      });
      exports.color = color;
      var bgcolor = (0, _style.default)({
        prop: "bgcolor",
        cssProperty: "backgroundColor",
        themeKey: "palette"
      });
      exports.bgcolor = bgcolor;
      var backgroundColor = (0, _style.default)({
        prop: "backgroundColor",
        themeKey: "palette"
      });
      exports.backgroundColor = backgroundColor;
      var palette = (0, _compose.default)(color, bgcolor, backgroundColor);
      var _default = palette;
      exports.default = _default;
    }
  });

  // node_modules/@mui/system/positions.js
  var require_positions = __commonJS({
    "node_modules/@mui/system/positions.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault3();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.zIndex = exports.top = exports.right = exports.position = exports.left = exports.default = exports.bottom = void 0;
      var _style = _interopRequireDefault(require_style());
      var _compose = _interopRequireDefault(require_compose());
      var position = (0, _style.default)({
        prop: "position"
      });
      exports.position = position;
      var zIndex2 = (0, _style.default)({
        prop: "zIndex",
        themeKey: "zIndex"
      });
      exports.zIndex = zIndex2;
      var top = (0, _style.default)({
        prop: "top"
      });
      exports.top = top;
      var right = (0, _style.default)({
        prop: "right"
      });
      exports.right = right;
      var bottom = (0, _style.default)({
        prop: "bottom"
      });
      exports.bottom = bottom;
      var left = (0, _style.default)({
        prop: "left"
      });
      exports.left = left;
      var _default = (0, _compose.default)(position, zIndex2, top, right, bottom, left);
      exports.default = _default;
    }
  });

  // node_modules/@mui/system/shadows.js
  var require_shadows = __commonJS({
    "node_modules/@mui/system/shadows.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault3();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _style = _interopRequireDefault(require_style());
      var boxShadow = (0, _style.default)({
        prop: "boxShadow",
        themeKey: "shadows"
      });
      var _default = boxShadow;
      exports.default = _default;
    }
  });

  // node_modules/@mui/system/sizing.js
  var require_sizing = __commonJS({
    "node_modules/@mui/system/sizing.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault3();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.width = exports.sizeWidth = exports.sizeHeight = exports.minWidth = exports.minHeight = exports.maxWidth = exports.maxHeight = exports.height = exports.default = exports.boxSizing = void 0;
      var _style = _interopRequireDefault(require_style());
      var _compose = _interopRequireDefault(require_compose());
      var _breakpoints = require_breakpoints();
      function transform(value) {
        return value <= 1 && value !== 0 ? `${value * 100}%` : value;
      }
      var width = (0, _style.default)({
        prop: "width",
        transform
      });
      exports.width = width;
      var maxWidth = (props) => {
        if (props.maxWidth !== void 0 && props.maxWidth !== null) {
          const styleFromPropValue = (propValue) => {
            var _props$theme, _props$theme$breakpoi, _props$theme$breakpoi2;
            const breakpoint = ((_props$theme = props.theme) == null ? void 0 : (_props$theme$breakpoi = _props$theme.breakpoints) == null ? void 0 : (_props$theme$breakpoi2 = _props$theme$breakpoi.values) == null ? void 0 : _props$theme$breakpoi2[propValue]) || _breakpoints.values[propValue];
            return {
              maxWidth: breakpoint || transform(propValue)
            };
          };
          return (0, _breakpoints.handleBreakpoints)(props, props.maxWidth, styleFromPropValue);
        }
        return null;
      };
      exports.maxWidth = maxWidth;
      maxWidth.filterProps = ["maxWidth"];
      var minWidth = (0, _style.default)({
        prop: "minWidth",
        transform
      });
      exports.minWidth = minWidth;
      var height = (0, _style.default)({
        prop: "height",
        transform
      });
      exports.height = height;
      var maxHeight = (0, _style.default)({
        prop: "maxHeight",
        transform
      });
      exports.maxHeight = maxHeight;
      var minHeight = (0, _style.default)({
        prop: "minHeight",
        transform
      });
      exports.minHeight = minHeight;
      var sizeWidth = (0, _style.default)({
        prop: "size",
        cssProperty: "width",
        transform
      });
      exports.sizeWidth = sizeWidth;
      var sizeHeight = (0, _style.default)({
        prop: "size",
        cssProperty: "height",
        transform
      });
      exports.sizeHeight = sizeHeight;
      var boxSizing = (0, _style.default)({
        prop: "boxSizing"
      });
      exports.boxSizing = boxSizing;
      var sizing = (0, _compose.default)(width, maxWidth, minWidth, height, maxHeight, minHeight, boxSizing);
      var _default = sizing;
      exports.default = _default;
    }
  });

  // node_modules/@mui/system/typography.js
  var require_typography = __commonJS({
    "node_modules/@mui/system/typography.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault3();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.typographyVariant = exports.textAlign = exports.lineHeight = exports.letterSpacing = exports.fontWeight = exports.fontStyle = exports.fontSize = exports.fontFamily = exports.default = void 0;
      var _style = _interopRequireDefault(require_style());
      var _compose = _interopRequireDefault(require_compose());
      var fontFamily = (0, _style.default)({
        prop: "fontFamily",
        themeKey: "typography"
      });
      exports.fontFamily = fontFamily;
      var fontSize = (0, _style.default)({
        prop: "fontSize",
        themeKey: "typography"
      });
      exports.fontSize = fontSize;
      var fontStyle = (0, _style.default)({
        prop: "fontStyle",
        themeKey: "typography"
      });
      exports.fontStyle = fontStyle;
      var fontWeight = (0, _style.default)({
        prop: "fontWeight",
        themeKey: "typography"
      });
      exports.fontWeight = fontWeight;
      var letterSpacing = (0, _style.default)({
        prop: "letterSpacing"
      });
      exports.letterSpacing = letterSpacing;
      var lineHeight = (0, _style.default)({
        prop: "lineHeight"
      });
      exports.lineHeight = lineHeight;
      var textAlign = (0, _style.default)({
        prop: "textAlign"
      });
      exports.textAlign = textAlign;
      var typographyVariant = (0, _style.default)({
        prop: "typography",
        cssProperty: false,
        themeKey: "typography"
      });
      exports.typographyVariant = typographyVariant;
      var typography = (0, _compose.default)(typographyVariant, fontFamily, fontSize, fontStyle, fontWeight, letterSpacing, lineHeight, textAlign);
      var _default = typography;
      exports.default = _default;
    }
  });

  // node_modules/@mui/system/getThemeValue.js
  var require_getThemeValue = __commonJS({
    "node_modules/@mui/system/getThemeValue.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault3();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.propToStyleFunction = exports.default = void 0;
      var _borders = _interopRequireDefault(require_borders());
      var _display = _interopRequireDefault(require_display());
      var _flexbox = _interopRequireDefault(require_flexbox());
      var _grid = _interopRequireDefault(require_grid());
      var _positions = _interopRequireDefault(require_positions());
      var _palette = _interopRequireDefault(require_palette());
      var _shadows = _interopRequireDefault(require_shadows());
      var _sizing = _interopRequireDefault(require_sizing());
      var _spacing = _interopRequireDefault(require_spacing());
      var _typography = _interopRequireDefault(require_typography());
      var filterPropsMapping = {
        borders: _borders.default.filterProps,
        display: _display.default.filterProps,
        flexbox: _flexbox.default.filterProps,
        grid: _grid.default.filterProps,
        positions: _positions.default.filterProps,
        palette: _palette.default.filterProps,
        shadows: _shadows.default.filterProps,
        sizing: _sizing.default.filterProps,
        spacing: _spacing.default.filterProps,
        typography: _typography.default.filterProps
      };
      var styleFunctionMapping = {
        borders: _borders.default,
        display: _display.default,
        flexbox: _flexbox.default,
        grid: _grid.default,
        positions: _positions.default,
        palette: _palette.default,
        shadows: _shadows.default,
        sizing: _sizing.default,
        spacing: _spacing.default,
        typography: _typography.default
      };
      var propToStyleFunction = Object.keys(filterPropsMapping).reduce((acc, styleFnName) => {
        filterPropsMapping[styleFnName].forEach((propName) => {
          acc[propName] = styleFunctionMapping[styleFnName];
        });
        return acc;
      }, {});
      exports.propToStyleFunction = propToStyleFunction;
      function getThemeValue(prop, value, theme) {
        const inputProps = {
          [prop]: value,
          theme
        };
        const styleFunction = propToStyleFunction[prop];
        return styleFunction ? styleFunction(inputProps) : {
          [prop]: value
        };
      }
      var _default = getThemeValue;
      exports.default = _default;
    }
  });

  // node_modules/@mui/system/styleFunctionSx/styleFunctionSx.js
  var require_styleFunctionSx = __commonJS({
    "node_modules/@mui/system/styleFunctionSx/styleFunctionSx.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault3();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _merge = _interopRequireDefault(require_merge());
      var _getThemeValue = _interopRequireWildcard(require_getThemeValue());
      var _breakpoints = require_breakpoints();
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
      function objectsHaveSameKeys(...objects) {
        const allKeys = objects.reduce((keys, object) => keys.concat(Object.keys(object)), []);
        const union = new Set(allKeys);
        return objects.every((object) => union.size === Object.keys(object).length);
      }
      function callIfFn(maybeFn, arg) {
        return typeof maybeFn === "function" ? maybeFn(arg) : maybeFn;
      }
      function styleFunctionSx(props) {
        const {
          sx,
          theme = {}
        } = props || {};
        if (!sx) {
          return null;
        }
        function traverse(sxInput) {
          let sxObject = sxInput;
          if (typeof sxInput === "function") {
            sxObject = sxInput(theme);
          } else if (typeof sxInput !== "object") {
            return sxInput;
          }
          const emptyBreakpoints = (0, _breakpoints.createEmptyBreakpointObject)(theme.breakpoints);
          const breakpointsKeys = Object.keys(emptyBreakpoints);
          let css = emptyBreakpoints;
          Object.keys(sxObject).forEach((styleKey) => {
            const value = callIfFn(sxObject[styleKey], theme);
            if (typeof value === "object") {
              if (_getThemeValue.propToStyleFunction[styleKey]) {
                css = (0, _merge.default)(css, (0, _getThemeValue.default)(styleKey, value, theme));
              } else {
                const breakpointsValues = (0, _breakpoints.handleBreakpoints)({
                  theme
                }, value, (x2) => ({
                  [styleKey]: x2
                }));
                if (objectsHaveSameKeys(breakpointsValues, value)) {
                  css[styleKey] = styleFunctionSx({
                    sx: value,
                    theme
                  });
                } else {
                  css = (0, _merge.default)(css, breakpointsValues);
                }
              }
            } else {
              css = (0, _merge.default)(css, (0, _getThemeValue.default)(styleKey, value, theme));
            }
          });
          return (0, _breakpoints.removeUnusedBreakpoints)(breakpointsKeys, css);
        }
        return Array.isArray(sx) ? sx.map(traverse) : traverse(sx);
      }
      styleFunctionSx.filterProps = ["sx"];
      var _default = styleFunctionSx;
      exports.default = _default;
    }
  });

  // node_modules/@mui/system/node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js
  var require_objectWithoutPropertiesLoose2 = __commonJS({
    "node_modules/@mui/system/node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js"(exports, module) {
      function _objectWithoutPropertiesLoose4(source, excluded) {
        if (source == null)
          return {};
        var target = {};
        var sourceKeys = Object.keys(source);
        var key, i2;
        for (i2 = 0; i2 < sourceKeys.length; i2++) {
          key = sourceKeys[i2];
          if (excluded.indexOf(key) >= 0)
            continue;
          target[key] = source[key];
        }
        return target;
      }
      module.exports = _objectWithoutPropertiesLoose4;
      module.exports["default"] = module.exports, module.exports.__esModule = true;
    }
  });

  // node_modules/@mui/system/styleFunctionSx/extendSxProp.js
  var require_extendSxProp = __commonJS({
    "node_modules/@mui/system/styleFunctionSx/extendSxProp.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault3();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = extendSxProp;
      var _extends22 = _interopRequireDefault(require_extends5());
      var _objectWithoutPropertiesLoose22 = _interopRequireDefault(require_objectWithoutPropertiesLoose2());
      var _utils = require_utils();
      var _getThemeValue = require_getThemeValue();
      var _excluded21 = ["sx"];
      var splitProps = (props) => {
        const result = {
          systemProps: {},
          otherProps: {}
        };
        Object.keys(props).forEach((prop) => {
          if (_getThemeValue.propToStyleFunction[prop]) {
            result.systemProps[prop] = props[prop];
          } else {
            result.otherProps[prop] = props[prop];
          }
        });
        return result;
      };
      function extendSxProp(props) {
        const {
          sx: inSx
        } = props, other = (0, _objectWithoutPropertiesLoose22.default)(props, _excluded21);
        const {
          systemProps,
          otherProps
        } = splitProps(other);
        let finalSx;
        if (Array.isArray(inSx)) {
          finalSx = [systemProps, ...inSx];
        } else if (typeof inSx === "function") {
          finalSx = (...args) => {
            const result = inSx(...args);
            if (!(0, _utils.isPlainObject)(result)) {
              return systemProps;
            }
            return (0, _extends22.default)({}, systemProps, result);
          };
        } else {
          finalSx = (0, _extends22.default)({}, systemProps, inSx);
        }
        return (0, _extends22.default)({}, otherProps, {
          sx: finalSx
        });
      }
    }
  });

  // node_modules/@mui/system/styleFunctionSx/index.js
  var require_styleFunctionSx2 = __commonJS({
    "node_modules/@mui/system/styleFunctionSx/index.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault3();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      Object.defineProperty(exports, "default", {
        enumerable: true,
        get: function() {
          return _styleFunctionSx.default;
        }
      });
      Object.defineProperty(exports, "extendSxProp", {
        enumerable: true,
        get: function() {
          return _extendSxProp.default;
        }
      });
      var _styleFunctionSx = _interopRequireDefault(require_styleFunctionSx());
      var _extendSxProp = _interopRequireDefault(require_extendSxProp());
    }
  });

  // node_modules/@mui/system/createTheme/createBreakpoints.js
  var require_createBreakpoints = __commonJS({
    "node_modules/@mui/system/createTheme/createBreakpoints.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault3();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.breakpointKeys = void 0;
      exports.default = createBreakpoints;
      var _extends22 = _interopRequireDefault(require_extends5());
      var _objectWithoutPropertiesLoose22 = _interopRequireDefault(require_objectWithoutPropertiesLoose2());
      var _excluded21 = ["values", "unit", "step"];
      var breakpointKeys = ["xs", "sm", "md", "lg", "xl"];
      exports.breakpointKeys = breakpointKeys;
      function createBreakpoints(breakpoints) {
        const {
          values: values2 = {
            xs: 0,
            sm: 600,
            md: 900,
            lg: 1200,
            xl: 1536
          },
          unit = "px",
          step = 5
        } = breakpoints, other = (0, _objectWithoutPropertiesLoose22.default)(breakpoints, _excluded21);
        const keys = Object.keys(values2);
        function up(key) {
          const value = typeof values2[key] === "number" ? values2[key] : key;
          return `@media (min-width:${value}${unit})`;
        }
        function down(key) {
          const value = typeof values2[key] === "number" ? values2[key] : key;
          return `@media (max-width:${value - step / 100}${unit})`;
        }
        function between(start, end) {
          const endIndex = keys.indexOf(end);
          return `@media (min-width:${typeof values2[start] === "number" ? values2[start] : start}${unit}) and (max-width:${(endIndex !== -1 && typeof values2[keys[endIndex]] === "number" ? values2[keys[endIndex]] : end) - step / 100}${unit})`;
        }
        function only(key) {
          if (keys.indexOf(key) + 1 < keys.length) {
            return between(key, keys[keys.indexOf(key) + 1]);
          }
          return up(key);
        }
        return (0, _extends22.default)({
          keys,
          values: values2,
          up,
          down,
          between,
          only,
          unit
        }, other);
      }
    }
  });

  // node_modules/@mui/system/createTheme/shape.js
  var require_shape = __commonJS({
    "node_modules/@mui/system/createTheme/shape.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var shape = {
        borderRadius: 4
      };
      var _default = shape;
      exports.default = _default;
    }
  });

  // node_modules/@mui/system/createTheme/createSpacing.js
  var require_createSpacing = __commonJS({
    "node_modules/@mui/system/createTheme/createSpacing.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = createSpacing;
      var _spacing = require_spacing();
      function createSpacing(spacingInput = 8) {
        if (spacingInput.mui) {
          return spacingInput;
        }
        const transform = (0, _spacing.createUnarySpacing)({
          spacing: spacingInput
        });
        const spacing = (...argsInput) => {
          if (true) {
            if (!(argsInput.length <= 4)) {
              console.error(`MUI: Too many arguments provided, expected between 0 and 4, got ${argsInput.length}`);
            }
          }
          const args = argsInput.length === 0 ? [1] : argsInput;
          return args.map((argument) => {
            const output = transform(argument);
            return typeof output === "number" ? `${output}px` : output;
          }).join(" ");
        };
        spacing.mui = true;
        return spacing;
      }
    }
  });

  // node_modules/@mui/system/createTheme/createTheme.js
  var require_createTheme = __commonJS({
    "node_modules/@mui/system/createTheme/createTheme.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault3();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _extends22 = _interopRequireDefault(require_extends5());
      var _objectWithoutPropertiesLoose22 = _interopRequireDefault(require_objectWithoutPropertiesLoose2());
      var _utils = require_utils();
      var _createBreakpoints = _interopRequireDefault(require_createBreakpoints());
      var _shape = _interopRequireDefault(require_shape());
      var _createSpacing = _interopRequireDefault(require_createSpacing());
      var _excluded21 = ["breakpoints", "palette", "spacing", "shape"];
      function createTheme2(options = {}, ...args) {
        const {
          breakpoints: breakpointsInput = {},
          palette: paletteInput = {},
          spacing: spacingInput,
          shape: shapeInput = {}
        } = options, other = (0, _objectWithoutPropertiesLoose22.default)(options, _excluded21);
        const breakpoints = (0, _createBreakpoints.default)(breakpointsInput);
        const spacing = (0, _createSpacing.default)(spacingInput);
        let muiTheme = (0, _utils.deepmerge)({
          breakpoints,
          direction: "ltr",
          components: {},
          palette: (0, _extends22.default)({
            mode: "light"
          }, paletteInput),
          spacing,
          shape: (0, _extends22.default)({}, _shape.default, shapeInput)
        }, other);
        muiTheme = args.reduce((acc, argument) => (0, _utils.deepmerge)(acc, argument), muiTheme);
        return muiTheme;
      }
      var _default = createTheme2;
      exports.default = _default;
    }
  });

  // node_modules/@mui/system/createTheme/index.js
  var require_createTheme2 = __commonJS({
    "node_modules/@mui/system/createTheme/index.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault3();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      Object.defineProperty(exports, "default", {
        enumerable: true,
        get: function() {
          return _createTheme.default;
        }
      });
      var _createTheme = _interopRequireDefault(require_createTheme());
    }
  });

  // node_modules/@mui/private-theming/node_modules/@babel/runtime/helpers/interopRequireDefault.js
  var require_interopRequireDefault5 = __commonJS({
    "node_modules/@mui/private-theming/node_modules/@babel/runtime/helpers/interopRequireDefault.js"(exports, module) {
      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          "default": obj
        };
      }
      module.exports = _interopRequireDefault;
      module.exports["default"] = module.exports, module.exports.__esModule = true;
    }
  });

  // node_modules/@mui/private-theming/node_modules/@babel/runtime/helpers/extends.js
  var require_extends6 = __commonJS({
    "node_modules/@mui/private-theming/node_modules/@babel/runtime/helpers/extends.js"(exports, module) {
      function _extends4() {
        module.exports = _extends4 = Object.assign || function(target) {
          for (var i2 = 1; i2 < arguments.length; i2++) {
            var source = arguments[i2];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };
        module.exports["default"] = module.exports, module.exports.__esModule = true;
        return _extends4.apply(this, arguments);
      }
      module.exports = _extends4;
      module.exports["default"] = module.exports, module.exports.__esModule = true;
    }
  });

  // node_modules/@mui/private-theming/node/useTheme/ThemeContext.js
  var require_ThemeContext = __commonJS({
    "node_modules/@mui/private-theming/node/useTheme/ThemeContext.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var React40 = _interopRequireWildcard(require_react());
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
      var ThemeContext = /* @__PURE__ */ React40.createContext(null);
      if (true) {
        ThemeContext.displayName = "ThemeContext";
      }
      var _default = ThemeContext;
      exports.default = _default;
    }
  });

  // node_modules/@mui/private-theming/node/useTheme/useTheme.js
  var require_useTheme = __commonJS({
    "node_modules/@mui/private-theming/node/useTheme/useTheme.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault5();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = useTheme3;
      var React40 = _interopRequireWildcard(require_react());
      var _ThemeContext = _interopRequireDefault(require_ThemeContext());
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
      function useTheme3() {
        const theme = React40.useContext(_ThemeContext.default);
        if (true) {
          React40.useDebugValue(theme);
        }
        return theme;
      }
    }
  });

  // node_modules/@mui/private-theming/node/useTheme/index.js
  var require_useTheme2 = __commonJS({
    "node_modules/@mui/private-theming/node/useTheme/index.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault5();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      Object.defineProperty(exports, "default", {
        enumerable: true,
        get: function() {
          return _useTheme.default;
        }
      });
      var _useTheme = _interopRequireDefault(require_useTheme());
    }
  });

  // node_modules/@mui/private-theming/node/ThemeProvider/nested.js
  var require_nested = __commonJS({
    "node_modules/@mui/private-theming/node/ThemeProvider/nested.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var hasSymbol = typeof Symbol === "function" && Symbol.for;
      var _default = hasSymbol ? Symbol.for("mui.nested") : "__THEME_NESTED__";
      exports.default = _default;
    }
  });

  // node_modules/@mui/private-theming/node/ThemeProvider/ThemeProvider.js
  var require_ThemeProvider = __commonJS({
    "node_modules/@mui/private-theming/node/ThemeProvider/ThemeProvider.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault5();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _extends22 = _interopRequireDefault(require_extends6());
      var React40 = _interopRequireWildcard(require_react());
      var _propTypes = _interopRequireDefault(require_prop_types());
      var _utils = require_utils();
      var _ThemeContext = _interopRequireDefault(require_ThemeContext());
      var _useTheme = _interopRequireDefault(require_useTheme2());
      var _nested = _interopRequireDefault(require_nested());
      var _jsxRuntime = require_jsx_runtime();
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
      function mergeOuterLocalTheme(outerTheme, localTheme) {
        if (typeof localTheme === "function") {
          const mergedTheme = localTheme(outerTheme);
          if (true) {
            if (!mergedTheme) {
              console.error(["MUI: You should return an object from your theme function, i.e.", "<ThemeProvider theme={() => ({})} />"].join("\n"));
            }
          }
          return mergedTheme;
        }
        return (0, _extends22.default)({}, outerTheme, localTheme);
      }
      function ThemeProvider(props) {
        const {
          children,
          theme: localTheme
        } = props;
        const outerTheme = (0, _useTheme.default)();
        if (true) {
          if (outerTheme === null && typeof localTheme === "function") {
            console.error(["MUI: You are providing a theme function prop to the ThemeProvider component:", "<ThemeProvider theme={outerTheme => outerTheme} />", "", "However, no outer theme is present.", "Make sure a theme is already injected higher in the React tree or provide a theme object."].join("\n"));
          }
        }
        const theme = React40.useMemo(() => {
          const output = outerTheme === null ? localTheme : mergeOuterLocalTheme(outerTheme, localTheme);
          if (output != null) {
            output[_nested.default] = outerTheme !== null;
          }
          return output;
        }, [localTheme, outerTheme]);
        return /* @__PURE__ */ (0, _jsxRuntime.jsx)(_ThemeContext.default.Provider, {
          value: theme,
          children
        });
      }
      true ? ThemeProvider.propTypes = {
        children: _propTypes.default.node,
        theme: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.func]).isRequired
      } : void 0;
      if (true) {
        true ? ThemeProvider.propTypes = (0, _utils.exactProp)(ThemeProvider.propTypes) : void 0;
      }
      var _default = ThemeProvider;
      exports.default = _default;
    }
  });

  // node_modules/@mui/private-theming/node/ThemeProvider/index.js
  var require_ThemeProvider2 = __commonJS({
    "node_modules/@mui/private-theming/node/ThemeProvider/index.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault5();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      Object.defineProperty(exports, "default", {
        enumerable: true,
        get: function() {
          return _ThemeProvider.default;
        }
      });
      Object.defineProperty(exports, "unstable_nested", {
        enumerable: true,
        get: function() {
          return _nested.default;
        }
      });
      var _ThemeProvider = _interopRequireDefault(require_ThemeProvider());
      var _nested = _interopRequireDefault(require_nested());
    }
  });

  // node_modules/@mui/private-theming/node/index.js
  var require_node2 = __commonJS({
    "node_modules/@mui/private-theming/node/index.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault5();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      var _exportNames = {
        ThemeProvider: true,
        useTheme: true
      };
      Object.defineProperty(exports, "ThemeProvider", {
        enumerable: true,
        get: function() {
          return _ThemeProvider.default;
        }
      });
      Object.defineProperty(exports, "useTheme", {
        enumerable: true,
        get: function() {
          return _useTheme.default;
        }
      });
      var _ThemeProvider = _interopRequireWildcard(require_ThemeProvider2());
      Object.keys(_ThemeProvider).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (Object.prototype.hasOwnProperty.call(_exportNames, key))
          return;
        if (key in exports && exports[key] === _ThemeProvider[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _ThemeProvider[key];
          }
        });
      });
      var _useTheme = _interopRequireDefault(require_useTheme2());
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
    }
  });

  // node_modules/@mui/system/useThemeWithoutDefault.js
  var require_useThemeWithoutDefault = __commonJS({
    "node_modules/@mui/system/useThemeWithoutDefault.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _privateTheming = require_node2();
      function isObjectEmpty(obj) {
        return Object.keys(obj).length === 0;
      }
      function useTheme3(defaultTheme2 = null) {
        const contextTheme = (0, _privateTheming.useTheme)();
        return !contextTheme || isObjectEmpty(contextTheme) ? defaultTheme2 : contextTheme;
      }
      var _default = useTheme3;
      exports.default = _default;
    }
  });

  // node_modules/@mui/system/useTheme.js
  var require_useTheme3 = __commonJS({
    "node_modules/@mui/system/useTheme.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault3();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.systemDefaultTheme = exports.default = void 0;
      var _createTheme = _interopRequireDefault(require_createTheme2());
      var _useThemeWithoutDefault = _interopRequireDefault(require_useThemeWithoutDefault());
      var systemDefaultTheme = (0, _createTheme.default)();
      exports.systemDefaultTheme = systemDefaultTheme;
      function useTheme3(defaultTheme2 = systemDefaultTheme) {
        return (0, _useThemeWithoutDefault.default)(defaultTheme2);
      }
      var _default = useTheme3;
      exports.default = _default;
    }
  });

  // node_modules/@mui/system/createBox.js
  var require_createBox = __commonJS({
    "node_modules/@mui/system/createBox.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault3();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = createBox;
      var _extends22 = _interopRequireDefault(require_extends5());
      var _objectWithoutPropertiesLoose22 = _interopRequireDefault(require_objectWithoutPropertiesLoose2());
      var React40 = _interopRequireWildcard(require_react());
      var _propTypes = _interopRequireDefault(require_prop_types());
      var _clsx = _interopRequireDefault(require_clsx());
      var _styledEngine = _interopRequireDefault(require_node());
      var _styleFunctionSx = _interopRequireWildcard(require_styleFunctionSx2());
      var _useTheme = _interopRequireDefault(require_useTheme3());
      var _jsxRuntime = require_jsx_runtime();
      var _excluded21 = ["className", "component"];
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
      function createBox(options = {}) {
        const {
          defaultTheme: defaultTheme2,
          defaultClassName = "MuiBox-root",
          generateClassName
        } = options;
        const BoxRoot = (0, _styledEngine.default)("div")(_styleFunctionSx.default);
        const Box = /* @__PURE__ */ React40.forwardRef(function Box2(inProps, ref) {
          const theme = (0, _useTheme.default)(defaultTheme2);
          const _extendSxProp = (0, _styleFunctionSx.extendSxProp)(inProps), {
            className,
            component = "div"
          } = _extendSxProp, other = (0, _objectWithoutPropertiesLoose22.default)(_extendSxProp, _excluded21);
          return /* @__PURE__ */ (0, _jsxRuntime.jsx)(BoxRoot, (0, _extends22.default)({
            as: component,
            ref,
            className: (0, _clsx.default)(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),
            theme
          }, other));
        });
        true ? Box.propTypes = {
          children: _propTypes.default.node,
          component: _propTypes.default.elementType,
          sx: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array])
        } : void 0;
        return Box;
      }
    }
  });

  // node_modules/@mui/system/Box/Box.js
  var require_Box = __commonJS({
    "node_modules/@mui/system/Box/Box.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault3();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _createBox = _interopRequireDefault(require_createBox());
      var Box = (0, _createBox.default)();
      var _default = Box;
      exports.default = _default;
    }
  });

  // node_modules/@mui/system/Box/index.js
  var require_Box2 = __commonJS({
    "node_modules/@mui/system/Box/index.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault3();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      Object.defineProperty(exports, "default", {
        enumerable: true,
        get: function() {
          return _Box.default;
        }
      });
      var _Box = _interopRequireDefault(require_Box());
    }
  });

  // node_modules/@mui/system/propsToClassKey.js
  var require_propsToClassKey = __commonJS({
    "node_modules/@mui/system/propsToClassKey.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault3();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = propsToClassKey;
      var _objectWithoutPropertiesLoose22 = _interopRequireDefault(require_objectWithoutPropertiesLoose2());
      var _utils = require_utils();
      var _excluded21 = ["variant"];
      function isEmpty(string) {
        return string.length === 0;
      }
      function propsToClassKey(props) {
        const {
          variant
        } = props, other = (0, _objectWithoutPropertiesLoose22.default)(props, _excluded21);
        let classKey = variant || "";
        Object.keys(other).sort().forEach((key) => {
          if (key === "color") {
            classKey += isEmpty(classKey) ? props[key] : (0, _utils.unstable_capitalize)(props[key]);
          } else {
            classKey += `${isEmpty(classKey) ? key : (0, _utils.unstable_capitalize)(key)}${(0, _utils.unstable_capitalize)(props[key].toString())}`;
          }
        });
        return classKey;
      }
    }
  });

  // node_modules/@mui/system/createStyled.js
  var require_createStyled = __commonJS({
    "node_modules/@mui/system/createStyled.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault3();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = createStyled2;
      exports.shouldForwardProp = shouldForwardProp2;
      exports.systemDefaultTheme = void 0;
      var _extends22 = _interopRequireDefault(require_extends5());
      var _objectWithoutPropertiesLoose22 = _interopRequireDefault(require_objectWithoutPropertiesLoose2());
      var _styledEngine = _interopRequireDefault(require_node());
      var _utils = require_utils();
      var _createTheme = _interopRequireDefault(require_createTheme2());
      var _styleFunctionSx = _interopRequireDefault(require_styleFunctionSx2());
      var _propsToClassKey = _interopRequireDefault(require_propsToClassKey());
      var _excluded21 = ["name", "slot", "skipVariantsResolver", "skipSx", "overridesResolver"];
      var _excluded23 = ["theme"];
      var _excluded32 = ["theme"];
      function isEmpty(obj) {
        return Object.keys(obj).length === 0;
      }
      var getStyleOverrides = (name, theme) => {
        if (theme.components && theme.components[name] && theme.components[name].styleOverrides) {
          return theme.components[name].styleOverrides;
        }
        return null;
      };
      var getVariantStyles = (name, theme) => {
        let variants = [];
        if (theme && theme.components && theme.components[name] && theme.components[name].variants) {
          variants = theme.components[name].variants;
        }
        const variantsStyles = {};
        variants.forEach((definition) => {
          const key = (0, _propsToClassKey.default)(definition.props);
          variantsStyles[key] = definition.style;
        });
        return variantsStyles;
      };
      var variantsResolver = (props, styles2, theme, name) => {
        var _theme$components, _theme$components$nam;
        const {
          ownerState = {}
        } = props;
        const variantsStyles = [];
        const themeVariants = theme == null ? void 0 : (_theme$components = theme.components) == null ? void 0 : (_theme$components$nam = _theme$components[name]) == null ? void 0 : _theme$components$nam.variants;
        if (themeVariants) {
          themeVariants.forEach((themeVariant) => {
            let isMatch = true;
            Object.keys(themeVariant.props).forEach((key) => {
              if (ownerState[key] !== themeVariant.props[key] && props[key] !== themeVariant.props[key]) {
                isMatch = false;
              }
            });
            if (isMatch) {
              variantsStyles.push(styles2[(0, _propsToClassKey.default)(themeVariant.props)]);
            }
          });
        }
        return variantsStyles;
      };
      function shouldForwardProp2(prop) {
        return prop !== "ownerState" && prop !== "theme" && prop !== "sx" && prop !== "as";
      }
      var systemDefaultTheme = (0, _createTheme.default)();
      exports.systemDefaultTheme = systemDefaultTheme;
      var lowercaseFirstLetter = (string) => {
        return string.charAt(0).toLowerCase() + string.slice(1);
      };
      function createStyled2(input = {}) {
        const {
          defaultTheme: defaultTheme2 = systemDefaultTheme,
          rootShouldForwardProp: rootShouldForwardProp2 = shouldForwardProp2,
          slotShouldForwardProp = shouldForwardProp2
        } = input;
        return (tag, inputOptions = {}) => {
          const {
            name: componentName,
            slot: componentSlot,
            skipVariantsResolver: inputSkipVariantsResolver,
            skipSx: inputSkipSx,
            overridesResolver: overridesResolver2
          } = inputOptions, options = (0, _objectWithoutPropertiesLoose22.default)(inputOptions, _excluded21);
          const skipVariantsResolver = inputSkipVariantsResolver !== void 0 ? inputSkipVariantsResolver : componentSlot && componentSlot !== "Root" || false;
          const skipSx = inputSkipSx || false;
          let label;
          if (true) {
            if (componentName) {
              label = `${componentName}-${lowercaseFirstLetter(componentSlot || "Root")}`;
            }
          }
          let shouldForwardPropOption = shouldForwardProp2;
          if (componentSlot === "Root") {
            shouldForwardPropOption = rootShouldForwardProp2;
          } else if (componentSlot) {
            shouldForwardPropOption = slotShouldForwardProp;
          }
          const defaultStyledResolver = (0, _styledEngine.default)(tag, (0, _extends22.default)({
            shouldForwardProp: shouldForwardPropOption,
            label
          }, options));
          const muiStyledResolver = (styleArg, ...expressions) => {
            const expressionsWithDefaultTheme = expressions ? expressions.map((stylesArg) => {
              return typeof stylesArg === "function" && stylesArg.__emotion_real !== stylesArg ? (_ref) => {
                let {
                  theme: themeInput
                } = _ref, other = (0, _objectWithoutPropertiesLoose22.default)(_ref, _excluded23);
                return stylesArg((0, _extends22.default)({
                  theme: isEmpty(themeInput) ? defaultTheme2 : themeInput
                }, other));
              } : stylesArg;
            }) : [];
            let transformedStyleArg = styleArg;
            if (componentName && overridesResolver2) {
              expressionsWithDefaultTheme.push((props) => {
                const theme = isEmpty(props.theme) ? defaultTheme2 : props.theme;
                const styleOverrides = getStyleOverrides(componentName, theme);
                if (styleOverrides) {
                  return overridesResolver2(props, styleOverrides);
                }
                return null;
              });
            }
            if (componentName && !skipVariantsResolver) {
              expressionsWithDefaultTheme.push((props) => {
                const theme = isEmpty(props.theme) ? defaultTheme2 : props.theme;
                return variantsResolver(props, getVariantStyles(componentName, theme), theme, componentName);
              });
            }
            if (!skipSx) {
              expressionsWithDefaultTheme.push((props) => {
                const theme = isEmpty(props.theme) ? defaultTheme2 : props.theme;
                return (0, _styleFunctionSx.default)((0, _extends22.default)({}, props, {
                  theme
                }));
              });
            }
            const numOfCustomFnsApplied = expressionsWithDefaultTheme.length - expressions.length;
            if (Array.isArray(styleArg) && numOfCustomFnsApplied > 0) {
              const placeholders = new Array(numOfCustomFnsApplied).fill("");
              transformedStyleArg = [...styleArg, ...placeholders];
              transformedStyleArg.raw = [...styleArg.raw, ...placeholders];
            } else if (typeof styleArg === "function") {
              transformedStyleArg = (_ref2) => {
                let {
                  theme: themeInput
                } = _ref2, other = (0, _objectWithoutPropertiesLoose22.default)(_ref2, _excluded32);
                return styleArg((0, _extends22.default)({
                  theme: isEmpty(themeInput) ? defaultTheme2 : themeInput
                }, other));
              };
            }
            const Component = defaultStyledResolver(transformedStyleArg, ...expressionsWithDefaultTheme);
            if (true) {
              let displayName;
              if (componentName) {
                displayName = `${componentName}${componentSlot || ""}`;
              }
              if (displayName === void 0) {
                displayName = `Styled(${(0, _utils.getDisplayName)(tag)})`;
              }
              Component.displayName = displayName;
            }
            return Component;
          };
          return muiStyledResolver;
        };
      }
    }
  });

  // node_modules/@mui/system/styled.js
  var require_styled = __commonJS({
    "node_modules/@mui/system/styled.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault3();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _createStyled = _interopRequireDefault(require_createStyled());
      var styled2 = (0, _createStyled.default)();
      var _default = styled2;
      exports.default = _default;
    }
  });

  // node_modules/@mui/system/useThemeProps/getThemeProps.js
  var require_getThemeProps = __commonJS({
    "node_modules/@mui/system/useThemeProps/getThemeProps.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault3();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = getThemeProps;
      var _extends22 = _interopRequireDefault(require_extends5());
      function getThemeProps(params) {
        const {
          theme,
          name,
          props
        } = params;
        if (!theme || !theme.components || !theme.components[name] || !theme.components[name].defaultProps) {
          return props;
        }
        const output = (0, _extends22.default)({}, props);
        const defaultProps2 = theme.components[name].defaultProps;
        let propName;
        for (propName in defaultProps2) {
          if (output[propName] === void 0) {
            output[propName] = defaultProps2[propName];
          }
        }
        return output;
      }
    }
  });

  // node_modules/@mui/system/useThemeProps/useThemeProps.js
  var require_useThemeProps = __commonJS({
    "node_modules/@mui/system/useThemeProps/useThemeProps.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault3();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = useThemeProps2;
      var _getThemeProps = _interopRequireDefault(require_getThemeProps());
      var _useTheme = _interopRequireDefault(require_useTheme3());
      function useThemeProps2({
        props,
        name,
        defaultTheme: defaultTheme2
      }) {
        const theme = (0, _useTheme.default)(defaultTheme2);
        const mergedProps = (0, _getThemeProps.default)({
          theme,
          name,
          props
        });
        return mergedProps;
      }
    }
  });

  // node_modules/@mui/system/useThemeProps/index.js
  var require_useThemeProps2 = __commonJS({
    "node_modules/@mui/system/useThemeProps/index.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault3();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      Object.defineProperty(exports, "default", {
        enumerable: true,
        get: function() {
          return _useThemeProps.default;
        }
      });
      Object.defineProperty(exports, "getThemeProps", {
        enumerable: true,
        get: function() {
          return _getThemeProps.default;
        }
      });
      var _useThemeProps = _interopRequireDefault(require_useThemeProps());
      var _getThemeProps = _interopRequireDefault(require_getThemeProps());
    }
  });

  // node_modules/@mui/system/colorManipulator.js
  var require_colorManipulator = __commonJS({
    "node_modules/@mui/system/colorManipulator.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.alpha = alpha5;
      exports.darken = darken4;
      exports.decomposeColor = decomposeColor;
      exports.emphasize = emphasize2;
      exports.getContrastRatio = getContrastRatio2;
      exports.getLuminance = getLuminance;
      exports.hexToRgb = hexToRgb;
      exports.hslToRgb = hslToRgb;
      exports.lighten = lighten4;
      exports.recomposeColor = recomposeColor;
      exports.rgbToHex = rgbToHex;
      var _utils = require_utils();
      function clamp(value, min = 0, max = 1) {
        if (true) {
          if (value < min || value > max) {
            console.error(`MUI: The value provided ${value} is out of range [${min}, ${max}].`);
          }
        }
        return Math.min(Math.max(min, value), max);
      }
      function hexToRgb(color) {
        color = color.substr(1);
        const re2 = new RegExp(`.{1,${color.length >= 6 ? 2 : 1}}`, "g");
        let colors = color.match(re2);
        if (colors && colors[0].length === 1) {
          colors = colors.map((n2) => n2 + n2);
        }
        return colors ? `rgb${colors.length === 4 ? "a" : ""}(${colors.map((n2, index2) => {
          return index2 < 3 ? parseInt(n2, 16) : Math.round(parseInt(n2, 16) / 255 * 1e3) / 1e3;
        }).join(", ")})` : "";
      }
      function intToHex(int) {
        const hex = int.toString(16);
        return hex.length === 1 ? `0${hex}` : hex;
      }
      function decomposeColor(color) {
        if (color.type) {
          return color;
        }
        if (color.charAt(0) === "#") {
          return decomposeColor(hexToRgb(color));
        }
        const marker = color.indexOf("(");
        const type = color.substring(0, marker);
        if (["rgb", "rgba", "hsl", "hsla", "color"].indexOf(type) === -1) {
          throw new Error(true ? `MUI: Unsupported \`${color}\` color.
The following formats are supported: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` : (0, _utils.formatMuiErrorMessage)(9, color));
        }
        let values2 = color.substring(marker + 1, color.length - 1);
        let colorSpace;
        if (type === "color") {
          values2 = values2.split(" ");
          colorSpace = values2.shift();
          if (values2.length === 4 && values2[3].charAt(0) === "/") {
            values2[3] = values2[3].substr(1);
          }
          if (["srgb", "display-p3", "a98-rgb", "prophoto-rgb", "rec-2020"].indexOf(colorSpace) === -1) {
            throw new Error(true ? `MUI: unsupported \`${colorSpace}\` color space.
The following color spaces are supported: srgb, display-p3, a98-rgb, prophoto-rgb, rec-2020.` : (0, _utils.formatMuiErrorMessage)(10, colorSpace));
          }
        } else {
          values2 = values2.split(",");
        }
        values2 = values2.map((value) => parseFloat(value));
        return {
          type,
          values: values2,
          colorSpace
        };
      }
      function recomposeColor(color) {
        const {
          type,
          colorSpace
        } = color;
        let {
          values: values2
        } = color;
        if (type.indexOf("rgb") !== -1) {
          values2 = values2.map((n2, i2) => i2 < 3 ? parseInt(n2, 10) : n2);
        } else if (type.indexOf("hsl") !== -1) {
          values2[1] = `${values2[1]}%`;
          values2[2] = `${values2[2]}%`;
        }
        if (type.indexOf("color") !== -1) {
          values2 = `${colorSpace} ${values2.join(" ")}`;
        } else {
          values2 = `${values2.join(", ")}`;
        }
        return `${type}(${values2})`;
      }
      function rgbToHex(color) {
        if (color.indexOf("#") === 0) {
          return color;
        }
        const {
          values: values2
        } = decomposeColor(color);
        return `#${values2.map((n2, i2) => intToHex(i2 === 3 ? Math.round(255 * n2) : n2)).join("")}`;
      }
      function hslToRgb(color) {
        color = decomposeColor(color);
        const {
          values: values2
        } = color;
        const h2 = values2[0];
        const s2 = values2[1] / 100;
        const l2 = values2[2] / 100;
        const a2 = s2 * Math.min(l2, 1 - l2);
        const f2 = (n2, k2 = (n2 + h2 / 30) % 12) => l2 - a2 * Math.max(Math.min(k2 - 3, 9 - k2, 1), -1);
        let type = "rgb";
        const rgb = [Math.round(f2(0) * 255), Math.round(f2(8) * 255), Math.round(f2(4) * 255)];
        if (color.type === "hsla") {
          type += "a";
          rgb.push(values2[3]);
        }
        return recomposeColor({
          type,
          values: rgb
        });
      }
      function getLuminance(color) {
        color = decomposeColor(color);
        let rgb = color.type === "hsl" ? decomposeColor(hslToRgb(color)).values : color.values;
        rgb = rgb.map((val) => {
          if (color.type !== "color") {
            val /= 255;
          }
          return val <= 0.03928 ? val / 12.92 : ((val + 0.055) / 1.055) ** 2.4;
        });
        return Number((0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2]).toFixed(3));
      }
      function getContrastRatio2(foreground, background) {
        const lumA = getLuminance(foreground);
        const lumB = getLuminance(background);
        return (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);
      }
      function alpha5(color, value) {
        color = decomposeColor(color);
        value = clamp(value);
        if (color.type === "rgb" || color.type === "hsl") {
          color.type += "a";
        }
        if (color.type === "color") {
          color.values[3] = `/${value}`;
        } else {
          color.values[3] = value;
        }
        return recomposeColor(color);
      }
      function darken4(color, coefficient) {
        color = decomposeColor(color);
        coefficient = clamp(coefficient);
        if (color.type.indexOf("hsl") !== -1) {
          color.values[2] *= 1 - coefficient;
        } else if (color.type.indexOf("rgb") !== -1 || color.type.indexOf("color") !== -1) {
          for (let i2 = 0; i2 < 3; i2 += 1) {
            color.values[i2] *= 1 - coefficient;
          }
        }
        return recomposeColor(color);
      }
      function lighten4(color, coefficient) {
        color = decomposeColor(color);
        coefficient = clamp(coefficient);
        if (color.type.indexOf("hsl") !== -1) {
          color.values[2] += (100 - color.values[2]) * coefficient;
        } else if (color.type.indexOf("rgb") !== -1) {
          for (let i2 = 0; i2 < 3; i2 += 1) {
            color.values[i2] += (255 - color.values[i2]) * coefficient;
          }
        } else if (color.type.indexOf("color") !== -1) {
          for (let i2 = 0; i2 < 3; i2 += 1) {
            color.values[i2] += (1 - color.values[i2]) * coefficient;
          }
        }
        return recomposeColor(color);
      }
      function emphasize2(color, coefficient = 0.15) {
        return getLuminance(color) > 0.5 ? darken4(color, coefficient) : lighten4(color, coefficient);
      }
    }
  });

  // node_modules/@mui/system/ThemeProvider/ThemeProvider.js
  var require_ThemeProvider3 = __commonJS({
    "node_modules/@mui/system/ThemeProvider/ThemeProvider.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault3();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var React40 = _interopRequireWildcard(require_react());
      var _propTypes = _interopRequireDefault(require_prop_types());
      var _privateTheming = require_node2();
      var _utils = require_utils();
      var _styledEngine = require_node();
      var _useTheme = _interopRequireDefault(require_useTheme3());
      var _jsxRuntime = require_jsx_runtime();
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
      function InnerThemeProvider(props) {
        const theme = (0, _useTheme.default)();
        return /* @__PURE__ */ (0, _jsxRuntime.jsx)(_styledEngine.ThemeContext.Provider, {
          value: typeof theme === "object" ? theme : {},
          children: props.children
        });
      }
      true ? InnerThemeProvider.propTypes = {
        children: _propTypes.default.node
      } : void 0;
      function ThemeProvider(props) {
        const {
          children,
          theme: localTheme
        } = props;
        return /* @__PURE__ */ (0, _jsxRuntime.jsx)(_privateTheming.ThemeProvider, {
          theme: localTheme,
          children: /* @__PURE__ */ (0, _jsxRuntime.jsx)(InnerThemeProvider, {
            children
          })
        });
      }
      true ? ThemeProvider.propTypes = {
        children: _propTypes.default.node,
        theme: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.func]).isRequired
      } : void 0;
      if (true) {
        true ? ThemeProvider.propTypes = (0, _utils.exactProp)(ThemeProvider.propTypes) : void 0;
      }
      var _default = ThemeProvider;
      exports.default = _default;
    }
  });

  // node_modules/@mui/system/ThemeProvider/index.js
  var require_ThemeProvider4 = __commonJS({
    "node_modules/@mui/system/ThemeProvider/index.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault3();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      Object.defineProperty(exports, "default", {
        enumerable: true,
        get: function() {
          return _ThemeProvider.default;
        }
      });
      var _ThemeProvider = _interopRequireDefault(require_ThemeProvider3());
    }
  });

  // node_modules/@mui/system/cssVars/cssVarsParser.js
  var require_cssVarsParser = __commonJS({
    "node_modules/@mui/system/cssVars/cssVarsParser.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault3();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.assignNestedKeys = void 0;
      exports.default = cssVarsParser;
      exports.walkObjectDeep = void 0;
      var _extends22 = _interopRequireDefault(require_extends5());
      var assignNestedKeys = (obj, keys, value) => {
        let temp = obj;
        keys.forEach((k2, index2) => {
          if (index2 === keys.length - 1) {
            if (temp && typeof temp === "object") {
              temp[k2] = value;
            }
          } else if (temp && typeof temp === "object") {
            if (!temp[k2]) {
              temp[k2] = {};
            }
            temp = temp[k2];
          }
        });
      };
      exports.assignNestedKeys = assignNestedKeys;
      var walkObjectDeep = (obj, callback) => {
        function recurse(object, parentKeys = []) {
          Object.entries(object).forEach(([key, value]) => {
            if (value !== void 0 && value !== null) {
              if (typeof value === "object" && Object.keys(value).length > 0) {
                recurse(value, [...parentKeys, key]);
              } else {
                callback([...parentKeys, key], value, object);
              }
            }
          });
        }
        recurse(obj);
      };
      exports.walkObjectDeep = walkObjectDeep;
      var getCssValue = (keys, value) => {
        if (typeof value === "number") {
          if (["lineHeight", "fontWeight", "opacity", "zIndex"].some((prop) => keys.includes(prop))) {
            return value;
          }
          return `${value}px`;
        }
        return value;
      };
      function cssVarsParser(theme, options) {
        const clonedTheme = (0, _extends22.default)({}, theme);
        delete clonedTheme.vars;
        const {
          prefix,
          basePrefix = "",
          shouldSkipGeneratingVar
        } = options || {};
        const css = {};
        const vars = {};
        walkObjectDeep(clonedTheme, (keys, val, scope) => {
          if (typeof val === "string" || typeof val === "number") {
            let value = val;
            if (typeof value === "string" && value.startsWith("var")) {
              value = prefix ? value.replace(basePrefix, prefix) : value.replace(`${basePrefix}-`, "");
              scope[keys.slice(-1)[0]] = value;
            }
            if (!shouldSkipGeneratingVar || shouldSkipGeneratingVar && !shouldSkipGeneratingVar(keys, value)) {
              const cssVar = `--${prefix ? `${prefix}-` : ""}${keys.join("-")}`;
              Object.assign(css, {
                [cssVar]: getCssValue(keys, value)
              });
              assignNestedKeys(vars, keys, `var(${cssVar})`);
            }
          }
        });
        return {
          css,
          vars
        };
      }
    }
  });

  // node_modules/@mui/system/cssVars/getInitColorSchemeScript.js
  var require_getInitColorSchemeScript = __commonJS({
    "node_modules/@mui/system/cssVars/getInitColorSchemeScript.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.DEFAULT_MODE_STORAGE_KEY = exports.DEFAULT_COLOR_SCHEME_STORAGE_KEY = exports.DEFAULT_ATTRIBUTE = void 0;
      exports.default = getInitColorSchemeScript;
      var React40 = _interopRequireWildcard(require_react());
      var _jsxRuntime = require_jsx_runtime();
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
      var DEFAULT_MODE_STORAGE_KEY = "mui-mode";
      exports.DEFAULT_MODE_STORAGE_KEY = DEFAULT_MODE_STORAGE_KEY;
      var DEFAULT_COLOR_SCHEME_STORAGE_KEY = "mui-color-scheme";
      exports.DEFAULT_COLOR_SCHEME_STORAGE_KEY = DEFAULT_COLOR_SCHEME_STORAGE_KEY;
      var DEFAULT_ATTRIBUTE = "data-mui-color-scheme";
      exports.DEFAULT_ATTRIBUTE = DEFAULT_ATTRIBUTE;
      function getInitColorSchemeScript(options) {
        const {
          defaultMode = "light",
          defaultLightColorScheme = "light",
          defaultDarkColorScheme = "dark",
          modeStorageKey = DEFAULT_MODE_STORAGE_KEY,
          colorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY,
          attribute = DEFAULT_ATTRIBUTE
        } = options || {};
        return /* @__PURE__ */ (0, _jsxRuntime.jsx)("script", {
          dangerouslySetInnerHTML: {
            __html: `(function() { try {
        var mode = localStorage.getItem('${modeStorageKey}');
        var colorScheme = '';
        if (mode === 'system' || (!mode && ${defaultMode} === 'system')) {
          // handle system mode
          var mql = window.matchMedia('(prefers-color-scheme: dark)');
          if (mql.matches) {
            colorScheme = localStorage.getItem('${colorSchemeStorageKey}-dark') || ${defaultLightColorScheme};
          } else {
            colorScheme = localStorage.getItem('${colorSchemeStorageKey}-light') || ${defaultDarkColorScheme};
          }
        }
        if (mode === 'light') {
          colorScheme = localStorage.getItem('${colorSchemeStorageKey}-light') || ${defaultLightColorScheme};
        }
        if (mode === 'dark') {
          colorScheme = localStorage.getItem('${colorSchemeStorageKey}-dark') || ${defaultDarkColorScheme};
        }
        if (colorScheme) {
          document.body.setAttribute('${attribute}', colorScheme);
        }
      } catch (e) {} })();`
          }
        });
      }
    }
  });

  // node_modules/@mui/system/cssVars/useCurrentColorScheme.js
  var require_useCurrentColorScheme = __commonJS({
    "node_modules/@mui/system/cssVars/useCurrentColorScheme.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault3();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = useCurrentColorScheme;
      exports.getColorScheme = getColorScheme;
      exports.getSystemMode = getSystemMode;
      var _extends22 = _interopRequireDefault(require_extends5());
      var React40 = _interopRequireWildcard(require_react());
      var _getInitColorSchemeScript = require_getInitColorSchemeScript();
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
      function getSystemMode(mode) {
        if (typeof window !== "undefined" && mode === "system") {
          const mql = window.matchMedia("(prefers-color-scheme: dark)");
          if (mql.matches) {
            return "dark";
          }
          return "light";
        }
        return void 0;
      }
      function processState(state, callback) {
        if (state.mode === "light" || state.mode === "system" && state.systemMode === "light") {
          return callback("light");
        }
        if (state.mode === "dark" || state.mode === "system" && state.systemMode === "dark") {
          return callback("dark");
        }
        return void 0;
      }
      function getColorScheme(state) {
        return processState(state, (mode) => {
          if (mode === "light") {
            return state.lightColorScheme;
          }
          if (mode === "dark") {
            return state.darkColorScheme;
          }
          return void 0;
        });
      }
      function resolveValue(key, defaultValue) {
        if (typeof window === "undefined") {
          return void 0;
        }
        let value;
        try {
          value = localStorage.getItem(key) || void 0;
        } catch (e2) {
        }
        return value || defaultValue;
      }
      function useCurrentColorScheme(options) {
        const {
          defaultMode = "light",
          defaultLightColorScheme,
          defaultDarkColorScheme,
          supportedColorSchemes = [],
          modeStorageKey = _getInitColorSchemeScript.DEFAULT_MODE_STORAGE_KEY,
          colorSchemeStorageKey = _getInitColorSchemeScript.DEFAULT_COLOR_SCHEME_STORAGE_KEY
        } = options;
        const joinedColorSchemes = supportedColorSchemes.join(",");
        const [state, setState] = React40.useState(() => {
          const initialMode = resolveValue(modeStorageKey, defaultMode);
          return {
            mode: initialMode,
            systemMode: getSystemMode(initialMode),
            lightColorScheme: resolveValue(`${colorSchemeStorageKey}-light`) || defaultLightColorScheme,
            darkColorScheme: resolveValue(`${colorSchemeStorageKey}-dark`) || defaultDarkColorScheme
          };
        });
        const colorScheme = getColorScheme(state);
        const setMode = React40.useCallback((mode) => {
          setState((currentState) => {
            const newMode = !mode ? defaultMode : mode;
            if (typeof localStorage !== "undefined") {
              localStorage.setItem(modeStorageKey, newMode);
            }
            return (0, _extends22.default)({}, currentState, {
              mode: newMode,
              systemMode: getSystemMode(newMode)
            });
          });
        }, [modeStorageKey, defaultMode]);
        const setColorScheme = React40.useCallback((value) => {
          if (!value || typeof value === "string") {
            if (value && !supportedColorSchemes.includes(value)) {
              console.error(`\`${value}\` does not exist in \`theme.colorSchemes\`.`);
            } else {
              setState((currentState) => {
                const newState = (0, _extends22.default)({}, currentState);
                if (!value) {
                  newState.lightColorScheme = defaultLightColorScheme;
                  newState.darkColorScheme = defaultDarkColorScheme;
                  return newState;
                }
                processState(currentState, (mode) => {
                  localStorage.setItem(`${colorSchemeStorageKey}-${mode}`, value);
                  if (mode === "light") {
                    newState.lightColorScheme = value;
                  }
                  if (mode === "dark") {
                    newState.darkColorScheme = value;
                  }
                });
                return newState;
              });
            }
          } else if (value.light && !supportedColorSchemes.includes(value.light) || value.dark && !supportedColorSchemes.includes(value.dark)) {
            console.error(`\`${value}\` does not exist in \`theme.colorSchemes\`.`);
          } else {
            setState((currentState) => {
              const newState = (0, _extends22.default)({}, currentState);
              if (value.light || value.light === null) {
                newState.lightColorScheme = value.light === null ? defaultLightColorScheme : value.light;
              }
              if (value.dark || value.dark === null) {
                newState.darkColorScheme = value.dark === null ? defaultDarkColorScheme : value.dark;
              }
              return newState;
            });
            if (value.light) {
              localStorage.setItem(`${colorSchemeStorageKey}-light`, value.light);
            }
            if (value.dark) {
              localStorage.setItem(`${colorSchemeStorageKey}-dark`, value.dark);
            }
          }
        }, [colorSchemeStorageKey, supportedColorSchemes, defaultLightColorScheme, defaultDarkColorScheme]);
        const handleMediaQuery = React40.useCallback((e2) => {
          if (state.mode === "system") {
            setState((currentState) => (0, _extends22.default)({}, currentState, {
              systemMode: e2.matches ? "dark" : "light"
            }));
          }
        }, [state.mode]);
        const mediaListener = React40.useRef(handleMediaQuery);
        mediaListener.current = handleMediaQuery;
        React40.useEffect(() => {
          const handler = (...args) => mediaListener.current(...args);
          const media = window.matchMedia("(prefers-color-scheme: dark)");
          media.addListener(handler);
          handler(media);
          return () => media.removeListener(handler);
        }, []);
        React40.useEffect(() => {
          if (state.mode) {
            localStorage.setItem(modeStorageKey, state.mode);
          }
          processState(state, (mode) => {
            if (mode === "light") {
              localStorage.setItem(`${colorSchemeStorageKey}-light`, state.lightColorScheme);
            }
            if (mode === "dark") {
              localStorage.setItem(`${colorSchemeStorageKey}-dark`, state.darkColorScheme);
            }
          });
        }, [state, colorSchemeStorageKey, modeStorageKey]);
        React40.useEffect(() => {
          const handleStorage = (event) => {
            const value = event.newValue;
            if (typeof event.key === "string" && event.key.startsWith(colorSchemeStorageKey) && (!value || joinedColorSchemes.match(value))) {
              if (event.key.endsWith("light")) {
                setColorScheme({
                  light: value
                });
              }
              if (event.key.endsWith("dark")) {
                setColorScheme({
                  dark: value
                });
              }
            }
            if (event.key === modeStorageKey && (!value || ["light", "dark", "system"].includes(value))) {
              setMode(value || defaultMode);
            }
          };
          window.addEventListener("storage", handleStorage);
          return () => window.removeEventListener("storage", handleStorage);
        }, [setColorScheme, setMode, modeStorageKey, colorSchemeStorageKey, joinedColorSchemes, defaultMode]);
        return (0, _extends22.default)({}, state, {
          colorScheme,
          setMode,
          setColorScheme
        });
      }
    }
  });

  // node_modules/@mui/system/cssVars/createCssVarsProvider.js
  var require_createCssVarsProvider = __commonJS({
    "node_modules/@mui/system/cssVars/createCssVarsProvider.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault3();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = createCssVarsProvider;
      var _extends22 = _interopRequireDefault(require_extends5());
      var _objectWithoutPropertiesLoose22 = _interopRequireDefault(require_objectWithoutPropertiesLoose2());
      var _utils = require_utils();
      var React40 = _interopRequireWildcard(require_react());
      var _propTypes = _interopRequireDefault(require_prop_types());
      var _styledEngine = require_node();
      var _cssVarsParser = _interopRequireDefault(require_cssVarsParser());
      var _ThemeProvider = _interopRequireDefault(require_ThemeProvider4());
      var _getInitColorSchemeScript = _interopRequireWildcard(require_getInitColorSchemeScript());
      var _useCurrentColorScheme = _interopRequireDefault(require_useCurrentColorScheme());
      var _jsxRuntime = require_jsx_runtime();
      var _excluded21 = ["colorSchemes"];
      var _excluded23 = ["colorSchemes"];
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
      function createCssVarsProvider(options) {
        const {
          theme: baseTheme = {},
          defaultMode: desisgnSystemMode = "light",
          defaultColorScheme: designSystemColorScheme,
          prefix: designSystemPrefix = "",
          shouldSkipGeneratingVar
        } = options;
        if (!baseTheme.colorSchemes || typeof designSystemColorScheme === "string" && !baseTheme.colorSchemes[designSystemColorScheme] || typeof designSystemColorScheme === "object" && !baseTheme.colorSchemes[designSystemColorScheme == null ? void 0 : designSystemColorScheme.light] || typeof designSystemColorScheme === "object" && !baseTheme.colorSchemes[designSystemColorScheme == null ? void 0 : designSystemColorScheme.dark]) {
          console.error(`MUI: \`${designSystemColorScheme}\` does not exist in \`theme.colorSchemes\`.`);
        }
        const ColorSchemeContext = /* @__PURE__ */ React40.createContext(void 0);
        const useColorScheme = () => {
          const value = React40.useContext(ColorSchemeContext);
          if (!value) {
            throw new Error(true ? `MUI: \`useColorScheme\` must be called under <CssVarsProvider />` : (0, _utils.formatMuiErrorMessage)(19));
          }
          return value;
        };
        function CssVarsProvider({
          children,
          theme: themeProp = {},
          prefix = designSystemPrefix,
          modeStorageKey = _getInitColorSchemeScript.DEFAULT_MODE_STORAGE_KEY,
          attribute = _getInitColorSchemeScript.DEFAULT_ATTRIBUTE,
          defaultMode = desisgnSystemMode,
          defaultColorScheme = designSystemColorScheme
        }) {
          const {
            colorSchemes: baseColorSchemes = {}
          } = baseTheme, restBaseTheme = (0, _objectWithoutPropertiesLoose22.default)(baseTheme, _excluded21);
          const {
            colorSchemes: colorSchemesProp = {}
          } = themeProp, restThemeProp = (0, _objectWithoutPropertiesLoose22.default)(themeProp, _excluded23);
          let mergedTheme = (0, _utils.deepmerge)(restBaseTheme, restThemeProp);
          const colorSchemes = (0, _utils.deepmerge)(baseColorSchemes, colorSchemesProp);
          const allColorSchemes = Object.keys(colorSchemes);
          const defaultLightColorScheme = typeof defaultColorScheme === "string" ? defaultColorScheme : defaultColorScheme.light;
          const defaultDarkColorScheme = typeof defaultColorScheme === "string" ? defaultColorScheme : defaultColorScheme.dark;
          const {
            mode,
            setMode,
            lightColorScheme,
            darkColorScheme,
            colorScheme,
            setColorScheme
          } = (0, _useCurrentColorScheme.default)({
            supportedColorSchemes: allColorSchemes,
            defaultLightColorScheme,
            defaultDarkColorScheme,
            modeStorageKey,
            defaultMode
          });
          const resolvedColorScheme = (() => {
            if (!colorScheme) {
              if (defaultMode === "dark") {
                return defaultDarkColorScheme;
              }
              return defaultLightColorScheme;
            }
            return colorScheme;
          })();
          const {
            css: rootCss,
            vars: rootVars
          } = (0, _cssVarsParser.default)(mergedTheme, {
            prefix,
            basePrefix: designSystemPrefix,
            shouldSkipGeneratingVar
          });
          mergedTheme = (0, _extends22.default)({}, mergedTheme, colorSchemes[resolvedColorScheme], {
            vars: rootVars
          });
          const styleSheet = {};
          Object.entries(colorSchemes).forEach(([key, scheme]) => {
            const {
              css,
              vars
            } = (0, _cssVarsParser.default)(scheme, {
              prefix,
              basePrefix: designSystemPrefix,
              shouldSkipGeneratingVar
            });
            if (key === resolvedColorScheme) {
              mergedTheme.vars = (0, _extends22.default)({}, mergedTheme.vars, vars);
            }
            const resolvedDefaultColorScheme = (() => {
              if (typeof defaultColorScheme === "string") {
                return defaultColorScheme;
              }
              if (defaultMode === "dark") {
                return defaultColorScheme.dark;
              }
              return defaultColorScheme.light;
            })();
            if (key === resolvedDefaultColorScheme) {
              styleSheet[":root"] = css;
            } else {
              styleSheet[`[${attribute}="${key}"]`] = css;
            }
          });
          React40.useEffect(() => {
            if (colorScheme) {
              document.body.setAttribute(attribute, colorScheme);
            }
          }, [colorScheme, attribute]);
          return /* @__PURE__ */ (0, _jsxRuntime.jsxs)(ColorSchemeContext.Provider, {
            value: {
              mode,
              setMode,
              lightColorScheme,
              darkColorScheme,
              colorScheme,
              setColorScheme,
              allColorSchemes
            },
            children: [/* @__PURE__ */ (0, _jsxRuntime.jsx)(_styledEngine.GlobalStyles, {
              styles: {
                ":root": rootCss
              }
            }), /* @__PURE__ */ (0, _jsxRuntime.jsx)(_styledEngine.GlobalStyles, {
              styles: styleSheet
            }), /* @__PURE__ */ (0, _jsxRuntime.jsx)(_ThemeProvider.default, {
              theme: mergedTheme,
              children
            })]
          });
        }
        true ? CssVarsProvider.propTypes = {
          attribute: _propTypes.default.string,
          children: _propTypes.default.node,
          defaultColorScheme: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.object]),
          defaultMode: _propTypes.default.string,
          modeStorageKey: _propTypes.default.string,
          prefix: _propTypes.default.string,
          theme: _propTypes.default.object
        } : void 0;
        return {
          CssVarsProvider,
          useColorScheme,
          getInitColorSchemeScript: _getInitColorSchemeScript.default
        };
      }
    }
  });

  // node_modules/@mui/system/index.js
  var require_system = __commonJS({
    "node_modules/@mui/system/index.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault3();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      var _exportNames = {
        css: true,
        keyframes: true,
        GlobalStyles: true,
        StyledEngineProvider: true,
        borders: true,
        breakpoints: true,
        handleBreakpoints: true,
        mergeBreakpointsInOrder: true,
        unstable_resolveBreakpointValues: true,
        compose: true,
        display: true,
        flexbox: true,
        grid: true,
        palette: true,
        positions: true,
        shadows: true,
        sizing: true,
        spacing: true,
        style: true,
        getPath: true,
        typography: true,
        unstable_styleFunctionSx: true,
        unstable_extendSxProp: true,
        unstable_getThemeValue: true,
        Box: true,
        createBox: true,
        createStyled: true,
        styled: true,
        createTheme: true,
        createBreakpoints: true,
        createSpacing: true,
        shape: true,
        useThemeProps: true,
        getThemeProps: true,
        useTheme: true,
        useThemeWithoutDefault: true,
        ThemeProvider: true,
        unstable_createCssVarsProvider: true
      };
      Object.defineProperty(exports, "Box", {
        enumerable: true,
        get: function() {
          return _Box.default;
        }
      });
      Object.defineProperty(exports, "GlobalStyles", {
        enumerable: true,
        get: function() {
          return _styledEngine.GlobalStyles;
        }
      });
      Object.defineProperty(exports, "StyledEngineProvider", {
        enumerable: true,
        get: function() {
          return _styledEngine.StyledEngineProvider;
        }
      });
      Object.defineProperty(exports, "ThemeProvider", {
        enumerable: true,
        get: function() {
          return _ThemeProvider.default;
        }
      });
      Object.defineProperty(exports, "borders", {
        enumerable: true,
        get: function() {
          return _borders.default;
        }
      });
      Object.defineProperty(exports, "breakpoints", {
        enumerable: true,
        get: function() {
          return _breakpoints.default;
        }
      });
      Object.defineProperty(exports, "compose", {
        enumerable: true,
        get: function() {
          return _compose.default;
        }
      });
      Object.defineProperty(exports, "createBox", {
        enumerable: true,
        get: function() {
          return _createBox.default;
        }
      });
      Object.defineProperty(exports, "createBreakpoints", {
        enumerable: true,
        get: function() {
          return _createBreakpoints.default;
        }
      });
      Object.defineProperty(exports, "createSpacing", {
        enumerable: true,
        get: function() {
          return _createSpacing.default;
        }
      });
      Object.defineProperty(exports, "createStyled", {
        enumerable: true,
        get: function() {
          return _createStyled.default;
        }
      });
      Object.defineProperty(exports, "createTheme", {
        enumerable: true,
        get: function() {
          return _createTheme.default;
        }
      });
      Object.defineProperty(exports, "css", {
        enumerable: true,
        get: function() {
          return _styledEngine.css;
        }
      });
      Object.defineProperty(exports, "display", {
        enumerable: true,
        get: function() {
          return _display.default;
        }
      });
      Object.defineProperty(exports, "flexbox", {
        enumerable: true,
        get: function() {
          return _flexbox.default;
        }
      });
      Object.defineProperty(exports, "getPath", {
        enumerable: true,
        get: function() {
          return _style.getPath;
        }
      });
      Object.defineProperty(exports, "getThemeProps", {
        enumerable: true,
        get: function() {
          return _useThemeProps.getThemeProps;
        }
      });
      Object.defineProperty(exports, "grid", {
        enumerable: true,
        get: function() {
          return _grid.default;
        }
      });
      Object.defineProperty(exports, "handleBreakpoints", {
        enumerable: true,
        get: function() {
          return _breakpoints.handleBreakpoints;
        }
      });
      Object.defineProperty(exports, "keyframes", {
        enumerable: true,
        get: function() {
          return _styledEngine.keyframes;
        }
      });
      Object.defineProperty(exports, "mergeBreakpointsInOrder", {
        enumerable: true,
        get: function() {
          return _breakpoints.mergeBreakpointsInOrder;
        }
      });
      Object.defineProperty(exports, "palette", {
        enumerable: true,
        get: function() {
          return _palette.default;
        }
      });
      Object.defineProperty(exports, "positions", {
        enumerable: true,
        get: function() {
          return _positions.default;
        }
      });
      Object.defineProperty(exports, "shadows", {
        enumerable: true,
        get: function() {
          return _shadows.default;
        }
      });
      Object.defineProperty(exports, "shape", {
        enumerable: true,
        get: function() {
          return _shape.default;
        }
      });
      Object.defineProperty(exports, "sizing", {
        enumerable: true,
        get: function() {
          return _sizing.default;
        }
      });
      Object.defineProperty(exports, "spacing", {
        enumerable: true,
        get: function() {
          return _spacing.default;
        }
      });
      Object.defineProperty(exports, "style", {
        enumerable: true,
        get: function() {
          return _style.default;
        }
      });
      Object.defineProperty(exports, "styled", {
        enumerable: true,
        get: function() {
          return _styled.default;
        }
      });
      Object.defineProperty(exports, "typography", {
        enumerable: true,
        get: function() {
          return _typography.default;
        }
      });
      Object.defineProperty(exports, "unstable_createCssVarsProvider", {
        enumerable: true,
        get: function() {
          return _createCssVarsProvider.default;
        }
      });
      Object.defineProperty(exports, "unstable_extendSxProp", {
        enumerable: true,
        get: function() {
          return _styleFunctionSx.extendSxProp;
        }
      });
      Object.defineProperty(exports, "unstable_getThemeValue", {
        enumerable: true,
        get: function() {
          return _getThemeValue.default;
        }
      });
      Object.defineProperty(exports, "unstable_resolveBreakpointValues", {
        enumerable: true,
        get: function() {
          return _breakpoints.resolveBreakpointValues;
        }
      });
      Object.defineProperty(exports, "unstable_styleFunctionSx", {
        enumerable: true,
        get: function() {
          return _styleFunctionSx.default;
        }
      });
      Object.defineProperty(exports, "useTheme", {
        enumerable: true,
        get: function() {
          return _useTheme.default;
        }
      });
      Object.defineProperty(exports, "useThemeProps", {
        enumerable: true,
        get: function() {
          return _useThemeProps.default;
        }
      });
      Object.defineProperty(exports, "useThemeWithoutDefault", {
        enumerable: true,
        get: function() {
          return _useThemeWithoutDefault.default;
        }
      });
      var _styledEngine = require_node();
      var _borders = _interopRequireWildcard(require_borders());
      Object.keys(_borders).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (Object.prototype.hasOwnProperty.call(_exportNames, key))
          return;
        if (key in exports && exports[key] === _borders[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _borders[key];
          }
        });
      });
      var _breakpoints = _interopRequireWildcard(require_breakpoints());
      var _compose = _interopRequireDefault(require_compose());
      var _display = _interopRequireDefault(require_display());
      var _flexbox = _interopRequireWildcard(require_flexbox());
      Object.keys(_flexbox).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (Object.prototype.hasOwnProperty.call(_exportNames, key))
          return;
        if (key in exports && exports[key] === _flexbox[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _flexbox[key];
          }
        });
      });
      var _grid = _interopRequireWildcard(require_grid());
      Object.keys(_grid).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (Object.prototype.hasOwnProperty.call(_exportNames, key))
          return;
        if (key in exports && exports[key] === _grid[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _grid[key];
          }
        });
      });
      var _palette = _interopRequireWildcard(require_palette());
      Object.keys(_palette).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (Object.prototype.hasOwnProperty.call(_exportNames, key))
          return;
        if (key in exports && exports[key] === _palette[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _palette[key];
          }
        });
      });
      var _positions = _interopRequireWildcard(require_positions());
      Object.keys(_positions).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (Object.prototype.hasOwnProperty.call(_exportNames, key))
          return;
        if (key in exports && exports[key] === _positions[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _positions[key];
          }
        });
      });
      var _shadows = _interopRequireDefault(require_shadows());
      var _sizing = _interopRequireWildcard(require_sizing());
      Object.keys(_sizing).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (Object.prototype.hasOwnProperty.call(_exportNames, key))
          return;
        if (key in exports && exports[key] === _sizing[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _sizing[key];
          }
        });
      });
      var _spacing = _interopRequireWildcard(require_spacing());
      Object.keys(_spacing).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (Object.prototype.hasOwnProperty.call(_exportNames, key))
          return;
        if (key in exports && exports[key] === _spacing[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _spacing[key];
          }
        });
      });
      var _style = _interopRequireWildcard(require_style());
      var _typography = _interopRequireWildcard(require_typography());
      Object.keys(_typography).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (Object.prototype.hasOwnProperty.call(_exportNames, key))
          return;
        if (key in exports && exports[key] === _typography[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _typography[key];
          }
        });
      });
      var _styleFunctionSx = _interopRequireWildcard(require_styleFunctionSx2());
      var _getThemeValue = _interopRequireDefault(require_getThemeValue());
      var _Box = _interopRequireDefault(require_Box2());
      var _createBox = _interopRequireDefault(require_createBox());
      var _createStyled = _interopRequireWildcard(require_createStyled());
      Object.keys(_createStyled).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (Object.prototype.hasOwnProperty.call(_exportNames, key))
          return;
        if (key in exports && exports[key] === _createStyled[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _createStyled[key];
          }
        });
      });
      var _styled = _interopRequireDefault(require_styled());
      var _createTheme = _interopRequireDefault(require_createTheme2());
      var _createBreakpoints = _interopRequireDefault(require_createBreakpoints());
      var _createSpacing = _interopRequireDefault(require_createSpacing());
      var _shape = _interopRequireDefault(require_shape());
      var _useThemeProps = _interopRequireWildcard(require_useThemeProps2());
      var _useTheme = _interopRequireDefault(require_useTheme3());
      var _useThemeWithoutDefault = _interopRequireDefault(require_useThemeWithoutDefault());
      var _colorManipulator = require_colorManipulator();
      Object.keys(_colorManipulator).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (Object.prototype.hasOwnProperty.call(_exportNames, key))
          return;
        if (key in exports && exports[key] === _colorManipulator[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _colorManipulator[key];
          }
        });
      });
      var _ThemeProvider = _interopRequireDefault(require_ThemeProvider4());
      var _createCssVarsProvider = _interopRequireDefault(require_createCssVarsProvider());
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
    }
  });

  // node_modules/@popperjs/core/dist/cjs/popper.js
  var require_popper = __commonJS({
    "node_modules/@popperjs/core/dist/cjs/popper.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      function getBoundingClientRect(element, includeScale) {
        var rect = element.getBoundingClientRect();
        var scaleX = 1;
        var scaleY = 1;
        return {
          width: rect.width / scaleX,
          height: rect.height / scaleY,
          top: rect.top / scaleY,
          right: rect.right / scaleX,
          bottom: rect.bottom / scaleY,
          left: rect.left / scaleX,
          x: rect.left / scaleX,
          y: rect.top / scaleY
        };
      }
      function getWindow(node) {
        if (node == null) {
          return window;
        }
        if (node.toString() !== "[object Window]") {
          var ownerDocument2 = node.ownerDocument;
          return ownerDocument2 ? ownerDocument2.defaultView || window : window;
        }
        return node;
      }
      function getWindowScroll(node) {
        var win = getWindow(node);
        var scrollLeft = win.pageXOffset;
        var scrollTop = win.pageYOffset;
        return {
          scrollLeft,
          scrollTop
        };
      }
      function isElement(node) {
        var OwnElement = getWindow(node).Element;
        return node instanceof OwnElement || node instanceof Element;
      }
      function isHTMLElement(node) {
        var OwnElement = getWindow(node).HTMLElement;
        return node instanceof OwnElement || node instanceof HTMLElement;
      }
      function isShadowRoot(node) {
        if (typeof ShadowRoot === "undefined") {
          return false;
        }
        var OwnElement = getWindow(node).ShadowRoot;
        return node instanceof OwnElement || node instanceof ShadowRoot;
      }
      function getHTMLElementScroll(element) {
        return {
          scrollLeft: element.scrollLeft,
          scrollTop: element.scrollTop
        };
      }
      function getNodeScroll(node) {
        if (node === getWindow(node) || !isHTMLElement(node)) {
          return getWindowScroll(node);
        } else {
          return getHTMLElementScroll(node);
        }
      }
      function getNodeName(element) {
        return element ? (element.nodeName || "").toLowerCase() : null;
      }
      function getDocumentElement(element) {
        return ((isElement(element) ? element.ownerDocument : element.document) || window.document).documentElement;
      }
      function getWindowScrollBarX(element) {
        return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;
      }
      function getComputedStyle(element) {
        return getWindow(element).getComputedStyle(element);
      }
      function isScrollParent(element) {
        var _getComputedStyle = getComputedStyle(element), overflow = _getComputedStyle.overflow, overflowX = _getComputedStyle.overflowX, overflowY = _getComputedStyle.overflowY;
        return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);
      }
      function isElementScaled(element) {
        var rect = element.getBoundingClientRect();
        var scaleX = rect.width / element.offsetWidth || 1;
        var scaleY = rect.height / element.offsetHeight || 1;
        return scaleX !== 1 || scaleY !== 1;
      }
      function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {
        if (isFixed === void 0) {
          isFixed = false;
        }
        var isOffsetParentAnElement = isHTMLElement(offsetParent);
        isHTMLElement(offsetParent) && isElementScaled(offsetParent);
        var documentElement = getDocumentElement(offsetParent);
        var rect = getBoundingClientRect(elementOrVirtualElement);
        var scroll = {
          scrollLeft: 0,
          scrollTop: 0
        };
        var offsets = {
          x: 0,
          y: 0
        };
        if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
          if (getNodeName(offsetParent) !== "body" || isScrollParent(documentElement)) {
            scroll = getNodeScroll(offsetParent);
          }
          if (isHTMLElement(offsetParent)) {
            offsets = getBoundingClientRect(offsetParent);
            offsets.x += offsetParent.clientLeft;
            offsets.y += offsetParent.clientTop;
          } else if (documentElement) {
            offsets.x = getWindowScrollBarX(documentElement);
          }
        }
        return {
          x: rect.left + scroll.scrollLeft - offsets.x,
          y: rect.top + scroll.scrollTop - offsets.y,
          width: rect.width,
          height: rect.height
        };
      }
      function getLayoutRect(element) {
        var clientRect = getBoundingClientRect(element);
        var width = element.offsetWidth;
        var height = element.offsetHeight;
        if (Math.abs(clientRect.width - width) <= 1) {
          width = clientRect.width;
        }
        if (Math.abs(clientRect.height - height) <= 1) {
          height = clientRect.height;
        }
        return {
          x: element.offsetLeft,
          y: element.offsetTop,
          width,
          height
        };
      }
      function getParentNode(element) {
        if (getNodeName(element) === "html") {
          return element;
        }
        return element.assignedSlot || element.parentNode || (isShadowRoot(element) ? element.host : null) || getDocumentElement(element);
      }
      function getScrollParent(node) {
        if (["html", "body", "#document"].indexOf(getNodeName(node)) >= 0) {
          return node.ownerDocument.body;
        }
        if (isHTMLElement(node) && isScrollParent(node)) {
          return node;
        }
        return getScrollParent(getParentNode(node));
      }
      function listScrollParents(element, list) {
        var _element$ownerDocumen;
        if (list === void 0) {
          list = [];
        }
        var scrollParent = getScrollParent(element);
        var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);
        var win = getWindow(scrollParent);
        var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;
        var updatedList = list.concat(target);
        return isBody ? updatedList : updatedList.concat(listScrollParents(getParentNode(target)));
      }
      function isTableElement(element) {
        return ["table", "td", "th"].indexOf(getNodeName(element)) >= 0;
      }
      function getTrueOffsetParent(element) {
        if (!isHTMLElement(element) || getComputedStyle(element).position === "fixed") {
          return null;
        }
        return element.offsetParent;
      }
      function getContainingBlock(element) {
        var isFirefox = navigator.userAgent.toLowerCase().indexOf("firefox") !== -1;
        var isIE = navigator.userAgent.indexOf("Trident") !== -1;
        if (isIE && isHTMLElement(element)) {
          var elementCss = getComputedStyle(element);
          if (elementCss.position === "fixed") {
            return null;
          }
        }
        var currentNode = getParentNode(element);
        while (isHTMLElement(currentNode) && ["html", "body"].indexOf(getNodeName(currentNode)) < 0) {
          var css = getComputedStyle(currentNode);
          if (css.transform !== "none" || css.perspective !== "none" || css.contain === "paint" || ["transform", "perspective"].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === "filter" || isFirefox && css.filter && css.filter !== "none") {
            return currentNode;
          } else {
            currentNode = currentNode.parentNode;
          }
        }
        return null;
      }
      function getOffsetParent(element) {
        var window2 = getWindow(element);
        var offsetParent = getTrueOffsetParent(element);
        while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === "static") {
          offsetParent = getTrueOffsetParent(offsetParent);
        }
        if (offsetParent && (getNodeName(offsetParent) === "html" || getNodeName(offsetParent) === "body" && getComputedStyle(offsetParent).position === "static")) {
          return window2;
        }
        return offsetParent || getContainingBlock(element) || window2;
      }
      var top = "top";
      var bottom = "bottom";
      var right = "right";
      var left = "left";
      var auto = "auto";
      var basePlacements = [top, bottom, right, left];
      var start = "start";
      var end = "end";
      var clippingParents = "clippingParents";
      var viewport = "viewport";
      var popper = "popper";
      var reference = "reference";
      var variationPlacements = /* @__PURE__ */ basePlacements.reduce(function(acc, placement) {
        return acc.concat([placement + "-" + start, placement + "-" + end]);
      }, []);
      var placements = /* @__PURE__ */ [].concat(basePlacements, [auto]).reduce(function(acc, placement) {
        return acc.concat([placement, placement + "-" + start, placement + "-" + end]);
      }, []);
      var beforeRead = "beforeRead";
      var read = "read";
      var afterRead = "afterRead";
      var beforeMain = "beforeMain";
      var main = "main";
      var afterMain = "afterMain";
      var beforeWrite = "beforeWrite";
      var write = "write";
      var afterWrite = "afterWrite";
      var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];
      function order(modifiers) {
        var map = /* @__PURE__ */ new Map();
        var visited = /* @__PURE__ */ new Set();
        var result = [];
        modifiers.forEach(function(modifier) {
          map.set(modifier.name, modifier);
        });
        function sort(modifier) {
          visited.add(modifier.name);
          var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);
          requires.forEach(function(dep) {
            if (!visited.has(dep)) {
              var depModifier = map.get(dep);
              if (depModifier) {
                sort(depModifier);
              }
            }
          });
          result.push(modifier);
        }
        modifiers.forEach(function(modifier) {
          if (!visited.has(modifier.name)) {
            sort(modifier);
          }
        });
        return result;
      }
      function orderModifiers(modifiers) {
        var orderedModifiers = order(modifiers);
        return modifierPhases.reduce(function(acc, phase) {
          return acc.concat(orderedModifiers.filter(function(modifier) {
            return modifier.phase === phase;
          }));
        }, []);
      }
      function debounce(fn) {
        var pending;
        return function() {
          if (!pending) {
            pending = new Promise(function(resolve) {
              Promise.resolve().then(function() {
                pending = void 0;
                resolve(fn());
              });
            });
          }
          return pending;
        };
      }
      function format(str) {
        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }
        return [].concat(args).reduce(function(p, c2) {
          return p.replace(/%s/, c2);
        }, str);
      }
      var INVALID_MODIFIER_ERROR = 'Popper: modifier "%s" provided an invalid %s property, expected %s but got %s';
      var MISSING_DEPENDENCY_ERROR = 'Popper: modifier "%s" requires "%s", but "%s" modifier is not available';
      var VALID_PROPERTIES = ["name", "enabled", "phase", "fn", "effect", "requires", "options"];
      function validateModifiers(modifiers) {
        modifiers.forEach(function(modifier) {
          [].concat(Object.keys(modifier), VALID_PROPERTIES).filter(function(value, index2, self2) {
            return self2.indexOf(value) === index2;
          }).forEach(function(key) {
            switch (key) {
              case "name":
                if (typeof modifier.name !== "string") {
                  console.error(format(INVALID_MODIFIER_ERROR, String(modifier.name), '"name"', '"string"', '"' + String(modifier.name) + '"'));
                }
                break;
              case "enabled":
                if (typeof modifier.enabled !== "boolean") {
                  console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '"enabled"', '"boolean"', '"' + String(modifier.enabled) + '"'));
                }
                break;
              case "phase":
                if (modifierPhases.indexOf(modifier.phase) < 0) {
                  console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '"phase"', "either " + modifierPhases.join(", "), '"' + String(modifier.phase) + '"'));
                }
                break;
              case "fn":
                if (typeof modifier.fn !== "function") {
                  console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '"fn"', '"function"', '"' + String(modifier.fn) + '"'));
                }
                break;
              case "effect":
                if (modifier.effect != null && typeof modifier.effect !== "function") {
                  console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '"effect"', '"function"', '"' + String(modifier.fn) + '"'));
                }
                break;
              case "requires":
                if (modifier.requires != null && !Array.isArray(modifier.requires)) {
                  console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '"requires"', '"array"', '"' + String(modifier.requires) + '"'));
                }
                break;
              case "requiresIfExists":
                if (!Array.isArray(modifier.requiresIfExists)) {
                  console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '"requiresIfExists"', '"array"', '"' + String(modifier.requiresIfExists) + '"'));
                }
                break;
              case "options":
              case "data":
                break;
              default:
                console.error('PopperJS: an invalid property has been provided to the "' + modifier.name + '" modifier, valid properties are ' + VALID_PROPERTIES.map(function(s2) {
                  return '"' + s2 + '"';
                }).join(", ") + '; but "' + key + '" was provided.');
            }
            modifier.requires && modifier.requires.forEach(function(requirement) {
              if (modifiers.find(function(mod) {
                return mod.name === requirement;
              }) == null) {
                console.error(format(MISSING_DEPENDENCY_ERROR, String(modifier.name), requirement, requirement));
              }
            });
          });
        });
      }
      function uniqueBy(arr, fn) {
        var identifiers = /* @__PURE__ */ new Set();
        return arr.filter(function(item) {
          var identifier = fn(item);
          if (!identifiers.has(identifier)) {
            identifiers.add(identifier);
            return true;
          }
        });
      }
      function getBasePlacement(placement) {
        return placement.split("-")[0];
      }
      function mergeByName(modifiers) {
        var merged = modifiers.reduce(function(merged2, current) {
          var existing = merged2[current.name];
          merged2[current.name] = existing ? Object.assign({}, existing, current, {
            options: Object.assign({}, existing.options, current.options),
            data: Object.assign({}, existing.data, current.data)
          }) : current;
          return merged2;
        }, {});
        return Object.keys(merged).map(function(key) {
          return merged[key];
        });
      }
      function getViewportRect(element) {
        var win = getWindow(element);
        var html = getDocumentElement(element);
        var visualViewport = win.visualViewport;
        var width = html.clientWidth;
        var height = html.clientHeight;
        var x2 = 0;
        var y2 = 0;
        if (visualViewport) {
          width = visualViewport.width;
          height = visualViewport.height;
          if (!/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {
            x2 = visualViewport.offsetLeft;
            y2 = visualViewport.offsetTop;
          }
        }
        return {
          width,
          height,
          x: x2 + getWindowScrollBarX(element),
          y: y2
        };
      }
      var max = Math.max;
      var min = Math.min;
      var round2 = Math.round;
      function getDocumentRect(element) {
        var _element$ownerDocumen;
        var html = getDocumentElement(element);
        var winScroll = getWindowScroll(element);
        var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;
        var width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);
        var height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);
        var x2 = -winScroll.scrollLeft + getWindowScrollBarX(element);
        var y2 = -winScroll.scrollTop;
        if (getComputedStyle(body || html).direction === "rtl") {
          x2 += max(html.clientWidth, body ? body.clientWidth : 0) - width;
        }
        return {
          width,
          height,
          x: x2,
          y: y2
        };
      }
      function contains(parent, child) {
        var rootNode = child.getRootNode && child.getRootNode();
        if (parent.contains(child)) {
          return true;
        } else if (rootNode && isShadowRoot(rootNode)) {
          var next = child;
          do {
            if (next && parent.isSameNode(next)) {
              return true;
            }
            next = next.parentNode || next.host;
          } while (next);
        }
        return false;
      }
      function rectToClientRect(rect) {
        return Object.assign({}, rect, {
          left: rect.x,
          top: rect.y,
          right: rect.x + rect.width,
          bottom: rect.y + rect.height
        });
      }
      function getInnerBoundingClientRect(element) {
        var rect = getBoundingClientRect(element);
        rect.top = rect.top + element.clientTop;
        rect.left = rect.left + element.clientLeft;
        rect.bottom = rect.top + element.clientHeight;
        rect.right = rect.left + element.clientWidth;
        rect.width = element.clientWidth;
        rect.height = element.clientHeight;
        rect.x = rect.left;
        rect.y = rect.top;
        return rect;
      }
      function getClientRectFromMixedType(element, clippingParent) {
        return clippingParent === viewport ? rectToClientRect(getViewportRect(element)) : isHTMLElement(clippingParent) ? getInnerBoundingClientRect(clippingParent) : rectToClientRect(getDocumentRect(getDocumentElement(element)));
      }
      function getClippingParents(element) {
        var clippingParents2 = listScrollParents(getParentNode(element));
        var canEscapeClipping = ["absolute", "fixed"].indexOf(getComputedStyle(element).position) >= 0;
        var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;
        if (!isElement(clipperElement)) {
          return [];
        }
        return clippingParents2.filter(function(clippingParent) {
          return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== "body";
        });
      }
      function getClippingRect(element, boundary, rootBoundary) {
        var mainClippingParents = boundary === "clippingParents" ? getClippingParents(element) : [].concat(boundary);
        var clippingParents2 = [].concat(mainClippingParents, [rootBoundary]);
        var firstClippingParent = clippingParents2[0];
        var clippingRect = clippingParents2.reduce(function(accRect, clippingParent) {
          var rect = getClientRectFromMixedType(element, clippingParent);
          accRect.top = max(rect.top, accRect.top);
          accRect.right = min(rect.right, accRect.right);
          accRect.bottom = min(rect.bottom, accRect.bottom);
          accRect.left = max(rect.left, accRect.left);
          return accRect;
        }, getClientRectFromMixedType(element, firstClippingParent));
        clippingRect.width = clippingRect.right - clippingRect.left;
        clippingRect.height = clippingRect.bottom - clippingRect.top;
        clippingRect.x = clippingRect.left;
        clippingRect.y = clippingRect.top;
        return clippingRect;
      }
      function getVariation(placement) {
        return placement.split("-")[1];
      }
      function getMainAxisFromPlacement(placement) {
        return ["top", "bottom"].indexOf(placement) >= 0 ? "x" : "y";
      }
      function computeOffsets(_ref) {
        var reference2 = _ref.reference, element = _ref.element, placement = _ref.placement;
        var basePlacement = placement ? getBasePlacement(placement) : null;
        var variation = placement ? getVariation(placement) : null;
        var commonX = reference2.x + reference2.width / 2 - element.width / 2;
        var commonY = reference2.y + reference2.height / 2 - element.height / 2;
        var offsets;
        switch (basePlacement) {
          case top:
            offsets = {
              x: commonX,
              y: reference2.y - element.height
            };
            break;
          case bottom:
            offsets = {
              x: commonX,
              y: reference2.y + reference2.height
            };
            break;
          case right:
            offsets = {
              x: reference2.x + reference2.width,
              y: commonY
            };
            break;
          case left:
            offsets = {
              x: reference2.x - element.width,
              y: commonY
            };
            break;
          default:
            offsets = {
              x: reference2.x,
              y: reference2.y
            };
        }
        var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;
        if (mainAxis != null) {
          var len = mainAxis === "y" ? "height" : "width";
          switch (variation) {
            case start:
              offsets[mainAxis] = offsets[mainAxis] - (reference2[len] / 2 - element[len] / 2);
              break;
            case end:
              offsets[mainAxis] = offsets[mainAxis] + (reference2[len] / 2 - element[len] / 2);
              break;
          }
        }
        return offsets;
      }
      function getFreshSideObject() {
        return {
          top: 0,
          right: 0,
          bottom: 0,
          left: 0
        };
      }
      function mergePaddingObject(paddingObject) {
        return Object.assign({}, getFreshSideObject(), paddingObject);
      }
      function expandToHashMap(value, keys) {
        return keys.reduce(function(hashMap, key) {
          hashMap[key] = value;
          return hashMap;
        }, {});
      }
      function detectOverflow(state, options) {
        if (options === void 0) {
          options = {};
        }
        var _options = options, _options$placement = _options.placement, placement = _options$placement === void 0 ? state.placement : _options$placement, _options$boundary = _options.boundary, boundary = _options$boundary === void 0 ? clippingParents : _options$boundary, _options$rootBoundary = _options.rootBoundary, rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary, _options$elementConte = _options.elementContext, elementContext = _options$elementConte === void 0 ? popper : _options$elementConte, _options$altBoundary = _options.altBoundary, altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary, _options$padding = _options.padding, padding = _options$padding === void 0 ? 0 : _options$padding;
        var paddingObject = mergePaddingObject(typeof padding !== "number" ? padding : expandToHashMap(padding, basePlacements));
        var altContext = elementContext === popper ? reference : popper;
        var popperRect = state.rects.popper;
        var element = state.elements[altBoundary ? altContext : elementContext];
        var clippingClientRect = getClippingRect(isElement(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary);
        var referenceClientRect = getBoundingClientRect(state.elements.reference);
        var popperOffsets2 = computeOffsets({
          reference: referenceClientRect,
          element: popperRect,
          strategy: "absolute",
          placement
        });
        var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets2));
        var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect;
        var overflowOffsets = {
          top: clippingClientRect.top - elementClientRect.top + paddingObject.top,
          bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,
          left: clippingClientRect.left - elementClientRect.left + paddingObject.left,
          right: elementClientRect.right - clippingClientRect.right + paddingObject.right
        };
        var offsetData = state.modifiersData.offset;
        if (elementContext === popper && offsetData) {
          var offset2 = offsetData[placement];
          Object.keys(overflowOffsets).forEach(function(key) {
            var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;
            var axis = [top, bottom].indexOf(key) >= 0 ? "y" : "x";
            overflowOffsets[key] += offset2[axis] * multiply;
          });
        }
        return overflowOffsets;
      }
      var INVALID_ELEMENT_ERROR = "Popper: Invalid reference or popper argument provided. They must be either a DOM element or virtual element.";
      var INFINITE_LOOP_ERROR = "Popper: An infinite loop in the modifiers cycle has been detected! The cycle has been interrupted to prevent a browser crash.";
      var DEFAULT_OPTIONS = {
        placement: "bottom",
        modifiers: [],
        strategy: "absolute"
      };
      function areValidElements() {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        return !args.some(function(element) {
          return !(element && typeof element.getBoundingClientRect === "function");
        });
      }
      function popperGenerator(generatorOptions) {
        if (generatorOptions === void 0) {
          generatorOptions = {};
        }
        var _generatorOptions = generatorOptions, _generatorOptions$def = _generatorOptions.defaultModifiers, defaultModifiers2 = _generatorOptions$def === void 0 ? [] : _generatorOptions$def, _generatorOptions$def2 = _generatorOptions.defaultOptions, defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;
        return function createPopper2(reference2, popper2, options) {
          if (options === void 0) {
            options = defaultOptions;
          }
          var state = {
            placement: "bottom",
            orderedModifiers: [],
            options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),
            modifiersData: {},
            elements: {
              reference: reference2,
              popper: popper2
            },
            attributes: {},
            styles: {}
          };
          var effectCleanupFns = [];
          var isDestroyed = false;
          var instance = {
            state,
            setOptions: function setOptions(setOptionsAction) {
              var options2 = typeof setOptionsAction === "function" ? setOptionsAction(state.options) : setOptionsAction;
              cleanupModifierEffects();
              state.options = Object.assign({}, defaultOptions, state.options, options2);
              state.scrollParents = {
                reference: isElement(reference2) ? listScrollParents(reference2) : reference2.contextElement ? listScrollParents(reference2.contextElement) : [],
                popper: listScrollParents(popper2)
              };
              var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers2, state.options.modifiers)));
              state.orderedModifiers = orderedModifiers.filter(function(m) {
                return m.enabled;
              });
              if (true) {
                var modifiers = uniqueBy([].concat(orderedModifiers, state.options.modifiers), function(_ref) {
                  var name = _ref.name;
                  return name;
                });
                validateModifiers(modifiers);
                if (getBasePlacement(state.options.placement) === auto) {
                  var flipModifier = state.orderedModifiers.find(function(_ref2) {
                    var name = _ref2.name;
                    return name === "flip";
                  });
                  if (!flipModifier) {
                    console.error(['Popper: "auto" placements require the "flip" modifier be', "present and enabled to work."].join(" "));
                  }
                }
                var _getComputedStyle = getComputedStyle(popper2), marginTop = _getComputedStyle.marginTop, marginRight = _getComputedStyle.marginRight, marginBottom = _getComputedStyle.marginBottom, marginLeft = _getComputedStyle.marginLeft;
                if ([marginTop, marginRight, marginBottom, marginLeft].some(function(margin) {
                  return parseFloat(margin);
                })) {
                  console.warn(['Popper: CSS "margin" styles cannot be used to apply padding', "between the popper and its reference element or boundary.", "To replicate margin, use the `offset` modifier, as well as", "the `padding` option in the `preventOverflow` and `flip`", "modifiers."].join(" "));
                }
              }
              runModifierEffects();
              return instance.update();
            },
            forceUpdate: function forceUpdate() {
              if (isDestroyed) {
                return;
              }
              var _state$elements = state.elements, reference3 = _state$elements.reference, popper3 = _state$elements.popper;
              if (!areValidElements(reference3, popper3)) {
                if (true) {
                  console.error(INVALID_ELEMENT_ERROR);
                }
                return;
              }
              state.rects = {
                reference: getCompositeRect(reference3, getOffsetParent(popper3), state.options.strategy === "fixed"),
                popper: getLayoutRect(popper3)
              };
              state.reset = false;
              state.placement = state.options.placement;
              state.orderedModifiers.forEach(function(modifier) {
                return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);
              });
              var __debug_loops__ = 0;
              for (var index2 = 0; index2 < state.orderedModifiers.length; index2++) {
                if (true) {
                  __debug_loops__ += 1;
                  if (__debug_loops__ > 100) {
                    console.error(INFINITE_LOOP_ERROR);
                    break;
                  }
                }
                if (state.reset === true) {
                  state.reset = false;
                  index2 = -1;
                  continue;
                }
                var _state$orderedModifie = state.orderedModifiers[index2], fn = _state$orderedModifie.fn, _state$orderedModifie2 = _state$orderedModifie.options, _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2, name = _state$orderedModifie.name;
                if (typeof fn === "function") {
                  state = fn({
                    state,
                    options: _options,
                    name,
                    instance
                  }) || state;
                }
              }
            },
            update: debounce(function() {
              return new Promise(function(resolve) {
                instance.forceUpdate();
                resolve(state);
              });
            }),
            destroy: function destroy() {
              cleanupModifierEffects();
              isDestroyed = true;
            }
          };
          if (!areValidElements(reference2, popper2)) {
            if (true) {
              console.error(INVALID_ELEMENT_ERROR);
            }
            return instance;
          }
          instance.setOptions(options).then(function(state2) {
            if (!isDestroyed && options.onFirstUpdate) {
              options.onFirstUpdate(state2);
            }
          });
          function runModifierEffects() {
            state.orderedModifiers.forEach(function(_ref3) {
              var name = _ref3.name, _ref3$options = _ref3.options, options2 = _ref3$options === void 0 ? {} : _ref3$options, effect2 = _ref3.effect;
              if (typeof effect2 === "function") {
                var cleanupFn = effect2({
                  state,
                  name,
                  instance,
                  options: options2
                });
                var noopFn = function noopFn2() {
                };
                effectCleanupFns.push(cleanupFn || noopFn);
              }
            });
          }
          function cleanupModifierEffects() {
            effectCleanupFns.forEach(function(fn) {
              return fn();
            });
            effectCleanupFns = [];
          }
          return instance;
        };
      }
      var passive = {
        passive: true
      };
      function effect$2(_ref) {
        var state = _ref.state, instance = _ref.instance, options = _ref.options;
        var _options$scroll = options.scroll, scroll = _options$scroll === void 0 ? true : _options$scroll, _options$resize = options.resize, resize = _options$resize === void 0 ? true : _options$resize;
        var window2 = getWindow(state.elements.popper);
        var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);
        if (scroll) {
          scrollParents.forEach(function(scrollParent) {
            scrollParent.addEventListener("scroll", instance.update, passive);
          });
        }
        if (resize) {
          window2.addEventListener("resize", instance.update, passive);
        }
        return function() {
          if (scroll) {
            scrollParents.forEach(function(scrollParent) {
              scrollParent.removeEventListener("scroll", instance.update, passive);
            });
          }
          if (resize) {
            window2.removeEventListener("resize", instance.update, passive);
          }
        };
      }
      var eventListeners = {
        name: "eventListeners",
        enabled: true,
        phase: "write",
        fn: function fn() {
        },
        effect: effect$2,
        data: {}
      };
      function popperOffsets(_ref) {
        var state = _ref.state, name = _ref.name;
        state.modifiersData[name] = computeOffsets({
          reference: state.rects.reference,
          element: state.rects.popper,
          strategy: "absolute",
          placement: state.placement
        });
      }
      var popperOffsets$1 = {
        name: "popperOffsets",
        enabled: true,
        phase: "read",
        fn: popperOffsets,
        data: {}
      };
      var unsetSides = {
        top: "auto",
        right: "auto",
        bottom: "auto",
        left: "auto"
      };
      function roundOffsetsByDPR(_ref) {
        var x2 = _ref.x, y2 = _ref.y;
        var win = window;
        var dpr = win.devicePixelRatio || 1;
        return {
          x: round2(round2(x2 * dpr) / dpr) || 0,
          y: round2(round2(y2 * dpr) / dpr) || 0
        };
      }
      function mapToStyles(_ref2) {
        var _Object$assign2;
        var popper2 = _ref2.popper, popperRect = _ref2.popperRect, placement = _ref2.placement, variation = _ref2.variation, offsets = _ref2.offsets, position = _ref2.position, gpuAcceleration = _ref2.gpuAcceleration, adaptive = _ref2.adaptive, roundOffsets = _ref2.roundOffsets;
        var _ref3 = roundOffsets === true ? roundOffsetsByDPR(offsets) : typeof roundOffsets === "function" ? roundOffsets(offsets) : offsets, _ref3$x = _ref3.x, x2 = _ref3$x === void 0 ? 0 : _ref3$x, _ref3$y = _ref3.y, y2 = _ref3$y === void 0 ? 0 : _ref3$y;
        var hasX = offsets.hasOwnProperty("x");
        var hasY = offsets.hasOwnProperty("y");
        var sideX = left;
        var sideY = top;
        var win = window;
        if (adaptive) {
          var offsetParent = getOffsetParent(popper2);
          var heightProp = "clientHeight";
          var widthProp = "clientWidth";
          if (offsetParent === getWindow(popper2)) {
            offsetParent = getDocumentElement(popper2);
            if (getComputedStyle(offsetParent).position !== "static" && position === "absolute") {
              heightProp = "scrollHeight";
              widthProp = "scrollWidth";
            }
          }
          offsetParent = offsetParent;
          if (placement === top || (placement === left || placement === right) && variation === end) {
            sideY = bottom;
            y2 -= offsetParent[heightProp] - popperRect.height;
            y2 *= gpuAcceleration ? 1 : -1;
          }
          if (placement === left || (placement === top || placement === bottom) && variation === end) {
            sideX = right;
            x2 -= offsetParent[widthProp] - popperRect.width;
            x2 *= gpuAcceleration ? 1 : -1;
          }
        }
        var commonStyles = Object.assign({
          position
        }, adaptive && unsetSides);
        if (gpuAcceleration) {
          var _Object$assign;
          return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? "0" : "", _Object$assign[sideX] = hasX ? "0" : "", _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? "translate(" + x2 + "px, " + y2 + "px)" : "translate3d(" + x2 + "px, " + y2 + "px, 0)", _Object$assign));
        }
        return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y2 + "px" : "", _Object$assign2[sideX] = hasX ? x2 + "px" : "", _Object$assign2.transform = "", _Object$assign2));
      }
      function computeStyles(_ref4) {
        var state = _ref4.state, options = _ref4.options;
        var _options$gpuAccelerat = options.gpuAcceleration, gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat, _options$adaptive = options.adaptive, adaptive = _options$adaptive === void 0 ? true : _options$adaptive, _options$roundOffsets = options.roundOffsets, roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;
        if (true) {
          var transitionProperty = getComputedStyle(state.elements.popper).transitionProperty || "";
          if (adaptive && ["transform", "top", "right", "bottom", "left"].some(function(property) {
            return transitionProperty.indexOf(property) >= 0;
          })) {
            console.warn(["Popper: Detected CSS transitions on at least one of the following", 'CSS properties: "transform", "top", "right", "bottom", "left".', "\n\n", 'Disable the "computeStyles" modifier\'s `adaptive` option to allow', "for smooth transitions, or remove these properties from the CSS", "transition declaration on the popper element if only transitioning", "opacity or background-color for example.", "\n\n", "We recommend using the popper element as a wrapper around an inner", "element that can have any CSS property transitioned for animations."].join(" "));
          }
        }
        var commonStyles = {
          placement: getBasePlacement(state.placement),
          variation: getVariation(state.placement),
          popper: state.elements.popper,
          popperRect: state.rects.popper,
          gpuAcceleration
        };
        if (state.modifiersData.popperOffsets != null) {
          state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {
            offsets: state.modifiersData.popperOffsets,
            position: state.options.strategy,
            adaptive,
            roundOffsets
          })));
        }
        if (state.modifiersData.arrow != null) {
          state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {
            offsets: state.modifiersData.arrow,
            position: "absolute",
            adaptive: false,
            roundOffsets
          })));
        }
        state.attributes.popper = Object.assign({}, state.attributes.popper, {
          "data-popper-placement": state.placement
        });
      }
      var computeStyles$1 = {
        name: "computeStyles",
        enabled: true,
        phase: "beforeWrite",
        fn: computeStyles,
        data: {}
      };
      function applyStyles(_ref) {
        var state = _ref.state;
        Object.keys(state.elements).forEach(function(name) {
          var style = state.styles[name] || {};
          var attributes = state.attributes[name] || {};
          var element = state.elements[name];
          if (!isHTMLElement(element) || !getNodeName(element)) {
            return;
          }
          Object.assign(element.style, style);
          Object.keys(attributes).forEach(function(name2) {
            var value = attributes[name2];
            if (value === false) {
              element.removeAttribute(name2);
            } else {
              element.setAttribute(name2, value === true ? "" : value);
            }
          });
        });
      }
      function effect$1(_ref2) {
        var state = _ref2.state;
        var initialStyles = {
          popper: {
            position: state.options.strategy,
            left: "0",
            top: "0",
            margin: "0"
          },
          arrow: {
            position: "absolute"
          },
          reference: {}
        };
        Object.assign(state.elements.popper.style, initialStyles.popper);
        state.styles = initialStyles;
        if (state.elements.arrow) {
          Object.assign(state.elements.arrow.style, initialStyles.arrow);
        }
        return function() {
          Object.keys(state.elements).forEach(function(name) {
            var element = state.elements[name];
            var attributes = state.attributes[name] || {};
            var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]);
            var style = styleProperties.reduce(function(style2, property) {
              style2[property] = "";
              return style2;
            }, {});
            if (!isHTMLElement(element) || !getNodeName(element)) {
              return;
            }
            Object.assign(element.style, style);
            Object.keys(attributes).forEach(function(attribute) {
              element.removeAttribute(attribute);
            });
          });
        };
      }
      var applyStyles$1 = {
        name: "applyStyles",
        enabled: true,
        phase: "write",
        fn: applyStyles,
        effect: effect$1,
        requires: ["computeStyles"]
      };
      function distanceAndSkiddingToXY(placement, rects, offset2) {
        var basePlacement = getBasePlacement(placement);
        var invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;
        var _ref = typeof offset2 === "function" ? offset2(Object.assign({}, rects, {
          placement
        })) : offset2, skidding = _ref[0], distance = _ref[1];
        skidding = skidding || 0;
        distance = (distance || 0) * invertDistance;
        return [left, right].indexOf(basePlacement) >= 0 ? {
          x: distance,
          y: skidding
        } : {
          x: skidding,
          y: distance
        };
      }
      function offset(_ref2) {
        var state = _ref2.state, options = _ref2.options, name = _ref2.name;
        var _options$offset = options.offset, offset2 = _options$offset === void 0 ? [0, 0] : _options$offset;
        var data = placements.reduce(function(acc, placement) {
          acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset2);
          return acc;
        }, {});
        var _data$state$placement = data[state.placement], x2 = _data$state$placement.x, y2 = _data$state$placement.y;
        if (state.modifiersData.popperOffsets != null) {
          state.modifiersData.popperOffsets.x += x2;
          state.modifiersData.popperOffsets.y += y2;
        }
        state.modifiersData[name] = data;
      }
      var offset$1 = {
        name: "offset",
        enabled: true,
        phase: "main",
        requires: ["popperOffsets"],
        fn: offset
      };
      var hash$1 = {
        left: "right",
        right: "left",
        bottom: "top",
        top: "bottom"
      };
      function getOppositePlacement(placement) {
        return placement.replace(/left|right|bottom|top/g, function(matched) {
          return hash$1[matched];
        });
      }
      var hash = {
        start: "end",
        end: "start"
      };
      function getOppositeVariationPlacement(placement) {
        return placement.replace(/start|end/g, function(matched) {
          return hash[matched];
        });
      }
      function computeAutoPlacement(state, options) {
        if (options === void 0) {
          options = {};
        }
        var _options = options, placement = _options.placement, boundary = _options.boundary, rootBoundary = _options.rootBoundary, padding = _options.padding, flipVariations = _options.flipVariations, _options$allowedAutoP = _options.allowedAutoPlacements, allowedAutoPlacements = _options$allowedAutoP === void 0 ? placements : _options$allowedAutoP;
        var variation = getVariation(placement);
        var placements$1 = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function(placement2) {
          return getVariation(placement2) === variation;
        }) : basePlacements;
        var allowedPlacements = placements$1.filter(function(placement2) {
          return allowedAutoPlacements.indexOf(placement2) >= 0;
        });
        if (allowedPlacements.length === 0) {
          allowedPlacements = placements$1;
          if (true) {
            console.error(["Popper: The `allowedAutoPlacements` option did not allow any", "placements. Ensure the `placement` option matches the variation", "of the allowed placements.", 'For example, "auto" cannot be used to allow "bottom-start".', 'Use "auto-start" instead.'].join(" "));
          }
        }
        var overflows = allowedPlacements.reduce(function(acc, placement2) {
          acc[placement2] = detectOverflow(state, {
            placement: placement2,
            boundary,
            rootBoundary,
            padding
          })[getBasePlacement(placement2)];
          return acc;
        }, {});
        return Object.keys(overflows).sort(function(a2, b2) {
          return overflows[a2] - overflows[b2];
        });
      }
      function getExpandedFallbackPlacements(placement) {
        if (getBasePlacement(placement) === auto) {
          return [];
        }
        var oppositePlacement = getOppositePlacement(placement);
        return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];
      }
      function flip(_ref) {
        var state = _ref.state, options = _ref.options, name = _ref.name;
        if (state.modifiersData[name]._skip) {
          return;
        }
        var _options$mainAxis = options.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options.altAxis, checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis, specifiedFallbackPlacements = options.fallbackPlacements, padding = options.padding, boundary = options.boundary, rootBoundary = options.rootBoundary, altBoundary = options.altBoundary, _options$flipVariatio = options.flipVariations, flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio, allowedAutoPlacements = options.allowedAutoPlacements;
        var preferredPlacement = state.options.placement;
        var basePlacement = getBasePlacement(preferredPlacement);
        var isBasePlacement = basePlacement === preferredPlacement;
        var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));
        var placements2 = [preferredPlacement].concat(fallbackPlacements).reduce(function(acc, placement2) {
          return acc.concat(getBasePlacement(placement2) === auto ? computeAutoPlacement(state, {
            placement: placement2,
            boundary,
            rootBoundary,
            padding,
            flipVariations,
            allowedAutoPlacements
          }) : placement2);
        }, []);
        var referenceRect = state.rects.reference;
        var popperRect = state.rects.popper;
        var checksMap = /* @__PURE__ */ new Map();
        var makeFallbackChecks = true;
        var firstFittingPlacement = placements2[0];
        for (var i2 = 0; i2 < placements2.length; i2++) {
          var placement = placements2[i2];
          var _basePlacement = getBasePlacement(placement);
          var isStartVariation = getVariation(placement) === start;
          var isVertical = [top, bottom].indexOf(_basePlacement) >= 0;
          var len = isVertical ? "width" : "height";
          var overflow = detectOverflow(state, {
            placement,
            boundary,
            rootBoundary,
            altBoundary,
            padding
          });
          var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : top;
          if (referenceRect[len] > popperRect[len]) {
            mainVariationSide = getOppositePlacement(mainVariationSide);
          }
          var altVariationSide = getOppositePlacement(mainVariationSide);
          var checks = [];
          if (checkMainAxis) {
            checks.push(overflow[_basePlacement] <= 0);
          }
          if (checkAltAxis) {
            checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);
          }
          if (checks.every(function(check) {
            return check;
          })) {
            firstFittingPlacement = placement;
            makeFallbackChecks = false;
            break;
          }
          checksMap.set(placement, checks);
        }
        if (makeFallbackChecks) {
          var numberOfChecks = flipVariations ? 3 : 1;
          var _loop = function _loop2(_i2) {
            var fittingPlacement = placements2.find(function(placement2) {
              var checks2 = checksMap.get(placement2);
              if (checks2) {
                return checks2.slice(0, _i2).every(function(check) {
                  return check;
                });
              }
            });
            if (fittingPlacement) {
              firstFittingPlacement = fittingPlacement;
              return "break";
            }
          };
          for (var _i = numberOfChecks; _i > 0; _i--) {
            var _ret = _loop(_i);
            if (_ret === "break")
              break;
          }
        }
        if (state.placement !== firstFittingPlacement) {
          state.modifiersData[name]._skip = true;
          state.placement = firstFittingPlacement;
          state.reset = true;
        }
      }
      var flip$1 = {
        name: "flip",
        enabled: true,
        phase: "main",
        fn: flip,
        requiresIfExists: ["offset"],
        data: {
          _skip: false
        }
      };
      function getAltAxis(axis) {
        return axis === "x" ? "y" : "x";
      }
      function within(min$1, value, max$1) {
        return max(min$1, min(value, max$1));
      }
      function preventOverflow(_ref) {
        var state = _ref.state, options = _ref.options, name = _ref.name;
        var _options$mainAxis = options.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options.altAxis, checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis, boundary = options.boundary, rootBoundary = options.rootBoundary, altBoundary = options.altBoundary, padding = options.padding, _options$tether = options.tether, tether = _options$tether === void 0 ? true : _options$tether, _options$tetherOffset = options.tetherOffset, tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;
        var overflow = detectOverflow(state, {
          boundary,
          rootBoundary,
          padding,
          altBoundary
        });
        var basePlacement = getBasePlacement(state.placement);
        var variation = getVariation(state.placement);
        var isBasePlacement = !variation;
        var mainAxis = getMainAxisFromPlacement(basePlacement);
        var altAxis = getAltAxis(mainAxis);
        var popperOffsets2 = state.modifiersData.popperOffsets;
        var referenceRect = state.rects.reference;
        var popperRect = state.rects.popper;
        var tetherOffsetValue = typeof tetherOffset === "function" ? tetherOffset(Object.assign({}, state.rects, {
          placement: state.placement
        })) : tetherOffset;
        var data = {
          x: 0,
          y: 0
        };
        if (!popperOffsets2) {
          return;
        }
        if (checkMainAxis || checkAltAxis) {
          var mainSide = mainAxis === "y" ? top : left;
          var altSide = mainAxis === "y" ? bottom : right;
          var len = mainAxis === "y" ? "height" : "width";
          var offset2 = popperOffsets2[mainAxis];
          var min$1 = popperOffsets2[mainAxis] + overflow[mainSide];
          var max$1 = popperOffsets2[mainAxis] - overflow[altSide];
          var additive = tether ? -popperRect[len] / 2 : 0;
          var minLen = variation === start ? referenceRect[len] : popperRect[len];
          var maxLen = variation === start ? -popperRect[len] : -referenceRect[len];
          var arrowElement = state.elements.arrow;
          var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {
            width: 0,
            height: 0
          };
          var arrowPaddingObject = state.modifiersData["arrow#persistent"] ? state.modifiersData["arrow#persistent"].padding : getFreshSideObject();
          var arrowPaddingMin = arrowPaddingObject[mainSide];
          var arrowPaddingMax = arrowPaddingObject[altSide];
          var arrowLen = within(0, referenceRect[len], arrowRect[len]);
          var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - tetherOffsetValue : minLen - arrowLen - arrowPaddingMin - tetherOffsetValue;
          var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + tetherOffsetValue : maxLen + arrowLen + arrowPaddingMax + tetherOffsetValue;
          var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);
          var clientOffset = arrowOffsetParent ? mainAxis === "y" ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;
          var offsetModifierValue = state.modifiersData.offset ? state.modifiersData.offset[state.placement][mainAxis] : 0;
          var tetherMin = popperOffsets2[mainAxis] + minOffset - offsetModifierValue - clientOffset;
          var tetherMax = popperOffsets2[mainAxis] + maxOffset - offsetModifierValue;
          if (checkMainAxis) {
            var preventedOffset = within(tether ? min(min$1, tetherMin) : min$1, offset2, tether ? max(max$1, tetherMax) : max$1);
            popperOffsets2[mainAxis] = preventedOffset;
            data[mainAxis] = preventedOffset - offset2;
          }
          if (checkAltAxis) {
            var _mainSide = mainAxis === "x" ? top : left;
            var _altSide = mainAxis === "x" ? bottom : right;
            var _offset = popperOffsets2[altAxis];
            var _min = _offset + overflow[_mainSide];
            var _max = _offset - overflow[_altSide];
            var _preventedOffset = within(tether ? min(_min, tetherMin) : _min, _offset, tether ? max(_max, tetherMax) : _max);
            popperOffsets2[altAxis] = _preventedOffset;
            data[altAxis] = _preventedOffset - _offset;
          }
        }
        state.modifiersData[name] = data;
      }
      var preventOverflow$1 = {
        name: "preventOverflow",
        enabled: true,
        phase: "main",
        fn: preventOverflow,
        requiresIfExists: ["offset"]
      };
      var toPaddingObject = function toPaddingObject2(padding, state) {
        padding = typeof padding === "function" ? padding(Object.assign({}, state.rects, {
          placement: state.placement
        })) : padding;
        return mergePaddingObject(typeof padding !== "number" ? padding : expandToHashMap(padding, basePlacements));
      };
      function arrow(_ref) {
        var _state$modifiersData$;
        var state = _ref.state, name = _ref.name, options = _ref.options;
        var arrowElement = state.elements.arrow;
        var popperOffsets2 = state.modifiersData.popperOffsets;
        var basePlacement = getBasePlacement(state.placement);
        var axis = getMainAxisFromPlacement(basePlacement);
        var isVertical = [left, right].indexOf(basePlacement) >= 0;
        var len = isVertical ? "height" : "width";
        if (!arrowElement || !popperOffsets2) {
          return;
        }
        var paddingObject = toPaddingObject(options.padding, state);
        var arrowRect = getLayoutRect(arrowElement);
        var minProp = axis === "y" ? top : left;
        var maxProp = axis === "y" ? bottom : right;
        var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets2[axis] - state.rects.popper[len];
        var startDiff = popperOffsets2[axis] - state.rects.reference[axis];
        var arrowOffsetParent = getOffsetParent(arrowElement);
        var clientSize = arrowOffsetParent ? axis === "y" ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;
        var centerToReference = endDiff / 2 - startDiff / 2;
        var min2 = paddingObject[minProp];
        var max2 = clientSize - arrowRect[len] - paddingObject[maxProp];
        var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;
        var offset2 = within(min2, center, max2);
        var axisProp = axis;
        state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset2, _state$modifiersData$.centerOffset = offset2 - center, _state$modifiersData$);
      }
      function effect(_ref2) {
        var state = _ref2.state, options = _ref2.options;
        var _options$element = options.element, arrowElement = _options$element === void 0 ? "[data-popper-arrow]" : _options$element;
        if (arrowElement == null) {
          return;
        }
        if (typeof arrowElement === "string") {
          arrowElement = state.elements.popper.querySelector(arrowElement);
          if (!arrowElement) {
            return;
          }
        }
        if (true) {
          if (!isHTMLElement(arrowElement)) {
            console.error(['Popper: "arrow" element must be an HTMLElement (not an SVGElement).', "To use an SVG arrow, wrap it in an HTMLElement that will be used as", "the arrow."].join(" "));
          }
        }
        if (!contains(state.elements.popper, arrowElement)) {
          if (true) {
            console.error(['Popper: "arrow" modifier\'s `element` must be a child of the popper', "element."].join(" "));
          }
          return;
        }
        state.elements.arrow = arrowElement;
      }
      var arrow$1 = {
        name: "arrow",
        enabled: true,
        phase: "main",
        fn: arrow,
        effect,
        requires: ["popperOffsets"],
        requiresIfExists: ["preventOverflow"]
      };
      function getSideOffsets(overflow, rect, preventedOffsets) {
        if (preventedOffsets === void 0) {
          preventedOffsets = {
            x: 0,
            y: 0
          };
        }
        return {
          top: overflow.top - rect.height - preventedOffsets.y,
          right: overflow.right - rect.width + preventedOffsets.x,
          bottom: overflow.bottom - rect.height + preventedOffsets.y,
          left: overflow.left - rect.width - preventedOffsets.x
        };
      }
      function isAnySideFullyClipped(overflow) {
        return [top, right, bottom, left].some(function(side) {
          return overflow[side] >= 0;
        });
      }
      function hide(_ref) {
        var state = _ref.state, name = _ref.name;
        var referenceRect = state.rects.reference;
        var popperRect = state.rects.popper;
        var preventedOffsets = state.modifiersData.preventOverflow;
        var referenceOverflow = detectOverflow(state, {
          elementContext: "reference"
        });
        var popperAltOverflow = detectOverflow(state, {
          altBoundary: true
        });
        var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);
        var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);
        var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);
        var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);
        state.modifiersData[name] = {
          referenceClippingOffsets,
          popperEscapeOffsets,
          isReferenceHidden,
          hasPopperEscaped
        };
        state.attributes.popper = Object.assign({}, state.attributes.popper, {
          "data-popper-reference-hidden": isReferenceHidden,
          "data-popper-escaped": hasPopperEscaped
        });
      }
      var hide$1 = {
        name: "hide",
        enabled: true,
        phase: "main",
        requiresIfExists: ["preventOverflow"],
        fn: hide
      };
      var defaultModifiers$1 = [eventListeners, popperOffsets$1, computeStyles$1, applyStyles$1];
      var createPopper$1 = /* @__PURE__ */ popperGenerator({
        defaultModifiers: defaultModifiers$1
      });
      var defaultModifiers = [eventListeners, popperOffsets$1, computeStyles$1, applyStyles$1, offset$1, flip$1, preventOverflow$1, arrow$1, hide$1];
      var createPopper = /* @__PURE__ */ popperGenerator({
        defaultModifiers
      });
      exports.applyStyles = applyStyles$1;
      exports.arrow = arrow$1;
      exports.computeStyles = computeStyles$1;
      exports.createPopper = createPopper;
      exports.createPopperLite = createPopper$1;
      exports.defaultModifiers = defaultModifiers;
      exports.detectOverflow = detectOverflow;
      exports.eventListeners = eventListeners;
      exports.flip = flip$1;
      exports.hide = hide$1;
      exports.offset = offset$1;
      exports.popperGenerator = popperGenerator;
      exports.popperOffsets = popperOffsets$1;
      exports.preventOverflow = preventOverflow$1;
    }
  });

  // node_modules/@mui/core/node/Popper/Popper.js
  var require_Popper = __commonJS({
    "node_modules/@mui/core/node/Popper/Popper.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _extends22 = _interopRequireDefault(require_extends());
      var _objectWithoutPropertiesLoose22 = _interopRequireDefault(require_objectWithoutPropertiesLoose());
      var _system = require_system();
      var _utils = require_utils();
      var _core = require_popper();
      var _propTypes = _interopRequireDefault(require_prop_types());
      var React40 = _interopRequireWildcard(require_react());
      var _Portal = _interopRequireDefault(require_Portal2());
      var _jsxRuntime = require_jsx_runtime();
      var _excluded21 = ["anchorEl", "children", "disablePortal", "modifiers", "open", "placement", "popperOptions", "popperRef", "TransitionProps"];
      var _excluded23 = ["anchorEl", "children", "container", "disablePortal", "keepMounted", "modifiers", "open", "placement", "popperOptions", "popperRef", "style", "transition"];
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
      function flipPlacement(placement, theme) {
        const direction = theme && theme.direction || "ltr";
        if (direction === "ltr") {
          return placement;
        }
        switch (placement) {
          case "bottom-end":
            return "bottom-start";
          case "bottom-start":
            return "bottom-end";
          case "top-end":
            return "top-start";
          case "top-start":
            return "top-end";
          default:
            return placement;
        }
      }
      function resolveAnchorEl(anchorEl) {
        return typeof anchorEl === "function" ? anchorEl() : anchorEl;
      }
      var defaultPopperOptions = {};
      var PopperTooltip = /* @__PURE__ */ React40.forwardRef(function PopperTooltip2(props, ref) {
        const {
          anchorEl,
          children,
          disablePortal,
          modifiers,
          open,
          placement: initialPlacement,
          popperOptions,
          popperRef: popperRefProp,
          TransitionProps
        } = props, other = (0, _objectWithoutPropertiesLoose22.default)(props, _excluded21);
        const tooltipRef = React40.useRef(null);
        const ownRef = (0, _utils.unstable_useForkRef)(tooltipRef, ref);
        const popperRef = React40.useRef(null);
        const handlePopperRef = (0, _utils.unstable_useForkRef)(popperRef, popperRefProp);
        const handlePopperRefRef = React40.useRef(handlePopperRef);
        (0, _utils.unstable_useEnhancedEffect)(() => {
          handlePopperRefRef.current = handlePopperRef;
        }, [handlePopperRef]);
        React40.useImperativeHandle(popperRefProp, () => popperRef.current, []);
        const theme = (0, _system.useThemeWithoutDefault)();
        const rtlPlacement = flipPlacement(initialPlacement, theme);
        const [placement, setPlacement] = React40.useState(rtlPlacement);
        React40.useEffect(() => {
          if (popperRef.current) {
            popperRef.current.forceUpdate();
          }
        });
        (0, _utils.unstable_useEnhancedEffect)(() => {
          if (!anchorEl || !open) {
            return void 0;
          }
          const handlePopperUpdate = (data) => {
            setPlacement(data.placement);
          };
          const resolvedAnchorEl = resolveAnchorEl(anchorEl);
          if (true) {
            if (resolvedAnchorEl && resolvedAnchorEl.nodeType === 1) {
              const box = resolvedAnchorEl.getBoundingClientRect();
              if (box.top === 0 && box.left === 0 && box.right === 0 && box.bottom === 0) {
                console.warn(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join("\n"));
              }
            }
          }
          let popperModifiers = [{
            name: "preventOverflow",
            options: {
              altBoundary: disablePortal
            }
          }, {
            name: "flip",
            options: {
              altBoundary: disablePortal
            }
          }, {
            name: "onUpdate",
            enabled: true,
            phase: "afterWrite",
            fn: ({
              state
            }) => {
              handlePopperUpdate(state);
            }
          }];
          if (modifiers != null) {
            popperModifiers = popperModifiers.concat(modifiers);
          }
          if (popperOptions && popperOptions.modifiers != null) {
            popperModifiers = popperModifiers.concat(popperOptions.modifiers);
          }
          const popper = (0, _core.createPopper)(resolveAnchorEl(anchorEl), tooltipRef.current, (0, _extends22.default)({
            placement: rtlPlacement
          }, popperOptions, {
            modifiers: popperModifiers
          }));
          handlePopperRefRef.current(popper);
          return () => {
            popper.destroy();
            handlePopperRefRef.current(null);
          };
        }, [anchorEl, disablePortal, modifiers, open, popperOptions, rtlPlacement]);
        const childProps = {
          placement
        };
        if (TransitionProps !== null) {
          childProps.TransitionProps = TransitionProps;
        }
        return /* @__PURE__ */ (0, _jsxRuntime.jsx)("div", (0, _extends22.default)({
          ref: ownRef,
          role: "tooltip"
        }, other, {
          children: typeof children === "function" ? children(childProps) : children
        }));
      });
      var Popper = /* @__PURE__ */ React40.forwardRef(function Popper2(props, ref) {
        const {
          anchorEl,
          children,
          container: containerProp,
          disablePortal = false,
          keepMounted = false,
          modifiers,
          open,
          placement = "bottom",
          popperOptions = defaultPopperOptions,
          popperRef,
          style,
          transition = false
        } = props, other = (0, _objectWithoutPropertiesLoose22.default)(props, _excluded23);
        const [exited, setExited] = React40.useState(true);
        const handleEnter = () => {
          setExited(false);
        };
        const handleExited = () => {
          setExited(true);
        };
        if (!keepMounted && !open && (!transition || exited)) {
          return null;
        }
        const container = containerProp || (anchorEl ? (0, _utils.unstable_ownerDocument)(resolveAnchorEl(anchorEl)).body : void 0);
        return /* @__PURE__ */ (0, _jsxRuntime.jsx)(_Portal.default, {
          disablePortal,
          container,
          children: /* @__PURE__ */ (0, _jsxRuntime.jsx)(PopperTooltip, (0, _extends22.default)({
            anchorEl,
            disablePortal,
            modifiers,
            ref,
            open: transition ? !exited : open,
            placement,
            popperOptions,
            popperRef
          }, other, {
            style: (0, _extends22.default)({
              position: "fixed",
              top: 0,
              left: 0,
              display: !open && keepMounted && (!transition || exited) ? "none" : null
            }, style),
            TransitionProps: transition ? {
              in: open,
              onEnter: handleEnter,
              onExited: handleExited
            } : null,
            children
          }))
        });
      });
      true ? Popper.propTypes = {
        anchorEl: (0, _utils.chainPropTypes)(_propTypes.default.oneOfType([_utils.HTMLElementType, _propTypes.default.object, _propTypes.default.func]), (props) => {
          if (props.open) {
            const resolvedAnchorEl = resolveAnchorEl(props.anchorEl);
            if (resolvedAnchorEl && resolvedAnchorEl.nodeType === 1) {
              const box = resolvedAnchorEl.getBoundingClientRect();
              if (box.top === 0 && box.left === 0 && box.right === 0 && box.bottom === 0) {
                return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join("\n"));
              }
            } else if (!resolvedAnchorEl || typeof resolvedAnchorEl.getBoundingClientRect !== "function" || resolvedAnchorEl.contextElement != null && resolvedAnchorEl.contextElement.nodeType !== 1) {
              return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "It should be an HTML element instance or a virtualElement ", "(https://popper.js.org/docs/v2/virtual-elements/)."].join("\n"));
            }
          }
          return null;
        }),
        children: _propTypes.default.oneOfType([_propTypes.default.node, _propTypes.default.func]),
        container: _propTypes.default.oneOfType([_utils.HTMLElementType, _propTypes.default.func]),
        disablePortal: _propTypes.default.bool,
        keepMounted: _propTypes.default.bool,
        modifiers: _propTypes.default.arrayOf(_propTypes.default.shape({
          data: _propTypes.default.object,
          effect: _propTypes.default.func,
          enabled: _propTypes.default.bool,
          fn: _propTypes.default.func,
          name: _propTypes.default.any.isRequired,
          options: _propTypes.default.object,
          phase: _propTypes.default.oneOf(["afterMain", "afterRead", "afterWrite", "beforeMain", "beforeRead", "beforeWrite", "main", "read", "write"]),
          requires: _propTypes.default.arrayOf(_propTypes.default.string),
          requiresIfExists: _propTypes.default.arrayOf(_propTypes.default.string)
        })),
        open: _propTypes.default.bool.isRequired,
        placement: _propTypes.default.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
        popperOptions: _propTypes.default.shape({
          modifiers: _propTypes.default.array,
          onFirstUpdate: _propTypes.default.func,
          placement: _propTypes.default.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
          strategy: _propTypes.default.oneOf(["absolute", "fixed"])
        }),
        popperRef: _utils.refType,
        style: _propTypes.default.object,
        transition: _propTypes.default.bool
      } : void 0;
      var _default = Popper;
      exports.default = _default;
    }
  });

  // node_modules/@mui/core/node/Popper/index.js
  var require_Popper2 = __commonJS({
    "node_modules/@mui/core/node/Popper/index.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      Object.defineProperty(exports, "default", {
        enumerable: true,
        get: function() {
          return _Popper.default;
        }
      });
      var _Popper = _interopRequireDefault(require_Popper());
    }
  });

  // node_modules/@mui/core/node/SliderUnstyled/sliderUnstyledClasses.js
  var require_sliderUnstyledClasses = __commonJS({
    "node_modules/@mui/core/node/SliderUnstyled/sliderUnstyledClasses.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      exports.getSliderUtilityClass = getSliderUtilityClass;
      var _generateUtilityClasses = _interopRequireDefault(require_generateUtilityClasses2());
      var _generateUtilityClass = _interopRequireDefault(require_generateUtilityClass2());
      function getSliderUtilityClass(slot) {
        return (0, _generateUtilityClass.default)("MuiSlider", slot);
      }
      var sliderUnstyledClasses = (0, _generateUtilityClasses.default)("MuiSlider", ["root", "active", "focusVisible", "disabled", "dragging", "marked", "vertical", "trackInverted", "trackFalse", "rail", "track", "mark", "markActive", "markLabel", "markLabelActive", "thumb", "valueLabel", "valueLabelOpen", "valueLabelCircle", "valueLabelLabel"]);
      var _default = sliderUnstyledClasses;
      exports.default = _default;
    }
  });

  // node_modules/@mui/core/node/SliderUnstyled/SliderValueLabelUnstyled.js
  var require_SliderValueLabelUnstyled = __commonJS({
    "node_modules/@mui/core/node/SliderUnstyled/SliderValueLabelUnstyled.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var React40 = _interopRequireWildcard(require_react());
      var _propTypes = _interopRequireDefault(require_prop_types());
      var _clsx = _interopRequireDefault(require_clsx());
      var _sliderUnstyledClasses = _interopRequireDefault(require_sliderUnstyledClasses());
      var _jsxRuntime = require_jsx_runtime();
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
      var useValueLabelClasses = (props) => {
        const {
          open
        } = props;
        const utilityClasses = {
          offset: (0, _clsx.default)(open && _sliderUnstyledClasses.default.valueLabelOpen),
          circle: _sliderUnstyledClasses.default.valueLabelCircle,
          label: _sliderUnstyledClasses.default.valueLabelLabel
        };
        return utilityClasses;
      };
      function SliderValueLabelUnstyled(props) {
        const {
          children,
          className,
          value,
          theme
        } = props;
        const classes = useValueLabelClasses(props);
        return /* @__PURE__ */ React40.cloneElement(children, {
          className: (0, _clsx.default)(children.props.className)
        }, /* @__PURE__ */ (0, _jsxRuntime.jsxs)(React40.Fragment, {
          children: [children.props.children, /* @__PURE__ */ (0, _jsxRuntime.jsx)("span", {
            className: (0, _clsx.default)(classes.offset, className),
            theme,
            "aria-hidden": true,
            children: /* @__PURE__ */ (0, _jsxRuntime.jsx)("span", {
              className: classes.circle,
              children: /* @__PURE__ */ (0, _jsxRuntime.jsx)("span", {
                className: classes.label,
                children: value
              })
            })
          })]
        }));
      }
      true ? SliderValueLabelUnstyled.propTypes = {
        children: _propTypes.default.element.isRequired,
        className: _propTypes.default.string,
        theme: _propTypes.default.any,
        value: _propTypes.default.node
      } : void 0;
      var _default = SliderValueLabelUnstyled;
      exports.default = _default;
    }
  });

  // node_modules/@mui/core/node/SliderUnstyled/SliderUnstyled.js
  var require_SliderUnstyled = __commonJS({
    "node_modules/@mui/core/node/SliderUnstyled/SliderUnstyled.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _extends22 = _interopRequireDefault(require_extends());
      var _objectWithoutPropertiesLoose22 = _interopRequireDefault(require_objectWithoutPropertiesLoose());
      var React40 = _interopRequireWildcard(require_react());
      var _propTypes = _interopRequireDefault(require_prop_types());
      var _clsx = _interopRequireDefault(require_clsx());
      var _utils = require_utils();
      var _isHostComponent = _interopRequireDefault(require_isHostComponent());
      var _composeClasses = _interopRequireDefault(require_composeClasses2());
      var _sliderUnstyledClasses = require_sliderUnstyledClasses();
      var _SliderValueLabelUnstyled = _interopRequireDefault(require_SliderValueLabelUnstyled());
      var _jsxRuntime = require_jsx_runtime();
      var _excluded21 = ["aria-label", "aria-labelledby", "aria-valuetext", "className", "component", "classes", "defaultValue", "disableSwap", "disabled", "getAriaLabel", "getAriaValueText", "marks", "max", "min", "name", "onChange", "onChangeCommitted", "onMouseDown", "orientation", "scale", "step", "tabIndex", "track", "value", "valueLabelDisplay", "valueLabelFormat", "isRtl", "components", "componentsProps"];
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
      var INTENTIONAL_DRAG_COUNT_THRESHOLD = 2;
      function asc(a2, b2) {
        return a2 - b2;
      }
      function clamp(value, min, max) {
        if (value == null) {
          return min;
        }
        return Math.min(Math.max(min, value), max);
      }
      function findClosest(values2, currentValue) {
        const {
          index: closestIndex
        } = values2.reduce((acc, value, index2) => {
          const distance = Math.abs(currentValue - value);
          if (acc === null || distance < acc.distance || distance === acc.distance) {
            return {
              distance,
              index: index2
            };
          }
          return acc;
        }, null);
        return closestIndex;
      }
      function trackFinger(event, touchId) {
        if (touchId.current !== void 0 && event.changedTouches) {
          for (let i2 = 0; i2 < event.changedTouches.length; i2 += 1) {
            const touch = event.changedTouches[i2];
            if (touch.identifier === touchId.current) {
              return {
                x: touch.clientX,
                y: touch.clientY
              };
            }
          }
          return false;
        }
        return {
          x: event.clientX,
          y: event.clientY
        };
      }
      function valueToPercent(value, min, max) {
        return (value - min) * 100 / (max - min);
      }
      function percentToValue(percent, min, max) {
        return (max - min) * percent + min;
      }
      function getDecimalPrecision(num) {
        if (Math.abs(num) < 1) {
          const parts = num.toExponential().split("e-");
          const matissaDecimalPart = parts[0].split(".")[1];
          return (matissaDecimalPart ? matissaDecimalPart.length : 0) + parseInt(parts[1], 10);
        }
        const decimalPart = num.toString().split(".")[1];
        return decimalPart ? decimalPart.length : 0;
      }
      function roundValueToStep(value, step, min) {
        const nearest = Math.round((value - min) / step) * step + min;
        return Number(nearest.toFixed(getDecimalPrecision(step)));
      }
      function setValueIndex({
        values: values2,
        newValue,
        index: index2
      }) {
        const output = values2.slice();
        output[index2] = newValue;
        return output.sort(asc);
      }
      function focusThumb({
        sliderRef,
        activeIndex,
        setActive
      }) {
        const doc = (0, _utils.unstable_ownerDocument)(sliderRef.current);
        if (!sliderRef.current.contains(doc.activeElement) || Number(doc.activeElement.getAttribute("data-index")) !== activeIndex) {
          sliderRef.current.querySelector(`[type="range"][data-index="${activeIndex}"]`).focus();
        }
        if (setActive) {
          setActive(activeIndex);
        }
      }
      var axisProps = {
        horizontal: {
          offset: (percent) => ({
            left: `${percent}%`
          }),
          leap: (percent) => ({
            width: `${percent}%`
          })
        },
        "horizontal-reverse": {
          offset: (percent) => ({
            right: `${percent}%`
          }),
          leap: (percent) => ({
            width: `${percent}%`
          })
        },
        vertical: {
          offset: (percent) => ({
            bottom: `${percent}%`
          }),
          leap: (percent) => ({
            height: `${percent}%`
          })
        }
      };
      var Identity = (x2) => x2;
      var cachedSupportsTouchActionNone;
      function doesSupportTouchActionNone() {
        if (cachedSupportsTouchActionNone === void 0) {
          if (typeof CSS !== "undefined" && typeof CSS.supports === "function") {
            cachedSupportsTouchActionNone = CSS.supports("touch-action", "none");
          } else {
            cachedSupportsTouchActionNone = true;
          }
        }
        return cachedSupportsTouchActionNone;
      }
      var useUtilityClasses12 = (ownerState) => {
        const {
          disabled,
          dragging,
          marked,
          orientation,
          track,
          classes
        } = ownerState;
        const slots = {
          root: ["root", disabled && "disabled", dragging && "dragging", marked && "marked", orientation === "vertical" && "vertical", track === "inverted" && "trackInverted", track === false && "trackFalse"],
          rail: ["rail"],
          track: ["track"],
          mark: ["mark"],
          markActive: ["markActive"],
          markLabel: ["markLabel"],
          markLabelActive: ["markLabelActive"],
          valueLabel: ["valueLabel"],
          thumb: ["thumb", disabled && "disabled"],
          active: ["active"],
          disabled: ["disabled"],
          focusVisible: ["focusVisible"]
        };
        return (0, _composeClasses.default)(slots, _sliderUnstyledClasses.getSliderUtilityClass, classes);
      };
      var Forward = ({
        children
      }) => children;
      var SliderUnstyled = /* @__PURE__ */ React40.forwardRef(function SliderUnstyled2(props, ref) {
        const {
          "aria-label": ariaLabel,
          "aria-labelledby": ariaLabelledby,
          "aria-valuetext": ariaValuetext,
          className,
          component = "span",
          classes: classesProp,
          defaultValue,
          disableSwap = false,
          disabled = false,
          getAriaLabel,
          getAriaValueText,
          marks: marksProp = false,
          max = 100,
          min = 0,
          name,
          onChange,
          onChangeCommitted,
          onMouseDown,
          orientation = "horizontal",
          scale = Identity,
          step = 1,
          tabIndex,
          track = "normal",
          value: valueProp,
          valueLabelDisplay = "off",
          valueLabelFormat = Identity,
          isRtl = false,
          components = {},
          componentsProps = {}
        } = props, other = (0, _objectWithoutPropertiesLoose22.default)(props, _excluded21);
        const touchId = React40.useRef();
        const [active, setActive] = React40.useState(-1);
        const [open, setOpen] = React40.useState(-1);
        const [dragging, setDragging] = React40.useState(false);
        const moveCount = React40.useRef(0);
        const [valueDerived, setValueState] = (0, _utils.unstable_useControlled)({
          controlled: valueProp,
          default: defaultValue != null ? defaultValue : min,
          name: "Slider"
        });
        const handleChange = onChange && ((event, value, thumbIndex) => {
          const nativeEvent = event.nativeEvent || event;
          const clonedEvent = new nativeEvent.constructor(nativeEvent.type, nativeEvent);
          Object.defineProperty(clonedEvent, "target", {
            writable: true,
            value: {
              value,
              name
            }
          });
          onChange(clonedEvent, value, thumbIndex);
        });
        const range = Array.isArray(valueDerived);
        let values2 = range ? valueDerived.slice().sort(asc) : [valueDerived];
        values2 = values2.map((value) => clamp(value, min, max));
        const marks = marksProp === true && step !== null ? [...Array(Math.floor((max - min) / step) + 1)].map((_3, index2) => ({
          value: min + step * index2
        })) : marksProp || [];
        const {
          isFocusVisibleRef,
          onBlur: handleBlurVisible,
          onFocus: handleFocusVisible,
          ref: focusVisibleRef
        } = (0, _utils.unstable_useIsFocusVisible)();
        const [focusVisible, setFocusVisible] = React40.useState(-1);
        const sliderRef = React40.useRef();
        const handleFocusRef = (0, _utils.unstable_useForkRef)(focusVisibleRef, sliderRef);
        const handleRef = (0, _utils.unstable_useForkRef)(ref, handleFocusRef);
        const handleFocus = (event) => {
          const index2 = Number(event.currentTarget.getAttribute("data-index"));
          handleFocusVisible(event);
          if (isFocusVisibleRef.current === true) {
            setFocusVisible(index2);
          }
          setOpen(index2);
        };
        const handleBlur = (event) => {
          handleBlurVisible(event);
          if (isFocusVisibleRef.current === false) {
            setFocusVisible(-1);
          }
          setOpen(-1);
        };
        const handleMouseOver = (0, _utils.unstable_useEventCallback)((event) => {
          const index2 = Number(event.currentTarget.getAttribute("data-index"));
          setOpen(index2);
        });
        const handleMouseLeave = (0, _utils.unstable_useEventCallback)(() => {
          setOpen(-1);
        });
        (0, _utils.unstable_useEnhancedEffect)(() => {
          if (disabled && sliderRef.current.contains(document.activeElement)) {
            document.activeElement.blur();
          }
        }, [disabled]);
        if (disabled && active !== -1) {
          setActive(-1);
        }
        if (disabled && focusVisible !== -1) {
          setFocusVisible(-1);
        }
        const handleHiddenInputChange = (event) => {
          const index2 = Number(event.currentTarget.getAttribute("data-index"));
          const value = values2[index2];
          const marksValues = marks.map((mark) => mark.value);
          const marksIndex = marksValues.indexOf(value);
          let newValue = event.target.valueAsNumber;
          if (marks && step == null) {
            newValue = newValue < value ? marksValues[marksIndex - 1] : marksValues[marksIndex + 1];
          }
          newValue = clamp(newValue, min, max);
          if (marks && step == null) {
            const markValues = marks.map((mark) => mark.value);
            const currentMarkIndex = markValues.indexOf(values2[index2]);
            newValue = newValue < values2[index2] ? markValues[currentMarkIndex - 1] : markValues[currentMarkIndex + 1];
          }
          if (range) {
            if (disableSwap) {
              newValue = clamp(newValue, values2[index2 - 1] || -Infinity, values2[index2 + 1] || Infinity);
            }
            const previousValue = newValue;
            newValue = setValueIndex({
              values: values2,
              newValue,
              index: index2
            });
            let activeIndex = index2;
            if (!disableSwap) {
              activeIndex = newValue.indexOf(previousValue);
            }
            focusThumb({
              sliderRef,
              activeIndex
            });
          }
          setValueState(newValue);
          setFocusVisible(index2);
          if (handleChange) {
            handleChange(event, newValue, index2);
          }
          if (onChangeCommitted) {
            onChangeCommitted(event, newValue);
          }
        };
        const previousIndex = React40.useRef();
        let axis = orientation;
        if (isRtl && orientation !== "vertical") {
          axis += "-reverse";
        }
        const getFingerNewValue = ({
          finger,
          move = false,
          values: values22
        }) => {
          const {
            current: slider
          } = sliderRef;
          const {
            width,
            height,
            bottom,
            left
          } = slider.getBoundingClientRect();
          let percent;
          if (axis.indexOf("vertical") === 0) {
            percent = (bottom - finger.y) / height;
          } else {
            percent = (finger.x - left) / width;
          }
          if (axis.indexOf("-reverse") !== -1) {
            percent = 1 - percent;
          }
          let newValue;
          newValue = percentToValue(percent, min, max);
          if (step) {
            newValue = roundValueToStep(newValue, step, min);
          } else {
            const marksValues = marks.map((mark) => mark.value);
            const closestIndex = findClosest(marksValues, newValue);
            newValue = marksValues[closestIndex];
          }
          newValue = clamp(newValue, min, max);
          let activeIndex = 0;
          if (range) {
            if (!move) {
              activeIndex = findClosest(values22, newValue);
            } else {
              activeIndex = previousIndex.current;
            }
            if (disableSwap) {
              newValue = clamp(newValue, values22[activeIndex - 1] || -Infinity, values22[activeIndex + 1] || Infinity);
            }
            const previousValue = newValue;
            newValue = setValueIndex({
              values: values22,
              newValue,
              index: activeIndex
            });
            if (!(disableSwap && move)) {
              activeIndex = newValue.indexOf(previousValue);
              previousIndex.current = activeIndex;
            }
          }
          return {
            newValue,
            activeIndex
          };
        };
        const handleTouchMove = (0, _utils.unstable_useEventCallback)((nativeEvent) => {
          const finger = trackFinger(nativeEvent, touchId);
          if (!finger) {
            return;
          }
          moveCount.current += 1;
          if (nativeEvent.type === "mousemove" && nativeEvent.buttons === 0) {
            handleTouchEnd(nativeEvent);
            return;
          }
          const {
            newValue,
            activeIndex
          } = getFingerNewValue({
            finger,
            move: true,
            values: values2
          });
          focusThumb({
            sliderRef,
            activeIndex,
            setActive
          });
          setValueState(newValue);
          if (!dragging && moveCount.current > INTENTIONAL_DRAG_COUNT_THRESHOLD) {
            setDragging(true);
          }
          if (handleChange) {
            handleChange(nativeEvent, newValue, activeIndex);
          }
        });
        const handleTouchEnd = (0, _utils.unstable_useEventCallback)((nativeEvent) => {
          const finger = trackFinger(nativeEvent, touchId);
          setDragging(false);
          if (!finger) {
            return;
          }
          const {
            newValue
          } = getFingerNewValue({
            finger,
            values: values2
          });
          setActive(-1);
          if (nativeEvent.type === "touchend") {
            setOpen(-1);
          }
          if (onChangeCommitted) {
            onChangeCommitted(nativeEvent, newValue);
          }
          touchId.current = void 0;
          stopListening();
        });
        const handleTouchStart = (0, _utils.unstable_useEventCallback)((nativeEvent) => {
          if (!doesSupportTouchActionNone()) {
            nativeEvent.preventDefault();
          }
          const touch = nativeEvent.changedTouches[0];
          if (touch != null) {
            touchId.current = touch.identifier;
          }
          const finger = trackFinger(nativeEvent, touchId);
          const {
            newValue,
            activeIndex
          } = getFingerNewValue({
            finger,
            values: values2
          });
          focusThumb({
            sliderRef,
            activeIndex,
            setActive
          });
          setValueState(newValue);
          if (handleChange) {
            handleChange(nativeEvent, newValue, activeIndex);
          }
          moveCount.current = 0;
          const doc = (0, _utils.unstable_ownerDocument)(sliderRef.current);
          doc.addEventListener("touchmove", handleTouchMove);
          doc.addEventListener("touchend", handleTouchEnd);
        });
        const stopListening = React40.useCallback(() => {
          const doc = (0, _utils.unstable_ownerDocument)(sliderRef.current);
          doc.removeEventListener("mousemove", handleTouchMove);
          doc.removeEventListener("mouseup", handleTouchEnd);
          doc.removeEventListener("touchmove", handleTouchMove);
          doc.removeEventListener("touchend", handleTouchEnd);
        }, [handleTouchEnd, handleTouchMove]);
        React40.useEffect(() => {
          const {
            current: slider
          } = sliderRef;
          slider.addEventListener("touchstart", handleTouchStart, {
            passive: doesSupportTouchActionNone()
          });
          return () => {
            slider.removeEventListener("touchstart", handleTouchStart, {
              passive: doesSupportTouchActionNone()
            });
            stopListening();
          };
        }, [stopListening, handleTouchStart]);
        React40.useEffect(() => {
          if (disabled) {
            stopListening();
          }
        }, [disabled, stopListening]);
        const handleMouseDown = (0, _utils.unstable_useEventCallback)((event) => {
          if (onMouseDown) {
            onMouseDown(event);
          }
          if (event.button !== 0) {
            return;
          }
          event.preventDefault();
          const finger = trackFinger(event, touchId);
          const {
            newValue,
            activeIndex
          } = getFingerNewValue({
            finger,
            values: values2
          });
          focusThumb({
            sliderRef,
            activeIndex,
            setActive
          });
          setValueState(newValue);
          if (handleChange) {
            handleChange(event, newValue, activeIndex);
          }
          moveCount.current = 0;
          const doc = (0, _utils.unstable_ownerDocument)(sliderRef.current);
          doc.addEventListener("mousemove", handleTouchMove);
          doc.addEventListener("mouseup", handleTouchEnd);
        });
        const trackOffset = valueToPercent(range ? values2[0] : min, min, max);
        const trackLeap = valueToPercent(values2[values2.length - 1], min, max) - trackOffset;
        const trackStyle = (0, _extends22.default)({}, axisProps[axis].offset(trackOffset), axisProps[axis].leap(trackLeap));
        const Root = components.Root || component;
        const rootProps = componentsProps.root || {};
        const Rail = components.Rail || "span";
        const railProps = componentsProps.rail || {};
        const Track = components.Track || "span";
        const trackProps = componentsProps.track || {};
        const Thumb = components.Thumb || "span";
        const thumbProps = componentsProps.thumb || {};
        const ValueLabel = components.ValueLabel || _SliderValueLabelUnstyled.default;
        const valueLabelProps = componentsProps.valueLabel || {};
        const Mark = components.Mark || "span";
        const markProps = componentsProps.mark || {};
        const MarkLabel = components.MarkLabel || "span";
        const markLabelProps = componentsProps.markLabel || {};
        const ownerState = (0, _extends22.default)({}, props, {
          classes: classesProp,
          disabled,
          dragging,
          isRtl,
          marked: marks.length > 0 && marks.some((mark) => mark.label),
          max,
          min,
          orientation,
          scale,
          step,
          track,
          valueLabelDisplay,
          valueLabelFormat
        });
        const classes = useUtilityClasses12(ownerState);
        return /* @__PURE__ */ (0, _jsxRuntime.jsxs)(Root, (0, _extends22.default)({
          ref: handleRef,
          onMouseDown: handleMouseDown
        }, rootProps, !(0, _isHostComponent.default)(Root) && {
          as: component,
          ownerState: (0, _extends22.default)({}, ownerState, rootProps.ownerState)
        }, other, {
          className: (0, _clsx.default)(classes.root, rootProps.className, className),
          children: [/* @__PURE__ */ (0, _jsxRuntime.jsx)(Rail, (0, _extends22.default)({}, railProps, !(0, _isHostComponent.default)(Rail) && {
            ownerState: (0, _extends22.default)({}, ownerState, railProps.ownerState)
          }, {
            className: (0, _clsx.default)(classes.rail, railProps.className)
          })), /* @__PURE__ */ (0, _jsxRuntime.jsx)(Track, (0, _extends22.default)({}, trackProps, !(0, _isHostComponent.default)(Track) && {
            ownerState: (0, _extends22.default)({}, ownerState, trackProps.ownerState)
          }, {
            className: (0, _clsx.default)(classes.track, trackProps.className),
            style: (0, _extends22.default)({}, trackStyle, trackProps.style)
          })), marks.map((mark, index2) => {
            const percent = valueToPercent(mark.value, min, max);
            const style = axisProps[axis].offset(percent);
            let markActive;
            if (track === false) {
              markActive = values2.indexOf(mark.value) !== -1;
            } else {
              markActive = track === "normal" && (range ? mark.value >= values2[0] && mark.value <= values2[values2.length - 1] : mark.value <= values2[0]) || track === "inverted" && (range ? mark.value <= values2[0] || mark.value >= values2[values2.length - 1] : mark.value >= values2[0]);
            }
            return /* @__PURE__ */ (0, _jsxRuntime.jsxs)(React40.Fragment, {
              children: [/* @__PURE__ */ (0, _jsxRuntime.jsx)(Mark, (0, _extends22.default)({
                "data-index": index2
              }, markProps, !(0, _isHostComponent.default)(Mark) && {
                ownerState: (0, _extends22.default)({}, ownerState, markProps.ownerState),
                markActive
              }, {
                style: (0, _extends22.default)({}, style, markProps.style),
                className: (0, _clsx.default)(classes.mark, markProps.className, markActive && classes.markActive)
              })), mark.label != null ? /* @__PURE__ */ (0, _jsxRuntime.jsx)(MarkLabel, (0, _extends22.default)({
                "aria-hidden": true,
                "data-index": index2
              }, markLabelProps, !(0, _isHostComponent.default)(MarkLabel) && {
                ownerState: (0, _extends22.default)({}, ownerState, markLabelProps.ownerState)
              }, {
                markLabelActive: markActive,
                style: (0, _extends22.default)({}, style, markLabelProps.style),
                className: (0, _clsx.default)(classes.markLabel, markLabelProps.className, markActive && classes.markLabelActive),
                children: mark.label
              })) : null]
            }, mark.value);
          }), values2.map((value, index2) => {
            const percent = valueToPercent(value, min, max);
            const style = axisProps[axis].offset(percent);
            const ValueLabelComponent = valueLabelDisplay === "off" ? Forward : ValueLabel;
            return /* @__PURE__ */ (0, _jsxRuntime.jsx)(React40.Fragment, {
              children: /* @__PURE__ */ (0, _jsxRuntime.jsx)(ValueLabelComponent, (0, _extends22.default)({
                valueLabelFormat,
                valueLabelDisplay,
                value: typeof valueLabelFormat === "function" ? valueLabelFormat(scale(value), index2) : valueLabelFormat,
                index: index2,
                open: open === index2 || active === index2 || valueLabelDisplay === "on",
                disabled
              }, valueLabelProps, {
                className: (0, _clsx.default)(classes.valueLabel, valueLabelProps.className)
              }, !(0, _isHostComponent.default)(ValueLabel) && {
                ownerState: (0, _extends22.default)({}, ownerState, valueLabelProps.ownerState)
              }, {
                children: /* @__PURE__ */ (0, _jsxRuntime.jsx)(Thumb, (0, _extends22.default)({
                  "data-index": index2,
                  onMouseOver: handleMouseOver,
                  onMouseLeave: handleMouseLeave
                }, thumbProps, {
                  className: (0, _clsx.default)(classes.thumb, thumbProps.className, active === index2 && classes.active, focusVisible === index2 && classes.focusVisible)
                }, !(0, _isHostComponent.default)(Thumb) && {
                  ownerState: (0, _extends22.default)({}, ownerState, thumbProps.ownerState)
                }, {
                  style: (0, _extends22.default)({}, style, {
                    pointerEvents: disableSwap && active !== index2 ? "none" : void 0
                  }, thumbProps.style),
                  children: /* @__PURE__ */ (0, _jsxRuntime.jsx)("input", {
                    tabIndex,
                    "data-index": index2,
                    "aria-label": getAriaLabel ? getAriaLabel(index2) : ariaLabel,
                    "aria-labelledby": ariaLabelledby,
                    "aria-orientation": orientation,
                    "aria-valuemax": scale(max),
                    "aria-valuemin": scale(min),
                    "aria-valuenow": scale(value),
                    "aria-valuetext": getAriaValueText ? getAriaValueText(scale(value), index2) : ariaValuetext,
                    onFocus: handleFocus,
                    onBlur: handleBlur,
                    name,
                    type: "range",
                    min: props.min,
                    max: props.max,
                    step: props.step,
                    disabled,
                    value: values2[index2],
                    onChange: handleHiddenInputChange,
                    style: (0, _extends22.default)({}, _utils.visuallyHidden, {
                      direction: isRtl ? "rtl" : "ltr",
                      width: "100%",
                      height: "100%"
                    })
                  })
                }))
              }))
            }, index2);
          })]
        }));
      });
      true ? SliderUnstyled.propTypes = {
        "aria-label": (0, _utils.chainPropTypes)(_propTypes.default.string, (props) => {
          const range = Array.isArray(props.value || props.defaultValue);
          if (range && props["aria-label"] != null) {
            return new Error("MUI: You need to use the `getAriaLabel` prop instead of `aria-label` when using a range slider.");
          }
          return null;
        }),
        "aria-labelledby": _propTypes.default.string,
        "aria-valuetext": (0, _utils.chainPropTypes)(_propTypes.default.string, (props) => {
          const range = Array.isArray(props.value || props.defaultValue);
          if (range && props["aria-valuetext"] != null) {
            return new Error("MUI: You need to use the `getAriaValueText` prop instead of `aria-valuetext` when using a range slider.");
          }
          return null;
        }),
        children: _propTypes.default.node,
        classes: _propTypes.default.object,
        className: _propTypes.default.string,
        component: _propTypes.default.elementType,
        components: _propTypes.default.shape({
          Mark: _propTypes.default.elementType,
          MarkLabel: _propTypes.default.elementType,
          Rail: _propTypes.default.elementType,
          Root: _propTypes.default.elementType,
          Thumb: _propTypes.default.elementType,
          Track: _propTypes.default.elementType,
          ValueLabel: _propTypes.default.elementType
        }),
        componentsProps: _propTypes.default.object,
        defaultValue: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.number), _propTypes.default.number]),
        disabled: _propTypes.default.bool,
        disableSwap: _propTypes.default.bool,
        getAriaLabel: _propTypes.default.func,
        getAriaValueText: _propTypes.default.func,
        isRtl: _propTypes.default.bool,
        marks: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.shape({
          label: _propTypes.default.node,
          value: _propTypes.default.number.isRequired
        })), _propTypes.default.bool]),
        max: _propTypes.default.number,
        min: _propTypes.default.number,
        name: _propTypes.default.string,
        onChange: _propTypes.default.func,
        onChangeCommitted: _propTypes.default.func,
        onMouseDown: _propTypes.default.func,
        orientation: _propTypes.default.oneOf(["horizontal", "vertical"]),
        scale: _propTypes.default.func,
        step: _propTypes.default.number,
        tabIndex: _propTypes.default.number,
        track: _propTypes.default.oneOf(["inverted", "normal", false]),
        value: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.number), _propTypes.default.number]),
        valueLabelDisplay: _propTypes.default.oneOf(["auto", "off", "on"]),
        valueLabelFormat: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.string])
      } : void 0;
      var _default = SliderUnstyled;
      exports.default = _default;
    }
  });

  // node_modules/@mui/core/node/SliderUnstyled/index.js
  var require_SliderUnstyled2 = __commonJS({
    "node_modules/@mui/core/node/SliderUnstyled/index.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      var _exportNames = {
        SliderValueLabelUnstyled: true,
        sliderUnstyledClasses: true
      };
      Object.defineProperty(exports, "SliderValueLabelUnstyled", {
        enumerable: true,
        get: function() {
          return _SliderValueLabelUnstyled.default;
        }
      });
      Object.defineProperty(exports, "default", {
        enumerable: true,
        get: function() {
          return _SliderUnstyled.default;
        }
      });
      Object.defineProperty(exports, "sliderUnstyledClasses", {
        enumerable: true,
        get: function() {
          return _sliderUnstyledClasses.default;
        }
      });
      var _SliderUnstyled = _interopRequireDefault(require_SliderUnstyled());
      var _SliderValueLabelUnstyled = _interopRequireDefault(require_SliderValueLabelUnstyled());
      var _sliderUnstyledClasses = _interopRequireWildcard(require_sliderUnstyledClasses());
      Object.keys(_sliderUnstyledClasses).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (Object.prototype.hasOwnProperty.call(_exportNames, key))
          return;
        if (key in exports && exports[key] === _sliderUnstyledClasses[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _sliderUnstyledClasses[key];
          }
        });
      });
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
    }
  });

  // node_modules/@mui/core/node/SwitchUnstyled/useSwitch.js
  var require_useSwitch = __commonJS({
    "node_modules/@mui/core/node/SwitchUnstyled/useSwitch.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = useSwitch;
      var _extends22 = _interopRequireDefault(require_extends());
      var React40 = _interopRequireWildcard(require_react());
      var _utils = require_utils();
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
      function useSwitch(props) {
        const {
          checked: checkedProp,
          defaultChecked,
          disabled,
          onBlur,
          onChange,
          onFocus,
          onFocusVisible,
          readOnly,
          required
        } = props;
        const [checked, setCheckedState] = (0, _utils.unstable_useControlled)({
          controlled: checkedProp,
          default: Boolean(defaultChecked),
          name: "Switch",
          state: "checked"
        });
        const handleInputChange = (event, otherHandler) => {
          if (event.nativeEvent.defaultPrevented) {
            return;
          }
          setCheckedState(event.target.checked);
          onChange == null ? void 0 : onChange(event);
          otherHandler == null ? void 0 : otherHandler(event);
        };
        const {
          isFocusVisibleRef,
          onBlur: handleBlurVisible,
          onFocus: handleFocusVisible,
          ref: focusVisibleRef
        } = (0, _utils.unstable_useIsFocusVisible)();
        const [focusVisible, setFocusVisible] = React40.useState(false);
        if (disabled && focusVisible) {
          setFocusVisible(false);
        }
        React40.useEffect(() => {
          isFocusVisibleRef.current = focusVisible;
        }, [focusVisible, isFocusVisibleRef]);
        const inputRef = React40.useRef(null);
        const handleFocus = (event, otherHandler) => {
          if (!inputRef.current) {
            inputRef.current = event.currentTarget;
          }
          handleFocusVisible(event);
          if (isFocusVisibleRef.current === true) {
            setFocusVisible(true);
            onFocusVisible == null ? void 0 : onFocusVisible(event);
          }
          onFocus == null ? void 0 : onFocus(event);
          otherHandler == null ? void 0 : otherHandler(event);
        };
        const handleBlur = (event, otherHandler) => {
          handleBlurVisible(event);
          if (isFocusVisibleRef.current === false) {
            setFocusVisible(false);
          }
          onBlur == null ? void 0 : onBlur(event);
          otherHandler == null ? void 0 : otherHandler(event);
        };
        const handleRefChange = (0, _utils.unstable_useForkRef)(focusVisibleRef, inputRef);
        const getInputProps = (otherProps = {}) => (0, _extends22.default)({
          checked: checkedProp,
          defaultChecked,
          disabled,
          readOnly,
          required,
          type: "checkbox"
        }, otherProps, {
          onChange: (event) => handleInputChange(event, otherProps.onChange),
          onFocus: (event) => handleFocus(event, otherProps.onFocus),
          onBlur: (event) => handleBlur(event, otherProps.onBlur),
          ref: handleRefChange
        });
        return {
          checked,
          disabled: Boolean(disabled),
          focusVisible,
          getInputProps,
          readOnly: Boolean(readOnly)
        };
      }
    }
  });

  // node_modules/@mui/core/node/SwitchUnstyled/switchUnstyledClasses.js
  var require_switchUnstyledClasses = __commonJS({
    "node_modules/@mui/core/node/SwitchUnstyled/switchUnstyledClasses.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      exports.getSwitchUnstyledUtilityClass = getSwitchUnstyledUtilityClass;
      var _generateUtilityClass = _interopRequireDefault(require_generateUtilityClass2());
      var _generateUtilityClasses = _interopRequireDefault(require_generateUtilityClasses2());
      function getSwitchUnstyledUtilityClass(slot) {
        return (0, _generateUtilityClass.default)("MuiSwitch", slot);
      }
      var switchUnstyledClasses = (0, _generateUtilityClasses.default)("MuiSwitch", ["root", "input", "track", "thumb", "checked", "disabled", "focusVisible", "readOnly"]);
      var _default = switchUnstyledClasses;
      exports.default = _default;
    }
  });

  // node_modules/@mui/core/node/SwitchUnstyled/SwitchUnstyled.js
  var require_SwitchUnstyled = __commonJS({
    "node_modules/@mui/core/node/SwitchUnstyled/SwitchUnstyled.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _extends22 = _interopRequireDefault(require_extends());
      var _objectWithoutPropertiesLoose22 = _interopRequireDefault(require_objectWithoutPropertiesLoose());
      var React40 = _interopRequireWildcard(require_react());
      var _propTypes = _interopRequireDefault(require_prop_types());
      var _clsx = _interopRequireDefault(require_clsx());
      var _useSwitch = _interopRequireDefault(require_useSwitch());
      var _switchUnstyledClasses = _interopRequireDefault(require_switchUnstyledClasses());
      var _appendOwnerState = _interopRequireDefault(require_appendOwnerState());
      var _jsxRuntime = require_jsx_runtime();
      var _excluded21 = ["checked", "className", "component", "components", "componentsProps", "defaultChecked", "disabled", "onBlur", "onChange", "onFocus", "onFocusVisible", "readOnly", "required"];
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
      var SwitchUnstyled = /* @__PURE__ */ React40.forwardRef(function SwitchUnstyled2(props, ref) {
        var _ref, _components$Thumb, _componentsProps$thum, _components$Input, _componentsProps$inpu, _components$Track, _componentsProps$trac;
        const {
          checked: checkedProp,
          className,
          component,
          components = {},
          componentsProps = {},
          defaultChecked,
          disabled: disabledProp,
          onBlur,
          onChange,
          onFocus,
          onFocusVisible,
          readOnly: readOnlyProp
        } = props, otherProps = (0, _objectWithoutPropertiesLoose22.default)(props, _excluded21);
        const useSwitchProps = {
          checked: checkedProp,
          defaultChecked,
          disabled: disabledProp,
          onBlur,
          onChange,
          onFocus,
          onFocusVisible,
          readOnly: readOnlyProp
        };
        const {
          getInputProps,
          checked,
          disabled,
          focusVisible,
          readOnly
        } = (0, _useSwitch.default)(useSwitchProps);
        const ownerState = (0, _extends22.default)({}, props, {
          checked,
          disabled,
          focusVisible,
          readOnly
        });
        const Root = (_ref = component != null ? component : components.Root) != null ? _ref : "span";
        const rootProps = (0, _appendOwnerState.default)(Root, (0, _extends22.default)({}, otherProps, componentsProps.root), ownerState);
        const Thumb = (_components$Thumb = components.Thumb) != null ? _components$Thumb : "span";
        const thumbProps = (0, _appendOwnerState.default)(Thumb, (_componentsProps$thum = componentsProps.thumb) != null ? _componentsProps$thum : {}, ownerState);
        const Input = (_components$Input = components.Input) != null ? _components$Input : "input";
        const inputProps = (0, _appendOwnerState.default)(Input, (_componentsProps$inpu = componentsProps.input) != null ? _componentsProps$inpu : {}, ownerState);
        const Track = components.Track === null ? () => null : (_components$Track = components.Track) != null ? _components$Track : "span";
        const trackProps = (0, _appendOwnerState.default)(Track, (_componentsProps$trac = componentsProps.track) != null ? _componentsProps$trac : {}, ownerState);
        const stateClasses = (0, _clsx.default)(checked && _switchUnstyledClasses.default.checked, disabled && _switchUnstyledClasses.default.disabled, focusVisible && _switchUnstyledClasses.default.focusVisible, readOnly && _switchUnstyledClasses.default.readOnly);
        return /* @__PURE__ */ (0, _jsxRuntime.jsxs)(Root, (0, _extends22.default)({
          ref
        }, rootProps, {
          className: (0, _clsx.default)(_switchUnstyledClasses.default.root, stateClasses, className, rootProps == null ? void 0 : rootProps.className),
          children: [/* @__PURE__ */ (0, _jsxRuntime.jsx)(Track, (0, _extends22.default)({}, trackProps, {
            className: (0, _clsx.default)(_switchUnstyledClasses.default.track, trackProps == null ? void 0 : trackProps.className)
          })), /* @__PURE__ */ (0, _jsxRuntime.jsx)(Thumb, (0, _extends22.default)({}, thumbProps, {
            className: (0, _clsx.default)(_switchUnstyledClasses.default.thumb, thumbProps == null ? void 0 : thumbProps.className)
          })), /* @__PURE__ */ (0, _jsxRuntime.jsx)(Input, (0, _extends22.default)({}, getInputProps(inputProps), {
            className: (0, _clsx.default)(_switchUnstyledClasses.default.input, inputProps == null ? void 0 : inputProps.className)
          }))]
        }));
      });
      true ? SwitchUnstyled.propTypes = {
        checked: _propTypes.default.bool,
        className: _propTypes.default.string,
        component: _propTypes.default.elementType,
        components: _propTypes.default.shape({
          Input: _propTypes.default.elementType,
          Root: _propTypes.default.elementType,
          Thumb: _propTypes.default.elementType,
          Track: _propTypes.default.oneOfType([_propTypes.default.elementType, _propTypes.default.oneOf([null])])
        }),
        componentsProps: _propTypes.default.object,
        defaultChecked: _propTypes.default.bool,
        disabled: _propTypes.default.bool,
        onBlur: _propTypes.default.func,
        onChange: _propTypes.default.func,
        onFocus: _propTypes.default.func,
        onFocusVisible: _propTypes.default.func,
        readOnly: _propTypes.default.bool,
        required: _propTypes.default.bool
      } : void 0;
      var _default = SwitchUnstyled;
      exports.default = _default;
    }
  });

  // node_modules/@mui/core/node/SwitchUnstyled/index.js
  var require_SwitchUnstyled2 = __commonJS({
    "node_modules/@mui/core/node/SwitchUnstyled/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      var _exportNames = {
        useSwitch: true,
        switchUnstyledClasses: true
      };
      Object.defineProperty(exports, "default", {
        enumerable: true,
        get: function() {
          return _SwitchUnstyled.default;
        }
      });
      Object.defineProperty(exports, "switchUnstyledClasses", {
        enumerable: true,
        get: function() {
          return _switchUnstyledClasses.default;
        }
      });
      Object.defineProperty(exports, "useSwitch", {
        enumerable: true,
        get: function() {
          return _useSwitch.default;
        }
      });
      var _SwitchUnstyled = _interopRequireWildcard(require_SwitchUnstyled());
      Object.keys(_SwitchUnstyled).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (Object.prototype.hasOwnProperty.call(_exportNames, key))
          return;
        if (key in exports && exports[key] === _SwitchUnstyled[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _SwitchUnstyled[key];
          }
        });
      });
      var _useSwitch = _interopRequireWildcard(require_useSwitch());
      Object.keys(_useSwitch).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (Object.prototype.hasOwnProperty.call(_exportNames, key))
          return;
        if (key in exports && exports[key] === _useSwitch[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _useSwitch[key];
          }
        });
      });
      var _switchUnstyledClasses = _interopRequireWildcard(require_switchUnstyledClasses());
      Object.keys(_switchUnstyledClasses).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (Object.prototype.hasOwnProperty.call(_exportNames, key))
          return;
        if (key in exports && exports[key] === _switchUnstyledClasses[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _switchUnstyledClasses[key];
          }
        });
      });
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
    }
  });

  // node_modules/@mui/core/node/TextareaAutosize/TextareaAutosize.js
  var require_TextareaAutosize = __commonJS({
    "node_modules/@mui/core/node/TextareaAutosize/TextareaAutosize.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _extends22 = _interopRequireDefault(require_extends());
      var _objectWithoutPropertiesLoose22 = _interopRequireDefault(require_objectWithoutPropertiesLoose());
      var React40 = _interopRequireWildcard(require_react());
      var _propTypes = _interopRequireDefault(require_prop_types());
      var _utils = require_utils();
      var _jsxRuntime = require_jsx_runtime();
      var _excluded21 = ["onChange", "maxRows", "minRows", "style", "value"];
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
      function getStyleValue(computedStyle, property) {
        return parseInt(computedStyle[property], 10) || 0;
      }
      var styles2 = {
        shadow: {
          visibility: "hidden",
          position: "absolute",
          overflow: "hidden",
          height: 0,
          top: 0,
          left: 0,
          transform: "translateZ(0)"
        }
      };
      var TextareaAutosize = /* @__PURE__ */ React40.forwardRef(function TextareaAutosize2(props, ref) {
        const {
          onChange,
          maxRows,
          minRows = 1,
          style,
          value
        } = props, other = (0, _objectWithoutPropertiesLoose22.default)(props, _excluded21);
        const {
          current: isControlled
        } = React40.useRef(value != null);
        const inputRef = React40.useRef(null);
        const handleRef = (0, _utils.unstable_useForkRef)(ref, inputRef);
        const shadowRef = React40.useRef(null);
        const renders = React40.useRef(0);
        const [state, setState] = React40.useState({});
        const syncHeight = React40.useCallback(() => {
          const input = inputRef.current;
          const containerWindow = (0, _utils.unstable_ownerWindow)(input);
          const computedStyle = containerWindow.getComputedStyle(input);
          if (computedStyle.width === "0px") {
            return;
          }
          const inputShallow = shadowRef.current;
          inputShallow.style.width = computedStyle.width;
          inputShallow.value = input.value || props.placeholder || "x";
          if (inputShallow.value.slice(-1) === "\n") {
            inputShallow.value += " ";
          }
          const boxSizing = computedStyle["box-sizing"];
          const padding = getStyleValue(computedStyle, "padding-bottom") + getStyleValue(computedStyle, "padding-top");
          const border = getStyleValue(computedStyle, "border-bottom-width") + getStyleValue(computedStyle, "border-top-width");
          const innerHeight = inputShallow.scrollHeight;
          inputShallow.value = "x";
          const singleRowHeight = inputShallow.scrollHeight;
          let outerHeight = innerHeight;
          if (minRows) {
            outerHeight = Math.max(Number(minRows) * singleRowHeight, outerHeight);
          }
          if (maxRows) {
            outerHeight = Math.min(Number(maxRows) * singleRowHeight, outerHeight);
          }
          outerHeight = Math.max(outerHeight, singleRowHeight);
          const outerHeightStyle = outerHeight + (boxSizing === "border-box" ? padding + border : 0);
          const overflow = Math.abs(outerHeight - innerHeight) <= 1;
          setState((prevState) => {
            if (renders.current < 20 && (outerHeightStyle > 0 && Math.abs((prevState.outerHeightStyle || 0) - outerHeightStyle) > 1 || prevState.overflow !== overflow)) {
              renders.current += 1;
              return {
                overflow,
                outerHeightStyle
              };
            }
            if (true) {
              if (renders.current === 20) {
                console.error(["MUI: Too many re-renders. The layout is unstable.", "TextareaAutosize limits the number of renders to prevent an infinite loop."].join("\n"));
              }
            }
            return prevState;
          });
        }, [maxRows, minRows, props.placeholder]);
        React40.useEffect(() => {
          const handleResize = (0, _utils.unstable_debounce)(() => {
            renders.current = 0;
            syncHeight();
          });
          const containerWindow = (0, _utils.unstable_ownerWindow)(inputRef.current);
          containerWindow.addEventListener("resize", handleResize);
          let resizeObserver;
          if (typeof ResizeObserver !== "undefined") {
            resizeObserver = new ResizeObserver(handleResize);
            resizeObserver.observe(inputRef.current);
          }
          return () => {
            handleResize.clear();
            containerWindow.removeEventListener("resize", handleResize);
            if (resizeObserver) {
              resizeObserver.disconnect();
            }
          };
        }, [syncHeight]);
        (0, _utils.unstable_useEnhancedEffect)(() => {
          syncHeight();
        });
        React40.useEffect(() => {
          renders.current = 0;
        }, [value]);
        const handleChange = (event) => {
          renders.current = 0;
          if (!isControlled) {
            syncHeight();
          }
          if (onChange) {
            onChange(event);
          }
        };
        return /* @__PURE__ */ (0, _jsxRuntime.jsxs)(React40.Fragment, {
          children: [/* @__PURE__ */ (0, _jsxRuntime.jsx)("textarea", (0, _extends22.default)({
            value,
            onChange: handleChange,
            ref: handleRef,
            rows: minRows,
            style: (0, _extends22.default)({
              height: state.outerHeightStyle,
              overflow: state.overflow ? "hidden" : null
            }, style)
          }, other)), /* @__PURE__ */ (0, _jsxRuntime.jsx)("textarea", {
            "aria-hidden": true,
            className: props.className,
            readOnly: true,
            ref: shadowRef,
            tabIndex: -1,
            style: (0, _extends22.default)({}, styles2.shadow, style, {
              padding: 0
            })
          })]
        });
      });
      true ? TextareaAutosize.propTypes = {
        className: _propTypes.default.string,
        maxRows: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
        minRows: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
        onChange: _propTypes.default.func,
        placeholder: _propTypes.default.string,
        style: _propTypes.default.object,
        value: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.string), _propTypes.default.number, _propTypes.default.string])
      } : void 0;
      var _default = TextareaAutosize;
      exports.default = _default;
    }
  });

  // node_modules/@mui/core/node/TextareaAutosize/index.js
  var require_TextareaAutosize2 = __commonJS({
    "node_modules/@mui/core/node/TextareaAutosize/index.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      Object.defineProperty(exports, "default", {
        enumerable: true,
        get: function() {
          return _TextareaAutosize.default;
        }
      });
      var _TextareaAutosize = _interopRequireDefault(require_TextareaAutosize());
    }
  });

  // node_modules/@mui/core/node/utils/index.js
  var require_utils2 = __commonJS({
    "node_modules/@mui/core/node/utils/index.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      Object.defineProperty(exports, "appendOwnerState", {
        enumerable: true,
        get: function() {
          return _appendOwnerState.default;
        }
      });
      Object.defineProperty(exports, "extractEventHandlers", {
        enumerable: true,
        get: function() {
          return _extractEventHandlers.default;
        }
      });
      Object.defineProperty(exports, "isHostComponent", {
        enumerable: true,
        get: function() {
          return _isHostComponent.default;
        }
      });
      var _appendOwnerState = _interopRequireDefault(require_appendOwnerState());
      var _extractEventHandlers = _interopRequireDefault(require_extractEventHandlers());
      var _isHostComponent = _interopRequireDefault(require_isHostComponent());
    }
  });

  // node_modules/@mui/core/node/index.js
  var require_node3 = __commonJS({
    "node_modules/@mui/core/node/index.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      var _exportNames = {
        BackdropUnstyled: true,
        BadgeUnstyled: true,
        ButtonUnstyled: true,
        unstable_composeClasses: true,
        generateUtilityClass: true,
        unstable_ClassNameGenerator: true,
        generateUtilityClasses: true,
        FormControlUnstyled: true,
        InputUnstyled: true,
        ModalUnstyled: true,
        NoSsr: true,
        Popper: true,
        Portal: true,
        SliderUnstyled: true,
        SwitchUnstyled: true,
        TextareaAutosize: true,
        Unstable_TrapFocus: true
      };
      Object.defineProperty(exports, "BackdropUnstyled", {
        enumerable: true,
        get: function() {
          return _BackdropUnstyled.default;
        }
      });
      Object.defineProperty(exports, "BadgeUnstyled", {
        enumerable: true,
        get: function() {
          return _BadgeUnstyled.default;
        }
      });
      Object.defineProperty(exports, "ButtonUnstyled", {
        enumerable: true,
        get: function() {
          return _ButtonUnstyled.default;
        }
      });
      Object.defineProperty(exports, "FormControlUnstyled", {
        enumerable: true,
        get: function() {
          return _FormControlUnstyled.default;
        }
      });
      Object.defineProperty(exports, "InputUnstyled", {
        enumerable: true,
        get: function() {
          return _InputUnstyled.default;
        }
      });
      Object.defineProperty(exports, "ModalUnstyled", {
        enumerable: true,
        get: function() {
          return _ModalUnstyled.default;
        }
      });
      Object.defineProperty(exports, "NoSsr", {
        enumerable: true,
        get: function() {
          return _NoSsr.default;
        }
      });
      Object.defineProperty(exports, "Popper", {
        enumerable: true,
        get: function() {
          return _Popper.default;
        }
      });
      Object.defineProperty(exports, "Portal", {
        enumerable: true,
        get: function() {
          return _Portal.default;
        }
      });
      Object.defineProperty(exports, "SliderUnstyled", {
        enumerable: true,
        get: function() {
          return _SliderUnstyled.default;
        }
      });
      Object.defineProperty(exports, "SwitchUnstyled", {
        enumerable: true,
        get: function() {
          return _SwitchUnstyled.default;
        }
      });
      Object.defineProperty(exports, "TextareaAutosize", {
        enumerable: true,
        get: function() {
          return _TextareaAutosize.default;
        }
      });
      Object.defineProperty(exports, "Unstable_TrapFocus", {
        enumerable: true,
        get: function() {
          return _Unstable_TrapFocus.default;
        }
      });
      Object.defineProperty(exports, "generateUtilityClass", {
        enumerable: true,
        get: function() {
          return _generateUtilityClass.default;
        }
      });
      Object.defineProperty(exports, "generateUtilityClasses", {
        enumerable: true,
        get: function() {
          return _generateUtilityClasses.default;
        }
      });
      Object.defineProperty(exports, "unstable_ClassNameGenerator", {
        enumerable: true,
        get: function() {
          return _ClassNameGenerator.default;
        }
      });
      Object.defineProperty(exports, "unstable_composeClasses", {
        enumerable: true,
        get: function() {
          return _composeClasses.default;
        }
      });
      var _AutocompleteUnstyled = require_AutocompleteUnstyled();
      Object.keys(_AutocompleteUnstyled).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (Object.prototype.hasOwnProperty.call(_exportNames, key))
          return;
        if (key in exports && exports[key] === _AutocompleteUnstyled[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _AutocompleteUnstyled[key];
          }
        });
      });
      var _BackdropUnstyled = _interopRequireWildcard(require_BackdropUnstyled2());
      Object.keys(_BackdropUnstyled).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (Object.prototype.hasOwnProperty.call(_exportNames, key))
          return;
        if (key in exports && exports[key] === _BackdropUnstyled[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _BackdropUnstyled[key];
          }
        });
      });
      var _BadgeUnstyled = _interopRequireWildcard(require_BadgeUnstyled2());
      Object.keys(_BadgeUnstyled).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (Object.prototype.hasOwnProperty.call(_exportNames, key))
          return;
        if (key in exports && exports[key] === _BadgeUnstyled[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _BadgeUnstyled[key];
          }
        });
      });
      var _ButtonUnstyled = _interopRequireWildcard(require_ButtonUnstyled2());
      Object.keys(_ButtonUnstyled).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (Object.prototype.hasOwnProperty.call(_exportNames, key))
          return;
        if (key in exports && exports[key] === _ButtonUnstyled[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _ButtonUnstyled[key];
          }
        });
      });
      var _composeClasses = _interopRequireDefault(require_composeClasses2());
      var _generateUtilityClass = _interopRequireDefault(require_generateUtilityClass2());
      var _ClassNameGenerator = _interopRequireDefault(require_ClassNameGenerator());
      var _generateUtilityClasses = _interopRequireDefault(require_generateUtilityClasses2());
      var _FormControlUnstyled = _interopRequireWildcard(require_FormControlUnstyled2());
      Object.keys(_FormControlUnstyled).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (Object.prototype.hasOwnProperty.call(_exportNames, key))
          return;
        if (key in exports && exports[key] === _FormControlUnstyled[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _FormControlUnstyled[key];
          }
        });
      });
      var _InputUnstyled = _interopRequireWildcard(require_InputUnstyled2());
      Object.keys(_InputUnstyled).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (Object.prototype.hasOwnProperty.call(_exportNames, key))
          return;
        if (key in exports && exports[key] === _InputUnstyled[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _InputUnstyled[key];
          }
        });
      });
      var _ModalUnstyled = _interopRequireWildcard(require_ModalUnstyled2());
      Object.keys(_ModalUnstyled).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (Object.prototype.hasOwnProperty.call(_exportNames, key))
          return;
        if (key in exports && exports[key] === _ModalUnstyled[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _ModalUnstyled[key];
          }
        });
      });
      var _NoSsr = _interopRequireDefault(require_NoSsr2());
      var _Popper = _interopRequireDefault(require_Popper2());
      var _Portal = _interopRequireDefault(require_Portal2());
      var _SliderUnstyled = _interopRequireWildcard(require_SliderUnstyled2());
      Object.keys(_SliderUnstyled).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (Object.prototype.hasOwnProperty.call(_exportNames, key))
          return;
        if (key in exports && exports[key] === _SliderUnstyled[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _SliderUnstyled[key];
          }
        });
      });
      var _SwitchUnstyled = _interopRequireWildcard(require_SwitchUnstyled2());
      Object.keys(_SwitchUnstyled).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (Object.prototype.hasOwnProperty.call(_exportNames, key))
          return;
        if (key in exports && exports[key] === _SwitchUnstyled[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _SwitchUnstyled[key];
          }
        });
      });
      var _TextareaAutosize = _interopRequireDefault(require_TextareaAutosize2());
      var _Unstable_TrapFocus = _interopRequireDefault(require_Unstable_TrapFocus2());
      var _utils = require_utils2();
      Object.keys(_utils).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (Object.prototype.hasOwnProperty.call(_exportNames, key))
          return;
        if (key in exports && exports[key] === _utils[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _utils[key];
          }
        });
      });
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
    }
  });

  // node_modules/@mui/material/node_modules/@babel/runtime/helpers/interopRequireDefault.js
  var require_interopRequireDefault6 = __commonJS({
    "node_modules/@mui/material/node_modules/@babel/runtime/helpers/interopRequireDefault.js"(exports, module) {
      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          "default": obj
        };
      }
      module.exports = _interopRequireDefault;
      module.exports["default"] = module.exports, module.exports.__esModule = true;
    }
  });

  // node_modules/@mui/material/node_modules/@babel/runtime/helpers/extends.js
  var require_extends7 = __commonJS({
    "node_modules/@mui/material/node_modules/@babel/runtime/helpers/extends.js"(exports, module) {
      function _extends4() {
        module.exports = _extends4 = Object.assign || function(target) {
          for (var i2 = 1; i2 < arguments.length; i2++) {
            var source = arguments[i2];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };
        module.exports["default"] = module.exports, module.exports.__esModule = true;
        return _extends4.apply(this, arguments);
      }
      module.exports = _extends4;
      module.exports["default"] = module.exports, module.exports.__esModule = true;
    }
  });

  // node_modules/@mui/material/node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js
  var require_objectWithoutPropertiesLoose3 = __commonJS({
    "node_modules/@mui/material/node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js"(exports, module) {
      function _objectWithoutPropertiesLoose4(source, excluded) {
        if (source == null)
          return {};
        var target = {};
        var sourceKeys = Object.keys(source);
        var key, i2;
        for (i2 = 0; i2 < sourceKeys.length; i2++) {
          key = sourceKeys[i2];
          if (excluded.indexOf(key) >= 0)
            continue;
          target[key] = source[key];
        }
        return target;
      }
      module.exports = _objectWithoutPropertiesLoose4;
      module.exports["default"] = module.exports, module.exports.__esModule = true;
    }
  });

  // node_modules/@mui/material/node/utils/capitalize.js
  var require_capitalize2 = __commonJS({
    "node_modules/@mui/material/node/utils/capitalize.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _utils = require_utils();
      var _default = _utils.unstable_capitalize;
      exports.default = _default;
    }
  });

  // node_modules/@mui/material/node/styles/createMixins.js
  var require_createMixins = __commonJS({
    "node_modules/@mui/material/node/styles/createMixins.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault6();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = createMixins2;
      var _extends22 = _interopRequireDefault(require_extends7());
      function createMixins2(breakpoints, spacing, mixins) {
        return (0, _extends22.default)({
          toolbar: {
            minHeight: 56,
            [`${breakpoints.up("xs")} and (orientation: landscape)`]: {
              minHeight: 48
            },
            [breakpoints.up("sm")]: {
              minHeight: 64
            }
          }
        }, mixins);
      }
    }
  });

  // node_modules/@mui/material/node/colors/common.js
  var require_common = __commonJS({
    "node_modules/@mui/material/node/colors/common.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var common2 = {
        black: "#000",
        white: "#fff"
      };
      var _default = common2;
      exports.default = _default;
    }
  });

  // node_modules/@mui/material/node/colors/grey.js
  var require_grey = __commonJS({
    "node_modules/@mui/material/node/colors/grey.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var grey2 = {
        50: "#fafafa",
        100: "#f5f5f5",
        200: "#eeeeee",
        300: "#e0e0e0",
        400: "#bdbdbd",
        500: "#9e9e9e",
        600: "#757575",
        700: "#616161",
        800: "#424242",
        900: "#212121",
        A100: "#f5f5f5",
        A200: "#eeeeee",
        A400: "#bdbdbd",
        A700: "#616161"
      };
      var _default = grey2;
      exports.default = _default;
    }
  });

  // node_modules/@mui/material/node/colors/purple.js
  var require_purple = __commonJS({
    "node_modules/@mui/material/node/colors/purple.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var purple2 = {
        50: "#f3e5f5",
        100: "#e1bee7",
        200: "#ce93d8",
        300: "#ba68c8",
        400: "#ab47bc",
        500: "#9c27b0",
        600: "#8e24aa",
        700: "#7b1fa2",
        800: "#6a1b9a",
        900: "#4a148c",
        A100: "#ea80fc",
        A200: "#e040fb",
        A400: "#d500f9",
        A700: "#aa00ff"
      };
      var _default = purple2;
      exports.default = _default;
    }
  });

  // node_modules/@mui/material/node/colors/red.js
  var require_red = __commonJS({
    "node_modules/@mui/material/node/colors/red.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var red2 = {
        50: "#ffebee",
        100: "#ffcdd2",
        200: "#ef9a9a",
        300: "#e57373",
        400: "#ef5350",
        500: "#f44336",
        600: "#e53935",
        700: "#d32f2f",
        800: "#c62828",
        900: "#b71c1c",
        A100: "#ff8a80",
        A200: "#ff5252",
        A400: "#ff1744",
        A700: "#d50000"
      };
      var _default = red2;
      exports.default = _default;
    }
  });

  // node_modules/@mui/material/node/colors/orange.js
  var require_orange = __commonJS({
    "node_modules/@mui/material/node/colors/orange.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var orange2 = {
        50: "#fff3e0",
        100: "#ffe0b2",
        200: "#ffcc80",
        300: "#ffb74d",
        400: "#ffa726",
        500: "#ff9800",
        600: "#fb8c00",
        700: "#f57c00",
        800: "#ef6c00",
        900: "#e65100",
        A100: "#ffd180",
        A200: "#ffab40",
        A400: "#ff9100",
        A700: "#ff6d00"
      };
      var _default = orange2;
      exports.default = _default;
    }
  });

  // node_modules/@mui/material/node/colors/blue.js
  var require_blue = __commonJS({
    "node_modules/@mui/material/node/colors/blue.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var blue2 = {
        50: "#e3f2fd",
        100: "#bbdefb",
        200: "#90caf9",
        300: "#64b5f6",
        400: "#42a5f5",
        500: "#2196f3",
        600: "#1e88e5",
        700: "#1976d2",
        800: "#1565c0",
        900: "#0d47a1",
        A100: "#82b1ff",
        A200: "#448aff",
        A400: "#2979ff",
        A700: "#2962ff"
      };
      var _default = blue2;
      exports.default = _default;
    }
  });

  // node_modules/@mui/material/node/colors/lightBlue.js
  var require_lightBlue = __commonJS({
    "node_modules/@mui/material/node/colors/lightBlue.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var lightBlue2 = {
        50: "#e1f5fe",
        100: "#b3e5fc",
        200: "#81d4fa",
        300: "#4fc3f7",
        400: "#29b6f6",
        500: "#03a9f4",
        600: "#039be5",
        700: "#0288d1",
        800: "#0277bd",
        900: "#01579b",
        A100: "#80d8ff",
        A200: "#40c4ff",
        A400: "#00b0ff",
        A700: "#0091ea"
      };
      var _default = lightBlue2;
      exports.default = _default;
    }
  });

  // node_modules/@mui/material/node/colors/green.js
  var require_green = __commonJS({
    "node_modules/@mui/material/node/colors/green.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var green2 = {
        50: "#e8f5e9",
        100: "#c8e6c9",
        200: "#a5d6a7",
        300: "#81c784",
        400: "#66bb6a",
        500: "#4caf50",
        600: "#43a047",
        700: "#388e3c",
        800: "#2e7d32",
        900: "#1b5e20",
        A100: "#b9f6ca",
        A200: "#69f0ae",
        A400: "#00e676",
        A700: "#00c853"
      };
      var _default = green2;
      exports.default = _default;
    }
  });

  // node_modules/@mui/material/node/styles/createPalette.js
  var require_createPalette = __commonJS({
    "node_modules/@mui/material/node/styles/createPalette.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault6();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.dark = void 0;
      exports.default = createPalette2;
      exports.light = void 0;
      var _extends22 = _interopRequireDefault(require_extends7());
      var _objectWithoutPropertiesLoose22 = _interopRequireDefault(require_objectWithoutPropertiesLoose3());
      var _utils = require_utils();
      var _system = require_system();
      var _common = _interopRequireDefault(require_common());
      var _grey = _interopRequireDefault(require_grey());
      var _purple = _interopRequireDefault(require_purple());
      var _red = _interopRequireDefault(require_red());
      var _orange = _interopRequireDefault(require_orange());
      var _blue = _interopRequireDefault(require_blue());
      var _lightBlue = _interopRequireDefault(require_lightBlue());
      var _green = _interopRequireDefault(require_green());
      var _excluded21 = ["mode", "contrastThreshold", "tonalOffset"];
      var light2 = {
        text: {
          primary: "rgba(0, 0, 0, 0.87)",
          secondary: "rgba(0, 0, 0, 0.6)",
          disabled: "rgba(0, 0, 0, 0.38)"
        },
        divider: "rgba(0, 0, 0, 0.12)",
        background: {
          paper: _common.default.white,
          default: _common.default.white
        },
        action: {
          active: "rgba(0, 0, 0, 0.54)",
          hover: "rgba(0, 0, 0, 0.04)",
          hoverOpacity: 0.04,
          selected: "rgba(0, 0, 0, 0.08)",
          selectedOpacity: 0.08,
          disabled: "rgba(0, 0, 0, 0.26)",
          disabledBackground: "rgba(0, 0, 0, 0.12)",
          disabledOpacity: 0.38,
          focus: "rgba(0, 0, 0, 0.12)",
          focusOpacity: 0.12,
          activatedOpacity: 0.12
        }
      };
      exports.light = light2;
      var dark2 = {
        text: {
          primary: _common.default.white,
          secondary: "rgba(255, 255, 255, 0.7)",
          disabled: "rgba(255, 255, 255, 0.5)",
          icon: "rgba(255, 255, 255, 0.5)"
        },
        divider: "rgba(255, 255, 255, 0.12)",
        background: {
          paper: "#121212",
          default: "#121212"
        },
        action: {
          active: _common.default.white,
          hover: "rgba(255, 255, 255, 0.08)",
          hoverOpacity: 0.08,
          selected: "rgba(255, 255, 255, 0.16)",
          selectedOpacity: 0.16,
          disabled: "rgba(255, 255, 255, 0.3)",
          disabledBackground: "rgba(255, 255, 255, 0.12)",
          disabledOpacity: 0.38,
          focus: "rgba(255, 255, 255, 0.12)",
          focusOpacity: 0.12,
          activatedOpacity: 0.24
        }
      };
      exports.dark = dark2;
      function addLightOrDark2(intent, direction, shade, tonalOffset) {
        const tonalOffsetLight = tonalOffset.light || tonalOffset;
        const tonalOffsetDark = tonalOffset.dark || tonalOffset * 1.5;
        if (!intent[direction]) {
          if (intent.hasOwnProperty(shade)) {
            intent[direction] = intent[shade];
          } else if (direction === "light") {
            intent.light = (0, _system.lighten)(intent.main, tonalOffsetLight);
          } else if (direction === "dark") {
            intent.dark = (0, _system.darken)(intent.main, tonalOffsetDark);
          }
        }
      }
      function getDefaultPrimary2(mode = "light") {
        if (mode === "dark") {
          return {
            main: _blue.default[200],
            light: _blue.default[50],
            dark: _blue.default[400]
          };
        }
        return {
          main: _blue.default[700],
          light: _blue.default[400],
          dark: _blue.default[800]
        };
      }
      function getDefaultSecondary2(mode = "light") {
        if (mode === "dark") {
          return {
            main: _purple.default[200],
            light: _purple.default[50],
            dark: _purple.default[400]
          };
        }
        return {
          main: _purple.default[500],
          light: _purple.default[300],
          dark: _purple.default[700]
        };
      }
      function getDefaultError2(mode = "light") {
        if (mode === "dark") {
          return {
            main: _red.default[500],
            light: _red.default[300],
            dark: _red.default[700]
          };
        }
        return {
          main: _red.default[700],
          light: _red.default[400],
          dark: _red.default[800]
        };
      }
      function getDefaultInfo2(mode = "light") {
        if (mode === "dark") {
          return {
            main: _lightBlue.default[400],
            light: _lightBlue.default[300],
            dark: _lightBlue.default[700]
          };
        }
        return {
          main: _lightBlue.default[700],
          light: _lightBlue.default[500],
          dark: _lightBlue.default[900]
        };
      }
      function getDefaultSuccess2(mode = "light") {
        if (mode === "dark") {
          return {
            main: _green.default[400],
            light: _green.default[300],
            dark: _green.default[700]
          };
        }
        return {
          main: _green.default[800],
          light: _green.default[500],
          dark: _green.default[900]
        };
      }
      function getDefaultWarning2(mode = "light") {
        if (mode === "dark") {
          return {
            main: _orange.default[400],
            light: _orange.default[300],
            dark: _orange.default[700]
          };
        }
        return {
          main: "#ed6c02",
          light: _orange.default[500],
          dark: _orange.default[900]
        };
      }
      function createPalette2(palette) {
        const {
          mode = "light",
          contrastThreshold = 3,
          tonalOffset = 0.2
        } = palette, other = (0, _objectWithoutPropertiesLoose22.default)(palette, _excluded21);
        const primary = palette.primary || getDefaultPrimary2(mode);
        const secondary = palette.secondary || getDefaultSecondary2(mode);
        const error = palette.error || getDefaultError2(mode);
        const info = palette.info || getDefaultInfo2(mode);
        const success = palette.success || getDefaultSuccess2(mode);
        const warning2 = palette.warning || getDefaultWarning2(mode);
        function getContrastText(background) {
          const contrastText = (0, _system.getContrastRatio)(background, dark2.text.primary) >= contrastThreshold ? dark2.text.primary : light2.text.primary;
          if (true) {
            const contrast = (0, _system.getContrastRatio)(background, contrastText);
            if (contrast < 3) {
              console.error([`MUI: The contrast ratio of ${contrast}:1 for ${contrastText} on ${background}`, "falls below the WCAG recommended absolute minimum contrast ratio of 3:1.", "https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast"].join("\n"));
            }
          }
          return contrastText;
        }
        const augmentColor = ({
          color,
          name,
          mainShade = 500,
          lightShade = 300,
          darkShade = 700
        }) => {
          color = (0, _extends22.default)({}, color);
          if (!color.main && color[mainShade]) {
            color.main = color[mainShade];
          }
          if (!color.hasOwnProperty("main")) {
            throw new Error(true ? `MUI: The color${name ? ` (${name})` : ""} provided to augmentColor(color) is invalid.
The color object needs to have a \`main\` property or a \`${mainShade}\` property.` : (0, _utils.formatMuiErrorMessage)(11, name ? ` (${name})` : "", mainShade));
          }
          if (typeof color.main !== "string") {
            throw new Error(true ? `MUI: The color${name ? ` (${name})` : ""} provided to augmentColor(color) is invalid.
\`color.main\` should be a string, but \`${JSON.stringify(color.main)}\` was provided instead.

Did you intend to use one of the following approaches?

import { green } from "@mui/material/colors";

const theme1 = createTheme({ palette: {
  primary: green,
} });

const theme2 = createTheme({ palette: {
  primary: { main: green[500] },
} });` : (0, _utils.formatMuiErrorMessage)(12, name ? ` (${name})` : "", JSON.stringify(color.main)));
          }
          addLightOrDark2(color, "light", lightShade, tonalOffset);
          addLightOrDark2(color, "dark", darkShade, tonalOffset);
          if (!color.contrastText) {
            color.contrastText = getContrastText(color.main);
          }
          return color;
        };
        const modes = {
          dark: dark2,
          light: light2
        };
        if (true) {
          if (!modes[mode]) {
            console.error(`MUI: The palette mode \`${mode}\` is not supported.`);
          }
        }
        const paletteOutput = (0, _utils.deepmerge)((0, _extends22.default)({
          common: _common.default,
          mode,
          primary: augmentColor({
            color: primary,
            name: "primary"
          }),
          secondary: augmentColor({
            color: secondary,
            name: "secondary",
            mainShade: "A400",
            lightShade: "A200",
            darkShade: "A700"
          }),
          error: augmentColor({
            color: error,
            name: "error"
          }),
          warning: augmentColor({
            color: warning2,
            name: "warning"
          }),
          info: augmentColor({
            color: info,
            name: "info"
          }),
          success: augmentColor({
            color: success,
            name: "success"
          }),
          grey: _grey.default,
          contrastThreshold,
          getContrastText,
          augmentColor,
          tonalOffset
        }, modes[mode]), other);
        return paletteOutput;
      }
    }
  });

  // node_modules/@mui/material/node/styles/createTypography.js
  var require_createTypography = __commonJS({
    "node_modules/@mui/material/node/styles/createTypography.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault6();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = createTypography2;
      var _extends22 = _interopRequireDefault(require_extends7());
      var _objectWithoutPropertiesLoose22 = _interopRequireDefault(require_objectWithoutPropertiesLoose3());
      var _utils = require_utils();
      var _excluded21 = ["fontFamily", "fontSize", "fontWeightLight", "fontWeightRegular", "fontWeightMedium", "fontWeightBold", "htmlFontSize", "allVariants", "pxToRem"];
      function round2(value) {
        return Math.round(value * 1e5) / 1e5;
      }
      var caseAllCaps2 = {
        textTransform: "uppercase"
      };
      var defaultFontFamily2 = '"Roboto", "Helvetica", "Arial", sans-serif';
      function createTypography2(palette, typography) {
        const _ref = typeof typography === "function" ? typography(palette) : typography, {
          fontFamily = defaultFontFamily2,
          fontSize = 14,
          fontWeightLight = 300,
          fontWeightRegular = 400,
          fontWeightMedium = 500,
          fontWeightBold = 700,
          htmlFontSize = 16,
          allVariants,
          pxToRem: pxToRem2
        } = _ref, other = (0, _objectWithoutPropertiesLoose22.default)(_ref, _excluded21);
        if (true) {
          if (typeof fontSize !== "number") {
            console.error("MUI: `fontSize` is required to be a number.");
          }
          if (typeof htmlFontSize !== "number") {
            console.error("MUI: `htmlFontSize` is required to be a number.");
          }
        }
        const coef = fontSize / 14;
        const pxToRem = pxToRem2 || ((size) => `${size / htmlFontSize * coef}rem`);
        const buildVariant = (fontWeight, size, lineHeight, letterSpacing, casing) => (0, _extends22.default)({
          fontFamily,
          fontWeight,
          fontSize: pxToRem(size),
          lineHeight
        }, fontFamily === defaultFontFamily2 ? {
          letterSpacing: `${round2(letterSpacing / size)}em`
        } : {}, casing, allVariants);
        const variants = {
          h1: buildVariant(fontWeightLight, 96, 1.167, -1.5),
          h2: buildVariant(fontWeightLight, 60, 1.2, -0.5),
          h3: buildVariant(fontWeightRegular, 48, 1.167, 0),
          h4: buildVariant(fontWeightRegular, 34, 1.235, 0.25),
          h5: buildVariant(fontWeightRegular, 24, 1.334, 0),
          h6: buildVariant(fontWeightMedium, 20, 1.6, 0.15),
          subtitle1: buildVariant(fontWeightRegular, 16, 1.75, 0.15),
          subtitle2: buildVariant(fontWeightMedium, 14, 1.57, 0.1),
          body1: buildVariant(fontWeightRegular, 16, 1.5, 0.15),
          body2: buildVariant(fontWeightRegular, 14, 1.43, 0.15),
          button: buildVariant(fontWeightMedium, 14, 1.75, 0.4, caseAllCaps2),
          caption: buildVariant(fontWeightRegular, 12, 1.66, 0.4),
          overline: buildVariant(fontWeightRegular, 12, 2.66, 1, caseAllCaps2)
        };
        return (0, _utils.deepmerge)((0, _extends22.default)({
          htmlFontSize,
          pxToRem,
          fontFamily,
          fontSize,
          fontWeightLight,
          fontWeightRegular,
          fontWeightMedium,
          fontWeightBold
        }, variants), other, {
          clone: false
        });
      }
    }
  });

  // node_modules/@mui/material/node/styles/shadows.js
  var require_shadows2 = __commonJS({
    "node_modules/@mui/material/node/styles/shadows.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var shadowKeyUmbraOpacity2 = 0.2;
      var shadowKeyPenumbraOpacity2 = 0.14;
      var shadowAmbientShadowOpacity2 = 0.12;
      function createShadow2(...px) {
        return [`${px[0]}px ${px[1]}px ${px[2]}px ${px[3]}px rgba(0,0,0,${shadowKeyUmbraOpacity2})`, `${px[4]}px ${px[5]}px ${px[6]}px ${px[7]}px rgba(0,0,0,${shadowKeyPenumbraOpacity2})`, `${px[8]}px ${px[9]}px ${px[10]}px ${px[11]}px rgba(0,0,0,${shadowAmbientShadowOpacity2})`].join(",");
      }
      var shadows2 = ["none", createShadow2(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), createShadow2(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), createShadow2(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), createShadow2(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), createShadow2(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), createShadow2(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), createShadow2(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), createShadow2(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), createShadow2(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), createShadow2(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), createShadow2(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), createShadow2(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), createShadow2(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), createShadow2(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), createShadow2(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), createShadow2(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), createShadow2(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), createShadow2(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), createShadow2(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), createShadow2(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), createShadow2(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), createShadow2(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), createShadow2(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), createShadow2(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)];
      var _default = shadows2;
      exports.default = _default;
    }
  });

  // node_modules/@mui/material/node/styles/createTransitions.js
  var require_createTransitions = __commonJS({
    "node_modules/@mui/material/node/styles/createTransitions.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault6();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = createTransitions2;
      exports.easing = exports.duration = void 0;
      var _objectWithoutPropertiesLoose22 = _interopRequireDefault(require_objectWithoutPropertiesLoose3());
      var _extends22 = _interopRequireDefault(require_extends7());
      var _excluded21 = ["duration", "easing", "delay"];
      var easing2 = {
        easeInOut: "cubic-bezier(0.4, 0, 0.2, 1)",
        easeOut: "cubic-bezier(0.0, 0, 0.2, 1)",
        easeIn: "cubic-bezier(0.4, 0, 1, 1)",
        sharp: "cubic-bezier(0.4, 0, 0.6, 1)"
      };
      exports.easing = easing2;
      var duration2 = {
        shortest: 150,
        shorter: 200,
        short: 250,
        standard: 300,
        complex: 375,
        enteringScreen: 225,
        leavingScreen: 195
      };
      exports.duration = duration2;
      function formatMs2(milliseconds) {
        return `${Math.round(milliseconds)}ms`;
      }
      function getAutoHeightDuration2(height) {
        if (!height) {
          return 0;
        }
        const constant = height / 36;
        return Math.round((4 + 15 * constant ** 0.25 + constant / 5) * 10);
      }
      function createTransitions2(inputTransitions) {
        const mergedEasing = (0, _extends22.default)({}, easing2, inputTransitions.easing);
        const mergedDuration = (0, _extends22.default)({}, duration2, inputTransitions.duration);
        const create = (props = ["all"], options = {}) => {
          const {
            duration: durationOption = mergedDuration.standard,
            easing: easingOption = mergedEasing.easeInOut,
            delay = 0
          } = options, other = (0, _objectWithoutPropertiesLoose22.default)(options, _excluded21);
          if (true) {
            const isString = (value) => typeof value === "string";
            const isNumber = (value) => !isNaN(parseFloat(value));
            if (!isString(props) && !Array.isArray(props)) {
              console.error('MUI: Argument "props" must be a string or Array.');
            }
            if (!isNumber(durationOption) && !isString(durationOption)) {
              console.error(`MUI: Argument "duration" must be a number or a string but found ${durationOption}.`);
            }
            if (!isString(easingOption)) {
              console.error('MUI: Argument "easing" must be a string.');
            }
            if (!isNumber(delay) && !isString(delay)) {
              console.error('MUI: Argument "delay" must be a number or a string.');
            }
            if (Object.keys(other).length !== 0) {
              console.error(`MUI: Unrecognized argument(s) [${Object.keys(other).join(",")}].`);
            }
          }
          return (Array.isArray(props) ? props : [props]).map((animatedProp) => `${animatedProp} ${typeof durationOption === "string" ? durationOption : formatMs2(durationOption)} ${easingOption} ${typeof delay === "string" ? delay : formatMs2(delay)}`).join(",");
        };
        return (0, _extends22.default)({
          getAutoHeightDuration: getAutoHeightDuration2,
          create
        }, inputTransitions, {
          easing: mergedEasing,
          duration: mergedDuration
        });
      }
    }
  });

  // node_modules/@mui/material/node/styles/zIndex.js
  var require_zIndex = __commonJS({
    "node_modules/@mui/material/node/styles/zIndex.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var zIndex2 = {
        mobileStepper: 1e3,
        speedDial: 1050,
        appBar: 1100,
        drawer: 1200,
        modal: 1300,
        snackbar: 1400,
        tooltip: 1500
      };
      var _default = zIndex2;
      exports.default = _default;
    }
  });

  // node_modules/@mui/material/node/styles/createTheme.js
  var require_createTheme3 = __commonJS({
    "node_modules/@mui/material/node/styles/createTheme.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault6();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.createMuiTheme = createMuiTheme;
      exports.default = void 0;
      var _extends22 = _interopRequireDefault(require_extends7());
      var _objectWithoutPropertiesLoose22 = _interopRequireDefault(require_objectWithoutPropertiesLoose3());
      var _utils = require_utils();
      var _core = require_node3();
      var _system = require_system();
      var _createMixins = _interopRequireDefault(require_createMixins());
      var _createPalette = _interopRequireDefault(require_createPalette());
      var _createTypography = _interopRequireDefault(require_createTypography());
      var _shadows = _interopRequireDefault(require_shadows2());
      var _createTransitions = _interopRequireDefault(require_createTransitions());
      var _zIndex = _interopRequireDefault(require_zIndex());
      var _excluded21 = ["breakpoints", "mixins", "spacing", "palette", "transitions", "typography", "shape"];
      function createTheme2(options = {}, ...args) {
        const {
          mixins: mixinsInput = {},
          palette: paletteInput = {},
          transitions: transitionsInput = {},
          typography: typographyInput = {}
        } = options, other = (0, _objectWithoutPropertiesLoose22.default)(options, _excluded21);
        const palette = (0, _createPalette.default)(paletteInput);
        const systemTheme = (0, _system.createTheme)(options);
        let muiTheme = (0, _utils.deepmerge)(systemTheme, {
          mixins: (0, _createMixins.default)(systemTheme.breakpoints, systemTheme.spacing, mixinsInput),
          palette,
          shadows: _shadows.default.slice(),
          typography: (0, _createTypography.default)(palette, typographyInput),
          transitions: (0, _createTransitions.default)(transitionsInput),
          zIndex: (0, _extends22.default)({}, _zIndex.default)
        });
        muiTheme = (0, _utils.deepmerge)(muiTheme, other);
        muiTheme = args.reduce((acc, argument) => (0, _utils.deepmerge)(acc, argument), muiTheme);
        if (true) {
          const stateClasses = ["active", "checked", "completed", "disabled", "error", "expanded", "focused", "focusVisible", "required", "selected"];
          const traverse = (node, component) => {
            let key;
            for (key in node) {
              const child = node[key];
              if (stateClasses.indexOf(key) !== -1 && Object.keys(child).length > 0) {
                if (true) {
                  const stateClass = (0, _core.generateUtilityClass)("", key);
                  console.error([`MUI: The \`${component}\` component increases the CSS specificity of the \`${key}\` internal state.`, "You can not override it like this: ", JSON.stringify(node, null, 2), "", `Instead, you need to use the '&.${stateClass}' syntax:`, JSON.stringify({
                    root: {
                      [`&.${stateClass}`]: child
                    }
                  }, null, 2), "", "https://mui.com/r/state-classes-guide"].join("\n"));
                }
                node[key] = {};
              }
            }
          };
          Object.keys(muiTheme.components).forEach((component) => {
            const styleOverrides = muiTheme.components[component].styleOverrides;
            if (styleOverrides && component.indexOf("Mui") === 0) {
              traverse(styleOverrides, component);
            }
          });
        }
        return muiTheme;
      }
      var warnedOnce = false;
      function createMuiTheme(...args) {
        if (true) {
          if (!warnedOnce) {
            warnedOnce = true;
            console.error(["MUI: the createMuiTheme function was renamed to createTheme.", "", "You should use `import { createTheme } from '@mui/material/styles'`"].join("\n"));
          }
        }
        return createTheme2(...args);
      }
      var _default = createTheme2;
      exports.default = _default;
    }
  });

  // node_modules/@mui/material/node/styles/defaultTheme.js
  var require_defaultTheme = __commonJS({
    "node_modules/@mui/material/node/styles/defaultTheme.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault6();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _createTheme = _interopRequireDefault(require_createTheme3());
      var defaultTheme2 = (0, _createTheme.default)();
      var _default = defaultTheme2;
      exports.default = _default;
    }
  });

  // node_modules/@mui/material/node/styles/useThemeProps.js
  var require_useThemeProps3 = __commonJS({
    "node_modules/@mui/material/node/styles/useThemeProps.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault6();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = useThemeProps2;
      var _system = require_system();
      var _defaultTheme = _interopRequireDefault(require_defaultTheme());
      function useThemeProps2({
        props,
        name
      }) {
        return (0, _system.useThemeProps)({
          props,
          name,
          defaultTheme: _defaultTheme.default
        });
      }
    }
  });

  // node_modules/@mui/material/node/styles/styled.js
  var require_styled2 = __commonJS({
    "node_modules/@mui/material/node/styles/styled.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault6();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.slotShouldForwardProp = exports.rootShouldForwardProp = exports.default = void 0;
      var _system = require_system();
      var _defaultTheme = _interopRequireDefault(require_defaultTheme());
      var rootShouldForwardProp2 = (prop) => (0, _system.shouldForwardProp)(prop) && prop !== "classes";
      exports.rootShouldForwardProp = rootShouldForwardProp2;
      var slotShouldForwardProp = _system.shouldForwardProp;
      exports.slotShouldForwardProp = slotShouldForwardProp;
      var styled2 = (0, _system.createStyled)({
        defaultTheme: _defaultTheme.default,
        rootShouldForwardProp: rootShouldForwardProp2
      });
      var _default = styled2;
      exports.default = _default;
    }
  });

  // node_modules/@mui/material/node/SvgIcon/svgIconClasses.js
  var require_svgIconClasses = __commonJS({
    "node_modules/@mui/material/node/SvgIcon/svgIconClasses.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      exports.getSvgIconUtilityClass = getSvgIconUtilityClass;
      var _core = require_node3();
      function getSvgIconUtilityClass(slot) {
        return (0, _core.generateUtilityClass)("MuiSvgIcon", slot);
      }
      var svgIconClasses = (0, _core.generateUtilityClasses)("MuiSvgIcon", ["root", "colorPrimary", "colorSecondary", "colorAction", "colorError", "colorDisabled", "fontSizeInherit", "fontSizeSmall", "fontSizeMedium", "fontSizeLarge"]);
      var _default = svgIconClasses;
      exports.default = _default;
    }
  });

  // node_modules/@mui/material/node/SvgIcon/SvgIcon.js
  var require_SvgIcon = __commonJS({
    "node_modules/@mui/material/node/SvgIcon/SvgIcon.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault6();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _extends22 = _interopRequireDefault(require_extends7());
      var _objectWithoutPropertiesLoose22 = _interopRequireDefault(require_objectWithoutPropertiesLoose3());
      var React40 = _interopRequireWildcard(require_react());
      var _propTypes = _interopRequireDefault(require_prop_types());
      var _clsx = _interopRequireDefault(require_clsx());
      var _core = require_node3();
      var _capitalize = _interopRequireDefault(require_capitalize2());
      var _useThemeProps = _interopRequireDefault(require_useThemeProps3());
      var _styled = _interopRequireDefault(require_styled2());
      var _svgIconClasses = require_svgIconClasses();
      var _jsxRuntime = require_jsx_runtime();
      var _excluded21 = ["children", "className", "color", "component", "fontSize", "htmlColor", "titleAccess", "viewBox"];
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
      var useUtilityClasses12 = (ownerState) => {
        const {
          color,
          fontSize,
          classes
        } = ownerState;
        const slots = {
          root: ["root", color !== "inherit" && `color${(0, _capitalize.default)(color)}`, `fontSize${(0, _capitalize.default)(fontSize)}`]
        };
        return (0, _core.unstable_composeClasses)(slots, _svgIconClasses.getSvgIconUtilityClass, classes);
      };
      var SvgIconRoot = (0, _styled.default)("svg", {
        name: "MuiSvgIcon",
        slot: "Root",
        overridesResolver: (props, styles2) => {
          const {
            ownerState
          } = props;
          return [styles2.root, ownerState.color !== "inherit" && styles2[`color${(0, _capitalize.default)(ownerState.color)}`], styles2[`fontSize${(0, _capitalize.default)(ownerState.fontSize)}`]];
        }
      })(({
        theme,
        ownerState
      }) => {
        var _theme$palette$ownerS, _theme$palette$ownerS2;
        return {
          userSelect: "none",
          width: "1em",
          height: "1em",
          display: "inline-block",
          fill: "currentColor",
          flexShrink: 0,
          transition: theme.transitions.create("fill", {
            duration: theme.transitions.duration.shorter
          }),
          fontSize: {
            inherit: "inherit",
            small: theme.typography.pxToRem(20),
            medium: theme.typography.pxToRem(24),
            large: theme.typography.pxToRem(35)
          }[ownerState.fontSize],
          color: (_theme$palette$ownerS = (_theme$palette$ownerS2 = theme.palette[ownerState.color]) == null ? void 0 : _theme$palette$ownerS2.main) != null ? _theme$palette$ownerS : {
            action: theme.palette.action.active,
            disabled: theme.palette.action.disabled,
            inherit: void 0
          }[ownerState.color]
        };
      });
      var SvgIcon2 = /* @__PURE__ */ React40.forwardRef(function SvgIcon3(inProps, ref) {
        const props = (0, _useThemeProps.default)({
          props: inProps,
          name: "MuiSvgIcon"
        });
        const {
          children,
          className,
          color = "inherit",
          component = "svg",
          fontSize = "medium",
          htmlColor,
          titleAccess,
          viewBox = "0 0 24 24"
        } = props, other = (0, _objectWithoutPropertiesLoose22.default)(props, _excluded21);
        const ownerState = (0, _extends22.default)({}, props, {
          color,
          component,
          fontSize,
          viewBox
        });
        const classes = useUtilityClasses12(ownerState);
        return /* @__PURE__ */ (0, _jsxRuntime.jsxs)(SvgIconRoot, (0, _extends22.default)({
          as: component,
          className: (0, _clsx.default)(classes.root, className),
          ownerState,
          focusable: "false",
          viewBox,
          color: htmlColor,
          "aria-hidden": titleAccess ? void 0 : true,
          role: titleAccess ? "img" : void 0,
          ref
        }, other, {
          children: [children, titleAccess ? /* @__PURE__ */ (0, _jsxRuntime.jsx)("title", {
            children: titleAccess
          }) : null]
        }));
      });
      true ? SvgIcon2.propTypes = {
        children: _propTypes.default.node,
        classes: _propTypes.default.object,
        className: _propTypes.default.string,
        color: _propTypes.default.oneOfType([_propTypes.default.oneOf(["inherit", "action", "disabled", "primary", "secondary", "error", "info", "success", "warning"]), _propTypes.default.string]),
        component: _propTypes.default.elementType,
        fontSize: _propTypes.default.oneOfType([_propTypes.default.oneOf(["inherit", "large", "medium", "small"]), _propTypes.default.string]),
        htmlColor: _propTypes.default.string,
        shapeRendering: _propTypes.default.string,
        sx: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object])), _propTypes.default.func, _propTypes.default.object]),
        titleAccess: _propTypes.default.string,
        viewBox: _propTypes.default.string
      } : void 0;
      SvgIcon2.muiName = "SvgIcon";
      var _default = SvgIcon2;
      exports.default = _default;
    }
  });

  // node_modules/@mui/material/node/SvgIcon/index.js
  var require_SvgIcon2 = __commonJS({
    "node_modules/@mui/material/node/SvgIcon/index.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault6();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      var _exportNames = {
        svgIconClasses: true
      };
      Object.defineProperty(exports, "default", {
        enumerable: true,
        get: function() {
          return _SvgIcon.default;
        }
      });
      Object.defineProperty(exports, "svgIconClasses", {
        enumerable: true,
        get: function() {
          return _svgIconClasses.default;
        }
      });
      var _SvgIcon = _interopRequireDefault(require_SvgIcon());
      var _svgIconClasses = _interopRequireWildcard(require_svgIconClasses());
      Object.keys(_svgIconClasses).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (Object.prototype.hasOwnProperty.call(_exportNames, key))
          return;
        if (key in exports && exports[key] === _svgIconClasses[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _svgIconClasses[key];
          }
        });
      });
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
    }
  });

  // node_modules/@mui/icons-material/node_modules/@babel/runtime/helpers/interopRequireDefault.js
  var require_interopRequireDefault7 = __commonJS({
    "node_modules/@mui/icons-material/node_modules/@babel/runtime/helpers/interopRequireDefault.js"(exports, module) {
      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          "default": obj
        };
      }
      module.exports = _interopRequireDefault;
      module.exports["default"] = module.exports, module.exports.__esModule = true;
    }
  });

  // node_modules/@mui/material/node/utils/createChainedFunction.js
  var require_createChainedFunction2 = __commonJS({
    "node_modules/@mui/material/node/utils/createChainedFunction.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _utils = require_utils();
      var _default = _utils.unstable_createChainedFunction;
      exports.default = _default;
    }
  });

  // node_modules/@mui/material/node/utils/createSvgIcon.js
  var require_createSvgIcon = __commonJS({
    "node_modules/@mui/material/node/utils/createSvgIcon.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault6();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = createSvgIcon2;
      var _extends22 = _interopRequireDefault(require_extends7());
      var React40 = _interopRequireWildcard(require_react());
      var _SvgIcon = _interopRequireDefault(require_SvgIcon2());
      var _jsxRuntime = require_jsx_runtime();
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
        var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return { default: obj };
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
      function createSvgIcon2(path, displayName) {
        const Component = (props, ref) => /* @__PURE__ */ (0, _jsxRuntime.jsx)(_SvgIcon.default, (0, _extends22.default)({
          "data-testid": `${displayName}Icon`,
          ref
        }, props, {
          children: path
        }));
        if (true) {
          Component.displayName = `${displayName}Icon`;
        }
        Component.muiName = _SvgIcon.default.muiName;
        return /* @__PURE__ */ React40.memo(/* @__PURE__ */ React40.forwardRef(Component));
      }
    }
  });

  // node_modules/@mui/material/node/utils/debounce.js
  var require_debounce2 = __commonJS({
    "node_modules/@mui/material/node/utils/debounce.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _utils = require_utils();
      var _default = _utils.unstable_debounce;
      exports.default = _default;
    }
  });

  // node_modules/@mui/material/node/utils/deprecatedPropType.js
  var require_deprecatedPropType2 = __commonJS({
    "node_modules/@mui/material/node/utils/deprecatedPropType.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _utils = require_utils();
      var _default = _utils.unstable_deprecatedPropType;
      exports.default = _default;
    }
  });

  // node_modules/@mui/material/node/utils/isMuiElement.js
  var require_isMuiElement2 = __commonJS({
    "node_modules/@mui/material/node/utils/isMuiElement.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _utils = require_utils();
      var _default = _utils.unstable_isMuiElement;
      exports.default = _default;
    }
  });

  // node_modules/@mui/material/node/utils/ownerDocument.js
  var require_ownerDocument2 = __commonJS({
    "node_modules/@mui/material/node/utils/ownerDocument.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _utils = require_utils();
      var _default = _utils.unstable_ownerDocument;
      exports.default = _default;
    }
  });

  // node_modules/@mui/material/node/utils/ownerWindow.js
  var require_ownerWindow2 = __commonJS({
    "node_modules/@mui/material/node/utils/ownerWindow.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _utils = require_utils();
      var _default = _utils.unstable_ownerWindow;
      exports.default = _default;
    }
  });

  // node_modules/@mui/material/node/utils/requirePropFactory.js
  var require_requirePropFactory2 = __commonJS({
    "node_modules/@mui/material/node/utils/requirePropFactory.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _utils = require_utils();
      var _default = _utils.unstable_requirePropFactory;
      exports.default = _default;
    }
  });

  // node_modules/@mui/material/node/utils/setRef.js
  var require_setRef2 = __commonJS({
    "node_modules/@mui/material/node/utils/setRef.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _utils = require_utils();
      var _default = _utils.unstable_setRef;
      exports.default = _default;
    }
  });

  // node_modules/@mui/material/node/utils/useEnhancedEffect.js
  var require_useEnhancedEffect2 = __commonJS({
    "node_modules/@mui/material/node/utils/useEnhancedEffect.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _utils = require_utils();
      var _default = _utils.unstable_useEnhancedEffect;
      exports.default = _default;
    }
  });

  // node_modules/@mui/material/node/utils/useId.js
  var require_useId2 = __commonJS({
    "node_modules/@mui/material/node/utils/useId.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _utils = require_utils();
      var _default = _utils.unstable_useId;
      exports.default = _default;
    }
  });

  // node_modules/@mui/material/node/utils/unsupportedProp.js
  var require_unsupportedProp2 = __commonJS({
    "node_modules/@mui/material/node/utils/unsupportedProp.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _utils = require_utils();
      var _default = _utils.unstable_unsupportedProp;
      exports.default = _default;
    }
  });

  // node_modules/@mui/material/node/utils/useControlled.js
  var require_useControlled2 = __commonJS({
    "node_modules/@mui/material/node/utils/useControlled.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _utils = require_utils();
      var _default = _utils.unstable_useControlled;
      exports.default = _default;
    }
  });

  // node_modules/@mui/material/node/utils/useEventCallback.js
  var require_useEventCallback2 = __commonJS({
    "node_modules/@mui/material/node/utils/useEventCallback.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _utils = require_utils();
      var _default = _utils.unstable_useEventCallback;
      exports.default = _default;
    }
  });

  // node_modules/@mui/material/node/utils/useForkRef.js
  var require_useForkRef2 = __commonJS({
    "node_modules/@mui/material/node/utils/useForkRef.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _utils = require_utils();
      var _default = _utils.unstable_useForkRef;
      exports.default = _default;
    }
  });

  // node_modules/@mui/material/node/utils/useIsFocusVisible.js
  var require_useIsFocusVisible2 = __commonJS({
    "node_modules/@mui/material/node/utils/useIsFocusVisible.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _utils = require_utils();
      var _default = _utils.unstable_useIsFocusVisible;
      exports.default = _default;
    }
  });

  // node_modules/@mui/material/node/utils/index.js
  var require_utils3 = __commonJS({
    "node_modules/@mui/material/node/utils/index.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault6();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      Object.defineProperty(exports, "capitalize", {
        enumerable: true,
        get: function() {
          return _capitalize.default;
        }
      });
      Object.defineProperty(exports, "createChainedFunction", {
        enumerable: true,
        get: function() {
          return _createChainedFunction.default;
        }
      });
      Object.defineProperty(exports, "createSvgIcon", {
        enumerable: true,
        get: function() {
          return _createSvgIcon.default;
        }
      });
      Object.defineProperty(exports, "debounce", {
        enumerable: true,
        get: function() {
          return _debounce.default;
        }
      });
      Object.defineProperty(exports, "deprecatedPropType", {
        enumerable: true,
        get: function() {
          return _deprecatedPropType.default;
        }
      });
      Object.defineProperty(exports, "isMuiElement", {
        enumerable: true,
        get: function() {
          return _isMuiElement.default;
        }
      });
      Object.defineProperty(exports, "ownerDocument", {
        enumerable: true,
        get: function() {
          return _ownerDocument.default;
        }
      });
      Object.defineProperty(exports, "ownerWindow", {
        enumerable: true,
        get: function() {
          return _ownerWindow.default;
        }
      });
      Object.defineProperty(exports, "requirePropFactory", {
        enumerable: true,
        get: function() {
          return _requirePropFactory.default;
        }
      });
      Object.defineProperty(exports, "setRef", {
        enumerable: true,
        get: function() {
          return _setRef.default;
        }
      });
      Object.defineProperty(exports, "unstable_ClassNameGenerator", {
        enumerable: true,
        get: function() {
          return _core.unstable_ClassNameGenerator;
        }
      });
      Object.defineProperty(exports, "unstable_useEnhancedEffect", {
        enumerable: true,
        get: function() {
          return _useEnhancedEffect.default;
        }
      });
      Object.defineProperty(exports, "unstable_useId", {
        enumerable: true,
        get: function() {
          return _useId.default;
        }
      });
      Object.defineProperty(exports, "unsupportedProp", {
        enumerable: true,
        get: function() {
          return _unsupportedProp.default;
        }
      });
      Object.defineProperty(exports, "useControlled", {
        enumerable: true,
        get: function() {
          return _useControlled.default;
        }
      });
      Object.defineProperty(exports, "useEventCallback", {
        enumerable: true,
        get: function() {
          return _useEventCallback.default;
        }
      });
      Object.defineProperty(exports, "useForkRef", {
        enumerable: true,
        get: function() {
          return _useForkRef.default;
        }
      });
      Object.defineProperty(exports, "useIsFocusVisible", {
        enumerable: true,
        get: function() {
          return _useIsFocusVisible.default;
        }
      });
      var _capitalize = _interopRequireDefault(require_capitalize2());
      var _createChainedFunction = _interopRequireDefault(require_createChainedFunction2());
      var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
      var _debounce = _interopRequireDefault(require_debounce2());
      var _deprecatedPropType = _interopRequireDefault(require_deprecatedPropType2());
      var _isMuiElement = _interopRequireDefault(require_isMuiElement2());
      var _ownerDocument = _interopRequireDefault(require_ownerDocument2());
      var _ownerWindow = _interopRequireDefault(require_ownerWindow2());
      var _requirePropFactory = _interopRequireDefault(require_requirePropFactory2());
      var _setRef = _interopRequireDefault(require_setRef2());
      var _useEnhancedEffect = _interopRequireDefault(require_useEnhancedEffect2());
      var _useId = _interopRequireDefault(require_useId2());
      var _unsupportedProp = _interopRequireDefault(require_unsupportedProp2());
      var _useControlled = _interopRequireDefault(require_useControlled2());
      var _useEventCallback = _interopRequireDefault(require_useEventCallback2());
      var _useForkRef = _interopRequireDefault(require_useForkRef2());
      var _useIsFocusVisible = _interopRequireDefault(require_useIsFocusVisible2());
      var _core = require_node3();
    }
  });

  // node_modules/@mui/icons-material/utils/createSvgIcon.js
  var require_createSvgIcon2 = __commonJS({
    "node_modules/@mui/icons-material/utils/createSvgIcon.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      Object.defineProperty(exports, "default", {
        enumerable: true,
        get: function() {
          return _utils.createSvgIcon;
        }
      });
      var _utils = require_utils3();
    }
  });

  // node_modules/@mui/icons-material/FavoriteBorder.js
  var require_FavoriteBorder = __commonJS({
    "node_modules/@mui/icons-material/FavoriteBorder.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault7();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _createSvgIcon = _interopRequireDefault(require_createSvgIcon2());
      var _jsxRuntime = require_jsx_runtime();
      var _default = (0, _createSvgIcon.default)(/* @__PURE__ */ (0, _jsxRuntime.jsx)("path", {
        d: "M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z"
      }), "FavoriteBorder");
      exports.default = _default;
    }
  });

  // node_modules/@mui/icons-material/ChatBubbleOutline.js
  var require_ChatBubbleOutline = __commonJS({
    "node_modules/@mui/icons-material/ChatBubbleOutline.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault7();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _createSvgIcon = _interopRequireDefault(require_createSvgIcon2());
      var _jsxRuntime = require_jsx_runtime();
      var _default = (0, _createSvgIcon.default)(/* @__PURE__ */ (0, _jsxRuntime.jsx)("path", {
        d: "M20 2H4c-1.1 0-2 .9-2 2v18l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm0 14H6l-2 2V4h16v12z"
      }), "ChatBubbleOutline");
      exports.default = _default;
    }
  });

  // node_modules/@mui/icons-material/PlayArrow.js
  var require_PlayArrow = __commonJS({
    "node_modules/@mui/icons-material/PlayArrow.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault7();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _createSvgIcon = _interopRequireDefault(require_createSvgIcon2());
      var _jsxRuntime = require_jsx_runtime();
      var _default = (0, _createSvgIcon.default)(/* @__PURE__ */ (0, _jsxRuntime.jsx)("path", {
        d: "M8 5v14l11-7z"
      }), "PlayArrow");
      exports.default = _default;
    }
  });

  // node_modules/@mui/icons-material/ArrowBackIos.js
  var require_ArrowBackIos = __commonJS({
    "node_modules/@mui/icons-material/ArrowBackIos.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault7();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _createSvgIcon = _interopRequireDefault(require_createSvgIcon2());
      var _jsxRuntime = require_jsx_runtime();
      var _default = (0, _createSvgIcon.default)(/* @__PURE__ */ (0, _jsxRuntime.jsx)("path", {
        d: "M11.67 3.87 9.9 2.1 0 12l9.9 9.9 1.77-1.77L3.54 12z"
      }), "ArrowBackIos");
      exports.default = _default;
    }
  });

  // node_modules/@mui/icons-material/ArrowForwardIos.js
  var require_ArrowForwardIos = __commonJS({
    "node_modules/@mui/icons-material/ArrowForwardIos.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault7();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _createSvgIcon = _interopRequireDefault(require_createSvgIcon2());
      var _jsxRuntime = require_jsx_runtime();
      var _default = (0, _createSvgIcon.default)(/* @__PURE__ */ (0, _jsxRuntime.jsx)("path", {
        d: "M6.23 20.23 8 22l10-10L8 2 6.23 3.77 14.46 12z"
      }), "ArrowForwardIos");
      exports.default = _default;
    }
  });

  // src/index.jsx
  var import_react16 = __toESM(require_react());
  var import_react_dom2 = __toESM(require_react_dom());

  // src/components/App/index.jsx
  var import_react15 = __toESM(require_react());

  // node_modules/react-router-dom/index.js
  var import_react2 = __toESM(require_react());

  // node_modules/@babel/runtime/helpers/esm/extends.js
  function _extends() {
    _extends = Object.assign || function(target) {
      for (var i2 = 1; i2 < arguments.length; i2++) {
        var source = arguments[i2];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    return _extends.apply(this, arguments);
  }

  // node_modules/history/index.js
  var r;
  var B = r || (r = {});
  B.Pop = "POP";
  B.Push = "PUSH";
  B.Replace = "REPLACE";
  var C = true ? function(b2) {
    return Object.freeze(b2);
  } : function(b2) {
    return b2;
  };
  function D(b2, h2) {
    if (!b2) {
      typeof console !== "undefined" && console.warn(h2);
      try {
        throw Error(h2);
      } catch (k2) {
      }
    }
  }
  function E(b2) {
    b2.preventDefault();
    b2.returnValue = "";
  }
  function F() {
    var b2 = [];
    return { get length() {
      return b2.length;
    }, push: function(h2) {
      b2.push(h2);
      return function() {
        b2 = b2.filter(function(k2) {
          return k2 !== h2;
        });
      };
    }, call: function(h2) {
      b2.forEach(function(k2) {
        return k2 && k2(h2);
      });
    } };
  }
  function H() {
    return Math.random().toString(36).substr(2, 8);
  }
  function I(b2) {
    var h2 = b2.pathname, k2 = b2.search;
    b2 = b2.hash;
    return (h2 === void 0 ? "/" : h2) + (k2 === void 0 ? "" : k2) + (b2 === void 0 ? "" : b2);
  }
  function J(b2) {
    var h2 = {};
    if (b2) {
      var k2 = b2.indexOf("#");
      0 <= k2 && (h2.hash = b2.substr(k2), b2 = b2.substr(0, k2));
      k2 = b2.indexOf("?");
      0 <= k2 && (h2.search = b2.substr(k2), b2 = b2.substr(0, k2));
      b2 && (h2.pathname = b2);
    }
    return h2;
  }
  function createHashHistory(b2) {
    function h2() {
      var a2 = J(m.location.hash.substr(1)), e2 = a2.pathname, l2 = a2.search;
      a2 = a2.hash;
      var g2 = u2.state || {};
      return [g2.idx, C({ pathname: e2 === void 0 ? "/" : e2, search: l2 === void 0 ? "" : l2, hash: a2 === void 0 ? "" : a2, state: g2.usr || null, key: g2.key || "default" })];
    }
    function k2() {
      if (t2)
        c2.call(t2), t2 = null;
      else {
        var a2 = r.Pop, e2 = h2(), l2 = e2[0];
        e2 = e2[1];
        if (c2.length)
          if (l2 != null) {
            var g2 = q2 - l2;
            g2 && (t2 = { action: a2, location: e2, retry: function() {
              p(-1 * g2);
            } }, p(g2));
          } else
            true ? D(false, "You are trying to block a POP navigation to a location that was not created by the history library. The block will fail silently in production, but in general you should do all navigation with the history library (instead of using window.history.pushState directly) to avoid this situation.") : void 0;
        else
          A2(a2);
      }
    }
    function x2(a2) {
      var e2 = document.querySelector("base"), l2 = "";
      e2 && e2.getAttribute("href") && (e2 = m.location.href, l2 = e2.indexOf("#"), l2 = l2 === -1 ? e2 : e2.slice(0, l2));
      return l2 + "#" + (typeof a2 === "string" ? a2 : I(a2));
    }
    function z2(a2, e2) {
      e2 === void 0 && (e2 = null);
      return C(_extends({ pathname: d2.pathname, hash: "", search: "" }, typeof a2 === "string" ? J(a2) : a2, { state: e2, key: H() }));
    }
    function A2(a2) {
      v2 = a2;
      a2 = h2();
      q2 = a2[0];
      d2 = a2[1];
      f2.call({ action: v2, location: d2 });
    }
    function y2(a2, e2) {
      function l2() {
        y2(a2, e2);
      }
      var g2 = r.Push, n2 = z2(a2, e2);
      true ? D(n2.pathname.charAt(0) === "/", "Relative pathnames are not supported in hash history.push(" + JSON.stringify(a2) + ")") : void 0;
      if (!c2.length || (c2.call({ action: g2, location: n2, retry: l2 }), false)) {
        var G2 = [{ usr: n2.state, key: n2.key, idx: q2 + 1 }, x2(n2)];
        n2 = G2[0];
        G2 = G2[1];
        try {
          u2.pushState(n2, "", G2);
        } catch (K2) {
          m.location.assign(G2);
        }
        A2(g2);
      }
    }
    function w2(a2, e2) {
      function l2() {
        w2(a2, e2);
      }
      var g2 = r.Replace, n2 = z2(a2, e2);
      true ? D(n2.pathname.charAt(0) === "/", "Relative pathnames are not supported in hash history.replace(" + JSON.stringify(a2) + ")") : void 0;
      c2.length && (c2.call({ action: g2, location: n2, retry: l2 }), 1) || (n2 = [{ usr: n2.state, key: n2.key, idx: q2 }, x2(n2)], u2.replaceState(n2[0], "", n2[1]), A2(g2));
    }
    function p(a2) {
      u2.go(a2);
    }
    b2 === void 0 && (b2 = {});
    b2 = b2.window;
    var m = b2 === void 0 ? document.defaultView : b2, u2 = m.history, t2 = null;
    m.addEventListener("popstate", k2);
    m.addEventListener("hashchange", function() {
      var a2 = h2()[1];
      I(a2) !== I(d2) && k2();
    });
    var v2 = r.Pop;
    b2 = h2();
    var q2 = b2[0], d2 = b2[1], f2 = F(), c2 = F();
    q2 == null && (q2 = 0, u2.replaceState(_extends({}, u2.state, { idx: q2 }), ""));
    return {
      get action() {
        return v2;
      },
      get location() {
        return d2;
      },
      createHref: x2,
      push: y2,
      replace: w2,
      go: p,
      back: function() {
        p(-1);
      },
      forward: function() {
        p(1);
      },
      listen: function(a2) {
        return f2.push(a2);
      },
      block: function(a2) {
        var e2 = c2.push(a2);
        c2.length === 1 && m.addEventListener("beforeunload", E);
        return function() {
          e2();
          c2.length || m.removeEventListener("beforeunload", E);
        };
      }
    };
  }

  // node_modules/react-router/index.js
  var import_react = __toESM(require_react());
  function invariant(cond, message) {
    if (!cond)
      throw new Error(message);
  }
  function warning(cond, message) {
    if (!cond) {
      if (typeof console !== "undefined")
        console.warn(message);
      try {
        throw new Error(message);
      } catch (e2) {
      }
    }
  }
  var alreadyWarned = {};
  function warningOnce(key, cond, message) {
    if (!cond && !alreadyWarned[key]) {
      alreadyWarned[key] = true;
      true ? warning(false, message) : void 0;
    }
  }
  var NavigationContext = /* @__PURE__ */ (0, import_react.createContext)(null);
  if (true) {
    NavigationContext.displayName = "Navigation";
  }
  var LocationContext = /* @__PURE__ */ (0, import_react.createContext)(null);
  if (true) {
    LocationContext.displayName = "Location";
  }
  var RouteContext = /* @__PURE__ */ (0, import_react.createContext)({
    outlet: null,
    matches: []
  });
  if (true) {
    RouteContext.displayName = "Route";
  }
  function Navigate(_ref2) {
    let {
      to,
      replace,
      state
    } = _ref2;
    !useInRouterContext() ? true ? invariant(false, "<Navigate> may be used only in the context of a <Router> component.") : invariant(false) : void 0;
    true ? warning(!(0, import_react.useContext)(NavigationContext).static, "<Navigate> must not be used on the initial render in a <StaticRouter>. This is a no-op, but you should modify your code so the <Navigate> is only ever rendered in response to some user interaction or state change.") : void 0;
    let navigate = useNavigate();
    (0, import_react.useEffect)(() => {
      navigate(to, {
        replace,
        state
      });
    });
    return null;
  }
  function Outlet(_props) {
    return useOutlet();
  }
  function Route(_props) {
    true ? invariant(false, "A <Route> is only ever to be used as the child of <Routes> element, never rendered directly. Please wrap your <Route> in a <Routes>.") : invariant(false);
  }
  function Router(_ref3) {
    let {
      basename: basenameProp = "/",
      children = null,
      location: locationProp,
      navigationType = r.Pop,
      navigator: navigator2,
      static: staticProp = false
    } = _ref3;
    !!useInRouterContext() ? true ? invariant(false, "You cannot render a <Router> inside another <Router>. You should never have more than one in your app.") : invariant(false) : void 0;
    let basename = normalizePathname(basenameProp);
    let navigationContext = (0, import_react.useMemo)(() => ({
      basename,
      navigator: navigator2,
      static: staticProp
    }), [basename, navigator2, staticProp]);
    if (typeof locationProp === "string") {
      locationProp = J(locationProp);
    }
    let {
      pathname = "/",
      search = "",
      hash = "",
      state = null,
      key = "default"
    } = locationProp;
    let location = (0, import_react.useMemo)(() => {
      let trailingPathname = stripBasename(pathname, basename);
      if (trailingPathname == null) {
        return null;
      }
      return {
        pathname: trailingPathname,
        search,
        hash,
        state,
        key
      };
    }, [basename, pathname, search, hash, state, key]);
    true ? warning(location != null, '<Router basename="' + basename + '"> is not able to match the URL ' + ('"' + pathname + search + hash + '" because it does not start with the ') + "basename, so the <Router> won't render anything.") : void 0;
    if (location == null) {
      return null;
    }
    return /* @__PURE__ */ (0, import_react.createElement)(NavigationContext.Provider, {
      value: navigationContext
    }, /* @__PURE__ */ (0, import_react.createElement)(LocationContext.Provider, {
      children,
      value: {
        location,
        navigationType
      }
    }));
  }
  function Routes(_ref4) {
    let {
      children,
      location
    } = _ref4;
    return useRoutes(createRoutesFromChildren(children), location);
  }
  function useHref(to) {
    !useInRouterContext() ? true ? invariant(false, "useHref() may be used only in the context of a <Router> component.") : invariant(false) : void 0;
    let {
      basename,
      navigator: navigator2
    } = (0, import_react.useContext)(NavigationContext);
    let {
      hash,
      pathname,
      search
    } = useResolvedPath(to);
    let joinedPathname = pathname;
    if (basename !== "/") {
      let toPathname = getToPathname(to);
      let endsWithSlash = toPathname != null && toPathname.endsWith("/");
      joinedPathname = pathname === "/" ? basename + (endsWithSlash ? "/" : "") : joinPaths([basename, pathname]);
    }
    return navigator2.createHref({
      pathname: joinedPathname,
      search,
      hash
    });
  }
  function useInRouterContext() {
    return (0, import_react.useContext)(LocationContext) != null;
  }
  function useLocation() {
    !useInRouterContext() ? true ? invariant(false, "useLocation() may be used only in the context of a <Router> component.") : invariant(false) : void 0;
    return (0, import_react.useContext)(LocationContext).location;
  }
  function useNavigate() {
    !useInRouterContext() ? true ? invariant(false, "useNavigate() may be used only in the context of a <Router> component.") : invariant(false) : void 0;
    let {
      basename,
      navigator: navigator2
    } = (0, import_react.useContext)(NavigationContext);
    let {
      matches
    } = (0, import_react.useContext)(RouteContext);
    let {
      pathname: locationPathname
    } = useLocation();
    let routePathnamesJson = JSON.stringify(matches.map((match) => match.pathnameBase));
    let activeRef = (0, import_react.useRef)(false);
    (0, import_react.useEffect)(() => {
      activeRef.current = true;
    });
    let navigate = (0, import_react.useCallback)(function(to, options) {
      if (options === void 0) {
        options = {};
      }
      true ? warning(activeRef.current, "You should call navigate() in a React.useEffect(), not when your component is first rendered.") : void 0;
      if (!activeRef.current)
        return;
      if (typeof to === "number") {
        navigator2.go(to);
        return;
      }
      let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname);
      if (basename !== "/") {
        path.pathname = joinPaths([basename, path.pathname]);
      }
      (!!options.replace ? navigator2.replace : navigator2.push)(path, options.state);
    }, [basename, navigator2, routePathnamesJson, locationPathname]);
    return navigate;
  }
  function useOutlet() {
    return (0, import_react.useContext)(RouteContext).outlet;
  }
  function useParams() {
    let {
      matches
    } = (0, import_react.useContext)(RouteContext);
    let routeMatch = matches[matches.length - 1];
    return routeMatch ? routeMatch.params : {};
  }
  function useResolvedPath(to) {
    let {
      matches
    } = (0, import_react.useContext)(RouteContext);
    let {
      pathname: locationPathname
    } = useLocation();
    let routePathnamesJson = JSON.stringify(matches.map((match) => match.pathnameBase));
    return (0, import_react.useMemo)(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname), [to, routePathnamesJson, locationPathname]);
  }
  function useRoutes(routes, locationArg) {
    !useInRouterContext() ? true ? invariant(false, "useRoutes() may be used only in the context of a <Router> component.") : invariant(false) : void 0;
    let {
      matches: parentMatches
    } = (0, import_react.useContext)(RouteContext);
    let routeMatch = parentMatches[parentMatches.length - 1];
    let parentParams = routeMatch ? routeMatch.params : {};
    let parentPathname = routeMatch ? routeMatch.pathname : "/";
    let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : "/";
    let parentRoute = routeMatch && routeMatch.route;
    if (true) {
      let parentPath = parentRoute && parentRoute.path || "";
      warningOnce(parentPathname, !parentRoute || parentPath.endsWith("*"), "You rendered descendant <Routes> (or called `useRoutes()`) at " + ('"' + parentPathname + '" (under <Route path="' + parentPath + '">) but the ') + `parent route path has no trailing "*". This means if you navigate deeper, the parent won't match anymore and therefore the child routes will never render.

` + ('Please change the parent <Route path="' + parentPath + '"> to <Route ') + ('path="' + parentPath + '/*">.'));
    }
    let locationFromContext = useLocation();
    let location;
    if (locationArg) {
      var _parsedLocationArg$pa;
      let parsedLocationArg = typeof locationArg === "string" ? J(locationArg) : locationArg;
      !(parentPathnameBase === "/" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? true ? invariant(false, "When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, the location pathname must begin with the portion of the URL pathname that was " + ('matched by all parent routes. The current pathname base is "' + parentPathnameBase + '" ') + ('but pathname "' + parsedLocationArg.pathname + '" was given in the `location` prop.')) : invariant(false) : void 0;
      location = parsedLocationArg;
    } else {
      location = locationFromContext;
    }
    let pathname = location.pathname || "/";
    let remainingPathname = parentPathnameBase === "/" ? pathname : pathname.slice(parentPathnameBase.length) || "/";
    let matches = matchRoutes(routes, {
      pathname: remainingPathname
    });
    if (true) {
      true ? warning(parentRoute || matches != null, 'No routes matched location "' + location.pathname + location.search + location.hash + '" ') : void 0;
      true ? warning(matches == null || matches[matches.length - 1].route.element !== void 0, 'Matched leaf route at location "' + location.pathname + location.search + location.hash + '" does not have an element. This means it will render an <Outlet /> with a null value by default resulting in an "empty" page.') : void 0;
    }
    return _renderMatches(matches && matches.map((match) => Object.assign({}, match, {
      params: Object.assign({}, parentParams, match.params),
      pathname: joinPaths([parentPathnameBase, match.pathname]),
      pathnameBase: match.pathnameBase === "/" ? parentPathnameBase : joinPaths([parentPathnameBase, match.pathnameBase])
    })), parentMatches);
  }
  function createRoutesFromChildren(children) {
    let routes = [];
    import_react.Children.forEach(children, (element) => {
      if (!/* @__PURE__ */ (0, import_react.isValidElement)(element)) {
        return;
      }
      if (element.type === import_react.Fragment) {
        routes.push.apply(routes, createRoutesFromChildren(element.props.children));
        return;
      }
      !(element.type === Route) ? true ? invariant(false, "[" + (typeof element.type === "string" ? element.type : element.type.name) + "] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>") : invariant(false) : void 0;
      let route = {
        caseSensitive: element.props.caseSensitive,
        element: element.props.element,
        index: element.props.index,
        path: element.props.path
      };
      if (element.props.children) {
        route.children = createRoutesFromChildren(element.props.children);
      }
      routes.push(route);
    });
    return routes;
  }
  function matchRoutes(routes, locationArg, basename) {
    if (basename === void 0) {
      basename = "/";
    }
    let location = typeof locationArg === "string" ? J(locationArg) : locationArg;
    let pathname = stripBasename(location.pathname || "/", basename);
    if (pathname == null) {
      return null;
    }
    let branches = flattenRoutes(routes);
    rankRouteBranches(branches);
    let matches = null;
    for (let i2 = 0; matches == null && i2 < branches.length; ++i2) {
      matches = matchRouteBranch(branches[i2], routes, pathname);
    }
    return matches;
  }
  function flattenRoutes(routes, branches, parentsMeta, parentPath) {
    if (branches === void 0) {
      branches = [];
    }
    if (parentsMeta === void 0) {
      parentsMeta = [];
    }
    if (parentPath === void 0) {
      parentPath = "";
    }
    routes.forEach((route, index2) => {
      let meta = {
        relativePath: route.path || "",
        caseSensitive: route.caseSensitive === true,
        childrenIndex: index2
      };
      if (meta.relativePath.startsWith("/")) {
        !meta.relativePath.startsWith(parentPath) ? true ? invariant(false, 'Absolute route path "' + meta.relativePath + '" nested under path ' + ('"' + parentPath + '" is not valid. An absolute child route path ') + "must start with the combined path of all its parent routes.") : invariant(false) : void 0;
        meta.relativePath = meta.relativePath.slice(parentPath.length);
      }
      let path = joinPaths([parentPath, meta.relativePath]);
      let routesMeta = parentsMeta.concat(meta);
      if (route.children && route.children.length > 0) {
        !(route.index !== true) ? true ? invariant(false, "Index routes must not have child routes. Please remove " + ('all child routes from route path "' + path + '".')) : invariant(false) : void 0;
        flattenRoutes(route.children, branches, routesMeta, path);
      }
      if (route.path == null && !route.index) {
        return;
      }
      branches.push({
        path,
        score: computeScore(path, route.index),
        routesMeta
      });
    });
    return branches;
  }
  function rankRouteBranches(branches) {
    branches.sort((a2, b2) => a2.score !== b2.score ? b2.score - a2.score : compareIndexes(a2.routesMeta.map((meta) => meta.childrenIndex), b2.routesMeta.map((meta) => meta.childrenIndex)));
  }
  var paramRe = /^:\w+$/;
  var dynamicSegmentValue = 3;
  var indexRouteValue = 2;
  var emptySegmentValue = 1;
  var staticSegmentValue = 10;
  var splatPenalty = -2;
  var isSplat = (s2) => s2 === "*";
  function computeScore(path, index2) {
    let segments = path.split("/");
    let initialScore = segments.length;
    if (segments.some(isSplat)) {
      initialScore += splatPenalty;
    }
    if (index2) {
      initialScore += indexRouteValue;
    }
    return segments.filter((s2) => !isSplat(s2)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === "" ? emptySegmentValue : staticSegmentValue), initialScore);
  }
  function compareIndexes(a2, b2) {
    let siblings = a2.length === b2.length && a2.slice(0, -1).every((n2, i2) => n2 === b2[i2]);
    return siblings ? a2[a2.length - 1] - b2[b2.length - 1] : 0;
  }
  function matchRouteBranch(branch, routesArg, pathname) {
    let routes = routesArg;
    let {
      routesMeta
    } = branch;
    let matchedParams = {};
    let matchedPathname = "/";
    let matches = [];
    for (let i2 = 0; i2 < routesMeta.length; ++i2) {
      let meta = routesMeta[i2];
      let end = i2 === routesMeta.length - 1;
      let remainingPathname = matchedPathname === "/" ? pathname : pathname.slice(matchedPathname.length) || "/";
      let match = matchPath({
        path: meta.relativePath,
        caseSensitive: meta.caseSensitive,
        end
      }, remainingPathname);
      if (!match)
        return null;
      Object.assign(matchedParams, match.params);
      let route = routes[meta.childrenIndex];
      matches.push({
        params: matchedParams,
        pathname: joinPaths([matchedPathname, match.pathname]),
        pathnameBase: joinPaths([matchedPathname, match.pathnameBase]),
        route
      });
      if (match.pathnameBase !== "/") {
        matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);
      }
      routes = route.children;
    }
    return matches;
  }
  function _renderMatches(matches, parentMatches) {
    if (parentMatches === void 0) {
      parentMatches = [];
    }
    if (matches == null)
      return null;
    return matches.reduceRight((outlet, match, index2) => {
      return /* @__PURE__ */ (0, import_react.createElement)(RouteContext.Provider, {
        children: match.route.element !== void 0 ? match.route.element : /* @__PURE__ */ (0, import_react.createElement)(Outlet, null),
        value: {
          outlet,
          matches: parentMatches.concat(matches.slice(0, index2 + 1))
        }
      });
    }, null);
  }
  function matchPath(pattern, pathname) {
    if (typeof pattern === "string") {
      pattern = {
        path: pattern,
        caseSensitive: false,
        end: true
      };
    }
    let [matcher, paramNames] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);
    let match = pathname.match(matcher);
    if (!match)
      return null;
    let matchedPathname = match[0];
    let pathnameBase = matchedPathname.replace(/(.)\/+$/, "$1");
    let captureGroups = match.slice(1);
    let params = paramNames.reduce((memo2, paramName, index2) => {
      if (paramName === "*") {
        let splatValue = captureGroups[index2] || "";
        pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\/+$/, "$1");
      }
      memo2[paramName] = safelyDecodeURIComponent(captureGroups[index2] || "", paramName);
      return memo2;
    }, {});
    return {
      params,
      pathname: matchedPathname,
      pathnameBase,
      pattern
    };
  }
  function compilePath(path, caseSensitive, end) {
    if (caseSensitive === void 0) {
      caseSensitive = false;
    }
    if (end === void 0) {
      end = true;
    }
    true ? warning(path === "*" || !path.endsWith("*") || path.endsWith("/*"), 'Route path "' + path + '" will be treated as if it were ' + ('"' + path.replace(/\*$/, "/*") + '" because the `*` character must ') + "always follow a `/` in the pattern. To get rid of this warning, " + ('please change the route path to "' + path.replace(/\*$/, "/*") + '".')) : void 0;
    let paramNames = [];
    let regexpSource = "^" + path.replace(/\/*\*?$/, "").replace(/^\/*/, "/").replace(/[\\.*+^$?{}|()[\]]/g, "\\$&").replace(/:(\w+)/g, (_3, paramName) => {
      paramNames.push(paramName);
      return "([^\\/]+)";
    });
    if (path.endsWith("*")) {
      paramNames.push("*");
      regexpSource += path === "*" || path === "/*" ? "(.*)$" : "(?:\\/(.+)|\\/*)$";
    } else {
      regexpSource += end ? "\\/*$" : "(?:\\b|$)";
    }
    let matcher = new RegExp(regexpSource, caseSensitive ? void 0 : "i");
    return [matcher, paramNames];
  }
  function safelyDecodeURIComponent(value, paramName) {
    try {
      return decodeURIComponent(value);
    } catch (error) {
      true ? warning(false, 'The value for the URL param "' + paramName + '" will not be decoded because' + (' the string "' + value + '" is a malformed URL segment. This is probably') + (" due to a bad percent encoding (" + error + ").")) : void 0;
      return value;
    }
  }
  function resolvePath(to, fromPathname) {
    if (fromPathname === void 0) {
      fromPathname = "/";
    }
    let {
      pathname: toPathname,
      search = "",
      hash = ""
    } = typeof to === "string" ? J(to) : to;
    let pathname = toPathname ? toPathname.startsWith("/") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;
    return {
      pathname,
      search: normalizeSearch(search),
      hash: normalizeHash(hash)
    };
  }
  function resolvePathname(relativePath, fromPathname) {
    let segments = fromPathname.replace(/\/+$/, "").split("/");
    let relativeSegments = relativePath.split("/");
    relativeSegments.forEach((segment) => {
      if (segment === "..") {
        if (segments.length > 1)
          segments.pop();
      } else if (segment !== ".") {
        segments.push(segment);
      }
    });
    return segments.length > 1 ? segments.join("/") : "/";
  }
  function resolveTo(toArg, routePathnames, locationPathname) {
    let to = typeof toArg === "string" ? J(toArg) : toArg;
    let toPathname = toArg === "" || to.pathname === "" ? "/" : to.pathname;
    let from;
    if (toPathname == null) {
      from = locationPathname;
    } else {
      let routePathnameIndex = routePathnames.length - 1;
      if (toPathname.startsWith("..")) {
        let toSegments = toPathname.split("/");
        while (toSegments[0] === "..") {
          toSegments.shift();
          routePathnameIndex -= 1;
        }
        to.pathname = toSegments.join("/");
      }
      from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : "/";
    }
    let path = resolvePath(to, from);
    if (toPathname && toPathname !== "/" && toPathname.endsWith("/") && !path.pathname.endsWith("/")) {
      path.pathname += "/";
    }
    return path;
  }
  function getToPathname(to) {
    return to === "" || to.pathname === "" ? "/" : typeof to === "string" ? J(to).pathname : to.pathname;
  }
  function stripBasename(pathname, basename) {
    if (basename === "/")
      return pathname;
    if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {
      return null;
    }
    let nextChar = pathname.charAt(basename.length);
    if (nextChar && nextChar !== "/") {
      return null;
    }
    return pathname.slice(basename.length) || "/";
  }
  var joinPaths = (paths) => paths.join("/").replace(/\/\/+/g, "/");
  var normalizePathname = (pathname) => pathname.replace(/\/+$/, "").replace(/^\/*/, "/");
  var normalizeSearch = (search) => !search || search === "?" ? "" : search.startsWith("?") ? search : "?" + search;
  var normalizeHash = (hash) => !hash || hash === "#" ? "" : hash.startsWith("#") ? hash : "#" + hash;

  // node_modules/react-router-dom/index.js
  function _extends2() {
    _extends2 = Object.assign || function(target) {
      for (var i2 = 1; i2 < arguments.length; i2++) {
        var source = arguments[i2];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    return _extends2.apply(this, arguments);
  }
  function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null)
      return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i2;
    for (i2 = 0; i2 < sourceKeys.length; i2++) {
      key = sourceKeys[i2];
      if (excluded.indexOf(key) >= 0)
        continue;
      target[key] = source[key];
    }
    return target;
  }
  var _excluded = ["onClick", "reloadDocument", "replace", "state", "target", "to"];
  var _excluded2 = ["aria-current", "caseSensitive", "className", "end", "style", "to"];
  function HashRouter(_ref2) {
    let {
      basename,
      children,
      window: window2
    } = _ref2;
    let historyRef = (0, import_react2.useRef)();
    if (historyRef.current == null) {
      historyRef.current = createHashHistory({
        window: window2
      });
    }
    let history = historyRef.current;
    let [state, setState] = (0, import_react2.useState)({
      action: history.action,
      location: history.location
    });
    (0, import_react2.useLayoutEffect)(() => history.listen(setState), [history]);
    return /* @__PURE__ */ (0, import_react2.createElement)(Router, {
      basename,
      children,
      location: state.location,
      navigationType: state.action,
      navigator: history
    });
  }
  function isModifiedEvent(event) {
    return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
  }
  var Link = /* @__PURE__ */ (0, import_react2.forwardRef)(function LinkWithRef(_ref3, ref) {
    let {
      onClick,
      reloadDocument,
      replace = false,
      state,
      target,
      to
    } = _ref3, rest = _objectWithoutPropertiesLoose(_ref3, _excluded);
    let href = useHref(to);
    let internalOnClick = useLinkClickHandler(to, {
      replace,
      state,
      target
    });
    function handleClick(event) {
      if (onClick)
        onClick(event);
      if (!event.defaultPrevented && !reloadDocument) {
        internalOnClick(event);
      }
    }
    return /* @__PURE__ */ (0, import_react2.createElement)("a", _extends2({}, rest, {
      href,
      onClick: handleClick,
      ref,
      target
    }));
  });
  if (true) {
    Link.displayName = "Link";
  }
  var NavLink = /* @__PURE__ */ (0, import_react2.forwardRef)(function NavLinkWithRef(_ref4, ref) {
    let {
      "aria-current": ariaCurrentProp = "page",
      caseSensitive = false,
      className: classNameProp = "",
      end = false,
      style: styleProp,
      to
    } = _ref4, rest = _objectWithoutPropertiesLoose(_ref4, _excluded2);
    let location = useLocation();
    let path = useResolvedPath(to);
    let locationPathname = location.pathname;
    let toPathname = path.pathname;
    if (!caseSensitive) {
      locationPathname = locationPathname.toLowerCase();
      toPathname = toPathname.toLowerCase();
    }
    let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(toPathname.length) === "/";
    let ariaCurrent = isActive ? ariaCurrentProp : void 0;
    let className;
    if (typeof classNameProp === "function") {
      className = classNameProp({
        isActive
      });
    } else {
      className = [classNameProp, isActive ? "active" : null].filter(Boolean).join(" ");
    }
    let style = typeof styleProp === "function" ? styleProp({
      isActive
    }) : styleProp;
    return /* @__PURE__ */ (0, import_react2.createElement)(Link, _extends2({}, rest, {
      "aria-current": ariaCurrent,
      className,
      ref,
      style,
      to
    }));
  });
  if (true) {
    NavLink.displayName = "NavLink";
  }
  function useLinkClickHandler(to, _temp) {
    let {
      target,
      replace: replaceProp,
      state
    } = _temp === void 0 ? {} : _temp;
    let navigate = useNavigate();
    let location = useLocation();
    let path = useResolvedPath(to);
    return (0, import_react2.useCallback)((event) => {
      if (event.button === 0 && (!target || target === "_self") && !isModifiedEvent(event)) {
        event.preventDefault();
        let replace = !!replaceProp || I(location) === I(path);
        navigate(to, {
          replace,
          state
        });
      }
    }, [location, navigate, path, replaceProp, state, target, to]);
  }

  // node_modules/styled-components/dist/styled-components.browser.esm.js
  var import_react_is = __toESM(require_react_is());
  var import_react3 = __toESM(require_react());
  var import_shallowequal = __toESM(require_shallowequal());

  // node_modules/@emotion/stylis/dist/stylis.browser.esm.js
  function stylis_min(W2) {
    function M2(d2, c2, e2, h2, a2) {
      for (var m = 0, b2 = 0, v2 = 0, n2 = 0, q2, g2, x2 = 0, K2 = 0, k2, u2 = k2 = q2 = 0, l2 = 0, r3 = 0, I3 = 0, t2 = 0, B4 = e2.length, J3 = B4 - 1, y2, f2 = "", p = "", F4 = "", G3 = "", C2; l2 < B4; ) {
        g2 = e2.charCodeAt(l2);
        l2 === J3 && b2 + n2 + v2 + m !== 0 && (b2 !== 0 && (g2 = b2 === 47 ? 10 : 47), n2 = v2 = m = 0, B4++, J3++);
        if (b2 + n2 + v2 + m === 0) {
          if (l2 === J3 && (0 < r3 && (f2 = f2.replace(N2, "")), 0 < f2.trim().length)) {
            switch (g2) {
              case 32:
              case 9:
              case 59:
              case 13:
              case 10:
                break;
              default:
                f2 += e2.charAt(l2);
            }
            g2 = 59;
          }
          switch (g2) {
            case 123:
              f2 = f2.trim();
              q2 = f2.charCodeAt(0);
              k2 = 1;
              for (t2 = ++l2; l2 < B4; ) {
                switch (g2 = e2.charCodeAt(l2)) {
                  case 123:
                    k2++;
                    break;
                  case 125:
                    k2--;
                    break;
                  case 47:
                    switch (g2 = e2.charCodeAt(l2 + 1)) {
                      case 42:
                      case 47:
                        a: {
                          for (u2 = l2 + 1; u2 < J3; ++u2) {
                            switch (e2.charCodeAt(u2)) {
                              case 47:
                                if (g2 === 42 && e2.charCodeAt(u2 - 1) === 42 && l2 + 2 !== u2) {
                                  l2 = u2 + 1;
                                  break a;
                                }
                                break;
                              case 10:
                                if (g2 === 47) {
                                  l2 = u2 + 1;
                                  break a;
                                }
                            }
                          }
                          l2 = u2;
                        }
                    }
                    break;
                  case 91:
                    g2++;
                  case 40:
                    g2++;
                  case 34:
                  case 39:
                    for (; l2++ < J3 && e2.charCodeAt(l2) !== g2; ) {
                    }
                }
                if (k2 === 0)
                  break;
                l2++;
              }
              k2 = e2.substring(t2, l2);
              q2 === 0 && (q2 = (f2 = f2.replace(ca, "").trim()).charCodeAt(0));
              switch (q2) {
                case 64:
                  0 < r3 && (f2 = f2.replace(N2, ""));
                  g2 = f2.charCodeAt(1);
                  switch (g2) {
                    case 100:
                    case 109:
                    case 115:
                    case 45:
                      r3 = c2;
                      break;
                    default:
                      r3 = O2;
                  }
                  k2 = M2(c2, r3, k2, g2, a2 + 1);
                  t2 = k2.length;
                  0 < A2 && (r3 = X2(O2, f2, I3), C2 = H3(3, k2, r3, c2, D3, z2, t2, g2, a2, h2), f2 = r3.join(""), C2 !== void 0 && (t2 = (k2 = C2.trim()).length) === 0 && (g2 = 0, k2 = ""));
                  if (0 < t2)
                    switch (g2) {
                      case 115:
                        f2 = f2.replace(da, ea);
                      case 100:
                      case 109:
                      case 45:
                        k2 = f2 + "{" + k2 + "}";
                        break;
                      case 107:
                        f2 = f2.replace(fa, "$1 $2");
                        k2 = f2 + "{" + k2 + "}";
                        k2 = w2 === 1 || w2 === 2 && L2("@" + k2, 3) ? "@-webkit-" + k2 + "@" + k2 : "@" + k2;
                        break;
                      default:
                        k2 = f2 + k2, h2 === 112 && (k2 = (p += k2, ""));
                    }
                  else
                    k2 = "";
                  break;
                default:
                  k2 = M2(c2, X2(c2, f2, I3), k2, h2, a2 + 1);
              }
              F4 += k2;
              k2 = I3 = r3 = u2 = q2 = 0;
              f2 = "";
              g2 = e2.charCodeAt(++l2);
              break;
            case 125:
            case 59:
              f2 = (0 < r3 ? f2.replace(N2, "") : f2).trim();
              if (1 < (t2 = f2.length))
                switch (u2 === 0 && (q2 = f2.charCodeAt(0), q2 === 45 || 96 < q2 && 123 > q2) && (t2 = (f2 = f2.replace(" ", ":")).length), 0 < A2 && (C2 = H3(1, f2, c2, d2, D3, z2, p.length, h2, a2, h2)) !== void 0 && (t2 = (f2 = C2.trim()).length) === 0 && (f2 = "\0\0"), q2 = f2.charCodeAt(0), g2 = f2.charCodeAt(1), q2) {
                  case 0:
                    break;
                  case 64:
                    if (g2 === 105 || g2 === 99) {
                      G3 += f2 + e2.charAt(l2);
                      break;
                    }
                  default:
                    f2.charCodeAt(t2 - 1) !== 58 && (p += P2(f2, q2, g2, f2.charCodeAt(2)));
                }
              I3 = r3 = u2 = q2 = 0;
              f2 = "";
              g2 = e2.charCodeAt(++l2);
          }
        }
        switch (g2) {
          case 13:
          case 10:
            b2 === 47 ? b2 = 0 : 1 + q2 === 0 && h2 !== 107 && 0 < f2.length && (r3 = 1, f2 += "\0");
            0 < A2 * Y2 && H3(0, f2, c2, d2, D3, z2, p.length, h2, a2, h2);
            z2 = 1;
            D3++;
            break;
          case 59:
          case 125:
            if (b2 + n2 + v2 + m === 0) {
              z2++;
              break;
            }
          default:
            z2++;
            y2 = e2.charAt(l2);
            switch (g2) {
              case 9:
              case 32:
                if (n2 + m + b2 === 0)
                  switch (x2) {
                    case 44:
                    case 58:
                    case 9:
                    case 32:
                      y2 = "";
                      break;
                    default:
                      g2 !== 32 && (y2 = " ");
                  }
                break;
              case 0:
                y2 = "\\0";
                break;
              case 12:
                y2 = "\\f";
                break;
              case 11:
                y2 = "\\v";
                break;
              case 38:
                n2 + b2 + m === 0 && (r3 = I3 = 1, y2 = "\f" + y2);
                break;
              case 108:
                if (n2 + b2 + m + E3 === 0 && 0 < u2)
                  switch (l2 - u2) {
                    case 2:
                      x2 === 112 && e2.charCodeAt(l2 - 3) === 58 && (E3 = x2);
                    case 8:
                      K2 === 111 && (E3 = K2);
                  }
                break;
              case 58:
                n2 + b2 + m === 0 && (u2 = l2);
                break;
              case 44:
                b2 + v2 + n2 + m === 0 && (r3 = 1, y2 += "\r");
                break;
              case 34:
              case 39:
                b2 === 0 && (n2 = n2 === g2 ? 0 : n2 === 0 ? g2 : n2);
                break;
              case 91:
                n2 + b2 + v2 === 0 && m++;
                break;
              case 93:
                n2 + b2 + v2 === 0 && m--;
                break;
              case 41:
                n2 + b2 + m === 0 && v2--;
                break;
              case 40:
                if (n2 + b2 + m === 0) {
                  if (q2 === 0)
                    switch (2 * x2 + 3 * K2) {
                      case 533:
                        break;
                      default:
                        q2 = 1;
                    }
                  v2++;
                }
                break;
              case 64:
                b2 + v2 + n2 + m + u2 + k2 === 0 && (k2 = 1);
                break;
              case 42:
              case 47:
                if (!(0 < n2 + m + v2))
                  switch (b2) {
                    case 0:
                      switch (2 * g2 + 3 * e2.charCodeAt(l2 + 1)) {
                        case 235:
                          b2 = 47;
                          break;
                        case 220:
                          t2 = l2, b2 = 42;
                      }
                      break;
                    case 42:
                      g2 === 47 && x2 === 42 && t2 + 2 !== l2 && (e2.charCodeAt(t2 + 2) === 33 && (p += e2.substring(t2, l2 + 1)), y2 = "", b2 = 0);
                  }
            }
            b2 === 0 && (f2 += y2);
        }
        K2 = x2;
        x2 = g2;
        l2++;
      }
      t2 = p.length;
      if (0 < t2) {
        r3 = c2;
        if (0 < A2 && (C2 = H3(2, p, r3, d2, D3, z2, t2, h2, a2, h2), C2 !== void 0 && (p = C2).length === 0))
          return G3 + p + F4;
        p = r3.join(",") + "{" + p + "}";
        if (w2 * E3 !== 0) {
          w2 !== 2 || L2(p, 2) || (E3 = 0);
          switch (E3) {
            case 111:
              p = p.replace(ha, ":-moz-$1") + p;
              break;
            case 112:
              p = p.replace(Q2, "::-webkit-input-$1") + p.replace(Q2, "::-moz-$1") + p.replace(Q2, ":-ms-input-$1") + p;
          }
          E3 = 0;
        }
      }
      return G3 + p + F4;
    }
    function X2(d2, c2, e2) {
      var h2 = c2.trim().split(ia);
      c2 = h2;
      var a2 = h2.length, m = d2.length;
      switch (m) {
        case 0:
        case 1:
          var b2 = 0;
          for (d2 = m === 0 ? "" : d2[0] + " "; b2 < a2; ++b2) {
            c2[b2] = Z2(d2, c2[b2], e2).trim();
          }
          break;
        default:
          var v2 = b2 = 0;
          for (c2 = []; b2 < a2; ++b2) {
            for (var n2 = 0; n2 < m; ++n2) {
              c2[v2++] = Z2(d2[n2] + " ", h2[b2], e2).trim();
            }
          }
      }
      return c2;
    }
    function Z2(d2, c2, e2) {
      var h2 = c2.charCodeAt(0);
      33 > h2 && (h2 = (c2 = c2.trim()).charCodeAt(0));
      switch (h2) {
        case 38:
          return c2.replace(F3, "$1" + d2.trim());
        case 58:
          return d2.trim() + c2.replace(F3, "$1" + d2.trim());
        default:
          if (0 < 1 * e2 && 0 < c2.indexOf("\f"))
            return c2.replace(F3, (d2.charCodeAt(0) === 58 ? "" : "$1") + d2.trim());
      }
      return d2 + c2;
    }
    function P2(d2, c2, e2, h2) {
      var a2 = d2 + ";", m = 2 * c2 + 3 * e2 + 4 * h2;
      if (m === 944) {
        d2 = a2.indexOf(":", 9) + 1;
        var b2 = a2.substring(d2, a2.length - 1).trim();
        b2 = a2.substring(0, d2).trim() + b2 + ";";
        return w2 === 1 || w2 === 2 && L2(b2, 1) ? "-webkit-" + b2 + b2 : b2;
      }
      if (w2 === 0 || w2 === 2 && !L2(a2, 1))
        return a2;
      switch (m) {
        case 1015:
          return a2.charCodeAt(10) === 97 ? "-webkit-" + a2 + a2 : a2;
        case 951:
          return a2.charCodeAt(3) === 116 ? "-webkit-" + a2 + a2 : a2;
        case 963:
          return a2.charCodeAt(5) === 110 ? "-webkit-" + a2 + a2 : a2;
        case 1009:
          if (a2.charCodeAt(4) !== 100)
            break;
        case 969:
        case 942:
          return "-webkit-" + a2 + a2;
        case 978:
          return "-webkit-" + a2 + "-moz-" + a2 + a2;
        case 1019:
        case 983:
          return "-webkit-" + a2 + "-moz-" + a2 + "-ms-" + a2 + a2;
        case 883:
          if (a2.charCodeAt(8) === 45)
            return "-webkit-" + a2 + a2;
          if (0 < a2.indexOf("image-set(", 11))
            return a2.replace(ja, "$1-webkit-$2") + a2;
          break;
        case 932:
          if (a2.charCodeAt(4) === 45)
            switch (a2.charCodeAt(5)) {
              case 103:
                return "-webkit-box-" + a2.replace("-grow", "") + "-webkit-" + a2 + "-ms-" + a2.replace("grow", "positive") + a2;
              case 115:
                return "-webkit-" + a2 + "-ms-" + a2.replace("shrink", "negative") + a2;
              case 98:
                return "-webkit-" + a2 + "-ms-" + a2.replace("basis", "preferred-size") + a2;
            }
          return "-webkit-" + a2 + "-ms-" + a2 + a2;
        case 964:
          return "-webkit-" + a2 + "-ms-flex-" + a2 + a2;
        case 1023:
          if (a2.charCodeAt(8) !== 99)
            break;
          b2 = a2.substring(a2.indexOf(":", 15)).replace("flex-", "").replace("space-between", "justify");
          return "-webkit-box-pack" + b2 + "-webkit-" + a2 + "-ms-flex-pack" + b2 + a2;
        case 1005:
          return ka.test(a2) ? a2.replace(aa, ":-webkit-") + a2.replace(aa, ":-moz-") + a2 : a2;
        case 1e3:
          b2 = a2.substring(13).trim();
          c2 = b2.indexOf("-") + 1;
          switch (b2.charCodeAt(0) + b2.charCodeAt(c2)) {
            case 226:
              b2 = a2.replace(G2, "tb");
              break;
            case 232:
              b2 = a2.replace(G2, "tb-rl");
              break;
            case 220:
              b2 = a2.replace(G2, "lr");
              break;
            default:
              return a2;
          }
          return "-webkit-" + a2 + "-ms-" + b2 + a2;
        case 1017:
          if (a2.indexOf("sticky", 9) === -1)
            break;
        case 975:
          c2 = (a2 = d2).length - 10;
          b2 = (a2.charCodeAt(c2) === 33 ? a2.substring(0, c2) : a2).substring(d2.indexOf(":", 7) + 1).trim();
          switch (m = b2.charCodeAt(0) + (b2.charCodeAt(7) | 0)) {
            case 203:
              if (111 > b2.charCodeAt(8))
                break;
            case 115:
              a2 = a2.replace(b2, "-webkit-" + b2) + ";" + a2;
              break;
            case 207:
            case 102:
              a2 = a2.replace(b2, "-webkit-" + (102 < m ? "inline-" : "") + "box") + ";" + a2.replace(b2, "-webkit-" + b2) + ";" + a2.replace(b2, "-ms-" + b2 + "box") + ";" + a2;
          }
          return a2 + ";";
        case 938:
          if (a2.charCodeAt(5) === 45)
            switch (a2.charCodeAt(6)) {
              case 105:
                return b2 = a2.replace("-items", ""), "-webkit-" + a2 + "-webkit-box-" + b2 + "-ms-flex-" + b2 + a2;
              case 115:
                return "-webkit-" + a2 + "-ms-flex-item-" + a2.replace(ba, "") + a2;
              default:
                return "-webkit-" + a2 + "-ms-flex-line-pack" + a2.replace("align-content", "").replace(ba, "") + a2;
            }
          break;
        case 973:
        case 989:
          if (a2.charCodeAt(3) !== 45 || a2.charCodeAt(4) === 122)
            break;
        case 931:
        case 953:
          if (la.test(d2) === true)
            return (b2 = d2.substring(d2.indexOf(":") + 1)).charCodeAt(0) === 115 ? P2(d2.replace("stretch", "fill-available"), c2, e2, h2).replace(":fill-available", ":stretch") : a2.replace(b2, "-webkit-" + b2) + a2.replace(b2, "-moz-" + b2.replace("fill-", "")) + a2;
          break;
        case 962:
          if (a2 = "-webkit-" + a2 + (a2.charCodeAt(5) === 102 ? "-ms-" + a2 : "") + a2, e2 + h2 === 211 && a2.charCodeAt(13) === 105 && 0 < a2.indexOf("transform", 10))
            return a2.substring(0, a2.indexOf(";", 27) + 1).replace(ma, "$1-webkit-$2") + a2;
      }
      return a2;
    }
    function L2(d2, c2) {
      var e2 = d2.indexOf(c2 === 1 ? ":" : "{"), h2 = d2.substring(0, c2 !== 3 ? e2 : 10);
      e2 = d2.substring(e2 + 1, d2.length - 1);
      return R2(c2 !== 2 ? h2 : h2.replace(na, "$1"), e2, c2);
    }
    function ea(d2, c2) {
      var e2 = P2(c2, c2.charCodeAt(0), c2.charCodeAt(1), c2.charCodeAt(2));
      return e2 !== c2 + ";" ? e2.replace(oa, " or ($1)").substring(4) : "(" + c2 + ")";
    }
    function H3(d2, c2, e2, h2, a2, m, b2, v2, n2, q2) {
      for (var g2 = 0, x2 = c2, w3; g2 < A2; ++g2) {
        switch (w3 = S2[g2].call(B3, d2, x2, e2, h2, a2, m, b2, v2, n2, q2)) {
          case void 0:
          case false:
          case true:
          case null:
            break;
          default:
            x2 = w3;
        }
      }
      if (x2 !== c2)
        return x2;
    }
    function T2(d2) {
      switch (d2) {
        case void 0:
        case null:
          A2 = S2.length = 0;
          break;
        default:
          if (typeof d2 === "function")
            S2[A2++] = d2;
          else if (typeof d2 === "object")
            for (var c2 = 0, e2 = d2.length; c2 < e2; ++c2) {
              T2(d2[c2]);
            }
          else
            Y2 = !!d2 | 0;
      }
      return T2;
    }
    function U2(d2) {
      d2 = d2.prefix;
      d2 !== void 0 && (R2 = null, d2 ? typeof d2 !== "function" ? w2 = 1 : (w2 = 2, R2 = d2) : w2 = 0);
      return U2;
    }
    function B3(d2, c2) {
      var e2 = d2;
      33 > e2.charCodeAt(0) && (e2 = e2.trim());
      V2 = e2;
      e2 = [V2];
      if (0 < A2) {
        var h2 = H3(-1, c2, e2, e2, D3, z2, 0, 0, 0, 0);
        h2 !== void 0 && typeof h2 === "string" && (c2 = h2);
      }
      var a2 = M2(O2, e2, c2, 0, 0);
      0 < A2 && (h2 = H3(-2, a2, e2, e2, D3, z2, a2.length, 0, 0, 0), h2 !== void 0 && (a2 = h2));
      V2 = "";
      E3 = 0;
      z2 = D3 = 1;
      return a2;
    }
    var ca = /^\0+/g, N2 = /[\0\r\f]/g, aa = /: */g, ka = /zoo|gra/, ma = /([,: ])(transform)/g, ia = /,\r+?/g, F3 = /([\t\r\n ])*\f?&/g, fa = /@(k\w+)\s*(\S*)\s*/, Q2 = /::(place)/g, ha = /:(read-only)/g, G2 = /[svh]\w+-[tblr]{2}/, da = /\(\s*(.*)\s*\)/g, oa = /([\s\S]*?);/g, ba = /-self|flex-/g, na = /[^]*?(:[rp][el]a[\w-]+)[^]*/, la = /stretch|:\s*\w+\-(?:conte|avail)/, ja = /([^-])(image-set\()/, z2 = 1, D3 = 1, E3 = 0, w2 = 1, O2 = [], S2 = [], A2 = 0, R2 = null, Y2 = 0, V2 = "";
    B3.use = T2;
    B3.set = U2;
    W2 !== void 0 && U2(W2);
    return B3;
  }
  var stylis_browser_esm_default = stylis_min;

  // node_modules/styled-components/dist/styled-components.browser.esm.js
  var import_unitless = __toESM(require_unitless_browser_cjs());

  // node_modules/styled-components/node_modules/@emotion/memoize/dist/memoize.browser.esm.js
  function memoize(fn) {
    var cache = {};
    return function(arg) {
      if (cache[arg] === void 0)
        cache[arg] = fn(arg);
      return cache[arg];
    };
  }
  var memoize_browser_esm_default = memoize;

  // node_modules/styled-components/node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js
  var reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/;
  var index = memoize_browser_esm_default(function(prop) {
    return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111 && prop.charCodeAt(1) === 110 && prop.charCodeAt(2) < 91;
  });
  var is_prop_valid_browser_esm_default = index;

  // node_modules/styled-components/dist/styled-components.browser.esm.js
  var import_hoist_non_react_statics = __toESM(require_hoist_non_react_statics_cjs());
  function v() {
    return (v = Object.assign || function(e2) {
      for (var t2 = 1; t2 < arguments.length; t2++) {
        var n2 = arguments[t2];
        for (var r3 in n2)
          Object.prototype.hasOwnProperty.call(n2, r3) && (e2[r3] = n2[r3]);
      }
      return e2;
    }).apply(this, arguments);
  }
  var g = function(e2, t2) {
    for (var n2 = [e2[0]], r3 = 0, o2 = t2.length; r3 < o2; r3 += 1)
      n2.push(t2[r3], e2[r3 + 1]);
    return n2;
  };
  var S = function(t2) {
    return t2 !== null && typeof t2 == "object" && (t2.toString ? t2.toString() : Object.prototype.toString.call(t2)) === "[object Object]" && !(0, import_react_is.typeOf)(t2);
  };
  var w = Object.freeze([]);
  var E2 = Object.freeze({});
  function b(e2) {
    return typeof e2 == "function";
  }
  function _(e2) {
    return typeof e2 == "string" && e2 || e2.displayName || e2.name || "Component";
  }
  function N(e2) {
    return e2 && typeof e2.styledComponentId == "string";
  }
  var A = typeof process != "undefined" && (process.env.REACT_APP_SC_ATTR || process.env.SC_ATTR) || "data-styled";
  var I2 = typeof window != "undefined" && "HTMLElement" in window;
  var P = Boolean(typeof SC_DISABLE_SPEEDY == "boolean" ? SC_DISABLE_SPEEDY : typeof process != "undefined" && process.env.REACT_APP_SC_DISABLE_SPEEDY !== void 0 && process.env.REACT_APP_SC_DISABLE_SPEEDY !== "" ? process.env.REACT_APP_SC_DISABLE_SPEEDY !== "false" && process.env.REACT_APP_SC_DISABLE_SPEEDY : typeof process != "undefined" && process.env.SC_DISABLE_SPEEDY !== void 0 && process.env.SC_DISABLE_SPEEDY !== "" ? process.env.SC_DISABLE_SPEEDY !== "false" && process.env.SC_DISABLE_SPEEDY : true);
  var O = {};
  var R = true ? { 1: "Cannot create styled-component for component: %s.\n\n", 2: "Can't collect styles once you've consumed a `ServerStyleSheet`'s styles! `ServerStyleSheet` is a one off instance for each server-side render cycle.\n\n- Are you trying to reuse it across renders?\n- Are you accidentally calling collectStyles twice?\n\n", 3: "Streaming SSR is only supported in a Node.js environment; Please do not try to call this method in the browser.\n\n", 4: "The `StyleSheetManager` expects a valid target or sheet prop!\n\n- Does this error occur on the client and is your target falsy?\n- Does this error occur on the server and is the sheet falsy?\n\n", 5: "The clone method cannot be used on the client!\n\n- Are you running in a client-like environment on the server?\n- Are you trying to run SSR on the client?\n\n", 6: "Trying to insert a new style tag, but the given Node is unmounted!\n\n- Are you using a custom target that isn't mounted?\n- Does your document not have a valid head element?\n- Have you accidentally removed a style tag manually?\n\n", 7: 'ThemeProvider: Please return an object from your "theme" prop function, e.g.\n\n```js\ntheme={() => ({})}\n```\n\n', 8: 'ThemeProvider: Please make your "theme" prop an object.\n\n', 9: "Missing document `<head>`\n\n", 10: "Cannot find a StyleSheet instance. Usually this happens if there are multiple copies of styled-components loaded at once. Check out this issue for how to troubleshoot and fix the common cases where this situation can happen: https://github.com/styled-components/styled-components/issues/1941#issuecomment-417862021\n\n", 11: "_This error was replaced with a dev-time warning, it will be deleted for v4 final._ [createGlobalStyle] received children which will not be rendered. Please use the component without passing children elements.\n\n", 12: "It seems you are interpolating a keyframe declaration (%s) into an untagged string. This was supported in styled-components v3, but is not longer supported in v4 as keyframes are now injected on-demand. Please wrap your string in the css\\`\\` helper which ensures the styles are injected correctly. See https://www.styled-components.com/docs/api#css\n\n", 13: "%s is not a styled component and cannot be referred to via component selector. See https://www.styled-components.com/docs/advanced#referring-to-other-components for more details.\n\n", 14: 'ThemeProvider: "theme" prop is required.\n\n', 15: "A stylis plugin has been supplied that is not named. We need a name for each plugin to be able to prevent styling collisions between different stylis configurations within the same app. Before you pass your plugin to `<StyleSheetManager stylisPlugins={[]}>`, please make sure each plugin is uniquely-named, e.g.\n\n```js\nObject.defineProperty(importedPlugin, 'name', { value: 'some-unique-name' });\n```\n\n", 16: "Reached the limit of how many styled components may be created at group %s.\nYou may only create up to 1,073,741,824 components. If you're creating components dynamically,\nas for instance in your render method then you may be running into this limitation.\n\n", 17: "CSSStyleSheet could not be found on HTMLStyleElement.\nHas styled-components' style tag been unmounted or altered by another script?\n" } : {};
  function D2() {
    for (var e2 = arguments.length <= 0 ? void 0 : arguments[0], t2 = [], n2 = 1, r3 = arguments.length; n2 < r3; n2 += 1)
      t2.push(n2 < 0 || arguments.length <= n2 ? void 0 : arguments[n2]);
    return t2.forEach(function(t3) {
      e2 = e2.replace(/%[a-z]/, t3);
    }), e2;
  }
  function j(e2) {
    for (var t2 = arguments.length, n2 = new Array(t2 > 1 ? t2 - 1 : 0), r3 = 1; r3 < t2; r3++)
      n2[r3 - 1] = arguments[r3];
    throw false ? new Error("An error occurred. See https://git.io/JUIaE#" + e2 + " for more information." + (n2.length > 0 ? " Args: " + n2.join(", ") : "")) : new Error(D2.apply(void 0, [R[e2]].concat(n2)).trim());
  }
  var T = function() {
    function e2(e3) {
      this.groupSizes = new Uint32Array(512), this.length = 512, this.tag = e3;
    }
    var t2 = e2.prototype;
    return t2.indexOfGroup = function(e3) {
      for (var t3 = 0, n2 = 0; n2 < e3; n2++)
        t3 += this.groupSizes[n2];
      return t3;
    }, t2.insertRules = function(e3, t3) {
      if (e3 >= this.groupSizes.length) {
        for (var n2 = this.groupSizes, r3 = n2.length, o2 = r3; e3 >= o2; )
          (o2 <<= 1) < 0 && j(16, "" + e3);
        this.groupSizes = new Uint32Array(o2), this.groupSizes.set(n2), this.length = o2;
        for (var s2 = r3; s2 < o2; s2++)
          this.groupSizes[s2] = 0;
      }
      for (var i2 = this.indexOfGroup(e3 + 1), a2 = 0, c2 = t3.length; a2 < c2; a2++)
        this.tag.insertRule(i2, t3[a2]) && (this.groupSizes[e3]++, i2++);
    }, t2.clearGroup = function(e3) {
      if (e3 < this.length) {
        var t3 = this.groupSizes[e3], n2 = this.indexOfGroup(e3), r3 = n2 + t3;
        this.groupSizes[e3] = 0;
        for (var o2 = n2; o2 < r3; o2++)
          this.tag.deleteRule(n2);
      }
    }, t2.getGroup = function(e3) {
      var t3 = "";
      if (e3 >= this.length || this.groupSizes[e3] === 0)
        return t3;
      for (var n2 = this.groupSizes[e3], r3 = this.indexOfGroup(e3), o2 = r3 + n2, s2 = r3; s2 < o2; s2++)
        t3 += this.tag.getRule(s2) + "/*!sc*/\n";
      return t3;
    }, e2;
  }();
  var x = /* @__PURE__ */ new Map();
  var k = /* @__PURE__ */ new Map();
  var V = 1;
  var B2 = function(e2) {
    if (x.has(e2))
      return x.get(e2);
    for (; k.has(V); )
      V++;
    var t2 = V++;
    return ((0 | t2) < 0 || t2 > 1 << 30) && j(16, "" + t2), x.set(e2, t2), k.set(t2, e2), t2;
  };
  var z = function(e2) {
    return k.get(e2);
  };
  var M = function(e2, t2) {
    t2 >= V && (V = t2 + 1), x.set(e2, t2), k.set(t2, e2);
  };
  var G = "style[" + A + '][data-styled-version="5.3.3"]';
  var L = new RegExp("^" + A + '\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)');
  var F2 = function(e2, t2, n2) {
    for (var r3, o2 = n2.split(","), s2 = 0, i2 = o2.length; s2 < i2; s2++)
      (r3 = o2[s2]) && e2.registerName(t2, r3);
  };
  var Y = function(e2, t2) {
    for (var n2 = (t2.textContent || "").split("/*!sc*/\n"), r3 = [], o2 = 0, s2 = n2.length; o2 < s2; o2++) {
      var i2 = n2[o2].trim();
      if (i2) {
        var a2 = i2.match(L);
        if (a2) {
          var c2 = 0 | parseInt(a2[1], 10), u2 = a2[2];
          c2 !== 0 && (M(u2, c2), F2(e2, u2, a2[3]), e2.getTag().insertRules(c2, r3)), r3.length = 0;
        } else
          r3.push(i2);
      }
    }
  };
  var q = function() {
    return typeof window != "undefined" && window.__webpack_nonce__ !== void 0 ? window.__webpack_nonce__ : null;
  };
  var H2 = function(e2) {
    var t2 = document.head, n2 = e2 || t2, r3 = document.createElement("style"), o2 = function(e3) {
      for (var t3 = e3.childNodes, n3 = t3.length; n3 >= 0; n3--) {
        var r4 = t3[n3];
        if (r4 && r4.nodeType === 1 && r4.hasAttribute(A))
          return r4;
      }
    }(n2), s2 = o2 !== void 0 ? o2.nextSibling : null;
    r3.setAttribute(A, "active"), r3.setAttribute("data-styled-version", "5.3.3");
    var i2 = q();
    return i2 && r3.setAttribute("nonce", i2), n2.insertBefore(r3, s2), r3;
  };
  var $ = function() {
    function e2(e3) {
      var t3 = this.element = H2(e3);
      t3.appendChild(document.createTextNode("")), this.sheet = function(e4) {
        if (e4.sheet)
          return e4.sheet;
        for (var t4 = document.styleSheets, n2 = 0, r3 = t4.length; n2 < r3; n2++) {
          var o2 = t4[n2];
          if (o2.ownerNode === e4)
            return o2;
        }
        j(17);
      }(t3), this.length = 0;
    }
    var t2 = e2.prototype;
    return t2.insertRule = function(e3, t3) {
      try {
        return this.sheet.insertRule(t3, e3), this.length++, true;
      } catch (e4) {
        return false;
      }
    }, t2.deleteRule = function(e3) {
      this.sheet.deleteRule(e3), this.length--;
    }, t2.getRule = function(e3) {
      var t3 = this.sheet.cssRules[e3];
      return t3 !== void 0 && typeof t3.cssText == "string" ? t3.cssText : "";
    }, e2;
  }();
  var W = function() {
    function e2(e3) {
      var t3 = this.element = H2(e3);
      this.nodes = t3.childNodes, this.length = 0;
    }
    var t2 = e2.prototype;
    return t2.insertRule = function(e3, t3) {
      if (e3 <= this.length && e3 >= 0) {
        var n2 = document.createTextNode(t3), r3 = this.nodes[e3];
        return this.element.insertBefore(n2, r3 || null), this.length++, true;
      }
      return false;
    }, t2.deleteRule = function(e3) {
      this.element.removeChild(this.nodes[e3]), this.length--;
    }, t2.getRule = function(e3) {
      return e3 < this.length ? this.nodes[e3].textContent : "";
    }, e2;
  }();
  var U = function() {
    function e2(e3) {
      this.rules = [], this.length = 0;
    }
    var t2 = e2.prototype;
    return t2.insertRule = function(e3, t3) {
      return e3 <= this.length && (this.rules.splice(e3, 0, t3), this.length++, true);
    }, t2.deleteRule = function(e3) {
      this.rules.splice(e3, 1), this.length--;
    }, t2.getRule = function(e3) {
      return e3 < this.length ? this.rules[e3] : "";
    }, e2;
  }();
  var J2 = I2;
  var X = { isServer: !I2, useCSSOMInjection: !P };
  var Z = function() {
    function e2(e3, t3, n2) {
      e3 === void 0 && (e3 = E2), t3 === void 0 && (t3 = {}), this.options = v({}, X, {}, e3), this.gs = t3, this.names = new Map(n2), this.server = !!e3.isServer, !this.server && I2 && J2 && (J2 = false, function(e4) {
        for (var t4 = document.querySelectorAll(G), n3 = 0, r3 = t4.length; n3 < r3; n3++) {
          var o2 = t4[n3];
          o2 && o2.getAttribute(A) !== "active" && (Y(e4, o2), o2.parentNode && o2.parentNode.removeChild(o2));
        }
      }(this));
    }
    e2.registerId = function(e3) {
      return B2(e3);
    };
    var t2 = e2.prototype;
    return t2.reconstructWithOptions = function(t3, n2) {
      return n2 === void 0 && (n2 = true), new e2(v({}, this.options, {}, t3), this.gs, n2 && this.names || void 0);
    }, t2.allocateGSInstance = function(e3) {
      return this.gs[e3] = (this.gs[e3] || 0) + 1;
    }, t2.getTag = function() {
      return this.tag || (this.tag = (n2 = (t3 = this.options).isServer, r3 = t3.useCSSOMInjection, o2 = t3.target, e3 = n2 ? new U(o2) : r3 ? new $(o2) : new W(o2), new T(e3)));
      var e3, t3, n2, r3, o2;
    }, t2.hasNameForId = function(e3, t3) {
      return this.names.has(e3) && this.names.get(e3).has(t3);
    }, t2.registerName = function(e3, t3) {
      if (B2(e3), this.names.has(e3))
        this.names.get(e3).add(t3);
      else {
        var n2 = /* @__PURE__ */ new Set();
        n2.add(t3), this.names.set(e3, n2);
      }
    }, t2.insertRules = function(e3, t3, n2) {
      this.registerName(e3, t3), this.getTag().insertRules(B2(e3), n2);
    }, t2.clearNames = function(e3) {
      this.names.has(e3) && this.names.get(e3).clear();
    }, t2.clearRules = function(e3) {
      this.getTag().clearGroup(B2(e3)), this.clearNames(e3);
    }, t2.clearTag = function() {
      this.tag = void 0;
    }, t2.toString = function() {
      return function(e3) {
        for (var t3 = e3.getTag(), n2 = t3.length, r3 = "", o2 = 0; o2 < n2; o2++) {
          var s2 = z(o2);
          if (s2 !== void 0) {
            var i2 = e3.names.get(s2), a2 = t3.getGroup(o2);
            if (i2 && a2 && i2.size) {
              var c2 = A + ".g" + o2 + '[id="' + s2 + '"]', u2 = "";
              i2 !== void 0 && i2.forEach(function(e4) {
                e4.length > 0 && (u2 += e4 + ",");
              }), r3 += "" + a2 + c2 + '{content:"' + u2 + '"}/*!sc*/\n';
            }
          }
        }
        return r3;
      }(this);
    }, e2;
  }();
  var K = /(a)(d)/gi;
  var Q = function(e2) {
    return String.fromCharCode(e2 + (e2 > 25 ? 39 : 97));
  };
  function ee(e2) {
    var t2, n2 = "";
    for (t2 = Math.abs(e2); t2 > 52; t2 = t2 / 52 | 0)
      n2 = Q(t2 % 52) + n2;
    return (Q(t2 % 52) + n2).replace(K, "$1-$2");
  }
  var te = function(e2, t2) {
    for (var n2 = t2.length; n2; )
      e2 = 33 * e2 ^ t2.charCodeAt(--n2);
    return e2;
  };
  var ne = function(e2) {
    return te(5381, e2);
  };
  function re(e2) {
    for (var t2 = 0; t2 < e2.length; t2 += 1) {
      var n2 = e2[t2];
      if (b(n2) && !N(n2))
        return false;
    }
    return true;
  }
  var oe = ne("5.3.3");
  var se = function() {
    function e2(e3, t2, n2) {
      this.rules = e3, this.staticRulesId = "", this.isStatic = false, this.componentId = t2, this.baseHash = te(oe, t2), this.baseStyle = n2, Z.registerId(t2);
    }
    return e2.prototype.generateAndInjectStyles = function(e3, t2, n2) {
      var r3 = this.componentId, o2 = [];
      if (this.baseStyle && o2.push(this.baseStyle.generateAndInjectStyles(e3, t2, n2)), this.isStatic && !n2.hash)
        if (this.staticRulesId && t2.hasNameForId(r3, this.staticRulesId))
          o2.push(this.staticRulesId);
        else {
          var s2 = Ne(this.rules, e3, t2, n2).join(""), i2 = ee(te(this.baseHash, s2) >>> 0);
          if (!t2.hasNameForId(r3, i2)) {
            var a2 = n2(s2, "." + i2, void 0, r3);
            t2.insertRules(r3, i2, a2);
          }
          o2.push(i2), this.staticRulesId = i2;
        }
      else {
        for (var c2 = this.rules.length, u2 = te(this.baseHash, n2.hash), l2 = "", d2 = 0; d2 < c2; d2++) {
          var h2 = this.rules[d2];
          if (typeof h2 == "string")
            l2 += h2, u2 = te(u2, h2 + d2);
          else if (h2) {
            var p = Ne(h2, e3, t2, n2), f2 = Array.isArray(p) ? p.join("") : p;
            u2 = te(u2, f2 + d2), l2 += f2;
          }
        }
        if (l2) {
          var m = ee(u2 >>> 0);
          if (!t2.hasNameForId(r3, m)) {
            var y2 = n2(l2, "." + m, void 0, r3);
            t2.insertRules(r3, m, y2);
          }
          o2.push(m);
        }
      }
      return o2.join(" ");
    }, e2;
  }();
  var ie = /^\s*\/\/.*$/gm;
  var ae = [":", "[", ".", "#"];
  function ce(e2) {
    var t2, n2, r3, o2, s2 = e2 === void 0 ? E2 : e2, i2 = s2.options, a2 = i2 === void 0 ? E2 : i2, c2 = s2.plugins, u2 = c2 === void 0 ? w : c2, l2 = new stylis_browser_esm_default(a2), d2 = [], h2 = function(e3) {
      function t3(t4) {
        if (t4)
          try {
            e3(t4 + "}");
          } catch (e4) {
          }
      }
      return function(n3, r4, o3, s3, i3, a3, c3, u3, l3, d3) {
        switch (n3) {
          case 1:
            if (l3 === 0 && r4.charCodeAt(0) === 64)
              return e3(r4 + ";"), "";
            break;
          case 2:
            if (u3 === 0)
              return r4 + "/*|*/";
            break;
          case 3:
            switch (u3) {
              case 102:
              case 112:
                return e3(o3[0] + r4), "";
              default:
                return r4 + (d3 === 0 ? "/*|*/" : "");
            }
          case -2:
            r4.split("/*|*/}").forEach(t3);
        }
      };
    }(function(e3) {
      d2.push(e3);
    }), f2 = function(e3, r4, s3) {
      return r4 === 0 && ae.indexOf(s3[n2.length]) !== -1 || s3.match(o2) ? e3 : "." + t2;
    };
    function m(e3, s3, i3, a3) {
      a3 === void 0 && (a3 = "&");
      var c3 = e3.replace(ie, ""), u3 = s3 && i3 ? i3 + " " + s3 + " { " + c3 + " }" : c3;
      return t2 = a3, n2 = s3, r3 = new RegExp("\\" + n2 + "\\b", "g"), o2 = new RegExp("(\\" + n2 + "\\b){2,}"), l2(i3 || !s3 ? "" : s3, u3);
    }
    return l2.use([].concat(u2, [function(e3, t3, o3) {
      e3 === 2 && o3.length && o3[0].lastIndexOf(n2) > 0 && (o3[0] = o3[0].replace(r3, f2));
    }, h2, function(e3) {
      if (e3 === -2) {
        var t3 = d2;
        return d2 = [], t3;
      }
    }])), m.hash = u2.length ? u2.reduce(function(e3, t3) {
      return t3.name || j(15), te(e3, t3.name);
    }, 5381).toString() : "", m;
  }
  var ue = import_react3.default.createContext();
  var le = ue.Consumer;
  var de = import_react3.default.createContext();
  var he = (de.Consumer, new Z());
  var pe = ce();
  function fe() {
    return (0, import_react3.useContext)(ue) || he;
  }
  function me() {
    return (0, import_react3.useContext)(de) || pe;
  }
  function ye(e2) {
    var t2 = (0, import_react3.useState)(e2.stylisPlugins), n2 = t2[0], s2 = t2[1], c2 = fe(), u2 = (0, import_react3.useMemo)(function() {
      var t3 = c2;
      return e2.sheet ? t3 = e2.sheet : e2.target && (t3 = t3.reconstructWithOptions({ target: e2.target }, false)), e2.disableCSSOMInjection && (t3 = t3.reconstructWithOptions({ useCSSOMInjection: false })), t3;
    }, [e2.disableCSSOMInjection, e2.sheet, e2.target]), l2 = (0, import_react3.useMemo)(function() {
      return ce({ options: { prefix: !e2.disableVendorPrefixes }, plugins: n2 });
    }, [e2.disableVendorPrefixes, n2]);
    return (0, import_react3.useEffect)(function() {
      (0, import_shallowequal.default)(n2, e2.stylisPlugins) || s2(e2.stylisPlugins);
    }, [e2.stylisPlugins]), import_react3.default.createElement(ue.Provider, { value: u2 }, import_react3.default.createElement(de.Provider, { value: l2 }, true ? import_react3.default.Children.only(e2.children) : e2.children));
  }
  var ve = function() {
    function e2(e3, t2) {
      var n2 = this;
      this.inject = function(e4, t3) {
        t3 === void 0 && (t3 = pe);
        var r3 = n2.name + t3.hash;
        e4.hasNameForId(n2.id, r3) || e4.insertRules(n2.id, r3, t3(n2.rules, r3, "@keyframes"));
      }, this.toString = function() {
        return j(12, String(n2.name));
      }, this.name = e3, this.id = "sc-keyframes-" + e3, this.rules = t2;
    }
    return e2.prototype.getName = function(e3) {
      return e3 === void 0 && (e3 = pe), this.name + e3.hash;
    }, e2;
  }();
  var ge = /([A-Z])/;
  var Se = /([A-Z])/g;
  var we = /^ms-/;
  var Ee = function(e2) {
    return "-" + e2.toLowerCase();
  };
  function be(e2) {
    return ge.test(e2) ? e2.replace(Se, Ee).replace(we, "-ms-") : e2;
  }
  var _e = function(e2) {
    return e2 == null || e2 === false || e2 === "";
  };
  function Ne(e2, n2, r3, o2) {
    if (Array.isArray(e2)) {
      for (var s2, i2 = [], a2 = 0, c2 = e2.length; a2 < c2; a2 += 1)
        (s2 = Ne(e2[a2], n2, r3, o2)) !== "" && (Array.isArray(s2) ? i2.push.apply(i2, s2) : i2.push(s2));
      return i2;
    }
    if (_e(e2))
      return "";
    if (N(e2))
      return "." + e2.styledComponentId;
    if (b(e2)) {
      if (typeof (l2 = e2) != "function" || l2.prototype && l2.prototype.isReactComponent || !n2)
        return e2;
      var u2 = e2(n2);
      return (0, import_react_is.isElement)(u2) && console.warn(_(e2) + " is not a styled component and cannot be referred to via component selector. See https://www.styled-components.com/docs/advanced#referring-to-other-components for more details."), Ne(u2, n2, r3, o2);
    }
    var l2;
    return e2 instanceof ve ? r3 ? (e2.inject(r3, o2), e2.getName(o2)) : e2 : S(e2) ? function e3(t2, n3) {
      var r4, o3, s3 = [];
      for (var i3 in t2)
        t2.hasOwnProperty(i3) && !_e(t2[i3]) && (Array.isArray(t2[i3]) && t2[i3].isCss || b(t2[i3]) ? s3.push(be(i3) + ":", t2[i3], ";") : S(t2[i3]) ? s3.push.apply(s3, e3(t2[i3], i3)) : s3.push(be(i3) + ": " + (r4 = i3, (o3 = t2[i3]) == null || typeof o3 == "boolean" || o3 === "" ? "" : typeof o3 != "number" || o3 === 0 || r4 in import_unitless.default ? String(o3).trim() : o3 + "px") + ";"));
      return n3 ? [n3 + " {"].concat(s3, ["}"]) : s3;
    }(e2) : e2.toString();
  }
  var Ae = function(e2) {
    return Array.isArray(e2) && (e2.isCss = true), e2;
  };
  function Ce(e2) {
    for (var t2 = arguments.length, n2 = new Array(t2 > 1 ? t2 - 1 : 0), r3 = 1; r3 < t2; r3++)
      n2[r3 - 1] = arguments[r3];
    return b(e2) || S(e2) ? Ae(Ne(g(w, [e2].concat(n2)))) : n2.length === 0 && e2.length === 1 && typeof e2[0] == "string" ? e2 : Ae(Ne(g(e2, n2)));
  }
  var Ie = /invalid hook call/i;
  var Pe = /* @__PURE__ */ new Set();
  var Oe = function(e2, t2) {
    if (true) {
      var n2 = "The component " + e2 + (t2 ? ' with the id of "' + t2 + '"' : "") + " has been created dynamically.\nYou may see this warning because you've called styled inside another component.\nTo resolve this only create new StyledComponents outside of any render method and function component.", r3 = console.error;
      try {
        var o2 = true;
        console.error = function(e3) {
          if (Ie.test(e3))
            o2 = false, Pe.delete(n2);
          else {
            for (var t3 = arguments.length, s2 = new Array(t3 > 1 ? t3 - 1 : 0), i2 = 1; i2 < t3; i2++)
              s2[i2 - 1] = arguments[i2];
            r3.apply(void 0, [e3].concat(s2));
          }
        }, (0, import_react3.useRef)(), o2 && !Pe.has(n2) && (console.warn(n2), Pe.add(n2));
      } catch (e3) {
        Ie.test(e3.message) && Pe.delete(n2);
      } finally {
        console.error = r3;
      }
    }
  };
  var Re = function(e2, t2, n2) {
    return n2 === void 0 && (n2 = E2), e2.theme !== n2.theme && e2.theme || t2 || n2.theme;
  };
  var De = /[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g;
  var je = /(^-|-$)/g;
  function Te(e2) {
    return e2.replace(De, "-").replace(je, "");
  }
  var xe = function(e2) {
    return ee(ne(e2) >>> 0);
  };
  function ke(e2) {
    return typeof e2 == "string" && e2.charAt(0) === e2.charAt(0).toLowerCase();
  }
  var Ve = function(e2) {
    return typeof e2 == "function" || typeof e2 == "object" && e2 !== null && !Array.isArray(e2);
  };
  var Be = function(e2) {
    return e2 !== "__proto__" && e2 !== "constructor" && e2 !== "prototype";
  };
  function ze(e2, t2, n2) {
    var r3 = e2[n2];
    Ve(t2) && Ve(r3) ? Me(r3, t2) : e2[n2] = t2;
  }
  function Me(e2) {
    for (var t2 = arguments.length, n2 = new Array(t2 > 1 ? t2 - 1 : 0), r3 = 1; r3 < t2; r3++)
      n2[r3 - 1] = arguments[r3];
    for (var o2 = 0, s2 = n2; o2 < s2.length; o2++) {
      var i2 = s2[o2];
      if (Ve(i2))
        for (var a2 in i2)
          Be(a2) && ze(e2, i2[a2], a2);
    }
    return e2;
  }
  var Ge = import_react3.default.createContext();
  var Le = Ge.Consumer;
  function Fe(e2) {
    var t2 = (0, import_react3.useContext)(Ge), n2 = (0, import_react3.useMemo)(function() {
      return function(e3, t3) {
        if (!e3)
          return j(14);
        if (b(e3)) {
          var n3 = e3(t3);
          return n3 !== null && !Array.isArray(n3) && typeof n3 == "object" ? n3 : j(7);
        }
        return Array.isArray(e3) || typeof e3 != "object" ? j(8) : t3 ? v({}, t3, {}, e3) : e3;
      }(e2.theme, t2);
    }, [e2.theme, t2]);
    return e2.children ? import_react3.default.createElement(Ge.Provider, { value: n2 }, e2.children) : null;
  }
  var Ye = {};
  function qe(e2, t2, n2) {
    var o2 = N(e2), i2 = !ke(e2), a2 = t2.attrs, c2 = a2 === void 0 ? w : a2, d2 = t2.componentId, h2 = d2 === void 0 ? function(e3, t3) {
      var n3 = typeof e3 != "string" ? "sc" : Te(e3);
      Ye[n3] = (Ye[n3] || 0) + 1;
      var r3 = n3 + "-" + xe("5.3.3" + n3 + Ye[n3]);
      return t3 ? t3 + "-" + r3 : r3;
    }(t2.displayName, t2.parentComponentId) : d2, p = t2.displayName, f2 = p === void 0 ? function(e3) {
      return ke(e3) ? "styled." + e3 : "Styled(" + _(e3) + ")";
    }(e2) : p, g2 = t2.displayName && t2.componentId ? Te(t2.displayName) + "-" + t2.componentId : t2.componentId || h2, S2 = o2 && e2.attrs ? Array.prototype.concat(e2.attrs, c2).filter(Boolean) : c2, A2 = t2.shouldForwardProp;
    o2 && e2.shouldForwardProp && (A2 = t2.shouldForwardProp ? function(n3, r3, o3) {
      return e2.shouldForwardProp(n3, r3, o3) && t2.shouldForwardProp(n3, r3, o3);
    } : e2.shouldForwardProp);
    var C2, I3 = new se(n2, g2, o2 ? e2.componentStyle : void 0), P2 = I3.isStatic && c2.length === 0, O2 = function(e3, t3) {
      return function(e4, t4, n3, r3) {
        var o3 = e4.attrs, i3 = e4.componentStyle, a3 = e4.defaultProps, c3 = e4.foldedComponentIds, d3 = e4.shouldForwardProp, h3 = e4.styledComponentId, p2 = e4.target;
        (0, import_react3.useDebugValue)(h3);
        var f3 = function(e5, t5, n4) {
          e5 === void 0 && (e5 = E2);
          var r4 = v({}, t5, { theme: e5 }), o4 = {};
          return n4.forEach(function(e6) {
            var t6, n5, s2, i4 = e6;
            for (t6 in b(i4) && (i4 = i4(r4)), i4)
              r4[t6] = o4[t6] = t6 === "className" ? (n5 = o4[t6], s2 = i4[t6], n5 && s2 ? n5 + " " + s2 : n5 || s2) : i4[t6];
          }), [r4, o4];
        }(Re(t4, (0, import_react3.useContext)(Ge), a3) || E2, t4, o3), y2 = f3[0], g3 = f3[1], S3 = function(e5, t5, n4, r4) {
          var o4 = fe(), s2 = me(), i4 = t5 ? e5.generateAndInjectStyles(E2, o4, s2) : e5.generateAndInjectStyles(n4, o4, s2);
          return (0, import_react3.useDebugValue)(i4), !t5 && r4 && r4(i4), i4;
        }(i3, r3, y2, true ? e4.warnTooManyClasses : void 0), w2 = n3, _3 = g3.$as || t4.$as || g3.as || t4.as || p2, N2 = ke(_3), A3 = g3 !== t4 ? v({}, t4, {}, g3) : t4, C3 = {};
        for (var I4 in A3)
          I4[0] !== "$" && I4 !== "as" && (I4 === "forwardedAs" ? C3.as = A3[I4] : (d3 ? d3(I4, is_prop_valid_browser_esm_default, _3) : !N2 || is_prop_valid_browser_esm_default(I4)) && (C3[I4] = A3[I4]));
        return t4.style && g3.style !== t4.style && (C3.style = v({}, t4.style, {}, g3.style)), C3.className = Array.prototype.concat(c3, h3, S3 !== h3 ? S3 : null, t4.className, g3.className).filter(Boolean).join(" "), C3.ref = w2, (0, import_react3.createElement)(_3, C3);
      }(C2, e3, t3, P2);
    };
    return O2.displayName = f2, (C2 = import_react3.default.forwardRef(O2)).attrs = S2, C2.componentStyle = I3, C2.displayName = f2, C2.shouldForwardProp = A2, C2.foldedComponentIds = o2 ? Array.prototype.concat(e2.foldedComponentIds, e2.styledComponentId) : w, C2.styledComponentId = g2, C2.target = o2 ? e2.target : e2, C2.withComponent = function(e3) {
      var r3 = t2.componentId, o3 = function(e4, t3) {
        if (e4 == null)
          return {};
        var n3, r4, o4 = {}, s3 = Object.keys(e4);
        for (r4 = 0; r4 < s3.length; r4++)
          n3 = s3[r4], t3.indexOf(n3) >= 0 || (o4[n3] = e4[n3]);
        return o4;
      }(t2, ["componentId"]), s2 = r3 && r3 + "-" + (ke(e3) ? e3 : Te(_(e3)));
      return qe(e3, v({}, o3, { attrs: S2, componentId: s2 }), n2);
    }, Object.defineProperty(C2, "defaultProps", { get: function() {
      return this._foldedDefaultProps;
    }, set: function(t3) {
      this._foldedDefaultProps = o2 ? Me({}, e2.defaultProps, t3) : t3;
    } }), Oe(f2, g2), C2.warnTooManyClasses = function(e3, t3) {
      var n3 = {}, r3 = false;
      return function(o3) {
        if (!r3 && (n3[o3] = true, Object.keys(n3).length >= 200)) {
          var s2 = t3 ? ' with the id of "' + t3 + '"' : "";
          console.warn("Over 200 classes were generated for component " + e3 + s2 + ".\nConsider using the attrs method, together with a style object for frequently changed styles.\nExample:\n  const Component = styled.div.attrs(props => ({\n    style: {\n      background: props.background,\n    },\n  }))`width: 100%;`\n\n  <Component />"), r3 = true, n3 = {};
        }
      };
    }(f2, g2), C2.toString = function() {
      return "." + C2.styledComponentId;
    }, i2 && (0, import_hoist_non_react_statics.default)(C2, e2, { attrs: true, componentStyle: true, displayName: true, foldedComponentIds: true, shouldForwardProp: true, styledComponentId: true, target: true, withComponent: true }), C2;
  }
  var He = function(e2) {
    return function e3(t2, r3, o2) {
      if (o2 === void 0 && (o2 = E2), !(0, import_react_is.isValidElementType)(r3))
        return j(1, String(r3));
      var s2 = function() {
        return t2(r3, o2, Ce.apply(void 0, arguments));
      };
      return s2.withConfig = function(n2) {
        return e3(t2, r3, v({}, o2, {}, n2));
      }, s2.attrs = function(n2) {
        return e3(t2, r3, v({}, o2, { attrs: Array.prototype.concat(o2.attrs, n2).filter(Boolean) }));
      }, s2;
    }(qe, e2);
  };
  ["a", "abbr", "address", "area", "article", "aside", "audio", "b", "base", "bdi", "bdo", "big", "blockquote", "body", "br", "button", "canvas", "caption", "cite", "code", "col", "colgroup", "data", "datalist", "dd", "del", "details", "dfn", "dialog", "div", "dl", "dt", "em", "embed", "fieldset", "figcaption", "figure", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "i", "iframe", "img", "input", "ins", "kbd", "keygen", "label", "legend", "li", "link", "main", "map", "mark", "marquee", "menu", "menuitem", "meta", "meter", "nav", "noscript", "object", "ol", "optgroup", "option", "output", "p", "param", "picture", "pre", "progress", "q", "rp", "rt", "ruby", "s", "samp", "script", "section", "select", "small", "source", "span", "strong", "style", "sub", "summary", "sup", "table", "tbody", "td", "textarea", "tfoot", "th", "thead", "time", "title", "tr", "track", "u", "ul", "var", "video", "wbr", "circle", "clipPath", "defs", "ellipse", "foreignObject", "g", "image", "line", "linearGradient", "marker", "mask", "path", "pattern", "polygon", "polyline", "radialGradient", "rect", "stop", "svg", "text", "textPath", "tspan"].forEach(function(e2) {
    He[e2] = He(e2);
  });
  var $e = function() {
    function e2(e3, t3) {
      this.rules = e3, this.componentId = t3, this.isStatic = re(e3), Z.registerId(this.componentId + 1);
    }
    var t2 = e2.prototype;
    return t2.createStyles = function(e3, t3, n2, r3) {
      var o2 = r3(Ne(this.rules, t3, n2, r3).join(""), ""), s2 = this.componentId + e3;
      n2.insertRules(s2, s2, o2);
    }, t2.removeStyles = function(e3, t3) {
      t3.clearRules(this.componentId + e3);
    }, t2.renderStyles = function(e3, t3, n2, r3) {
      e3 > 2 && Z.registerId(this.componentId + e3), this.removeStyles(e3, n2), this.createStyles(e3, t3, n2, r3);
    }, e2;
  }();
  function We(e2) {
    for (var t2 = arguments.length, n2 = new Array(t2 > 1 ? t2 - 1 : 0), o2 = 1; o2 < t2; o2++)
      n2[o2 - 1] = arguments[o2];
    var i2 = Ce.apply(void 0, [e2].concat(n2)), a2 = "sc-global-" + xe(JSON.stringify(i2)), u2 = new $e(i2, a2);
    function l2(e3) {
      var t3 = fe(), n3 = me(), o3 = (0, import_react3.useContext)(Ge), l3 = (0, import_react3.useRef)(t3.allocateGSInstance(a2)).current;
      return import_react3.default.Children.count(e3.children) && console.warn("The global style component " + a2 + " was given child JSX. createGlobalStyle does not render children."), i2.some(function(e4) {
        return typeof e4 == "string" && e4.indexOf("@import") !== -1;
      }) && console.warn("Please do not use @import CSS syntax in createGlobalStyle at this time, as the CSSOM APIs we use in production do not handle it well. Instead, we recommend using a library such as react-helmet to inject a typical <link> meta tag to the stylesheet, or simply embedding it manually in your index.html <head> section for a simpler app."), t3.server && h2(l3, e3, t3, o3, n3), (0, import_react3.useLayoutEffect)(function() {
        if (!t3.server)
          return h2(l3, e3, t3, o3, n3), function() {
            return u2.removeStyles(l3, t3);
          };
      }, [l3, e3, t3, o3, n3]), null;
    }
    function h2(e3, t3, n3, r3, o3) {
      if (u2.isStatic)
        u2.renderStyles(e3, O, n3, o3);
      else {
        var s2 = v({}, t3, { theme: Re(t3, r3, l2.defaultProps) });
        u2.renderStyles(e3, s2, n3, o3);
      }
    }
    return Oe(a2), import_react3.default.memo(l2);
  }
  function Ue(e2) {
    typeof navigator != "undefined" && navigator.product === "ReactNative" && console.warn("`keyframes` cannot be used on ReactNative, only on the web. To do animation in ReactNative please use Animated.");
    for (var t2 = arguments.length, n2 = new Array(t2 > 1 ? t2 - 1 : 0), r3 = 1; r3 < t2; r3++)
      n2[r3 - 1] = arguments[r3];
    var o2 = Ce.apply(void 0, [e2].concat(n2)).join(""), s2 = xe(o2);
    return new ve(s2, o2);
  }
  var Je = function() {
    function e2() {
      var e3 = this;
      this._emitSheetCSS = function() {
        var t3 = e3.instance.toString();
        if (!t3)
          return "";
        var n2 = q();
        return "<style " + [n2 && 'nonce="' + n2 + '"', A + '="true"', 'data-styled-version="5.3.3"'].filter(Boolean).join(" ") + ">" + t3 + "</style>";
      }, this.getStyleTags = function() {
        return e3.sealed ? j(2) : e3._emitSheetCSS();
      }, this.getStyleElement = function() {
        var t3;
        if (e3.sealed)
          return j(2);
        var n2 = ((t3 = {})[A] = "", t3["data-styled-version"] = "5.3.3", t3.dangerouslySetInnerHTML = { __html: e3.instance.toString() }, t3), o2 = q();
        return o2 && (n2.nonce = o2), [import_react3.default.createElement("style", v({}, n2, { key: "sc-0-0" }))];
      }, this.seal = function() {
        e3.sealed = true;
      }, this.instance = new Z({ isServer: true }), this.sealed = false;
    }
    var t2 = e2.prototype;
    return t2.collectStyles = function(e3) {
      return this.sealed ? j(2) : import_react3.default.createElement(ye, { sheet: this.instance }, e3);
    }, t2.interleaveWithNodeStream = function(e3) {
      return j(3);
    }, e2;
  }();
  typeof navigator != "undefined" && navigator.product === "ReactNative" && console.warn("It looks like you've imported 'styled-components' on React Native.\nPerhaps you're looking to import 'styled-components/native'?\nRead more about this at https://www.styled-components.com/docs/basics#react-native"), typeof window != "undefined" && (window["__styled-components-init__"] = window["__styled-components-init__"] || 0, window["__styled-components-init__"] === 1 && console.warn("It looks like there are several instances of 'styled-components' initialized in this application. This may cause dynamic styles to not render properly, errors during the rehydration process, a missing theme prop, and makes your application bigger without good reason.\n\nSee https://s-c.sh/2BAXzed for more info."), window["__styled-components-init__"] += 1);
  var styled_components_browser_esm_default = He;

  // src/pages/Feed/index.jsx
  var import_react11 = __toESM(require_react());

  // node_modules/@mui/material/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
  function _objectWithoutPropertiesLoose2(source, excluded) {
    if (source == null)
      return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i2;
    for (i2 = 0; i2 < sourceKeys.length; i2++) {
      key = sourceKeys[i2];
      if (excluded.indexOf(key) >= 0)
        continue;
      target[key] = source[key];
    }
    return target;
  }

  // node_modules/@mui/material/node_modules/@babel/runtime/helpers/esm/extends.js
  function _extends3() {
    _extends3 = Object.assign || function(target) {
      for (var i2 = 1; i2 < arguments.length; i2++) {
        var source = arguments[i2];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    return _extends3.apply(this, arguments);
  }

  // node_modules/@mui/material/Avatar/Avatar.js
  var React3 = __toESM(require_react());
  var import_prop_types = __toESM(require_prop_types());
  var import_clsx = __toESM(require_clsx());
  var import_core3 = __toESM(require_node3());

  // node_modules/@mui/material/styles/styled.js
  var import_system3 = __toESM(require_system());

  // node_modules/@mui/material/styles/createTheme.js
  var import_utils3 = __toESM(require_utils());
  var import_core = __toESM(require_node3());
  var import_system2 = __toESM(require_system());

  // node_modules/@mui/material/styles/createMixins.js
  function createMixins(breakpoints, spacing, mixins) {
    return _extends3({
      toolbar: {
        minHeight: 56,
        [`${breakpoints.up("xs")} and (orientation: landscape)`]: {
          minHeight: 48
        },
        [breakpoints.up("sm")]: {
          minHeight: 64
        }
      }
    }, mixins);
  }

  // node_modules/@mui/material/styles/createPalette.js
  var import_utils = __toESM(require_utils());
  var import_system = __toESM(require_system());

  // node_modules/@mui/material/colors/common.js
  var common = {
    black: "#000",
    white: "#fff"
  };
  var common_default = common;

  // node_modules/@mui/material/colors/grey.js
  var grey = {
    50: "#fafafa",
    100: "#f5f5f5",
    200: "#eeeeee",
    300: "#e0e0e0",
    400: "#bdbdbd",
    500: "#9e9e9e",
    600: "#757575",
    700: "#616161",
    800: "#424242",
    900: "#212121",
    A100: "#f5f5f5",
    A200: "#eeeeee",
    A400: "#bdbdbd",
    A700: "#616161"
  };
  var grey_default = grey;

  // node_modules/@mui/material/colors/purple.js
  var purple = {
    50: "#f3e5f5",
    100: "#e1bee7",
    200: "#ce93d8",
    300: "#ba68c8",
    400: "#ab47bc",
    500: "#9c27b0",
    600: "#8e24aa",
    700: "#7b1fa2",
    800: "#6a1b9a",
    900: "#4a148c",
    A100: "#ea80fc",
    A200: "#e040fb",
    A400: "#d500f9",
    A700: "#aa00ff"
  };
  var purple_default = purple;

  // node_modules/@mui/material/colors/red.js
  var red = {
    50: "#ffebee",
    100: "#ffcdd2",
    200: "#ef9a9a",
    300: "#e57373",
    400: "#ef5350",
    500: "#f44336",
    600: "#e53935",
    700: "#d32f2f",
    800: "#c62828",
    900: "#b71c1c",
    A100: "#ff8a80",
    A200: "#ff5252",
    A400: "#ff1744",
    A700: "#d50000"
  };
  var red_default = red;

  // node_modules/@mui/material/colors/orange.js
  var orange = {
    50: "#fff3e0",
    100: "#ffe0b2",
    200: "#ffcc80",
    300: "#ffb74d",
    400: "#ffa726",
    500: "#ff9800",
    600: "#fb8c00",
    700: "#f57c00",
    800: "#ef6c00",
    900: "#e65100",
    A100: "#ffd180",
    A200: "#ffab40",
    A400: "#ff9100",
    A700: "#ff6d00"
  };
  var orange_default = orange;

  // node_modules/@mui/material/colors/blue.js
  var blue = {
    50: "#e3f2fd",
    100: "#bbdefb",
    200: "#90caf9",
    300: "#64b5f6",
    400: "#42a5f5",
    500: "#2196f3",
    600: "#1e88e5",
    700: "#1976d2",
    800: "#1565c0",
    900: "#0d47a1",
    A100: "#82b1ff",
    A200: "#448aff",
    A400: "#2979ff",
    A700: "#2962ff"
  };
  var blue_default = blue;

  // node_modules/@mui/material/colors/lightBlue.js
  var lightBlue = {
    50: "#e1f5fe",
    100: "#b3e5fc",
    200: "#81d4fa",
    300: "#4fc3f7",
    400: "#29b6f6",
    500: "#03a9f4",
    600: "#039be5",
    700: "#0288d1",
    800: "#0277bd",
    900: "#01579b",
    A100: "#80d8ff",
    A200: "#40c4ff",
    A400: "#00b0ff",
    A700: "#0091ea"
  };
  var lightBlue_default = lightBlue;

  // node_modules/@mui/material/colors/green.js
  var green = {
    50: "#e8f5e9",
    100: "#c8e6c9",
    200: "#a5d6a7",
    300: "#81c784",
    400: "#66bb6a",
    500: "#4caf50",
    600: "#43a047",
    700: "#388e3c",
    800: "#2e7d32",
    900: "#1b5e20",
    A100: "#b9f6ca",
    A200: "#69f0ae",
    A400: "#00e676",
    A700: "#00c853"
  };
  var green_default = green;

  // node_modules/@mui/material/styles/createPalette.js
  var _excluded3 = ["mode", "contrastThreshold", "tonalOffset"];
  var light = {
    text: {
      primary: "rgba(0, 0, 0, 0.87)",
      secondary: "rgba(0, 0, 0, 0.6)",
      disabled: "rgba(0, 0, 0, 0.38)"
    },
    divider: "rgba(0, 0, 0, 0.12)",
    background: {
      paper: common_default.white,
      default: common_default.white
    },
    action: {
      active: "rgba(0, 0, 0, 0.54)",
      hover: "rgba(0, 0, 0, 0.04)",
      hoverOpacity: 0.04,
      selected: "rgba(0, 0, 0, 0.08)",
      selectedOpacity: 0.08,
      disabled: "rgba(0, 0, 0, 0.26)",
      disabledBackground: "rgba(0, 0, 0, 0.12)",
      disabledOpacity: 0.38,
      focus: "rgba(0, 0, 0, 0.12)",
      focusOpacity: 0.12,
      activatedOpacity: 0.12
    }
  };
  var dark = {
    text: {
      primary: common_default.white,
      secondary: "rgba(255, 255, 255, 0.7)",
      disabled: "rgba(255, 255, 255, 0.5)",
      icon: "rgba(255, 255, 255, 0.5)"
    },
    divider: "rgba(255, 255, 255, 0.12)",
    background: {
      paper: "#121212",
      default: "#121212"
    },
    action: {
      active: common_default.white,
      hover: "rgba(255, 255, 255, 0.08)",
      hoverOpacity: 0.08,
      selected: "rgba(255, 255, 255, 0.16)",
      selectedOpacity: 0.16,
      disabled: "rgba(255, 255, 255, 0.3)",
      disabledBackground: "rgba(255, 255, 255, 0.12)",
      disabledOpacity: 0.38,
      focus: "rgba(255, 255, 255, 0.12)",
      focusOpacity: 0.12,
      activatedOpacity: 0.24
    }
  };
  function addLightOrDark(intent, direction, shade, tonalOffset) {
    const tonalOffsetLight = tonalOffset.light || tonalOffset;
    const tonalOffsetDark = tonalOffset.dark || tonalOffset * 1.5;
    if (!intent[direction]) {
      if (intent.hasOwnProperty(shade)) {
        intent[direction] = intent[shade];
      } else if (direction === "light") {
        intent.light = (0, import_system.lighten)(intent.main, tonalOffsetLight);
      } else if (direction === "dark") {
        intent.dark = (0, import_system.darken)(intent.main, tonalOffsetDark);
      }
    }
  }
  function getDefaultPrimary(mode = "light") {
    if (mode === "dark") {
      return {
        main: blue_default[200],
        light: blue_default[50],
        dark: blue_default[400]
      };
    }
    return {
      main: blue_default[700],
      light: blue_default[400],
      dark: blue_default[800]
    };
  }
  function getDefaultSecondary(mode = "light") {
    if (mode === "dark") {
      return {
        main: purple_default[200],
        light: purple_default[50],
        dark: purple_default[400]
      };
    }
    return {
      main: purple_default[500],
      light: purple_default[300],
      dark: purple_default[700]
    };
  }
  function getDefaultError(mode = "light") {
    if (mode === "dark") {
      return {
        main: red_default[500],
        light: red_default[300],
        dark: red_default[700]
      };
    }
    return {
      main: red_default[700],
      light: red_default[400],
      dark: red_default[800]
    };
  }
  function getDefaultInfo(mode = "light") {
    if (mode === "dark") {
      return {
        main: lightBlue_default[400],
        light: lightBlue_default[300],
        dark: lightBlue_default[700]
      };
    }
    return {
      main: lightBlue_default[700],
      light: lightBlue_default[500],
      dark: lightBlue_default[900]
    };
  }
  function getDefaultSuccess(mode = "light") {
    if (mode === "dark") {
      return {
        main: green_default[400],
        light: green_default[300],
        dark: green_default[700]
      };
    }
    return {
      main: green_default[800],
      light: green_default[500],
      dark: green_default[900]
    };
  }
  function getDefaultWarning(mode = "light") {
    if (mode === "dark") {
      return {
        main: orange_default[400],
        light: orange_default[300],
        dark: orange_default[700]
      };
    }
    return {
      main: "#ed6c02",
      light: orange_default[500],
      dark: orange_default[900]
    };
  }
  function createPalette(palette) {
    const {
      mode = "light",
      contrastThreshold = 3,
      tonalOffset = 0.2
    } = palette, other = _objectWithoutPropertiesLoose2(palette, _excluded3);
    const primary = palette.primary || getDefaultPrimary(mode);
    const secondary = palette.secondary || getDefaultSecondary(mode);
    const error = palette.error || getDefaultError(mode);
    const info = palette.info || getDefaultInfo(mode);
    const success = palette.success || getDefaultSuccess(mode);
    const warning2 = palette.warning || getDefaultWarning(mode);
    function getContrastText(background) {
      const contrastText = (0, import_system.getContrastRatio)(background, dark.text.primary) >= contrastThreshold ? dark.text.primary : light.text.primary;
      if (true) {
        const contrast = (0, import_system.getContrastRatio)(background, contrastText);
        if (contrast < 3) {
          console.error([`MUI: The contrast ratio of ${contrast}:1 for ${contrastText} on ${background}`, "falls below the WCAG recommended absolute minimum contrast ratio of 3:1.", "https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast"].join("\n"));
        }
      }
      return contrastText;
    }
    const augmentColor = ({
      color,
      name,
      mainShade = 500,
      lightShade = 300,
      darkShade = 700
    }) => {
      color = _extends3({}, color);
      if (!color.main && color[mainShade]) {
        color.main = color[mainShade];
      }
      if (!color.hasOwnProperty("main")) {
        throw new Error(true ? `MUI: The color${name ? ` (${name})` : ""} provided to augmentColor(color) is invalid.
The color object needs to have a \`main\` property or a \`${mainShade}\` property.` : (0, import_utils.formatMuiErrorMessage)(11, name ? ` (${name})` : "", mainShade));
      }
      if (typeof color.main !== "string") {
        throw new Error(true ? `MUI: The color${name ? ` (${name})` : ""} provided to augmentColor(color) is invalid.
\`color.main\` should be a string, but \`${JSON.stringify(color.main)}\` was provided instead.

Did you intend to use one of the following approaches?

import { green } from "@mui/material/colors";

const theme1 = createTheme({ palette: {
  primary: green,
} });

const theme2 = createTheme({ palette: {
  primary: { main: green[500] },
} });` : (0, import_utils.formatMuiErrorMessage)(12, name ? ` (${name})` : "", JSON.stringify(color.main)));
      }
      addLightOrDark(color, "light", lightShade, tonalOffset);
      addLightOrDark(color, "dark", darkShade, tonalOffset);
      if (!color.contrastText) {
        color.contrastText = getContrastText(color.main);
      }
      return color;
    };
    const modes = {
      dark,
      light
    };
    if (true) {
      if (!modes[mode]) {
        console.error(`MUI: The palette mode \`${mode}\` is not supported.`);
      }
    }
    const paletteOutput = (0, import_utils.deepmerge)(_extends3({
      common: common_default,
      mode,
      primary: augmentColor({
        color: primary,
        name: "primary"
      }),
      secondary: augmentColor({
        color: secondary,
        name: "secondary",
        mainShade: "A400",
        lightShade: "A200",
        darkShade: "A700"
      }),
      error: augmentColor({
        color: error,
        name: "error"
      }),
      warning: augmentColor({
        color: warning2,
        name: "warning"
      }),
      info: augmentColor({
        color: info,
        name: "info"
      }),
      success: augmentColor({
        color: success,
        name: "success"
      }),
      grey: grey_default,
      contrastThreshold,
      getContrastText,
      augmentColor,
      tonalOffset
    }, modes[mode]), other);
    return paletteOutput;
  }

  // node_modules/@mui/material/styles/createTypography.js
  var import_utils2 = __toESM(require_utils());
  var _excluded4 = ["fontFamily", "fontSize", "fontWeightLight", "fontWeightRegular", "fontWeightMedium", "fontWeightBold", "htmlFontSize", "allVariants", "pxToRem"];
  function round(value) {
    return Math.round(value * 1e5) / 1e5;
  }
  var caseAllCaps = {
    textTransform: "uppercase"
  };
  var defaultFontFamily = '"Roboto", "Helvetica", "Arial", sans-serif';
  function createTypography(palette, typography) {
    const _ref = typeof typography === "function" ? typography(palette) : typography, {
      fontFamily = defaultFontFamily,
      fontSize = 14,
      fontWeightLight = 300,
      fontWeightRegular = 400,
      fontWeightMedium = 500,
      fontWeightBold = 700,
      htmlFontSize = 16,
      allVariants,
      pxToRem: pxToRem2
    } = _ref, other = _objectWithoutPropertiesLoose2(_ref, _excluded4);
    if (true) {
      if (typeof fontSize !== "number") {
        console.error("MUI: `fontSize` is required to be a number.");
      }
      if (typeof htmlFontSize !== "number") {
        console.error("MUI: `htmlFontSize` is required to be a number.");
      }
    }
    const coef = fontSize / 14;
    const pxToRem = pxToRem2 || ((size) => `${size / htmlFontSize * coef}rem`);
    const buildVariant = (fontWeight, size, lineHeight, letterSpacing, casing) => _extends3({
      fontFamily,
      fontWeight,
      fontSize: pxToRem(size),
      lineHeight
    }, fontFamily === defaultFontFamily ? {
      letterSpacing: `${round(letterSpacing / size)}em`
    } : {}, casing, allVariants);
    const variants = {
      h1: buildVariant(fontWeightLight, 96, 1.167, -1.5),
      h2: buildVariant(fontWeightLight, 60, 1.2, -0.5),
      h3: buildVariant(fontWeightRegular, 48, 1.167, 0),
      h4: buildVariant(fontWeightRegular, 34, 1.235, 0.25),
      h5: buildVariant(fontWeightRegular, 24, 1.334, 0),
      h6: buildVariant(fontWeightMedium, 20, 1.6, 0.15),
      subtitle1: buildVariant(fontWeightRegular, 16, 1.75, 0.15),
      subtitle2: buildVariant(fontWeightMedium, 14, 1.57, 0.1),
      body1: buildVariant(fontWeightRegular, 16, 1.5, 0.15),
      body2: buildVariant(fontWeightRegular, 14, 1.43, 0.15),
      button: buildVariant(fontWeightMedium, 14, 1.75, 0.4, caseAllCaps),
      caption: buildVariant(fontWeightRegular, 12, 1.66, 0.4),
      overline: buildVariant(fontWeightRegular, 12, 2.66, 1, caseAllCaps)
    };
    return (0, import_utils2.deepmerge)(_extends3({
      htmlFontSize,
      pxToRem,
      fontFamily,
      fontSize,
      fontWeightLight,
      fontWeightRegular,
      fontWeightMedium,
      fontWeightBold
    }, variants), other, {
      clone: false
    });
  }

  // node_modules/@mui/material/styles/shadows.js
  var shadowKeyUmbraOpacity = 0.2;
  var shadowKeyPenumbraOpacity = 0.14;
  var shadowAmbientShadowOpacity = 0.12;
  function createShadow(...px) {
    return [`${px[0]}px ${px[1]}px ${px[2]}px ${px[3]}px rgba(0,0,0,${shadowKeyUmbraOpacity})`, `${px[4]}px ${px[5]}px ${px[6]}px ${px[7]}px rgba(0,0,0,${shadowKeyPenumbraOpacity})`, `${px[8]}px ${px[9]}px ${px[10]}px ${px[11]}px rgba(0,0,0,${shadowAmbientShadowOpacity})`].join(",");
  }
  var shadows = ["none", createShadow(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), createShadow(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), createShadow(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), createShadow(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), createShadow(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), createShadow(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), createShadow(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), createShadow(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), createShadow(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), createShadow(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), createShadow(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), createShadow(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), createShadow(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), createShadow(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), createShadow(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), createShadow(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), createShadow(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), createShadow(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), createShadow(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), createShadow(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), createShadow(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), createShadow(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), createShadow(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), createShadow(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)];
  var shadows_default = shadows;

  // node_modules/@mui/material/styles/createTransitions.js
  var _excluded5 = ["duration", "easing", "delay"];
  var easing = {
    easeInOut: "cubic-bezier(0.4, 0, 0.2, 1)",
    easeOut: "cubic-bezier(0.0, 0, 0.2, 1)",
    easeIn: "cubic-bezier(0.4, 0, 1, 1)",
    sharp: "cubic-bezier(0.4, 0, 0.6, 1)"
  };
  var duration = {
    shortest: 150,
    shorter: 200,
    short: 250,
    standard: 300,
    complex: 375,
    enteringScreen: 225,
    leavingScreen: 195
  };
  function formatMs(milliseconds) {
    return `${Math.round(milliseconds)}ms`;
  }
  function getAutoHeightDuration(height) {
    if (!height) {
      return 0;
    }
    const constant = height / 36;
    return Math.round((4 + 15 * constant ** 0.25 + constant / 5) * 10);
  }
  function createTransitions(inputTransitions) {
    const mergedEasing = _extends3({}, easing, inputTransitions.easing);
    const mergedDuration = _extends3({}, duration, inputTransitions.duration);
    const create = (props = ["all"], options = {}) => {
      const {
        duration: durationOption = mergedDuration.standard,
        easing: easingOption = mergedEasing.easeInOut,
        delay = 0
      } = options, other = _objectWithoutPropertiesLoose2(options, _excluded5);
      if (true) {
        const isString = (value) => typeof value === "string";
        const isNumber = (value) => !isNaN(parseFloat(value));
        if (!isString(props) && !Array.isArray(props)) {
          console.error('MUI: Argument "props" must be a string or Array.');
        }
        if (!isNumber(durationOption) && !isString(durationOption)) {
          console.error(`MUI: Argument "duration" must be a number or a string but found ${durationOption}.`);
        }
        if (!isString(easingOption)) {
          console.error('MUI: Argument "easing" must be a string.');
        }
        if (!isNumber(delay) && !isString(delay)) {
          console.error('MUI: Argument "delay" must be a number or a string.');
        }
        if (Object.keys(other).length !== 0) {
          console.error(`MUI: Unrecognized argument(s) [${Object.keys(other).join(",")}].`);
        }
      }
      return (Array.isArray(props) ? props : [props]).map((animatedProp) => `${animatedProp} ${typeof durationOption === "string" ? durationOption : formatMs(durationOption)} ${easingOption} ${typeof delay === "string" ? delay : formatMs(delay)}`).join(",");
    };
    return _extends3({
      getAutoHeightDuration,
      create
    }, inputTransitions, {
      easing: mergedEasing,
      duration: mergedDuration
    });
  }

  // node_modules/@mui/material/styles/zIndex.js
  var zIndex = {
    mobileStepper: 1e3,
    speedDial: 1050,
    appBar: 1100,
    drawer: 1200,
    modal: 1300,
    snackbar: 1400,
    tooltip: 1500
  };
  var zIndex_default = zIndex;

  // node_modules/@mui/material/styles/createTheme.js
  var _excluded6 = ["breakpoints", "mixins", "spacing", "palette", "transitions", "typography", "shape"];
  function createTheme(options = {}, ...args) {
    const {
      mixins: mixinsInput = {},
      palette: paletteInput = {},
      transitions: transitionsInput = {},
      typography: typographyInput = {}
    } = options, other = _objectWithoutPropertiesLoose2(options, _excluded6);
    const palette = createPalette(paletteInput);
    const systemTheme = (0, import_system2.createTheme)(options);
    let muiTheme = (0, import_utils3.deepmerge)(systemTheme, {
      mixins: createMixins(systemTheme.breakpoints, systemTheme.spacing, mixinsInput),
      palette,
      shadows: shadows_default.slice(),
      typography: createTypography(palette, typographyInput),
      transitions: createTransitions(transitionsInput),
      zIndex: _extends3({}, zIndex_default)
    });
    muiTheme = (0, import_utils3.deepmerge)(muiTheme, other);
    muiTheme = args.reduce((acc, argument) => (0, import_utils3.deepmerge)(acc, argument), muiTheme);
    if (true) {
      const stateClasses = ["active", "checked", "completed", "disabled", "error", "expanded", "focused", "focusVisible", "required", "selected"];
      const traverse = (node, component) => {
        let key;
        for (key in node) {
          const child = node[key];
          if (stateClasses.indexOf(key) !== -1 && Object.keys(child).length > 0) {
            if (true) {
              const stateClass = (0, import_core.generateUtilityClass)("", key);
              console.error([`MUI: The \`${component}\` component increases the CSS specificity of the \`${key}\` internal state.`, "You can not override it like this: ", JSON.stringify(node, null, 2), "", `Instead, you need to use the '&.${stateClass}' syntax:`, JSON.stringify({
                root: {
                  [`&.${stateClass}`]: child
                }
              }, null, 2), "", "https://mui.com/r/state-classes-guide"].join("\n"));
            }
            node[key] = {};
          }
        }
      };
      Object.keys(muiTheme.components).forEach((component) => {
        const styleOverrides = muiTheme.components[component].styleOverrides;
        if (styleOverrides && component.indexOf("Mui") === 0) {
          traverse(styleOverrides, component);
        }
      });
    }
    return muiTheme;
  }
  var createTheme_default = createTheme;

  // node_modules/@mui/material/styles/defaultTheme.js
  var defaultTheme = createTheme_default();
  var defaultTheme_default = defaultTheme;

  // node_modules/@mui/material/styles/styled.js
  var rootShouldForwardProp = (prop) => (0, import_system3.shouldForwardProp)(prop) && prop !== "classes";
  var styled = (0, import_system3.createStyled)({
    defaultTheme: defaultTheme_default,
    rootShouldForwardProp
  });
  var styled_default = styled;

  // node_modules/@mui/material/styles/useThemeProps.js
  var import_system4 = __toESM(require_system());
  function useThemeProps({
    props,
    name
  }) {
    return (0, import_system4.useThemeProps)({
      props,
      name,
      defaultTheme: defaultTheme_default
    });
  }

  // node_modules/@mui/material/internal/svg-icons/Person.js
  var React2 = __toESM(require_react());

  // node_modules/@mui/material/utils/createSvgIcon.js
  var React = __toESM(require_react());
  var import_SvgIcon = __toESM(require_SvgIcon2());
  var import_jsx_runtime = __toESM(require_jsx_runtime());
  function createSvgIcon(path, displayName) {
    const Component = (props, ref) => /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_SvgIcon.default, _extends3({
      "data-testid": `${displayName}Icon`,
      ref
    }, props, {
      children: path
    }));
    if (true) {
      Component.displayName = `${displayName}Icon`;
    }
    Component.muiName = import_SvgIcon.default.muiName;
    return /* @__PURE__ */ React.memo(/* @__PURE__ */ React.forwardRef(Component));
  }

  // node_modules/@mui/material/internal/svg-icons/Person.js
  var import_jsx_runtime2 = __toESM(require_jsx_runtime());
  var Person_default = createSvgIcon(/* @__PURE__ */ (0, import_jsx_runtime2.jsx)("path", {
    d: "M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
  }), "Person");

  // node_modules/@mui/material/Avatar/avatarClasses.js
  var import_core2 = __toESM(require_node3());
  function getAvatarUtilityClass(slot) {
    return (0, import_core2.generateUtilityClass)("MuiAvatar", slot);
  }
  var avatarClasses = (0, import_core2.generateUtilityClasses)("MuiAvatar", ["root", "colorDefault", "circular", "rounded", "square", "img", "fallback"]);

  // node_modules/@mui/material/Avatar/Avatar.js
  var import_jsx_runtime3 = __toESM(require_jsx_runtime());
  var _excluded7 = ["alt", "children", "className", "component", "imgProps", "sizes", "src", "srcSet", "variant"];
  var useUtilityClasses = (ownerState) => {
    const {
      classes,
      variant,
      colorDefault
    } = ownerState;
    const slots = {
      root: ["root", variant, colorDefault && "colorDefault"],
      img: ["img"],
      fallback: ["fallback"]
    };
    return (0, import_core3.unstable_composeClasses)(slots, getAvatarUtilityClass, classes);
  };
  var AvatarRoot = styled_default("div", {
    name: "MuiAvatar",
    slot: "Root",
    overridesResolver: (props, styles2) => {
      const {
        ownerState
      } = props;
      return [styles2.root, styles2[ownerState.variant], ownerState.colorDefault && styles2.colorDefault];
    }
  })(({
    theme,
    ownerState
  }) => _extends3({
    position: "relative",
    display: "flex",
    alignItems: "center",
    justifyContent: "center",
    flexShrink: 0,
    width: 40,
    height: 40,
    fontFamily: theme.typography.fontFamily,
    fontSize: theme.typography.pxToRem(20),
    lineHeight: 1,
    borderRadius: "50%",
    overflow: "hidden",
    userSelect: "none"
  }, ownerState.variant === "rounded" && {
    borderRadius: theme.shape.borderRadius
  }, ownerState.variant === "square" && {
    borderRadius: 0
  }, ownerState.colorDefault && {
    color: theme.palette.background.default,
    backgroundColor: theme.palette.mode === "light" ? theme.palette.grey[400] : theme.palette.grey[600]
  }));
  var AvatarImg = styled_default("img", {
    name: "MuiAvatar",
    slot: "Img",
    overridesResolver: (props, styles2) => styles2.img
  })({
    width: "100%",
    height: "100%",
    textAlign: "center",
    objectFit: "cover",
    color: "transparent",
    textIndent: 1e4
  });
  var AvatarFallback = styled_default(Person_default, {
    name: "MuiAvatar",
    slot: "Fallback",
    overridesResolver: (props, styles2) => styles2.fallback
  })({
    width: "75%",
    height: "75%"
  });
  function useLoaded({
    crossOrigin,
    referrerPolicy,
    src,
    srcSet
  }) {
    const [loaded, setLoaded] = React3.useState(false);
    React3.useEffect(() => {
      if (!src && !srcSet) {
        return void 0;
      }
      setLoaded(false);
      let active = true;
      const image = new Image();
      image.onload = () => {
        if (!active) {
          return;
        }
        setLoaded("loaded");
      };
      image.onerror = () => {
        if (!active) {
          return;
        }
        setLoaded("error");
      };
      image.crossOrigin = crossOrigin;
      image.referrerPolicy = referrerPolicy;
      image.src = src;
      if (srcSet) {
        image.srcset = srcSet;
      }
      return () => {
        active = false;
      };
    }, [crossOrigin, referrerPolicy, src, srcSet]);
    return loaded;
  }
  var Avatar = /* @__PURE__ */ React3.forwardRef(function Avatar2(inProps, ref) {
    const props = useThemeProps({
      props: inProps,
      name: "MuiAvatar"
    });
    const {
      alt,
      children: childrenProp,
      className,
      component = "div",
      imgProps,
      sizes,
      src,
      srcSet,
      variant = "circular"
    } = props, other = _objectWithoutPropertiesLoose2(props, _excluded7);
    let children = null;
    const loaded = useLoaded(_extends3({}, imgProps, {
      src,
      srcSet
    }));
    const hasImg = src || srcSet;
    const hasImgNotFailing = hasImg && loaded !== "error";
    const ownerState = _extends3({}, props, {
      colorDefault: !hasImgNotFailing,
      component,
      variant
    });
    const classes = useUtilityClasses(ownerState);
    if (hasImgNotFailing) {
      children = /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(AvatarImg, _extends3({
        alt,
        src,
        srcSet,
        sizes,
        ownerState,
        className: classes.img
      }, imgProps));
    } else if (childrenProp != null) {
      children = childrenProp;
    } else if (hasImg && alt) {
      children = alt[0];
    } else {
      children = /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(AvatarFallback, {
        className: classes.fallback
      });
    }
    return /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(AvatarRoot, _extends3({
      as: component,
      ownerState,
      className: (0, import_clsx.default)(classes.root, className),
      ref
    }, other, {
      children
    }));
  });
  true ? Avatar.propTypes = {
    alt: import_prop_types.default.string,
    children: import_prop_types.default.node,
    classes: import_prop_types.default.object,
    className: import_prop_types.default.string,
    component: import_prop_types.default.elementType,
    imgProps: import_prop_types.default.object,
    sizes: import_prop_types.default.string,
    src: import_prop_types.default.string,
    srcSet: import_prop_types.default.string,
    sx: import_prop_types.default.oneOfType([import_prop_types.default.arrayOf(import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object])), import_prop_types.default.func, import_prop_types.default.object]),
    variant: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(["circular", "rounded", "square"]), import_prop_types.default.string])
  } : void 0;
  var Avatar_default = Avatar;

  // src/pages/Feed/index.jsx
  var import_FavoriteBorder = __toESM(require_FavoriteBorder());
  var import_ChatBubbleOutline = __toESM(require_ChatBubbleOutline());
  var import_PlayArrow = __toESM(require_PlayArrow());

  // src/api/useFetch.js
  var import_react4 = __toESM(require_react());

  // src/helpers/createSuccessfulPromise.js
  var createSuccessfulPromise = (promiseValue) => new Promise((resolve) => {
    resolve(promiseValue);
  });
  var createSuccessfulPromise_default = createSuccessfulPromise;

  // src/assets/mockData/userFeed.json
  var statusCode = 0;
  var itemList = [
    {
      id: "7031029610628320518",
      desc: "#oleg_sheff",
      createTime: 1637039152,
      video: {
        id: "7031029610628320518",
        height: 1024,
        width: 576,
        duration: 8,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/6e94ebc0a81f48e884cc96c4d14b1bce?x-expires=1637078400&x-signature=G6CGm9GCyKc%2BVho3lA%2F28gS6Nyg%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/0723d82a8fef493dae593393efb3d3be_1637039153?x-expires=1637078400&x-signature=mzalAEmkI6nISa7DVTKg3v%2FAIN8%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/53656049821a4aca8b3630aa9f78de15_1637039154?x-expires=1637078400&x-signature=OxDtCPqgSDhaREx5pwBpKeVmy0U%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-pve-0068/f527b7a93c154168a7bfa5272af59662/?a=1988&br=1618&bt=809&cd=0%7C0%7C0&ch=0&cr=0&cs=0&dr=0&ds=3&er=&expire=1637078708&ft=wUyFfFGnkag3-I&l=2021111610050001018907420806051B9B&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=amxqZ2g6ZjltOTMzNzczM0ApZztnOTw1M2VoNzMzOmU3N2cvYmAxcjRfbDZgLS1kMTZzc2FjMi4uYV8xX2I0YV81XzQ6Yw%3D%3D&signature=4b4e8d99bfdfbfa251c1d1525fa1aa5c&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/0723d82a8fef493dae593393efb3d3be_1637039153~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=L2eiboZgYBMMtiu2MUUW5EVGxLk%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/0723d82a8fef493dae593393efb3d3be_1637039153~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=QtOiTU9SgFXP4pvZf%2Foj%2BQ4jres%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/6e94ebc0a81f48e884cc96c4d14b1bce?x-expires=1637078400&x-signature=G6CGm9GCyKc%2BVho3lA%2F28gS6Nyg%3D",
        bitrate: 828461,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "7016773558680438786",
        title: "\u0414\u043E\u0431\u0440\u043E\u0433\u043E \u0432\u0435\u0447\u043E\u0440\u0430 - Where Are You From",
        playUrl: "https://sf58-ies-music-va.tiktokcdn.com/obj/tos-useast2a-ve-2774/dca16b7ed1f0415d9700b10c5a3b5439",
        coverThumb: "https://p16-amd-va.tiktokcdn.com/img/tos-useast2a-v-2774/cdeb257c8bf44db692a1c8b0b88f6f5c~c5_100x100.jpeg",
        coverMedium: "https://p16-amd-va.tiktokcdn.com/img/tos-useast2a-v-2774/cdeb257c8bf44db692a1c8b0b88f6f5c~c5_200x200.jpeg",
        coverLarge: "https://p16-amd-va.tiktokcdn.com/img/tos-useast2a-v-2774/cdeb257c8bf44db692a1c8b0b88f6f5c~c5_720x720.jpeg",
        authorName: "PROBASS \u2206 HARDI",
        original: false,
        duration: 60,
        album: "\u0414\u043E\u0431\u0440\u043E\u0433\u043E \u0432\u0435\u0447\u043E\u0440\u0430 - Where Are You From"
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 6,
        shareCount: 0,
        commentCount: 0,
        playCount: 69
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      effectStickers: [
        {
          name: "\u0413\u0430\u0437\u0435\u0442\u0430 TikTok Times",
          ID: "1176860"
        }
      ],
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7030846136889986310",
      desc: "#oleg_sheff",
      createTime: 1636996432,
      video: {
        id: "7030846136889986310",
        height: 1024,
        width: 576,
        duration: 15,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/fa159ffc4a644f21866ac9fc051ee65d_1636996434~tplv-dmt-logom:tos-useast2a-v-0068/0931bf96e46e4df3ad520f2f33047f7b.image?x-expires=1637078400&x-signature=52VM9%2BkrQ8NFbDavvnPS%2Fbysn%2Bk%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/ff8022961a364d9cb70d2f9a2d18bd33_1636996433?x-expires=1637078400&x-signature=6AiVkcAOOdYuDmMnW0fUDuFt6%2FE%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/a931adf0023f4f669974dbaebaae47ce_1636996434?x-expires=1637078400&x-signature=utKFVd2IxGHx%2BZAPOsjSe%2Bt18XA%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-pve-0068/7a8dead3907a498e8e1ae571f8fc865e/?a=1988&br=2558&bt=1279&cd=0%7C0%7C0&ch=0&cr=0&cs=0&dr=0&ds=3&er=&expire=1637078715&ft=wUyFfFGnkag3-I&l=2021111610050001018907420806051B9B&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=ampyN2Y6Zmw8OTMzNzczM0ApNTY4ZDM3ZWRoNzc3ZzNkN2dgc2docjRnXjZgLS1kMTZzc2FeLzRjXzUwXy5jMmMwYF46Yw%3D%3D&signature=3301ef4bd90f8c4ab1dbf2a39b1dc560&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/ff8022961a364d9cb70d2f9a2d18bd33_1636996433~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=p95qlNR1OuFjZbCUJV4Im4hndAg%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/ff8022961a364d9cb70d2f9a2d18bd33_1636996433~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=fVKqBFCtdeD9fhjpCi%2FN6nidB6U%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/fa159ffc4a644f21866ac9fc051ee65d_1636996434?x-expires=1637078400&x-signature=uGR7Z1Fj5bZF%2B2u4I7KUBq9CcaY%3D",
        bitrate: 1310044,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "6965407467035560709",
        title: "\u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf16-ies-music-va.tiktokcdn.com/obj/musically-maliva-obj/7005899101099346693.mp3",
        coverThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        coverMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        coverLarge: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        authorName: "\u041E\u043B\u0435\u0433",
        original: true,
        duration: 59,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 12,
        shareCount: 0,
        commentCount: 2,
        playCount: 204
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 9,
          stickerText: ["\u041A\u0440\u0430\u0441\u0430\u0424\u0424\u0447\u0438\u043A "]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7030798120694992134",
      desc: "#oleg_sheff #cat #\u043A\u043E\u0442",
      createTime: 1636985253,
      video: {
        id: "7030798120694992134",
        height: 1024,
        width: 576,
        duration: 11,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/0092f14f5ced48408d33fa485cde82fb~tplv-dmt-logom:tos-useast2a-v-0068/179f3701c6f64265a4dc7856dea95035.image?x-expires=1637078400&x-signature=x0q3MNbJ2UcGlJFrorkerpFItDU%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/2671b736af244b689f120766b5c84057_1636985254?x-expires=1637078400&x-signature=Ix6ucsA%2Bh1KpQXeDCckIrTwJTaQ%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/9aa009272dc9411099bd7ea45d2a2428_1636985267?x-expires=1637078400&x-signature=DcXxramq%2BdlJrNlC8kcdUXBkPTw%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-pve-0068/4379e4eafa964cf1a827aafb51f6ced2/?a=1988&br=1984&bt=992&cd=0%7C0%7C0&ch=0&cr=0&cs=0&dr=0&ds=3&er=&expire=1637078711&ft=wUyFfFGnkag3-I&l=2021111610050001018907420806051B9B&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=anBmZGY6ZjM5OTMzNzczM0ApOmlkZDU6ZGRpN2c3O2VkZmdnNXAvcjRfZzZgLS1kMTZzcy4vMTNgNjMyLmBfY2IuX186Yw%3D%3D&signature=3abbeefdd3f235ed20be10c114c2311b&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/2671b736af244b689f120766b5c84057_1636985254~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=FQW9yY2Kn%2FaF4Uxyw2wu5xbOskc%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/2671b736af244b689f120766b5c84057_1636985254~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=4lo3%2BfXxHu5IdJ14nTD4xT4X%2B0Y%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/0092f14f5ced48408d33fa485cde82fb?x-expires=1637078400&x-signature=FySJ77Dw7ziFLNXeJbA5NIQlgyM%3D",
        bitrate: 1016499,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "7030797942588017413",
        title: "\u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf16-ies-music-va.tiktokcdn.com/obj/musically-maliva-obj/7030798018693630725.mp3",
        coverThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        coverMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        coverLarge: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        authorName: "\u041E\u043B\u0435\u0433",
        original: true,
        duration: 11,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        },
        {
          id: "7551",
          title: "cat",
          desc: "",
          profileThumb: "https://p16-amd-va.tiktokcdn.com/obj/musically-maliva-obj/2e13829d6e1816708244b2bc8b905c51",
          profileMedium: "https://p16-amd-va.tiktokcdn.com/obj/musically-maliva-obj/2e13829d6e1816708244b2bc8b905c51",
          profileLarger: "https://p16-amd-va.tiktokcdn.com/obj/musically-maliva-obj/2e13829d6e1816708244b2bc8b905c51",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        },
        {
          id: "329889",
          title: "\u043A\u043E\u0442",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 28,
        shareCount: 0,
        commentCount: 9,
        playCount: 424
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        },
        {
          awemeId: "",
          start: 12,
          end: 16,
          hashtagName: "cat",
          hashtagId: "7551",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        },
        {
          awemeId: "",
          start: 17,
          end: 21,
          hashtagName: "\u043A\u043E\u0442",
          hashtagId: "329889",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 9,
          stickerText: ["\u043A\u043E\u0442\u0438\u043A"]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7030689592072277253",
      desc: "#oleg_sheff",
      createTime: 1636959987,
      video: {
        id: "7030689592072277253",
        height: 1024,
        width: 576,
        duration: 13,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/875588b91d5445fdb801fa8e572f8927?x-expires=1637078400&x-signature=ABSRzLTBQJ1uG9a2pCjJKUUVMdQ%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/6df409c36ac84ed6afdacbb3dc9d6be8_1636959989?x-expires=1637078400&x-signature=jJ3KfRG5eUiKGNUXTC43U6O8PM4%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/1fb0289594b241f8b7c43a008d2906b1_1636959989?x-expires=1637078400&x-signature=tp%2BNm4wvxdzF5iwHIzIMO1XTTRo%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-ve-0068c004/b13cd2a85d6b477885bb67a3f9c742db/?a=1988&br=1852&bt=926&cd=0%7C0%7C0&ch=0&cr=0&cs=0&dr=0&ds=3&er=&expire=1637078713&ft=wUyFfFGnkag3-I&l=2021111610050001018907420806051B9B&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=M280bmk6Zm8zOTMzNzczM0ApZzs3PGc2aDs1N2RpO2VoO2ducV9gcjRnYTZgLS1kMTZzcy82NWNiLWE0MzNjMjBjLi46Yw%3D%3D&signature=74b41963a88fb389dbeed01920e2f19f&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/6df409c36ac84ed6afdacbb3dc9d6be8_1636959989~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=5ZRvPmeU7tisFFalb0%2Fy9c8pEQw%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/6df409c36ac84ed6afdacbb3dc9d6be8_1636959989~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=al4gyXw%2FgasjYLwTFKbtsBWPU2Q%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/875588b91d5445fdb801fa8e572f8927?x-expires=1637078400&x-signature=ABSRzLTBQJ1uG9a2pCjJKUUVMdQ%3D",
        bitrate: 949100,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "6993661081218861825",
        title: "\u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf58-ies-music-sg.tiktokcdn.com/obj/tiktok-obj/6993661045009451778.mp3",
        coverThumb: "https://p16-sign-sg.tiktokcdn.com/aweme/100x100/tos-alisg-avt-0068/38c6298a103920063888c86c1a8e2dcb.jpeg?x-expires=1637143200&x-signature=6Li81YuoKNKjbwRMvKW%2BAgY1NzE%3D",
        coverMedium: "https://p16-sign-sg.tiktokcdn.com/aweme/720x720/tos-alisg-avt-0068/38c6298a103920063888c86c1a8e2dcb.jpeg?x-expires=1637143200&x-signature=hHPOrxsjA4PRdUV6X24FmnzOc%2F4%3D",
        coverLarge: "https://p16-sign-sg.tiktokcdn.com/aweme/1080x1080/tos-alisg-avt-0068/38c6298a103920063888c86c1a8e2dcb.jpeg?x-expires=1637143200&x-signature=Wnwwi%2Bbz8BWjvqg5jULEmFPuqI4%3D",
        authorName: "\u0418\u0433\u043E\u0440\u044C",
        original: true,
        duration: 27,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 15,
        shareCount: 0,
        commentCount: 9,
        playCount: 186
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      effectStickers: [
        {
          name: "\u0413\u0430\u0437\u0435\u0442\u0430 TikTok Times",
          ID: "1176860"
        }
      ],
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7030473289218673925",
      desc: "#oleg_sheff",
      createTime: 1636909622,
      video: {
        id: "7030473289218673925",
        height: 1024,
        width: 576,
        duration: 16,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/f055f2e1c21b46c78550d331b021fd23~tplv-dmt-logom:tos-useast2a-v-0068/152382be623a43d79d9357669d67b9c9.image?x-expires=1637078400&x-signature=j9K0LsWkZVm%2Fqe1ijxLFkRoBC2M%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/3daa9502af76498ba5a9aa4fa83e38c4_1636909622?x-expires=1637078400&x-signature=uqAxENMIHq%2BaSr9pCAngohmYNQA%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/277b7da738994384968acc56ad1657d2_1636909623?x-expires=1637078400&x-signature=GZrDexowbpHETsXLo9ElL2ztBWw%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-ve-0068c004/8116c51cdacc4e4fb99cd17e8004faf5/?a=1988&br=1706&bt=853&cd=0%7C0%7C0&ch=0&cr=0&cs=0&dr=0&ds=3&er=&expire=1637078716&ft=wUyFfFGnkag3-I&l=2021111610050001018907420806051B9B&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=MztsbjQ6ZmVuOTMzNzczM0ApMzc0NDMzZWU6Nzc3aWU8aGcvc3JwcjRnMTVgLS1kMTZzczUwMzRgYGFgLi81MGM1YTY6Yw%3D%3D&signature=75d289041984818c37b4430aef3afb7c&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/3daa9502af76498ba5a9aa4fa83e38c4_1636909622~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=cj7N1wFlds%2B7xreHY6eTcWiCZhc%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/3daa9502af76498ba5a9aa4fa83e38c4_1636909622~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=K21zWKNnwvUJ3NSTjXj3JuHsTpw%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/f055f2e1c21b46c78550d331b021fd23?x-expires=1637078400&x-signature=18d8nr0SrT9Gu6VW%2BxGf33ZimJo%3D",
        bitrate: 874207,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "6965407467035560709",
        title: "\u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf16-ies-music-va.tiktokcdn.com/obj/musically-maliva-obj/7005899101099346693.mp3",
        coverThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        coverMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        coverLarge: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        authorName: "\u041E\u043B\u0435\u0433",
        original: true,
        duration: 59,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 25,
        shareCount: 0,
        commentCount: 7,
        playCount: 404
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 4,
          stickerText: ["\u041E\u0434\u0435\u0441\u0441\u0430 ", "\u0443\u043B\u0438\u0447\u043D\u044B\u0439 ", "\u043C\u0443\u0437\u044B\u043A\u0430\u043D\u0442 "]
        },
        {
          stickerType: 9,
          stickerText: ["\u041E\u0434\u0435\u0441\u0441\u0430 "]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7030332625965436165",
      desc: "#oleg_sheff",
      createTime: 1636876874,
      video: {
        id: "7030332625965436165",
        height: 1024,
        width: 576,
        duration: 21,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/ffe674916e1745af9fb79bb9f8cdee75_1636876876~tplv-dmt-logom:tos-useast2a-v-0068/2e2cf57c96c1459fb86a6fcadea89e97.image?x-expires=1637078400&x-signature=lKMnELjKLFTCbwfRQMpavfT5%2FxA%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/c88bd81b5d314b808559d61fc0243831_1636876875?x-expires=1637078400&x-signature=kGNg8sHECP8tpZ9i4jM1d%2BsaMjg%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/5890f23109584d48928ab91997e4202c_1636876875?x-expires=1637078400&x-signature=Wd5iL7kiBuJVEecXAvrc0VtPsTQ%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-ve-0068c003/a72e47b1fe5544508c3db62c9e1bac3f/?a=1988&br=926&bt=463&cd=0%7C0%7C0&ch=0&cr=0&cs=0&dr=0&ds=3&er=&expire=1637078721&ft=wUyFfFGnkag3-I&l=2021111610050001018907420806051B9B&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=M3J0dTM6ZmpmOTMzNzczM0ApNzM2MzU8O2Q1NzpmNTY3aWdgMTM2cjRfMTVgLS1kMTZzczYzNi8wMmNeNC0xYWNeNWI6Yw%3D%3D&signature=5f35aff9d1af5f4ef0b101f354b8b6fc&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/c88bd81b5d314b808559d61fc0243831_1636876875~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=VX3NL4IFdCeBGKi6t8qAEoBKqdU%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/c88bd81b5d314b808559d61fc0243831_1636876875~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=UStuTHAfrDxbtLW9%2FuX7P%2BNlbww%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/ffe674916e1745af9fb79bb9f8cdee75_1636876876?x-expires=1637078400&x-signature=N4wZe7ts5CYXc4xvgN9Jc3btNjY%3D",
        bitrate: 474851,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "7030332250806192901",
        title: "\u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf16-ies-music-va.tiktokcdn.com/obj/musically-maliva-obj/7030332409329715973.mp3",
        coverThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        coverMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        coverLarge: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        authorName: "\u041E\u043B\u0435\u0433",
        original: true,
        duration: 21,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 27,
        shareCount: 1,
        commentCount: 9,
        playCount: 302
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 9,
          stickerText: ["\u0447\u0438\u0441\u0442\u043E\u0442\u0430"]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7030054625508183302",
      desc: "#oleg_sheff",
      createTime: 1636812145,
      video: {
        id: "7030054625508183302",
        height: 1024,
        width: 576,
        duration: 6,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/afe8b8ddef2b4e97888b687eed91d1be~tplv-dmt-logom:tos-useast2a-v-0068/dec8fa16ead44996835c4e5428946e22.image?x-expires=1637078400&x-signature=P2xAZay08mU2aolQElKcdW82tIg%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/d28fa607a4f74d85a915aa88240526b1_1636812145?x-expires=1637078400&x-signature=b4nirLuUziJiSHf3qUKnINVbqA8%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/9643a08390eb47e3b90005a3c89ef082_1636812146?x-expires=1637078400&x-signature=Ehv%2F%2BQLAbuXlBowieoDuSSs8%2BRM%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-pve-0068/016e2cc33a2c4fecbfc9b88b5edf8d8f/?a=1988&br=1172&bt=586&cd=0%7C0%7C0&ch=0&cr=0&cs=0&dr=0&ds=3&er=&expire=1637078706&ft=wUyFfFGnkag3-I&l=2021111610050001018907420806051B9B&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=MzVyZGc6ZnF2OTMzNzczM0ApaDw7ZTRkZmRkN2dpZzllaGdranBecjRfXjRgLS1kMTZzczBjMGIyYS5gLzY2NjIuYl86Yw%3D%3D&signature=b25977ffba508dfc7fecc4d5921fa1e8&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/d28fa607a4f74d85a915aa88240526b1_1636812145~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=Dh1onU2Tjbi9O8QoplvylHxh0UI%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/d28fa607a4f74d85a915aa88240526b1_1636812145~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=G%2BD7gNIEDC8LwqCAubxFR%2F52kdQ%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/afe8b8ddef2b4e97888b687eed91d1be?x-expires=1637078400&x-signature=MYYCSuf%2FUToCc2%2BeJAHTKhffiY0%3D",
        bitrate: 600698,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "6994459782824725254",
        title: "\u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf16-ies-music-va.tiktokcdn.com/obj/musically-maliva-obj/6994459822548601605.mp3",
        coverThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        coverMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        coverLarge: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        authorName: "\u041E\u043B\u0435\u0433",
        original: true,
        duration: 53,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 45,
        shareCount: 0,
        commentCount: 13,
        playCount: 608
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 9,
          stickerText: ["\u0432\u0437\u043B\u0451\u0442"]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7029946327400336646",
      desc: "#oleg_sheff #\u043F\u043E\u043F\u0443\u0433\u0430\u0439",
      createTime: 1636786931,
      video: {
        id: "7029946327400336646",
        height: 1024,
        width: 576,
        duration: 19,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/ae616ee979d54924beea5dda210d8a1c~tplv-dmt-logom:tos-useast2a-v-0068/a13fc64b9e8d49f78d86818a635015fc.image?x-expires=1637078400&x-signature=SgCe%2F%2FbnDIwFwCx6RyTweqjoSWk%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/f609dc7543a2401b9d2c6634d20b60d5_1636786932?x-expires=1637078400&x-signature=%2F4lzfLMDjA8sd19RiQcTNWj9eSI%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/8c131e38a6564653921fb38b73ffc909_1636786933?x-expires=1637078400&x-signature=zwlcNf5qqdcgoZqa%2FlgCR9wuMa0%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-ve-0068c003/bb9ad7b852b34dba888fad0d0bb0efad/?a=1988&br=4016&bt=2008&cd=0%7C0%7C0&ch=0&cr=0&cs=0&dr=0&ds=3&er=&expire=1637078719&ft=wUyFfFGnkag3-I&l=2021111610050001018907420806051B9B&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=MztwZTY6ZnJwOTMzNzczM0ApZmZmOWVkZTw7N2VkZWZpPGdhXmBncjQwMjRgLS1kMTZzc2AzYl4wXmAuYi81Li82YGM6Yw%3D%3D&signature=612aca75236cd971624497025406b759&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/f609dc7543a2401b9d2c6634d20b60d5_1636786932~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=MKYLdlT0pyL0oX%2FuDowX28YjKvU%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/f609dc7543a2401b9d2c6634d20b60d5_1636786932~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=BRCp4CFGJXejgFfZwyn3WaejqnU%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/ae616ee979d54924beea5dda210d8a1c?x-expires=1637078400&x-signature=elUcHhqI1xPzcJo03SI3RB3XPs0%3D",
        bitrate: 2056306,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "6965407467035560709",
        title: "\u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf16-ies-music-va.tiktokcdn.com/obj/musically-maliva-obj/7005899101099346693.mp3",
        coverThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        coverMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        coverLarge: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        authorName: "\u041E\u043B\u0435\u0433",
        original: true,
        duration: 59,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        },
        {
          id: "10843793",
          title: "\u043F\u043E\u043F\u0443\u0433\u0430\u0439",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 16,
        shareCount: 0,
        commentCount: 12,
        playCount: 319
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        },
        {
          awemeId: "",
          start: 12,
          end: 20,
          hashtagName: "\u043F\u043E\u043F\u0443\u0433\u0430\u0439",
          hashtagId: "10843793",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 4,
          stickerText: ["\u0430 \u0422\u042B \u0437\u043D\u0430\u0435\u0448\u044C \u044D\u0442\u0443 \u043F\u0435\u0441\u043D\u044E ?"]
        },
        {
          stickerType: 9,
          stickerText: ["\u0437\u043D\u0430\u0435\u0448\u044C? \u{1F9D0}"]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7029549918561848582",
      desc: "#oleg_sheff",
      createTime: 1636694636,
      video: {
        id: "7029549918561848582",
        height: 720,
        width: 576,
        duration: 8,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/9015e1e5bebd4c6fb3ae19217b4a26f0~tplv-dmt-logom:tos-useast2a-v-0068/ddf5eaf7468c442d98c251312bd8a773.image?x-expires=1637078400&x-signature=PsJiFTPZjpHN8xMfKfk%2FJrmYfaQ%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/a199144d5f5f4fc19f3d5ef71ccde4e7_1636694636?x-expires=1637078400&x-signature=piJaOXShZmI5DYrHAa%2BBUo47VUA%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/57387975bb2d4443b1f726cf09c9403d_1636694636?x-expires=1637078400&x-signature=PGHTzd1VxuiM6qKOe04Pgimn070%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-ve-0068c002/2bc18885f266445cac1a0f7f75061de3/?a=1988&br=918&bt=459&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&expire=1637078708&ft=wUyFfFGnkag3-I&l=2021111610050001018907420806051B9B&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=anZqazo6ZnF5OTMzNzczM0ApZzw7NTM2ZWU6NzNnNjRnNGdxazRgcjQwaDNgLS1kMTZzc2AzMC0xMi81Nl5iYGAuNTQ6Yw%3D%3D&signature=410a5d0e769b96dd3c4b32d1fd6bafeb&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/a199144d5f5f4fc19f3d5ef71ccde4e7_1636694636~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=SpI58SBEqlkSQ61rzJm%2FuZdbK%2FY%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/a199144d5f5f4fc19f3d5ef71ccde4e7_1636694636~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=t1M%2BBl%2FP3VFiTH9LIui3snDD2jM%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/9015e1e5bebd4c6fb3ae19217b4a26f0?x-expires=1637078400&x-signature=JUaCETZYDLdK8qIBmT7TFb6ocGU%3D",
        bitrate: 470653,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "6965407467035560709",
        title: "\u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf16-ies-music-va.tiktokcdn.com/obj/musically-maliva-obj/7005899101099346693.mp3",
        coverThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        coverMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        coverLarge: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        authorName: "\u041E\u043B\u0435\u0433",
        original: true,
        duration: 59,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 51,
        shareCount: 1,
        commentCount: 10,
        playCount: 1939
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 4,
          stickerText: [
            "\u041F\u0420\u0410\u0412\u0418\u041B\u042C\u041D\u0410\u042F \n\u041F\u0415\u0421\u041D\u042F  !!!",
            "\u0412\u0421\u0415\u041C\n\u0414\u041E\u0411\u0420\u0410 !!!"
          ]
        },
        {
          stickerType: 9,
          stickerText: ["\u0414\u0420\u0423\u0413"]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7029204727195847942",
      desc: "#oleg_sheff",
      createTime: 1636614265,
      video: {
        id: "7029204727195847942",
        height: 1024,
        width: 576,
        duration: 7,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/6362c6173a404763b890eaa2989291fc~tplv-dmt-logom:tos-useast2a-v-0068/d5fc6be18a8d4b16a05e6346bd059343.image?x-expires=1637078400&x-signature=BwBEGDvzeACEGpmRuyJ8QGX5fMQ%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/c32eb944f55240e9b8c1d598df6ee6e7_1636614266?x-expires=1637078400&x-signature=oQ5rcXDaqKr3NQlgcbML3%2FDHYjA%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/9d1007fbb5104043b79aadddbfcb8366_1636614267?x-expires=1637078400&x-signature=J9SkWtGvqwhoNV27muMJkz5sjCU%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-pve-0068/ae44539e72bb440aab2f785b23b02836/?a=1988&br=1624&bt=812&cd=0%7C0%7C0&ch=0&cr=0&cs=0&dr=0&ds=3&er=&expire=1637078707&ft=wUyFfFGnkag3-I&l=2021111610050001018907420806051B9B&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=Mzd0bzs6ZnZmOTMzNzczM0ApPDhnZzQ7NmVpN2Y6MzU2O2dgaGJqcjQwLTNgLS1kMTZzc2NfM14tXjAzMjMuNWI1L146Yw%3D%3D&signature=e3a2bcdc765a0ae569c4e3d020ffc3fe&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/c32eb944f55240e9b8c1d598df6ee6e7_1636614266~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=WQ9WST8V2g7fvhxOp3nKvC%2BE0s8%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/c32eb944f55240e9b8c1d598df6ee6e7_1636614266~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=F1YdUWqNCsB1RMpt9b6modjG0VA%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/6362c6173a404763b890eaa2989291fc?x-expires=1637078400&x-signature=xgmz6AGutJBAYbGhT%2FVKyagdnyE%3D",
        bitrate: 831768,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "6965407467035560709",
        title: "\u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf16-ies-music-va.tiktokcdn.com/obj/musically-maliva-obj/7005899101099346693.mp3",
        coverThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        coverMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        coverLarge: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        authorName: "\u041E\u043B\u0435\u0433",
        original: true,
        duration: 59,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 37,
        shareCount: 5,
        commentCount: 4,
        playCount: 600
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 4,
          stickerText: ["\u0432\u0441\u0451 \u0434\u043E\u0441\u0442\u0430\u043B\u043E !!!", "\u{1F408}\u200D\u2B1B"]
        },
        {
          stickerType: 9,
          stickerText: ["\u0434\u043E\u0441\u0442\u0430\u043B\u043E \u0424\u0421\u0401!"]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7028899484419575046",
      desc: "#oleg_sheff",
      createTime: 1636543194,
      video: {
        id: "7028899484419575046",
        height: 1024,
        width: 576,
        duration: 48,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/5cd9021a94ba42e7bde086d5f24369e2~tplv-dmt-logom:tos-useast2a-v-0068/4830b5ba86454e49af9d4de97c55cec7.image?x-expires=1637078400&x-signature=XyxbwMUAfKnIMeHI3JJbX8%2BEWBY%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/ee96e378aa894838b4be296f3dc208f8_1636543194?x-expires=1637078400&x-signature=Ma7VohMn6ABLVn0F2Jo6O3A1DZg%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/8429d86236e14c409b6b75502ad432f3_1636543195?x-expires=1637078400&x-signature=jEZtpvEglEY0wHUxE7acbFFom3M%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-ve-0068c003/6169f8960a2247709857d7e222ac8002/?a=1988&br=5056&bt=2528&cd=0%7C0%7C0&ch=0&cr=0&cs=0&dr=0&ds=3&er=&expire=1637078748&ft=wUyFfFGnkag3-I&l=2021111610050001018907420806051B9B&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=am9vOTw6Zmd0OTMzNzczM0ApODZlZjgzMzw6NzM7ZThpO2cuaDRxcjQwaDJgLS1kMTZzc18tYy5gNTUwYl42Li1hLzA6Yw%3D%3D&signature=253dbe4fddabc573f32d1ef8d9754cc1&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/ee96e378aa894838b4be296f3dc208f8_1636543194~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=vY3U%2FPBncFI24Gq4Pvvi42jTw5E%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/ee96e378aa894838b4be296f3dc208f8_1636543194~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=WV3wdpdd4Nnc72wiQNX7PczQ7BU%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/5cd9021a94ba42e7bde086d5f24369e2?x-expires=1637078400&x-signature=gCOLu2kEW7S7SLFnLvnqr6w418k%3D",
        bitrate: 2588763,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "6965407467035560709",
        title: "\u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf16-ies-music-va.tiktokcdn.com/obj/musically-maliva-obj/7005899101099346693.mp3",
        coverThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        coverMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        coverLarge: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        authorName: "\u041E\u043B\u0435\u0433",
        original: true,
        duration: 59,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 26,
        shareCount: 1,
        commentCount: 10,
        playCount: 632
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 9,
          stickerText: ["\u23FA\u{1F53C}\u23F9 "]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7028824762063326469",
      desc: "#oleg_sheff",
      createTime: 1636525798,
      video: {
        id: "7028824762063326469",
        height: 1024,
        width: 576,
        duration: 28,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/72d7d65735ea46389cc7bf001f568270~tplv-dmt-logom:tos-useast2a-v-0068/d01b44b9791b4d9f9050affba1364ab0.image?x-expires=1637078400&x-signature=TKig5bjXbMGZyzeDx6VJvQuKTI0%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/065e6ac57d2043bdae0e94c4ec2a8423_1636525798?x-expires=1637078400&x-signature=kjzmFiRnSWA9oo%2BnKI7opcoETBI%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/e157081c74b54581b93b3d338d436fa8_1636525799?x-expires=1637078400&x-signature=DErShYHKwwOnc97xi%2FEgN%2BWgBtk%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-ve-0068c003/2cc221b8a85e43018049ba9cf7eef488/?a=1988&br=882&bt=441&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&expire=1637078728&ft=wUyFfFGnkag3-I&l=2021111610050001018907420806051B9B&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=M2c5NWY6ZnFwOTMzNzczM0ApOTY6OjkzNGVmNzlkNTk7ZGdkZWpqcjQwYTJgLS1kMTZzcy0tNmMvNjFiXzNjMGIwYGA6Yw%3D%3D&signature=f58201855cda5b5a5d4c082f3811873b&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/065e6ac57d2043bdae0e94c4ec2a8423_1636525798~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=puF%2FkKjo3ZhMLqW%2F9xJyGs3%2BGAc%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/065e6ac57d2043bdae0e94c4ec2a8423_1636525798~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=%2B4bpxx6%2B%2FGLQkIN6ueXpc78abKQ%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/72d7d65735ea46389cc7bf001f568270?x-expires=1637078400&x-signature=LzO30ggxSPILXx3zhfjCIKFFrz0%3D",
        bitrate: 452048,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "6965407467035560709",
        title: "\u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf16-ies-music-va.tiktokcdn.com/obj/musically-maliva-obj/7005899101099346693.mp3",
        coverThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        coverMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        coverLarge: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        authorName: "\u041E\u043B\u0435\u0433",
        original: true,
        duration: 59,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 4263,
        shareCount: 1328,
        commentCount: 291,
        playCount: 59500
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 4,
          stickerText: [
            "\u041E\u043F\u0442\u0438\u043C\u0438\u0437\u043C-\u044D\u0442\u043E \u043A\u043E\u0433\u0434\u0430 \u0432 \u0442\u0432\u043E\u0435\u0439 \u0436\u0438\u0437\u043D\u0438 \u043F\u043E\u043B\u043D\u0430\u044F \u0436\u043E\u043F\u043E\u043D\u044C\u043A\u0430, \u0430 \u0442\u044B \u043D\u0438\u0447\u0435\u0433\u043E..... \u0431\u043E\u0434\u0440\u044F\u0447\u043A\u043E\u043C !!!",
            "\u0441\u043C\u043E\u0442\u0440\u0435\u0442\u044C \u0434\u043E \u043A\u043E\u043D\u0446\u0430  !!!"
          ]
        },
        {
          stickerType: 9,
          stickerText: ["\u043E\u043F\u0442\u0438\u043C\u0438\u0437\u043C 3"]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7028431188884851973",
      desc: "#oleg_sheff",
      createTime: 1636434161,
      video: {
        id: "7028431188884851973",
        height: 1024,
        width: 576,
        duration: 16,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/f0323cf65e5745bd8f27e4e60f75e9b4~tplv-dmt-logom:tos-maliva-p-0000/644c739fc2f44d0f8cfedd296e11b290.image?x-expires=1637078400&x-signature=fueCOZmwQ4Cwfo8Lo%2FiSYOnXrw4%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/eb4c39a9c3784cc8b3af9ea6d239dd14_1636434162?x-expires=1637078400&x-signature=nbkoMJ2M5YKCklgWwDS8%2Bz%2FxMUk%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/1c25f908df3845ec82afce5dbff7b5ed_1636434163?x-expires=1637078400&x-signature=FVFk2fhvj1OGxFIQq%2BoyuQY0gKo%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-pve-0068/98fcb4cdf8684cbb9fbd2f23771c4d0f/?a=1988&br=4802&bt=2401&cd=0%7C0%7C0&ch=0&cr=0&cs=0&dr=0&ds=3&er=&expire=1637078716&ft=wUyFfFGnkag3-I&l=2021111610050001018907420806051B9B&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=M3FreDQ6ZnQzOTMzNzczM0ApZjhpZGdoODtkNzxpNDw4OGdkYDNucjRnLjJgLS1kMTZzczJeNmJgMGM2X2IyXzUzYy46Yw%3D%3D&signature=197a47684447265b37cf868b5730bde4&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/eb4c39a9c3784cc8b3af9ea6d239dd14_1636434162~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=HKQdSgeFk%2F%2BsPNhF8gfdfVDVTDQ%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/eb4c39a9c3784cc8b3af9ea6d239dd14_1636434162~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=yrtlYA7NraLPqjMfFcwA8jMJooI%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/f0323cf65e5745bd8f27e4e60f75e9b4?x-expires=1637078400&x-signature=e%2BPKUNY87vW3iF%2FXuHw6Y8kH09I%3D",
        bitrate: 2458667,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "7028430722012629766",
        title: "\u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf16-ies-music-va.tiktokcdn.com/obj/musically-maliva-obj/7028430852082240261.mp3",
        coverThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        coverMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        coverLarge: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        authorName: "\u041E\u043B\u0435\u0433",
        original: true,
        duration: 16,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 85,
        shareCount: 2,
        commentCount: 22,
        playCount: 889
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 9,
          stickerText: ["\u0431\u0435\u0434\u043D\u044B\u0435"]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7028059861275397381",
      desc: "#oleg_sheff",
      createTime: 1636347705,
      video: {
        id: "7028059861275397381",
        height: 1024,
        width: 576,
        duration: 32,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/186823bf78bf48ab9bf0a6e3f520dfb1~tplv-dmt-logom:tos-maliva-p-0000/6484e43621d34519b1ffdb2ce9499bbb.image?x-expires=1637078400&x-signature=knQM8M2BVm8AL9O5vzS1gKs3X40%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/6f35fdcca680468197a1d17220e23549_1636347705?x-expires=1637078400&x-signature=GBnFXDGcvxhNnpAZ%2BssIWwcjnpc%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/f625ffc025b043b3929a2a4a97cd3014_1636347706?x-expires=1637078400&x-signature=j7bjzffviCsLhK7emXz3idxpYNI%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-ve-0068c004/8160f6c7cf5b4ecbba3148f66d84890b/?a=1988&br=2478&bt=1239&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&expire=1637078732&ft=wUyFfFGnkag3-I&l=2021111610050001018907420806051B9B&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=M2c3eDQ6ZmVkOTMzNzczM0ApZzc5ODk7O2RnNzRoOjs1PGcuZjNucjRvcjFgLS1kMTZzc2MxYC9iMF4vY140Xl9fNmI6Yw%3D%3D&signature=1693a03be7fe06d81d43197fe06da19b&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/6f35fdcca680468197a1d17220e23549_1636347705~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=pvqAJ%2FSoteoSFU6LMLJ865o21zs%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/6f35fdcca680468197a1d17220e23549_1636347705~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=0KPVJAZ4l53BM8FBn%2BkahUiH46w%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/186823bf78bf48ab9bf0a6e3f520dfb1?x-expires=1637078400&x-signature=KXL6nmdGvcTC82bz0rV12fUetsY%3D",
        bitrate: 1269328,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "6965407467035560709",
        title: "\u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf16-ies-music-va.tiktokcdn.com/obj/musically-maliva-obj/7005899101099346693.mp3",
        coverThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        coverMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        coverLarge: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        authorName: "\u041E\u043B\u0435\u0433",
        original: true,
        duration: 59,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 560,
        shareCount: 168,
        commentCount: 133,
        playCount: 7660
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 4,
          stickerText: [
            "\u0441\u043C\u043E\u0442\u0440\u0435\u0442\u044C \u0434\u043E \u043A\u043E\u043D\u0446\u0430 !!!",
            "\u0441\u043F\u0430\u0441\u0430\u0442\u0435\u043B\u0438 \u0433\u043E\u0434\u0430 \u{1F92A}"
          ]
        },
        {
          stickerType: 9,
          stickerText: ["\u0441\u043F\u0430\u0441\u0430\u0442\u0435\u043B\u0438 \u0433\u043E\u0434\u0430 "]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7027719938173406469",
      desc: "#oleg_sheff",
      createTime: 1636268562,
      video: {
        id: "7027719938173406469",
        height: 1024,
        width: 576,
        duration: 8,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/ae4f2c920f604c7ba54cf4b972e01529~tplv-dmt-logom:tos-maliva-p-0000/ee54e7bd867747e790536bdb77f419c7.image?x-expires=1637078400&x-signature=xU2QJQz%2BOj1s2GiS2dXJMZtRNO0%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/500a5b9cb62a4999ac60e2e17765d643_1636268562?x-expires=1637078400&x-signature=g0Xy5U1dr1uJ8FyMhMh5%2B%2Bk7j10%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/03e655a01da04360a09200b0e4d4646d_1636268563?x-expires=1637078400&x-signature=MPqle0NQci4uHuf00kLL8E6LnXc%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-pve-0068/a82781ff08ac4b0698febc9df284bac1/?a=1988&br=3256&bt=1628&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&expire=1637078708&ft=wUyFfFGnkag3-I&l=2021111610050001018907420806051B9B&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=M2h0ZGQ6ZjZxOTMzNzczM0ApNmhnODs1Zjw2NzRpZjloOGdrc2M2cjRfaDBgLS1kMTZzczU2NjFgMTE1LmM2MF8uL186Yw%3D%3D&signature=edccba16356386d153e187871bd5f830&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/500a5b9cb62a4999ac60e2e17765d643_1636268562~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=vf%2B%2BN7lX7h43zrmG6KwZIcb4fMU%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/500a5b9cb62a4999ac60e2e17765d643_1636268562~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=yZiakxw6KU%2FCj8Cgs879i3cr0M4%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/ae4f2c920f604c7ba54cf4b972e01529?x-expires=1637078400&x-signature=uLkcEYtrDdZD44PAK0Ol6CaRbnU%3D",
        bitrate: 1667258,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "7027719374391872262",
        title: "\u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf58-ies-music-va.tiktokcdn.com/obj/musically-maliva-obj/7027719648552487686.mp3",
        coverThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        coverMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        coverLarge: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        authorName: "\u041E\u043B\u0435\u0433",
        original: true,
        duration: 8,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 86,
        shareCount: 10,
        commentCount: 12,
        playCount: 1162
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 4,
          stickerText: ["\u043E\u0445, \u0443\u0436 \u044D\u0442\u0430 \u0432\u043E\u0440\u043E\u043D\u0430 !"]
        },
        {
          stickerType: 9,
          stickerText: ["\u0432\u043E\u0440\u043E\u043D\u0430"]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7027457845692042502",
      desc: "#oleg_sheff",
      createTime: 1636207535,
      video: {
        id: "7027457845692042502",
        height: 1024,
        width: 576,
        duration: 11,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/ff3a96da626345abb9d05cd3a5972256_1636207536~tplv-dmt-logom:tos-maliva-p-0000/2403278c353240b284151f222c02ebc6.image?x-expires=1637078400&x-signature=g6xLs1gR7V7TMgeAAvD49Hm5YlA%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/5844e04fc741476580cd71b7f1ad3430_1636207535?x-expires=1637078400&x-signature=nfDCXtwB9jP3kuZ9sUEkgx6HFTY%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/4549a5ed501a4bdb8834fea6b59ca1f9_1636207535?x-expires=1637078400&x-signature=jupCWG0uy6SgFpF6rTUW7IhX4wg%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-pve-0068/db3291f7f5034222bcf907d231e4c249/?a=1988&br=2270&bt=1135&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&expire=1637078711&ft=wUyFfFGnkag3-I&l=2021111610050001018907420806051B9B&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=M214eTs6Zjw7OTMzNzczM0ApMzZoZmZoOjxkN2kzMzVnOmdwNWpjcjRnazBgLS1kMTZzczFiLV80Yl5jMy8uMWMyLTU6Yw%3D%3D&signature=5b3aa1d5f0c19692e3abe912ce6db0a8&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/5844e04fc741476580cd71b7f1ad3430_1636207535~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=%2BxBqn93Au5O5zZgNkI3qDf5PoVs%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/5844e04fc741476580cd71b7f1ad3430_1636207535~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=i6BYOlM4iv2sfP6nlRNqFDgFX10%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/ff3a96da626345abb9d05cd3a5972256_1636207536?x-expires=1637078400&x-signature=coDP2peqkVL1MBdTJM2Vjw8XvfE%3D",
        bitrate: 1163223,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "7018237352975796225",
        title: "\u0418\u043D\u0434\u0438\u0439\u0441\u043A\u0438\u0439 \u0447\u0430\u0439",
        playUrl: "https://sf16-ies-music-va.tiktokcdn.com/obj/tos-useast2a-ve-2774/862e37178ec843c6b95b954fd2a8a4cc",
        coverThumb: "https://p16-amd-va.tiktokcdn.com/img/tos-useast2a-v-2774/d483780bc42240e88c55a756247f9f3c~c5_100x100.jpeg",
        coverMedium: "https://p16-amd-va.tiktokcdn.com/img/tos-useast2a-v-2774/d483780bc42240e88c55a756247f9f3c~c5_200x200.jpeg",
        coverLarge: "https://p16-amd-va.tiktokcdn.com/img/tos-useast2a-v-2774/d483780bc42240e88c55a756247f9f3c~c5_720x720.jpeg",
        authorName: "\u0410\u044E\u0431 \u0412\u0430\u0445\u0430\u0440\u0430\u0433\u043E\u0432",
        original: false,
        duration: 60,
        album: "\u0418\u043D\u0434\u0438\u0439\u0441\u043A\u0438\u0439 \u0447\u0430\u0439"
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 161,
        shareCount: 22,
        commentCount: 20,
        playCount: 2104
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 4,
          stickerText: ["\u043F\u043E\u0441\u0430\u0434\u0438 \u0441\u0432\u0438\u043D\u044C\u044E \n\u0437\u0430 \u0441\u0442\u043E\u043B ........."]
        },
        {
          stickerType: 9,
          stickerText: ["\u0441\u0432\u0438\u043D\u0441\u0442\u0432\u043E "]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7027394641385245958",
      desc: "#oleg_sheff",
      createTime: 1636192819,
      video: {
        id: "7027394641385245958",
        height: 1024,
        width: 576,
        duration: 18,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/c64cdde2186a4374be1fd3599a68b7df_1636192820~tplv-dmt-logom:tos-maliva-p-0000/30c00da5d35547819a9e43fd7991433e.image?x-expires=1637078400&x-signature=Ubefsa8d726OuLEWn3%2FEuYAy3SE%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/945fd85d4bcd4924ba0c97104b15169b_1636192820?x-expires=1637078400&x-signature=IvO6RkiBhrkKlusXNwbwPdCZSqc%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/3d56df46518f4d0aaeb8cee16f355b0e_1636192820?x-expires=1637078400&x-signature=1NVXatglJm0SypNg8i4XpN%2BaHGU%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-pve-0068/b451436c7c5c4eafa00183cd433a7f17/?a=1988&br=1662&bt=831&cd=0%7C0%7C0&ch=0&cr=0&cs=0&dr=0&ds=3&er=&expire=1637078718&ft=wUyFfFGnkag3-I&l=2021111610050001018907420806051B9B&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=M3Q2ODo6ZmQ4OTMzNzczM0ApOWg8Omc0NGQzN2c6ZWdnOWcxNDBscjRvMTBgLS1kMTZzczFfLy0yLzEzMC40NjBjXzU6Yw%3D%3D&signature=f996ed9f770c080394504400435aa04a&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/945fd85d4bcd4924ba0c97104b15169b_1636192820~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=g5WDtaGZZ5onLwfI%2BKCn5sxYVzs%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/945fd85d4bcd4924ba0c97104b15169b_1636192820~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=%2Bb8X0b9DS2QOkzcWvW%2FlCoqEI0Y%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/c64cdde2186a4374be1fd3599a68b7df_1636192820?x-expires=1637078400&x-signature=Q2%2BDM9GksOkoO5Krs0J%2FC0yW9RA%3D",
        bitrate: 851697,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "7027394317555632902",
        title: "\u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf58-ies-music-va.tiktokcdn.com/obj/musically-maliva-obj/7027394450414406405.mp3",
        coverThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        coverMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        coverLarge: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        authorName: "\u041E\u043B\u0435\u0433",
        original: true,
        duration: 17,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 65,
        shareCount: 12,
        commentCount: 36,
        playCount: 982
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 9,
          stickerText: ["\u0441\u043B\u0443\u0436\u0431\u0430"]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7027071441682173189",
      desc: "#oleg_sheff",
      createTime: 1636117569,
      video: {
        id: "7027071441682173189",
        height: 1072,
        width: 576,
        duration: 19,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/401aa20bfb124fc896c6a1d632adccdf_1636117568~tplv-dmt-logom:tos-maliva-p-0000/8d15454543bc46cc90c2969cb2c0afdb.image?x-expires=1637078400&x-signature=bxRq8kwIj5jEO1DkkOAj%2F5iJjNU%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/ac22c0327be74d6eb3064187bfd1d67d_1636117569?x-expires=1637078400&x-signature=aBthd8PKHf8Hb%2BpugeCl4Uuj1RE%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/c5ae0432921647ddaee243d72babbb36_1636117570?x-expires=1637078400&x-signature=iunYMBy%2F%2BzkCpZA7068gWpZ6WxQ%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-ve-0068c004/3044c6cff40c4dfb9ed0b86bca393892/?a=1988&br=2352&bt=1176&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&expire=1637078719&ft=wUyFfFGnkag3-I&l=2021111610050001018907420806051B9B&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=M2V0bTs6ZmhsOTMzNzczM0ApOmU1OWhmNzw7NzpmZDMzaWctLV9xcjRfbC9gLS1kMTZzcy41LTEtMTBgNC9eYDJjNV46Yw%3D%3D&signature=d86c48c94420a4263909adb5b5857ede&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/ac22c0327be74d6eb3064187bfd1d67d_1636117569~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=67JDfz4vuhO6My4J1fVP8%2FUdYOU%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/ac22c0327be74d6eb3064187bfd1d67d_1636117569~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=%2B9fxkU3ls4iWX8CBHqOse%2FRlKgc%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/401aa20bfb124fc896c6a1d632adccdf_1636117568?x-expires=1637078400&x-signature=iB3qQsGg2VBaGVTDv4iR27BLDNQ%3D",
        bitrate: 1204786,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "6965407467035560709",
        title: "\u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf16-ies-music-va.tiktokcdn.com/obj/musically-maliva-obj/7005899101099346693.mp3",
        coverThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        coverMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        coverLarge: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        authorName: "\u041E\u043B\u0435\u0433",
        original: true,
        duration: 59,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 18,
        shareCount: 0,
        commentCount: 8,
        playCount: 1019
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 4,
          stickerText: ["\u0421\u0422\u0420\u0410\u0428\u041D\u041E !"]
        },
        {
          stickerType: 9,
          stickerText: ["\u0436\u0443\u0442\u044C !"]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7026946959072038150",
      desc: "#oleg_sheff",
      createTime: 1636088586,
      video: {
        id: "7026946959072038150",
        height: 1024,
        width: 576,
        duration: 23,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/d624aa8f66ea44c6a94c0d9f0d5bd9df~tplv-dmt-logom:tos-maliva-p-0000/0c35837896394bea82debe7b73beb85c.image?x-expires=1637078400&x-signature=oRdinCdElSs52tzqgnLoqleW6c8%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/8938ac00ef0f45e69db352e1759f9b14_1636088587?x-expires=1637078400&x-signature=a8rTbW1M034Ik941Hp2LePDmgzc%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/b129476a94164c2babdb6076878d2189_1636088587?x-expires=1637078400&x-signature=hxxfa5dutzGb0PHNqc4XUCvjrUI%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-pve-0068/74af7a3fc81043988024e83cfd2c8b70/?a=1988&br=2012&bt=1006&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&expire=1637078723&ft=wUyFfFGnkag3-I&l=2021111610050001018907420806051B9B&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=anQ3cWg6ZjNlOTMzNzczM0ApZDk4OmU5OGVpN2hoOTozNGdjZG4xcjRnai9gLS1kMTZzczQwMWMvMy1hMzJeL14tMi86Yw%3D%3D&signature=b17891a1fa72968a829ffa213e4cc68e&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/8938ac00ef0f45e69db352e1759f9b14_1636088587~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=HkVmG3BdLN3qGrJMa%2FBporM3C34%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/8938ac00ef0f45e69db352e1759f9b14_1636088587~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=5fwI6m7FSo%2BTtp%2FlDFgK2aoqteQ%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/d624aa8f66ea44c6a94c0d9f0d5bd9df?x-expires=1637078400&x-signature=isu%2Fz%2Fu6uB0y1mOcUUNVvb6W1JY%3D",
        bitrate: 1031103,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "7026946520222059269",
        title: "\u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf16-ies-music-va.tiktokcdn.com/obj/musically-maliva-obj/7026946757443554054.mp3",
        coverThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        coverMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        coverLarge: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        authorName: "\u041E\u043B\u0435\u0433",
        original: true,
        duration: 23,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 39,
        shareCount: 0,
        commentCount: 22,
        playCount: 1159
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 9,
          stickerText: ["\u0428\u0442\u0438\u0440\u043B\u0438\u0446"]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7026796045682117894",
      desc: "#oleg_sheff",
      createTime: 1636053447,
      video: {
        id: "7026796045682117894",
        height: 1024,
        width: 576,
        duration: 8,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/38452884569940b98c1b350fcb518d4d~tplv-dmt-logom:tos-maliva-p-0000/555e357a2cbc4f539449935f130fdcf8.image?x-expires=1637078400&x-signature=MO7eJOT8QPGfEPxHYeumXnDqGjQ%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/b39f5e2968b447298a77b6c83d69f539_1636053448?x-expires=1637078400&x-signature=rM%2BcZ33mFCii18pPenhAYc0sYec%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/145b121a641e4ae0b3f7c3ec60751301_1636053448?x-expires=1637078400&x-signature=Toc4xE7U6yGXSadxtZnmAh0Onzs%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-ve-0068c003/94e045c8dbc44f2c98ea7dc42c37c64c/?a=1988&br=5772&bt=2886&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&expire=1637078708&ft=wUyFfFGnkag3-I&l=2021111610050001018907420806051B9B&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=M25yeDs6Zmg2OTMzNzczM0ApZGY1M2lkN2VlNzY8OzwzZWdrXi4tcjRvMC9gLS1kMTZzczExNV8vL2IvNTY0Ml4wYmI6Yw%3D%3D&signature=5133a40f4d64476c30d4d7168f52ecd7&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/b39f5e2968b447298a77b6c83d69f539_1636053448~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=CgAIV7%2Bl2AZOsF2l4up8AbqQjPo%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/b39f5e2968b447298a77b6c83d69f539_1636053448~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=feYGe3LXyPcSI6xHXP%2FzsXyIPJg%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/38452884569940b98c1b350fcb518d4d?x-expires=1637078400&x-signature=c0LDx5yjDiiWBVrwYAGm7KnKbPI%3D",
        bitrate: 2955496,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "7015053500493220614",
        title: "\u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf16-ies-music-va.tiktokcdn.com/obj/musically-maliva-obj/7015053689211702021.mp3",
        coverThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        coverMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        coverLarge: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        authorName: "\u041E\u043B\u0435\u0433",
        original: true,
        duration: 9,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 28,
        shareCount: 1,
        commentCount: 12,
        playCount: 1259
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 4,
          stickerText: ["\u0432\u043E\u0442 \u043E\u043D \u261D", "\u0430\u0432\u0442\u043E\u0440 \u0438 \u0438\u0441\u043F\u043E\u043B\u043D\u0438\u0442\u0435\u043B\u044C "]
        },
        {
          stickerType: 9,
          stickerText: ["\u0425\u0418\u0422"]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7026721725882584326",
      desc: "#oleg_sheff",
      createTime: 1636036144,
      video: {
        id: "7026721725882584326",
        height: 1024,
        width: 576,
        duration: 9,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/f7001f14a0aa487391c9914d8121530d~tplv-dmt-logom:tos-maliva-p-0000/5b5f40cf31404e29b4c4bcfa6e506869.image?x-expires=1637078400&x-signature=stCnzPA9Wq7Nx%2B6YIDpajCB7eOc%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/761140f9d1fb4a7e88c79a54da792f67_1636036144?x-expires=1637078400&x-signature=UgLztFAY%2BTvG%2B42ZZUYrhM9mxr4%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/817c7451dd1e44f8a404a645cae870e3_1636036145?x-expires=1637078400&x-signature=yLJ19OKPiS3nr%2Fz1KV9oBf0L5iY%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-ve-0068c004/c46d424ec42848c48ad0257730940bdc/?a=1988&br=1692&bt=846&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&expire=1637078709&ft=wUyFfFGnkag3-I&l=2021111610050001018907420806051B9B&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=anZzM2Y6ZmR4OTMzNzczM0ApPDhoPDxmaDs1NzhoMzRoN2dlZGJxcjRfcC5gLS1kMTZzc2NgMjRiYy8yNC5eYTEuNmM6Yw%3D%3D&signature=454d77807ac9406671036e4bae029b33&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/761140f9d1fb4a7e88c79a54da792f67_1636036144~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=R6sspQRdh%2Frwoa5JDK%2BmsPzCl78%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/761140f9d1fb4a7e88c79a54da792f67_1636036144~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=aAjgxJsOaOAToJXSLf8kIMgPLCE%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/f7001f14a0aa487391c9914d8121530d?x-expires=1637078400&x-signature=YDByCIgYK%2FUlynLtj1Cjs4u%2FN%2B8%3D",
        bitrate: 866364,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "6965407467035560709",
        title: "\u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf16-ies-music-va.tiktokcdn.com/obj/musically-maliva-obj/7005899101099346693.mp3",
        coverThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        coverMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        coverLarge: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        authorName: "\u041E\u043B\u0435\u0433",
        original: true,
        duration: 59,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 222,
        shareCount: 69,
        commentCount: 31,
        playCount: 11400
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 4,
          stickerText: ["\u043C\u0443\u0436\u0438\u043A !!!"]
        },
        {
          stickerType: 9,
          stickerText: ["\u043C\u0443\u0436\u0438\u043A"]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7026592969960525061",
      desc: "#oleg_sheff",
      createTime: 1636006169,
      video: {
        id: "7026592969960525061",
        height: 1024,
        width: 576,
        duration: 13,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/7c302fee289e4415bf990483461a5c3f_1636006169~tplv-dmt-logom:tos-maliva-p-0000/2faf5101cb84478bb6387e59aaffc43f.image?x-expires=1637078400&x-signature=s1FzcalZb6GB3vWVUUH4BxlFsFc%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/eaba87fc7e6d42a69ccbc66446a62e25_1636006169?x-expires=1637078400&x-signature=3iUBVijXRps82Agh25eGXDCOcYQ%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/a99e36f8c9844625ae9c4dc4a7da94a5_1636006170?x-expires=1637078400&x-signature=Bfxk%2FlLiOEcSkf1bQSxI5fSjXDg%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-ve-0068c001/3df2998c129c444ba8de67763db7af5f/?a=1988&br=2916&bt=1458&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&expire=1637078713&ft=wUyFfFGnkag3-I&l=2021111610050001018907420806051B9B&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=ang5ODk6ZnhxOTMzNzczM0ApNDM8PGhmO2VpNzY8NjVpOGctbDNfcjRvMi5gLS1kMTZzc19gYl9fYy4vNmBiMDU2NC86Yw%3D%3D&signature=b48768bd65f2af09c74f345d9f47af08&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/eaba87fc7e6d42a69ccbc66446a62e25_1636006169~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=ck%2FPwWtpGvoL2YCalLvsFzqcZyQ%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/eaba87fc7e6d42a69ccbc66446a62e25_1636006169~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=jGJmH4Z16375vMvKCXlr5HWQ%2FEU%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/7c302fee289e4415bf990483461a5c3f_1636006169?x-expires=1637078400&x-signature=kzVIafhrBgkFpr0kvSzrGUHG92s%3D",
        bitrate: 1493249,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "6965407467035560709",
        title: "\u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf16-ies-music-va.tiktokcdn.com/obj/musically-maliva-obj/7005899101099346693.mp3",
        coverThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        coverMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        coverLarge: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        authorName: "\u041E\u043B\u0435\u0433",
        original: true,
        duration: 59,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 116,
        shareCount: 3,
        commentCount: 10,
        playCount: 2486
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 4,
          stickerText: ["\u041A\u0442\u043E \u044D\u0442\u043E ?"]
        },
        {
          stickerType: 9,
          stickerText: ["\u043A\u0442\u043E \u044D\u0442\u043E ?"]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7026390937525964037",
      desc: "#oleg_sheff",
      createTime: 1635959126,
      video: {
        id: "7026390937525964037",
        height: 1024,
        width: 576,
        duration: 7,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/64d9b3250ba84259828e4acc973c80ec_1635959127~tplv-dmt-logom:tos-maliva-p-0000/0cf12a155be74a8aad697fc4bee8d89c.image?x-expires=1637078400&x-signature=Bc0EkYLiJCtdlFqSMmlJPsasP4Q%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/03f5fac718a34d62b35be9fc8ac0e4ad_1635959126?x-expires=1637078400&x-signature=%2FZqKzwUYclxCXJCYg2jX788M2Rc%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/b07b9427f65d4d04908283526a9caa03_1635959127?x-expires=1637078400&x-signature=5Ng4DAjJmMPc7%2BoN5qPI1lXU%2Ftg%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-ve-0068c003/8d905476e14c43fd96d066d6ca368cd5/?a=1988&br=3948&bt=1974&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&expire=1637078706&ft=wUyFfFGnkag3-I&l=2021111610050001018907420806051B9B&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=M3doZWk6ZjtmOTMzNzczM0ApODRoaWVlaTxnNzY8OjVlOGdyc3A2cjRnLi5gLS1kMTZzc2NjLTUtYjYzMTIxMGJgLi86Yw%3D%3D&signature=e34e16f6c6026e10ae0da9d7af5f3165&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/03f5fac718a34d62b35be9fc8ac0e4ad_1635959126~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=cyjOAPhmmhqqAh4Lh38QYacVcU4%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/03f5fac718a34d62b35be9fc8ac0e4ad_1635959126~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=JLjJ9vqi1bMFNvvs5Tyn%2BpQ3AxI%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/64d9b3250ba84259828e4acc973c80ec_1635959127?x-expires=1637078400&x-signature=53g85zoNqgWTQ8Eh5LkzVvKwoaM%3D",
        bitrate: 2022333,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "7026390797880789766",
        title: "\u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf58-ies-music-va.tiktokcdn.com/obj/musically-maliva-obj/7026390871528590085.mp3",
        coverThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        coverMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        coverLarge: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        authorName: "\u041E\u043B\u0435\u0433",
        original: true,
        duration: 6,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 22,
        shareCount: 2,
        commentCount: 8,
        playCount: 1295
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 4,
          stickerText: ["\u0445\u043E\u0440\u043E\u0448\u0435\u0433\u043E \u0412\u0430\u043C\n\u043D\u0430\u0441\u0442\u0440\u043E\u0435\u043D\u0438\u044F !!!\n\u270C\u{1F61C}\u{1F525}"]
        },
        {
          stickerType: 9,
          stickerText: [".                    ."]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7026268074806398214",
      desc: "#oleg_sheff",
      createTime: 1635930521,
      video: {
        id: "7026268074806398214",
        height: 1024,
        width: 576,
        duration: 19,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/d5a6da50da78409a948cca698ba19347~tplv-dmt-logom:tos-maliva-p-0000/c7233e5236b647fbaf4f3334c6ef33f9.image?x-expires=1637078400&x-signature=r7p4m%2FmzEa0iB0%2Bmpawqc9nn6VA%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/da2d29e6f623460fa85a5e4966899ced_1635930521?x-expires=1637078400&x-signature=dqTLpdTbS%2BNOQ1G7BCcIvrXVEYc%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/725466b4190546c9a4c3f48e9909c3df_1635930522?x-expires=1637078400&x-signature=0HSYYeXYIRGJkUDH9BsEt0guBzs%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-ve-0068c002/2f53c150b0a04d4393da82463d3d2f56/?a=1988&br=2084&bt=1042&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&expire=1637078719&ft=wUyFfFGnkag3-I&l=2021111610050001018907420806051B9B&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=ajpvbjY6Zjc4OTMzNzczM0ApPGg1NDhpOWQ8Nzw8NmZlZ2dvZDEycjQwMC5gLS1kMTZzc2AxNS4yLjNgYi0wYDAvMi86Yw%3D%3D&signature=f3a7e8addfc9e002a6e536b6db0483c0&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/da2d29e6f623460fa85a5e4966899ced_1635930521~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=LVPznZuGJQRklL7hZaJ8r47iLz4%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/da2d29e6f623460fa85a5e4966899ced_1635930521~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=YPkNQ78ZfGTa2LZt0PzWHW33vZ4%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/d5a6da50da78409a948cca698ba19347?x-expires=1637078400&x-signature=c2k1f0KOhYNMLuSW67an6A84Pr8%3D",
        bitrate: 1067574,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "6965407467035560709",
        title: "\u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf16-ies-music-va.tiktokcdn.com/obj/musically-maliva-obj/7005899101099346693.mp3",
        coverThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        coverMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        coverLarge: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        authorName: "\u041E\u043B\u0435\u0433",
        original: true,
        duration: 59,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 123,
        shareCount: 14,
        commentCount: 16,
        playCount: 3955
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 4,
          stickerText: ["\u0443\u0440\u043E\u0432\u0435\u043D\u044C \n\u0411\u041E\u0413 !!!"]
        },
        {
          stickerType: 9,
          stickerText: ["\u0443\u0440\u043E\u0432\u0435\u043D\u044C \u0411\u041E\u0413"]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7026204470212103429",
      desc: "#oleg_sheff",
      createTime: 1635915713,
      video: {
        id: "7026204470212103429",
        height: 800,
        width: 448,
        duration: 13,
        ratio: "480p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/7c91b14ebe844303bd2d6d3cc6371322~tplv-dmt-logom:tos-maliva-p-0000/a11934a9c6d846d78f4370b7a6eebd43.image?x-expires=1637078400&x-signature=RRkggaJsRSDnmfx3g%2FdCCj%2BHPoM%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/bc9a94de25204da6bbfdd1b6438735fc_1635915714?x-expires=1637078400&x-signature=DvG0S9GGbjNkG6xeVlygWhTI47c%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/2bd6cb54f85340e4b9f21f325e2de1ea_1635915714?x-expires=1637078400&x-signature=oQOdSew%2BAkr0832Y%2F7TKTukx1cQ%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-ve-0068c003/3a1e4ca4b9a0422b9b09cc1e9b39bbaf/?a=1988&br=868&bt=434&cd=0%7C0%7C0&ch=0&cr=0&cs=0&dr=0&ds=2&er=&expire=1637078713&ft=wUyFfFGnkag3-I&l=2021111610050001018907420806051B9B&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=anR2eGk6Zmc0OTMzNzczM0ApMzhlOzVpNGVmN2hnOzM8N2cucmdkcjQwYy5gLS1kMTZzc2JjM2FgLmI2NmE2Xi8vX2I6Yw%3D%3D&signature=135c8261cdc407a77587fd2413f39e72&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/bc9a94de25204da6bbfdd1b6438735fc_1635915714~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=F67PWkSkEriwnV2F1v54lQZJWMY%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/bc9a94de25204da6bbfdd1b6438735fc_1635915714~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=%2F3W%2FSz0%2B3QgGonuNPrJusLRxtVM%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/7c91b14ebe844303bd2d6d3cc6371322?x-expires=1637078400&x-signature=QhEdrXbrXZ5gR7%2FyBo5XMWncruE%3D",
        bitrate: 444454,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "480p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "6965407467035560709",
        title: "\u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf16-ies-music-va.tiktokcdn.com/obj/musically-maliva-obj/7005899101099346693.mp3",
        coverThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        coverMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        coverLarge: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        authorName: "\u041E\u043B\u0435\u0433",
        original: true,
        duration: 59,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 79,
        shareCount: 12,
        commentCount: 16,
        playCount: 2433
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 9,
          stickerText: ["\u043E\u043D \u043D\u0435 \u043C\u043E\u0439 !"]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7025826325558480133",
      desc: "#oleg_sheff",
      createTime: 1635827668,
      video: {
        id: "7025826325558480133",
        height: 1024,
        width: 576,
        duration: 13,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/22dd87855b9c4a019b637d5197de760b_1635827669~tplv-dmt-logom:tos-maliva-p-0000/83daf83138a64b79baa75f039593e534.image?x-expires=1637078400&x-signature=RBfu4gjKPnCYx9zFTi%2FCPvfJt7U%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/f8405abae9a14f64b121836babb2acd8_1635827669?x-expires=1637078400&x-signature=jBZT2sl7LTEcqLl1Wcv2b4Guruw%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/87f9274a3a8049faa8ce98238ee53060_1635827669?x-expires=1637078400&x-signature=PZrWRFb5eOHl3%2F1eocgpaj4wGLM%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-ve-0068c001/a8985d5064f04737b78e63afd4272a9d/?a=1988&br=1230&bt=615&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&expire=1637078713&ft=wUyFfFGnkag3-I&l=2021111610050001018907420806051B9B&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=anh4O2k6ZmplOTMzNzczM0ApPDVkNjg1NDw4N2c7ZGQ8Z2c0cjJicjQwcy1gLS1kMTZzczBfNDQ2XzQvNC41Ni5jYDY6Yw%3D%3D&signature=0186fef9648e52fb6ecd69ff89af0d3b&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/f8405abae9a14f64b121836babb2acd8_1635827669~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=tQkqbVe%2BT%2Ft%2Bk%2BPgMiMoDQbIxCA%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/f8405abae9a14f64b121836babb2acd8_1635827669~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=R9frxWKYvULnZ3c0ZhghQlCOzfQ%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/22dd87855b9c4a019b637d5197de760b_1635827669?x-expires=1637078400&x-signature=%2BbsuH11bgJmVyCqFB2CJ151dTkQ%3D",
        bitrate: 630512,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "6994459782824725254",
        title: "\u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf16-ies-music-va.tiktokcdn.com/obj/musically-maliva-obj/6994459822548601605.mp3",
        coverThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        coverMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        coverLarge: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        authorName: "\u041E\u043B\u0435\u0433",
        original: true,
        duration: 53,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 233,
        shareCount: 12,
        commentCount: 37,
        playCount: 2815
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 9,
          stickerText: ["\u044D\u0442\u043E \u{1F498} "]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7025524182863662342",
      desc: "#oleg_sheff",
      createTime: 1635757320,
      video: {
        id: "7025524182863662342",
        height: 1024,
        width: 576,
        duration: 53,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/ab8868bdf22843d29b8fc879f1ca214c~tplv-dmt-logom:tos-maliva-p-0000/00a07d1eaa904fe7bbebbb709da32a93.image?x-expires=1637078400&x-signature=Q%2BuPyitDMVwosyu4FfNNwKs6QZQ%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/8c0d0b694bfc47f8b77bcb6d3c473b40_1635757321?x-expires=1637078400&x-signature=VGGRJm4QlTWiqQqXf%2FgPBm%2FDYQc%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/f755a72418c8401a9c1a9ca318834e7c_1635757321?x-expires=1637078400&x-signature=Sn1uGYXQ0HNO53UYQkNbC8nsSkg%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-ve-0068c004/c61a003d80ce4a2abca364ccf33b98e9/?a=1988&br=1676&bt=838&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&expire=1637078753&ft=wUyFfFGnkag3-I&l=2021111610050001018907420806051B9B&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=MzM4a2g6ZnZ0ODMzNzczM0ApMzw1ZzY3NmU8NzM5PDplaWdkMHJrcjRfbXNgLS1kMTZzczQwNTYwYWEyL2EuMl9gNTU6Yw%3D%3D&signature=550bd9231d2ffee8a4ee12acef48e470&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/8c0d0b694bfc47f8b77bcb6d3c473b40_1635757321~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=GJXtxZqjpdMc92egBiKyjXFNQpM%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/8c0d0b694bfc47f8b77bcb6d3c473b40_1635757321~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=NkYG%2B7cOZoZQeBYiQfePk7ZxVTc%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/ab8868bdf22843d29b8fc879f1ca214c?x-expires=1637078400&x-signature=Xq4xruEAsinpbNIwZhLduAmeg8M%3D",
        bitrate: 858214,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "6965407467035560709",
        title: "\u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf16-ies-music-va.tiktokcdn.com/obj/musically-maliva-obj/7005899101099346693.mp3",
        coverThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        coverMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        coverLarge: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        authorName: "\u041E\u043B\u0435\u0433",
        original: true,
        duration: 59,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 62,
        shareCount: 2,
        commentCount: 12,
        playCount: 1578
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 4,
          stickerText: [
            "\u0440\u0435\u0441\u0442\u043E\u0440\u0430\u043D \u043A\u0440\u0435\u0430\u0442\u0438\u0432\u043D\u043E \u0441\u0433\u043B\u0430\u0436\u0438\u0432\u0430\u0435\u0442 \u0432\u0440\u0435\u043C\u044F \u043E\u0436\u0438\u0434\u0430\u043D\u0438\u044F \u043F\u043E\u0434\u0430\u0447\u0438 \u0431\u043B\u044E\u0434"
          ]
        },
        {
          stickerType: 9,
          stickerText: ["\u043A\u0440\u0435\u0430\u0442\u0438\u0432"]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7025225110122499334",
      desc: "#oleg_sheff",
      createTime: 1635687685,
      video: {
        id: "7025225110122499334",
        height: 720,
        width: 576,
        duration: 13,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/69090cda3aec44aaaf592a8a15cef583_1635687686~tplv-dmt-logom:tos-maliva-p-0000/c3820d5400984362a64c72dc9bfb3a65.image?x-expires=1637078400&x-signature=CmuJGZn%2FyAwKMYoVAPVhEDJ3PQc%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/ab436c0413f1401eafc512e951d54c1e_1635687686?x-expires=1637078400&x-signature=XHeDNDCBXwHBz2g4GMWTIaCcUzg%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/a8bed46c287d409a9f19403b21da3da2_1635687686?x-expires=1637078400&x-signature=pBVVZMrcFQxs0epwaM8fDwPFItY%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-ve-0068c003/ee89e93078f14f64962d53508718dcb8/?a=1988&br=1582&bt=791&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&expire=1637078713&ft=wUyFfFGnkag3-I&l=2021111610050001018907420806051B9B&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=ajZkZjQ6Zmc8ODMzNzczM0ApaTppNTc6aWVnN2Q8Njc6OGdyaGVvcjRvbXNgLS1kMTZzczMtMTRgNGIvLjI0XmA0Y186Yw%3D%3D&signature=cfe9e502f8d8d9f58bb5589acc1d5568&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/ab436c0413f1401eafc512e951d54c1e_1635687686~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=drkm2I0mF8XvhvwsA%2BSYItz9V8I%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/ab436c0413f1401eafc512e951d54c1e_1635687686~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=7f9rNrAQ54zCU4XJSqfdnpt3w24%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/69090cda3aec44aaaf592a8a15cef583_1635687686?x-expires=1637078400&x-signature=wyg3cyMBH6CCL%2FQt21vxVB3pZo8%3D",
        bitrate: 810531,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "7025224944539798278",
        title: "\u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf58-ies-music-va.tiktokcdn.com/obj/musically-maliva-obj/7025225023401020165.mp3",
        coverThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        coverMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        coverLarge: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        authorName: "\u041E\u043B\u0435\u0433",
        original: true,
        duration: 13,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 88,
        shareCount: 14,
        commentCount: 32,
        playCount: 2709
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 4,
          stickerText: ["    \u0436\u0438\u0437\u043D\u044C \u043F\u0440\u0435\u043A\u0440\u0430\u0441\u043D\u0430 !   "]
        },
        {
          stickerType: 9,
          stickerText: ["\u0436\u0438\u0437\u043D\u044C \u043F\u0440\u0435\u043A\u0440\u0430\u0441\u043D\u0430"]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7025125596111883526",
      desc: "#oleg_sheff",
      createTime: 1635664517,
      video: {
        id: "7025125596111883526",
        height: 1024,
        width: 576,
        duration: 10,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/c083c44ac90f46be8c4aecab1c8ee11e_1635664517~tplv-dmt-logom:tos-maliva-p-0000/65b37a3bd1ca453faa3a04dfd5ade287.image?x-expires=1637078400&x-signature=FovCF8Io2tgNAPUgyRWOvVEeSKc%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/5dc505c7ffad498487803ce287eed7fe_1635664517?x-expires=1637078400&x-signature=6LVUVf%2Bq90g8XsZrsrKN7Twg2NY%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/45e2dc8872be4797acfa901f764baf27_1635664517?x-expires=1637078400&x-signature=10F92vcbJT1MSPswGyxqp7Q3sl4%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-ve-0068c001/87f7a6b36464493dbeca1ac1bfe2490e/?a=1988&br=2018&bt=1009&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&expire=1637078710&ft=wUyFfFGnkag3-I&l=2021111610050001018907420806051B9B&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=amo5eTc6Znk3ODMzNzczM0ApZDo1ZTU4N2VnN2k4OWk8NWcxc2docjRvMXNgLS1kMTZzczAyYWI1NTRhMDJiNWEuYGE6Yw%3D%3D&signature=ab92eb900004847038b1dd1f361f7a77&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/5dc505c7ffad498487803ce287eed7fe_1635664517~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=Ty%2BOGmf3p%2FOerMUcTXWyzgYtHF8%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/5dc505c7ffad498487803ce287eed7fe_1635664517~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=hk3PaHWtkXqn%2B%2Fmc9nakPFfixZo%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/c083c44ac90f46be8c4aecab1c8ee11e_1635664517?x-expires=1637078400&x-signature=21sE4E56FpZDHNeU8A8GDrKpFiQ%3D",
        bitrate: 1033902,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "6965407467035560709",
        title: "\u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf16-ies-music-va.tiktokcdn.com/obj/musically-maliva-obj/7005899101099346693.mp3",
        coverThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        coverMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        coverLarge: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        authorName: "\u041E\u043B\u0435\u0433",
        original: true,
        duration: 59,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 69,
        shareCount: 4,
        commentCount: 10,
        playCount: 1697
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 4,
          stickerText: ["\u043A\u0430\u0440\u044C\u0435\u0440\u043D\u044B\u0439 \u0440\u043E\u0441\u0442 "]
        },
        {
          stickerType: 9,
          stickerText: ["\u043A\u0430\u0440\u044C\u0435\u0440\u0430 "]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7024802365232532741",
      desc: "#oleg_sheff",
      createTime: 1635589258,
      video: {
        id: "7024802365232532741",
        height: 1024,
        width: 576,
        duration: 15,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/411ca84ea46140109bedc9d810b33d4a~tplv-dmt-logom:tos-maliva-p-0000/f2d1b3dc4ed245e7861b2c77092e4b03.image?x-expires=1637078400&x-signature=eQpBdLCafwfrcWFqdvz7oNmfzZE%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/68904f3e63f64885bc1def8417f3ae8a_1635589259?x-expires=1637078400&x-signature=y3DxQqtwXdWBISHa3xpeWqNT3u0%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/c7956d1695e542ee943996d1a7406dba_1635589259?x-expires=1637078400&x-signature=FT9ttaXQLJFEYncVCmyiBowiYVQ%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-ve-0068c001/17c2416d3a4e44c9b31040ea8206f5b3/?a=1988&br=1972&bt=986&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&expire=1637078715&ft=wUyFfFGnkag3-I&l=2021111610050001018907420806051B9B&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=ajh2bWY6ZnBrODMzNzczM0ApOztoZTo7NTxpNzU7ZGZkM2dgbDJzcjRnbHJgLS1kMTZzc2IvYTMyMTAwMl82XjY0NGI6Yw%3D%3D&signature=ec5b4ae78f13aea5fb2b0d92309d41d0&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/68904f3e63f64885bc1def8417f3ae8a_1635589259~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=dEPW8Nuq%2BupzgFo2jRq%2F%2F6HP8pM%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/68904f3e63f64885bc1def8417f3ae8a_1635589259~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=jCP2VS%2BtQ741GTgNeYvwtuUCTLU%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/411ca84ea46140109bedc9d810b33d4a?x-expires=1637078400&x-signature=g0db1iXObwDKV7ydFb2OSe74WFs%3D",
        bitrate: 1010472,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "6965407467035560709",
        title: "\u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf16-ies-music-va.tiktokcdn.com/obj/musically-maliva-obj/7005899101099346693.mp3",
        coverThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        coverMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        coverLarge: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        authorName: "\u041E\u043B\u0435\u0433",
        original: true,
        duration: 59,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 113,
        shareCount: 17,
        commentCount: 16,
        playCount: 2873
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 4,
          stickerText: [
            "       \u0434\u0436\u0435\u043D\u0442\u043B\u044C\u043C\u0435\u043D\u044B     \n             \u{1F923} \u0443\u0434\u0430\u0447\u0438 \u{1F602}          "
          ]
        },
        {
          stickerType: 9,
          stickerText: ["\u0441\u043C\u043E\u043A\u0438\u043D\u0433\u0438"]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7024750526168452358",
      desc: "#oleg_sheff",
      createTime: 1635577190,
      video: {
        id: "7024750526168452358",
        height: 1024,
        width: 576,
        duration: 135,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/07a6d5f3b59245d8a6c09264434753e6~tplv-dmt-logom:tos-maliva-p-0000/624d3163b18d42c29950b58c075b90df.image?x-expires=1637078400&x-signature=OUUAWwcPd03VgFHQBc70C4hTedQ%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/57c188acef02429584647adda2f0dec3_1635577190?x-expires=1637078400&x-signature=ibkaZLxc2fdfvnG8Jc1KlNd039o%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/a37fdff1d77d4ad4b5df671787fd420e_1636407888?x-expires=1637078400&x-signature=F4ulH6eEe2WggrbGsNABOr03uZ4%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-ve-0068c002/1f1280be93d646d68266a9f86aadc9aa/?a=1988&br=728&bt=364&cd=0%7C0%7C0&ch=0&cr=0&cs=0&dr=0&ds=3&er=&expire=1637079108&ft=wUyFfFGnkag3-I&l=202111161009340101880612241F04B35D&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=MzR1ZGg6ZnRoODMzNzczM0ApZjY7NzRmNjw4N2U2M2g5OWdhM3NucjRvbXJgLS1kMTZzcy4wM2ExYmI1L2MxNmNiLzQ6Yw%3D%3D&signature=467fc6cf05ac55a3858189e2e9097e6f&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/57c188acef02429584647adda2f0dec3_1635577190~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=nCih%2Fbw7FPTQ%2B3niPUpLLpc76HA%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/57c188acef02429584647adda2f0dec3_1635577190~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=J%2BQXIW1%2FaP4aYWRdYnQIr2qzZuk%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/07a6d5f3b59245d8a6c09264434753e6?x-expires=1637078400&x-signature=yD%2FPTUuDn7MomqYax3AlMVsEgGQ%3D",
        bitrate: 372764,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "7024750315022945029",
        title: "\u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf16-ies-music-va.tiktokcdn.com/obj/musically-maliva-obj/7024750490978093829.mp3",
        coverThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        coverMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        coverLarge: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        authorName: "\u041E\u043B\u0435\u0433",
        original: true,
        duration: 134,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 49,
        shareCount: 5,
        commentCount: 10,
        playCount: 1341
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 4,
          stickerText: [
            "\u043D\u0435\u043E\u0436\u0438\u0434\u0430\u043D\u043D\u0430\u044F \u0440\u0430\u0437\u0432\u044F\u0437\u043A\u0430 !!! \u{1F631}",
            "\u0412\u0441\u0435\u043C \u0438\u0433\u0440\u043E\u043A\u0430\u043C \u043F\u0440\u0438\u0433\u043E\u0442\u043E\u0432\u0438\u0442\u044C\u0441\u044F  !",
            "\u0438 \u0432\u043D\u0438\u043C\u0430\u0442\u0435\u043B\u044C\u043D\u043E \u043F\u0440\u043E\u0441\u043B\u0443\u0448\u0430\u0442\u044C \u0438\u043D\u0441\u0442\u0440\u0443\u043A\u0446\u0438\u0438  !",
            "\u0435\u0441\u043B\u0438 \u0437\u0430\u0433\u043E\u0440\u0438\u0442\u0441\u044F \u0437\u0435\u043B\u0451\u043D\u044B\u0439 - \u043D\u0430\u0447\u0438\u043D\u0430\u0439\u0442\u0435 \u0434\u0432\u0438\u0436\u0435\u043D\u0438\u0435 ",
            "\u0435\u0441\u043B\u0438 \u043A\u0440\u0430\u0441\u043D\u044B\u0439 - \u0432\u0441\u0435\u043C \u0441\u0442\u043E\u044F\u0442\u044C!",
            "\u0435\u0441\u043B\u0438 \u043F\u043E\u0441\u043B\u0435 \u0441\u0438\u0433\u043D\u0430\u043B\u0430 \u0431\u0443\u0434\u0435\u0442 \u0437\u0430\u043C\u0435\u0447\u0435\u043D\u043E \u0434\u0432\u0438\u0436\u0435\u043D\u0438\u0435  -",
            "\u0412\u0430\u0441 \u0436\u0434\u0451\u0442 \u0434\u0438\u0441\u043A\u0432\u0430\u043B\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u044F!",
            "\u043A\u043E\u0440\u043E\u0447\u0435  !!!",
            "\u0437\u0430\u0434\u0430\u0447\u0430  - \u043F\u0435\u0440\u0435\u0441\u0435\u0447\u044C \u0447\u0435\u0440\u0442\u0443  !!!",
            "\u043F\u0440\u043E\u0434\u043E\u043B\u0436\u0435\u043D\u0438\u0435        \u0441\u043B\u0435\u0434\u0443\u0435\u0442...      "
          ]
        },
        {
          stickerType: 9,
          stickerText: ["\u0438\u0433\u0440\u0430 \u0432 ..."]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7024347375359593734",
      desc: "#oleg_sheff",
      createTime: 1635483324,
      video: {
        id: "7024347375359593734",
        height: 1024,
        width: 576,
        duration: 12,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/79f5a66ab69b4f7086a5e0cedf81a071~tplv-dmt-logom:tos-maliva-p-0000/d5499cd0d3dc4a7ca79779e14571f9b5.image?x-expires=1637078400&x-signature=5RCrkD3ea1MNZy9HC768%2FLKTfgU%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/358de2706d54433f89200c2d97913070_1635483325?x-expires=1637078400&x-signature=kj3pl33dPMcDCsvdJo26xAqQVdA%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/a87470bd76774cef9822a08c61984468_1635483325?x-expires=1637078400&x-signature=kpHXEsq28ZVDH%2B%2FhDV3TKTAN7SA%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-pve-0068/172bc2a9725f4e1a971aca4580f32b07/?a=1988&br=1540&bt=770&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&expire=1637078986&ft=wUyFfFGnkag3-I&l=202111161009340101880612241F04B35D&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=amduOjU6ZmZxODMzNzczM0ApZzo8OTc8aTw3NzwzZDw4OWcuNG00cjQwcXFgLS1kMTZzc2M1NDZeYzMyYDVeNmNiMzM6Yw%3D%3D&signature=2fca62817af98350271591e720d77061&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/358de2706d54433f89200c2d97913070_1635483325~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=tx73fiX7fwa5ZiPGVAneAb55LV8%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/358de2706d54433f89200c2d97913070_1635483325~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=GiXuDvCAEBfCcOkmHD8jly12lcw%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/79f5a66ab69b4f7086a5e0cedf81a071?x-expires=1637078400&x-signature=Tbr1GE%2BPMRGi86UXseUDhrhJ%2Buc%3D",
        bitrate: 789415,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "6681229840026323717",
        title: "Ne Angel",
        playUrl: "https://sf16-ies-music-va.tiktokcdn.com/obj/tos-useast2a-ve-2774/6351780d68424e29bafda1d7b949e4aa",
        coverThumb: "https://p16-amd-va.tiktokcdn.com/img/tos-useast2a-v-2774/f5e22f15d30d4a50bc313467a9d31742~c5_100x100.jpeg",
        coverMedium: "https://p16-amd-va.tiktokcdn.com/img/tos-useast2a-v-2774/f5e22f15d30d4a50bc313467a9d31742~c5_200x200.jpeg",
        coverLarge: "https://p16-amd-va.tiktokcdn.com/img/tos-useast2a-v-2774/f5e22f15d30d4a50bc313467a9d31742~c5_720x720.jpeg",
        authorName: "LIZER",
        original: false,
        duration: 36,
        album: "Ne Angel"
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 100,
        shareCount: 22,
        commentCount: 20,
        playCount: 1556
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 4,
          stickerText: [
            "               \u0414 - \u0434\u0440\u0443\u0436\u0431\u0430 !               "
          ]
        },
        {
          stickerType: 9,
          stickerText: ["\u0434\u0440\u0443\u0437\u044C\u044F "]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7024175128443473157",
      desc: "#oleg_sheff",
      createTime: 1635443218,
      video: {
        id: "7024175128443473157",
        height: 1024,
        width: 576,
        duration: 9,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/249bb84328524fe295683deb08fc388c_1635443219~tplv-dmt-logom:tos-maliva-p-0000/ebe2893a117e4869918ce18723e16f23.image?x-expires=1637078400&x-signature=bTkw%2Bij8Oi0%2FZqU1%2Fbo2VifUhGM%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/a5b0a3c7d206421fa7c927e82ec4479c_1635443218?x-expires=1637078400&x-signature=v28sMcYx%2BiPW4rFBgwMs9EpGkJo%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/9507802c62c64c52937b9e40bfa250ee_1635443219?x-expires=1637078400&x-signature=b%2BXqv5aFfNH%2FK7rTEA%2BRQRj0VRI%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-ve-0068c002/96d43ebd106046e1acd0baad97e2bf03/?a=1988&br=2294&bt=1147&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&expire=1637078983&ft=wUyFfFGnkag3-I&l=202111161009340101880612241F04B35D&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=M2tybjk6ZjVoODMzNzczM0ApNzw6NztoZzw5N2ZmZzY1N2ducXBscjRfMXFgLS1kMTZzczZjMDMtNDYxX2NhLjU1NV46Yw%3D%3D&signature=50bfab850eaf722a6a4c3c6c70600c69&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/a5b0a3c7d206421fa7c927e82ec4479c_1635443218~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=LKWsOmC9o8Rs8JQiw1WQ7CGr6L4%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/a5b0a3c7d206421fa7c927e82ec4479c_1635443218~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=UzJjX3MBdYgRuIBqeIQh1cHaoJM%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/249bb84328524fe295683deb08fc388c_1635443219?x-expires=1637078400&x-signature=XfNrr4vlv0KrCE9JA3GdQfNGACQ%3D",
        bitrate: 1175314,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "6965407467035560709",
        title: "\u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf16-ies-music-va.tiktokcdn.com/obj/musically-maliva-obj/7005899101099346693.mp3",
        coverThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        coverMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        coverLarge: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        authorName: "\u041E\u043B\u0435\u0433",
        original: true,
        duration: 59,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 61,
        shareCount: 12,
        commentCount: 14,
        playCount: 1704
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 4,
          stickerText: ["\u0435\u0441\u0442\u0435\u0441\u0442\u0432\u0435\u043D\u043D\u043E !"]
        },
        {
          stickerType: 9,
          stickerText: ["\u043F\u0440\u0438\u0432\u0438\u0432\u043A\u0430"]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7024008838449745158",
      desc: "#oleg_sheff",
      createTime: 1635404502,
      video: {
        id: "7024008838449745158",
        height: 1024,
        width: 576,
        duration: 7,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/b0c8161b8c974cfc9644c001c3fab0ca_1635404502~tplv-dmt-logom:tos-maliva-p-0000/d6c603c5e20d4907a26fccd4d638d7ca.image?x-expires=1637078400&x-signature=%2FVZW1u1867Ne8CwC2oU5dWw7ID8%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/eca61f14877847ff862bf576ea55ec2d_1635404502?x-expires=1637078400&x-signature=02hskC2M6fpZ4BX%2FPPyK%2B7tB2J8%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/afe469b06fe14fefa3cb62137c8c61d9_1635404503?x-expires=1637078400&x-signature=CQafBMP4NFnW1yhdufdz6AgBQ9c%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-pve-0068/5ddc5c8619f54e479c8c9a46d49f153f/?a=1988&br=2574&bt=1287&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&expire=1637078981&ft=wUyFfFGnkag3-I&l=202111161009340101880612241F04B35D&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=ajhvb2Y6Zm03ODMzNzczM0ApMzZoOGk6Z2RmN2k0O2U0OGcxMS5rcjRnaXFgLS1kMTZzc19gMS0uNTMwYC01NWAtLV46Yw%3D%3D&signature=e8d5703e33b6517f04500e5713b64e32&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/eca61f14877847ff862bf576ea55ec2d_1635404502~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=JHYQcK%2BDrODN2POYsnE0VmtEfDI%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/eca61f14877847ff862bf576ea55ec2d_1635404502~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=5V83S39cdeT18MJicUKNQuwlHYE%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/b0c8161b8c974cfc9644c001c3fab0ca_1635404502?x-expires=1637078400&x-signature=UvDgNMa86ZAlbOLUdQLNTZKIlvc%3D",
        bitrate: 1318486,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "7015053500493220614",
        title: "\u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf16-ies-music-va.tiktokcdn.com/obj/musically-maliva-obj/7015053689211702021.mp3",
        coverThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        coverMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        coverLarge: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        authorName: "\u041E\u043B\u0435\u0433",
        original: true,
        duration: 9,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 55,
        shareCount: 0,
        commentCount: 20,
        playCount: 2833
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 4,
          stickerText: ["\u0413\u0440\u0430\u043D\u0434", "\u043A\u0442\u043E \u0437\u0434\u0435\u0441\u044C?"]
        },
        {
          stickerType: 9,
          stickerText: ["\u043A\u0442\u043E \u0437\u0434\u0435\u0441\u044C?"]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7023724204520525061",
      desc: "#oleg_sheff",
      createTime: 1635338229,
      video: {
        id: "7023724204520525061",
        height: 1024,
        width: 576,
        duration: 8,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/61d49a2dc66a4f76871068c535077539_1635338230~tplv-dmt-logom:tos-maliva-p-0000/50011edec5074a45a260336cac92a9ff.image?x-expires=1637078400&x-signature=Ffj0fbWo7gWChw0DOKZ80m6cGFM%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/d102a5f5b3964ffb9f9845f4c4887e9f_1635338230?x-expires=1637078400&x-signature=rZ7SNmFJUM%2FHuuOtel2ldrbCmdw%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/8819999914c1480aa863e8cfa3ff56fb_1635338230?x-expires=1637078400&x-signature=nCkB40UJuXsbdfA%2FWLgTyxrk%2FDw%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-ve-0068c001/f62991f12f384d08918f86f17207d2fe/?a=1988&br=2356&bt=1178&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&expire=1637078982&ft=wUyFfFGnkag3-I&l=202111161009340101880612241F04B35D&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=ajszZWk6ZmhuODMzNzczM0ApZDo2OWRkPGQ1NzgzZjo4OmdmYnAvcjRnY3BgLS1kMTZzc2E1MzNiNDUyNF9eMWIvYC86Yw%3D%3D&signature=2df49f7f3bded652266f7e3320b4437f&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/d102a5f5b3964ffb9f9845f4c4887e9f_1635338230~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=uzXqxLi7Ay%2FXFuTBhK7ASWvfxXo%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/d102a5f5b3964ffb9f9845f4c4887e9f_1635338230~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=41CsujUUWOr%2BftQ2JQBf2J%2FbAHo%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/61d49a2dc66a4f76871068c535077539_1635338230?x-expires=1637078400&x-signature=qzyUUt0qfyga9KiJ%2F9LOeE5v6GY%3D",
        bitrate: 1206542,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "6902498519777626881",
        title: "\u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf58-ies-music-sg.tiktokcdn.com/obj/tiktok-obj/6902498478186859265.mp3",
        coverThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/e7dcac48457d3a00aa3f68f10daa536f~c5_100x100.jpeg?x-expires=1637143200&x-signature=Wa1jFC2W6lo2Lxo7cuno6pXvV6k%3D",
        coverMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/e7dcac48457d3a00aa3f68f10daa536f~c5_720x720.jpeg?x-expires=1637143200&x-signature=rIRmH8rIg4ZWQZo%2BhUFW2Jt0wrU%3D",
        coverLarge: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/e7dcac48457d3a00aa3f68f10daa536f~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=xKlnQ1HPaa%2B1ZnMo5DVClfu5PJk%3D",
        authorName: "Silver \u{1F638}",
        original: true,
        duration: 10,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 70,
        shareCount: 8,
        commentCount: 12,
        playCount: 1821
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 4,
          stickerText: ["\u044D\u0442\u043E \u043E\u0447\u0435\u043D\u044C \n\u0442\u044F\u0436\u0451\u043B\u0430\u044F \u0440\u0430\u0431\u043E\u0442\u0430 !"]
        },
        {
          stickerType: 9,
          stickerText: ["\u0442\u044F\u0436\u0451\u043B\u044B\u0439 \u0442\u0440\u0443\u0434"]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7023280618335161605",
      desc: "#oleg_sheff",
      createTime: 1635234951,
      video: {
        id: "7023280618335161605",
        height: 1024,
        width: 576,
        duration: 15,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/7a7f741af7c94d27b31f7f89632cf158~tplv-dmt-logom:tos-maliva-p-0000/c58b8268e9f2448786c3635a2ba534c1.image?x-expires=1637078400&x-signature=E0QvJOiU75UFQC05LVi1syOCocQ%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/7cc1ce1f78fe4f158a0adfce46c76c9e_1635234951?x-expires=1637078400&x-signature=Uf5xCzaxfp9Ehp8c30KQZSMUSyM%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/9e7c3e9dae7349ca950f2be6cb977203_1636489160?x-expires=1637078400&x-signature=RUNcZDN656YyVrBAhmzzYJhnkF4%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-ve-0068c004/79a720bdd87f400d9b58c594ea3abba2/?a=1988&br=1130&bt=565&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&expire=1637078989&ft=wUyFfFGnkag3-I&l=202111161009340101880612241F04B35D&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=ajxwaTg6Znd1ODMzNzczM0ApOjs3ODxnaTwzNzw7Ojw3OWdpaC0xcjRfNW9gLS1kMTZzczMzLy4yMDQzYzItYzBgLy86Yw%3D%3D&signature=6b85843f3bc80b061c93f5dea226bf2e&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/7cc1ce1f78fe4f158a0adfce46c76c9e_1635234951~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=qrJiQF8OTFMHPaVIjnmae7T%2BgJQ%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/7cc1ce1f78fe4f158a0adfce46c76c9e_1635234951~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=z3V4096UXzAPtR2XrRTLpfayHw8%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/7a7f741af7c94d27b31f7f89632cf158?x-expires=1637078400&x-signature=pSx4SoJNaIUVDZQ68sN6BIpsXJo%3D",
        bitrate: 578604,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "6657093052089240325",
        title: "\u041F\u043E\u043F\u0430 \u043A\u0430\u043A \u0443 \u041A\u0438\u043C",
        playUrl: "https://sf58-ies-music-va.tiktokcdn.com/obj/tos-useast2a-ve-2774/c1617362915341ea8975e8a62bbd520d",
        coverThumb: "https://p16-amd-va.tiktokcdn.com/img/tos-useast2a-v-2774/444f1839ef484ac289f208615b8959a2~c5_100x100.jpeg",
        coverMedium: "https://p16-amd-va.tiktokcdn.com/img/tos-useast2a-v-2774/444f1839ef484ac289f208615b8959a2~c5_200x200.jpeg",
        coverLarge: "https://p16-amd-va.tiktokcdn.com/img/tos-useast2a-v-2774/444f1839ef484ac289f208615b8959a2~c5_720x720.jpeg",
        authorName: "NK",
        original: false,
        duration: 24,
        album: "No Komments"
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 78,
        shareCount: 4,
        commentCount: 32,
        playCount: 2287
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 4,
          stickerText: [
            "\u0441\u043C\u043E\u0442\u0440\u0435\u0442\u044C \u0434\u043E \u043A\u043E\u043D\u0446\u0430 !",
            '" \u041E \u0447\u0451\u043C \u043C\u0435\u0447\u0442\u0430\u044E\u0442 \u043A\u043E\u0440\u043E\u043B\u0435\u0432\u044B "'
          ]
        },
        {
          stickerType: 9,
          stickerText: ["\u043A\u043E\u0440\u043E\u043B\u0435\u0432\u0430"]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7022915835152895238",
      desc: "#oleg_sheff",
      createTime: 1635150017,
      video: {
        id: "7022915835152895238",
        height: 636,
        width: 360,
        duration: 14,
        ratio: "360p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/b5dce2d11ba2468d8327173282716a42~tplv-dmt-logom:tos-maliva-p-0000/a92aefc722dd4b5cba8d089e0367c9a0.image?x-expires=1637078400&x-signature=O1CRS4YV0oyiAHbdcQnKDHas8P4%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/b1c100faec0145f687fc84d1a0c3a7db_1635150018?x-expires=1637078400&x-signature=r6EtgXUcEJXfHsq1y4wFq85ozJw%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/2d70c6bfca114721b3cf461350a6b3f4_1635150018?x-expires=1637078400&x-signature=n2PymFxwxbYnMDZFeWWxd9tyZvQ%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-ve-0068c004/77eccb9d1f3247c58a32a38523ed1797/?a=1988&br=1574&bt=787&cd=0%7C0%7C0&ch=0&cr=0&cs=0&dr=0&ds=1&er=&expire=1637078988&ft=wUyFfFGnkag3-I&l=202111161009340101880612241F04B35D&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=ajY4eGQ6Zjs5ODMzNzczM0ApaDQ5ODVnZTxmN2VkPDo3OGdfbW1lcjQwZW9gLS1kMTZzczRiMWAuLmI1YjQzYDJfLzU6Yw%3D%3D&signature=a421f3d10c4e45b1cf1cd8ea90e9fac5&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/b1c100faec0145f687fc84d1a0c3a7db_1635150018~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=dHIiCo1CXxKh1gtLzNeM5gKqrBw%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/b1c100faec0145f687fc84d1a0c3a7db_1635150018~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=TmtMUA1NOHr5j0CR0SgfX2GCQm4%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/b5dce2d11ba2468d8327173282716a42?x-expires=1637078400&x-signature=EZdUS8vcKCPtQIMS6fluoUaMI34%3D",
        bitrate: 806860,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "lowest",
        encodeUserTag: "",
        codecType: "h264",
        definition: "360p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "6965407467035560709",
        title: "\u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf16-ies-music-va.tiktokcdn.com/obj/musically-maliva-obj/7005899101099346693.mp3",
        coverThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        coverMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        coverLarge: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        authorName: "\u041E\u043B\u0435\u0433",
        original: true,
        duration: 59,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 169,
        shareCount: 17,
        commentCount: 24,
        playCount: 4108
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 4,
          stickerText: [
            "\u043A\u0442\u043E \u0441\u044A\u0435\u043B \n\u0432\u0441\u0435 \u043A\u043E\u0442\u043B\u0435\u0442\u044B?",
            "\u0434\u0430 \u043D\u0435 \u0437\u043D\u0430\u044E \u044F !",
            "\u041C\u0443\u0440\u0437\u0438\u043A\u0430 \u0441\u043F\u0440\u043E\u0441\u0438 ! "
          ]
        },
        {
          stickerType: 9,
          stickerText: ["\u043A\u043E\u0442\u043B\u0435\u0442\u044B "]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7022640162710555909",
      desc: "#oleg_sheff",
      createTime: 1635085830,
      video: {
        id: "7022640162710555909",
        height: 1024,
        width: 576,
        duration: 19,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/8232a327e03e426b90c6aa16f895b6d0~tplv-dmt-logom:tos-maliva-p-0000/9f62ebabc8e6428d88c532b6a865ff5f.image?x-expires=1637078400&x-signature=PBA1dCvQXh7UZyWMfrZL89CneP0%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/64c7a0b2a6fd4427acc34e3b7b0e23bc_1635085831?x-expires=1637078400&x-signature=kHLW%2F0K5Jif6aCxLbmGYHklvgOI%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/65482ead965e41589c4760034d7023bb_1635085833?x-expires=1637078400&x-signature=bIBvBkTORiTXtggq5ReuhQ5tjHI%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-ve-0068c004/5a62607940f64161995328e0dbbc0498/?a=1988&br=2148&bt=1074&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&expire=1637078993&ft=wUyFfFGnkag3-I&l=202111161009340101880612241F04B35D&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=ajp5czw6ZjdwODMzNzczM0ApNmZlNDlkOWU6NztlOGc6N2dvXjAwcjQwb25gLS1kMTZzc2IwYF9jXy8yY2NhY2MxMTU6Yw%3D%3D&signature=70cdbd323137c8fdcade62ff74bbe54d&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/64c7a0b2a6fd4427acc34e3b7b0e23bc_1635085831~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=1XGxjA0qQfYWoMn3X0n1Vd4T83k%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/64c7a0b2a6fd4427acc34e3b7b0e23bc_1635085831~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=t%2FzqL3fbUmQpGDf4%2F19yle9i8X0%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/8232a327e03e426b90c6aa16f895b6d0?x-expires=1637078400&x-signature=7EFJWBbsl%2BMtR%2B2GBSELqKqdyPA%3D",
        bitrate: 1099837,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "6590643178271935238",
        title: "Mission Impossible Theme (Movie Trailer Mix)",
        playUrl: "https://sf16-ies-music-va.tiktokcdn.com/obj/tos-useast2a-ve-2774/3b17f7ee4a0346b69b3e477b8b35ab28",
        coverThumb: "https://p16-amd-va.tiktokcdn.com/img/tos-useast2a-v-2774/9b4181ac712a46868addd0da145aa7e5~c5_100x100.jpeg",
        coverMedium: "https://p16-amd-va.tiktokcdn.com/img/tos-useast2a-v-2774/9b4181ac712a46868addd0da145aa7e5~c5_200x200.jpeg",
        coverLarge: "https://p16-amd-va.tiktokcdn.com/img/tos-useast2a-v-2774/9b4181ac712a46868addd0da145aa7e5~c5_720x720.jpeg",
        authorName: "Dominik Hauser",
        original: false,
        duration: 29,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 49,
        shareCount: 18,
        commentCount: 9,
        playCount: 2713
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 4,
          stickerText: [
            "\u041D\u0435\u043A\u0440\u0430\u0441\u043E\u0432\n",
            "\n\u041E\u0434\u043D\u0430\u0436\u0434\u044B,",
            "\u0432 \u0436\u0435\u0441\u0442\u043E\u043A\u0438\u0439 \u043A\u043E\u0432\u0438\u0434\u043D\u044B\u0439 \u043B\u043E\u043A\u0434\u0430\u0443\u043D \n",
            "\n\u042F \u0438\u0437 \u0434\u043E\u043C\u0443 \u0432\u044B\u0448\u0435\u043B, \u0432\u043E\u043A\u0440\u0443\u0433 \u043D\u0438 \u0434\u0443\u0448\u0438,\n",
            "\n\u0412\u0434\u0440\u0443\u0433 \u043F\u0440\u0451\u0442 \u043C\u043D\u0435 \u043D\u0430\u0432\u0441\u0442\u0440\u0435\u0447\u0443 \n(\u043F\u043E\u0445\u043E\u0436\u0435, \u0447\u0442\u043E \u0434\u0430\u0443\u043D) \n",
            "\n\u0411\u0435\u0437 \u043C\u0430\u0441\u043A\u0438, \u043F\u0435\u0440\u0447\u0430\u0442\u043E\u043A... \u041A\u0440\u0438\u0447\u0443: \n\u2013\u041D\u0435 \u0434\u044B\u0448\u0438! ",
            "\u041E\u0442\u043A\u0443\u0434\u0430, \u0431\u043E\u043B\u0435\u0437\u043D\u044B\u0439? \n\u2013\u0414\u0430 \u0442\u0443\u0442, \u043D\u0435\u0434\u0430\u043B\u0435\u0447\u0435. \u0421 \u0431\u043E\u043B\u044C\u043D\u0438\u0446\u044B \u043A\u043E\u0432\u0438\u0434\u043D\u043E\u0439! \n",
            "\n\u2013\u0422\u0430\u043A \u0442\u044B \u0442\u0430\u043C \u043B\u0435\u0436\u0430\u043B? \n\u2013\u0427\u0435\u043C\u0443 \u0443\u0434\u0438\u0432\u043B\u044F\u0442\u044C\u0441\u044F, \u0432\u0435\u0434\u044C \u043D\u0430\u0441 \u0442\u0430\u043C \u043D\u0435 \u043B\u0435\u0447\u0430\u0442. \n\u041E\u0442\u0435\u0446 \u043D\u044B\u043D\u0447\u0435 \u043F\u043E\u043C\u0435\u0440, \u0430 \u044F \u0443\u0431\u0435\u0436\u0430\u043B! "
          ]
        },
        {
          stickerType: 9,
          stickerText: ["Covid "]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7022536033006849286",
      desc: "#oleg_sheff",
      createTime: 1635061587,
      video: {
        id: "7022536033006849286",
        height: 1024,
        width: 576,
        duration: 22,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/7cb9acddc523459998a399f4861c5e6a_1635061588~tplv-dmt-logom:tos-maliva-p-0000/d76ed74a93664b04b863b38a12bf78aa.image?x-expires=1637078400&x-signature=AINo17LITJlIHBCj1Wb6SFK5Au0%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/ff4259730b3c413191fe3020a0770a33_1635061588?x-expires=1637078400&x-signature=aEGJfu9PnlS1VKhalGN93Dfdf14%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/76931dc178804b198a4ff9531d57539b_1635061589?x-expires=1637078400&x-signature=HeHK2ptx%2Frv533WlaPVog0qh2ow%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-ve-0068c002/043b8aa5690145d793e3aa2a5618f4ba/?a=1988&br=1102&bt=551&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&expire=1637078995&ft=wUyFfFGnkag3-I&l=202111161009340101880612241F04B35D&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=MztpdGg6ZjZqODMzNzczM0ApNzM0ZGQ6OGRlN2g7NjMzPGdtNl9tcjRncm5gLS1kMTZzc2M0NWJgLmFiYi4vYV8wNGA6Yw%3D%3D&signature=900f474659ddd86ee55a05a2607c1991&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/ff4259730b3c413191fe3020a0770a33_1635061588~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=YC7lUgQXKxnvWp22URDFX0Xtp%2Fg%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/ff4259730b3c413191fe3020a0770a33_1635061588~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=XMZkgC%2Bi7WIedJFTlFjEbAmE%2FF4%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/7cb9acddc523459998a399f4861c5e6a_1635061588?x-expires=1637078400&x-signature=b7ZChBjyGlc4dGRNlZrgKTMkrj0%3D",
        bitrate: 564562,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "7022535774033677062",
        title: "\u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf58-ies-music-va.tiktokcdn.com/obj/musically-maliva-obj/7022535843080407814.mp3",
        coverThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        coverMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        coverLarge: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        authorName: "\u041E\u043B\u0435\u0433",
        original: true,
        duration: 21,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 1037,
        shareCount: 245,
        commentCount: 94,
        playCount: 22600
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 4,
          stickerText: [
            "\u041E\u043F\u0442\u0438\u043C\u0438\u0437\u043C - \u044D\u0442\u043E \u043A\u043E\u0433\u0434\u0430 \u0432 \u0442\u0432\u043E\u0435\u0439 \u0436\u0438\u0437\u043D\u0438 \u043F\u043E\u043B\u043D\u0430\u044F \u0436\u043E\u043F\u043E\u043D\u044C\u043A\u0430,\n  \u0430 \u0442\u044B \u043D\u0438\u0447\u0435\u0433\u043E.....\n\u0431\u043E\u0434\u0440\u044F\u0447\u043A\u043E\u043C!",
            "\u0441\u043C\u043E\u0442\u0440\u0435\u0442\u044C \u0434\u043E \u043A\u043E\u043D\u0446\u0430 !!!"
          ]
        },
        {
          stickerType: 9,
          stickerText: ["\u043E\u043F\u0442\u0438\u043C\u0438\u0437\u043C"]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7022262477131943173",
      desc: "#oleg_sheff",
      createTime: 1634997893,
      video: {
        id: "7022262477131943173",
        height: 1024,
        width: 576,
        duration: 18,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/9ca40fb12c544350826b40b13bacb348_1634997894~tplv-dmt-logom:tos-maliva-p-0000/d318000c86034ad380efe6c38c7be943.image?x-expires=1637078400&x-signature=3F7FPzWVZPIfBlVDsreQsDT800c%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/2cd6ce3e403c4d38933ea46f505c1b45_1634997894?x-expires=1637078400&x-signature=9f%2FSSPFIiDsjn6i%2FE6UqXuLfW2Y%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/acc7b10d9b3b4811a2202e8160dc1f2a_1634997894?x-expires=1637078400&x-signature=TYeR5l%2B9ehYNVV9OolLNljRJAnE%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-pve-0068/407c44fab96c4b2c86a73b5b30cac135/?a=1988&br=1618&bt=809&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&expire=1637078992&ft=wUyFfFGnkag3-I&l=202111161009340101880612241F04B35D&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=anZ4Z2Q6Znk0ODMzNzczM0ApNDM4O2Y8ZjtnNzhnN2ZnOWdfYDNwcjQwYG5gLS1kMTZzczMtLTAyMS42MS5jMmA2Y146Yw%3D%3D&signature=75c64e98a7fdd8a2cce45f93fea9d494&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/2cd6ce3e403c4d38933ea46f505c1b45_1634997894~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=j8Lkhah%2F1%2B8ZDP6%2BznIBEta2KYk%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/2cd6ce3e403c4d38933ea46f505c1b45_1634997894~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=nPTlz8HbHWKi%2BWPowsIrOa8axIg%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/9ca40fb12c544350826b40b13bacb348_1634997894?x-expires=1637078400&x-signature=a9M1hFU9jKR8g8QS5PuvsppzJNI%3D",
        bitrate: 828750,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "6965407467035560709",
        title: "\u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf16-ies-music-va.tiktokcdn.com/obj/musically-maliva-obj/7005899101099346693.mp3",
        coverThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        coverMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        coverLarge: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        authorName: "\u041E\u043B\u0435\u0433",
        original: true,
        duration: 59,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 43,
        shareCount: 2,
        commentCount: 40,
        playCount: 2741
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 4,
          stickerText: [
            "        \u0441\u043F\u0430\u0441\u0438\u0431\u043E        \n\u0437\u0430 \u043F\u043E\u0434\u0434\u0435\u0440\u0436\u043A\u0443 !!!",
            "\u270C\u{1F61C}\u{1F525}"
          ]
        },
        {
          stickerType: 9,
          stickerText: ["\u0441\u043F\u0430\u0441\u0438\u0431\u043E  !!!"]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7022170949785013509",
      desc: "#oleg_sheff #corona #coronavir\xFCs #\u0440\u0436\u0430\u043A\u0430 #\u043A\u043E\u0440\u043E\u043D\u0430\u0432\u0438\u0440\u0443\u0441",
      createTime: 1634976584,
      video: {
        id: "7022170949785013509",
        height: 640,
        width: 576,
        duration: 5,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/0710f3f0fc1c4ea7a48bf2876423e8fb~tplv-dmt-logom:tos-maliva-p-0000/a4e0a3da7a334331950f8fdcd598fda2.image?x-expires=1637078400&x-signature=C%2BlobtZARvVO6A3tV5jMXfd3KR8%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/c566f210fe4249f6b0eba79502800891_1634976585?x-expires=1637078400&x-signature=jWyZH%2FmValB0XpuuGQ8vmp3rkqY%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/821b42d2e8eb4f9a9434f4ab96ee4871_1634976586?x-expires=1637078400&x-signature=f5j02UBT9xhcaRofHi2n4okLFqQ%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-pve-0068/88da232277d041d69500ed118a7fbc3d/?a=1988&br=1476&bt=738&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&expire=1637078979&ft=wUyFfFGnkag3-I&l=202111161009340101880612241F04B35D&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=andtaDc6Zmh2ODMzNzczM0ApMzY8aWY1NztnNzloNmk5M2deMjJxcjRvM21gLS1kMTZzczI2NWBgNC5iNS1iM2EzNDQ6Yw%3D%3D&signature=dd73fd9aa350e7559e50438c386febae&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/c566f210fe4249f6b0eba79502800891_1634976585~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=RIRmeA%2FTeU9R1yCAmi9XOdsMkbY%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/c566f210fe4249f6b0eba79502800891_1634976585~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=rMK6P7ZnxHEP6SpTh0DLsBZw0yY%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/0710f3f0fc1c4ea7a48bf2876423e8fb?x-expires=1637078400&x-signature=iIexM5aXs1Kqdmps07GaHJXwrk4%3D",
        bitrate: 756659,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "7022170708260162309",
        title: "\u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf16-ies-music-va.tiktokcdn.com/obj/musically-maliva-obj/7022170742938749701.mp3",
        coverThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        coverMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        coverLarge: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        authorName: "\u041E\u043B\u0435\u0433",
        original: true,
        duration: 5,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        },
        {
          id: "21068",
          title: "corona",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        },
        {
          id: "1656565887211526",
          title: "coronavir\xFCs",
          desc: "",
          profileThumb: "https://p16-amd-va.tiktokcdn.com/obj/musically-maliva-obj/c6635df7c13feba0f413ed017c443ee3",
          profileMedium: "https://p16-amd-va.tiktokcdn.com/obj/musically-maliva-obj/c6635df7c13feba0f413ed017c443ee3",
          profileLarger: "https://p16-amd-va.tiktokcdn.com/obj/musically-maliva-obj/c6635df7c13feba0f413ed017c443ee3",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        },
        {
          id: "8424650",
          title: "\u0440\u0436\u0430\u043A\u0430",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        },
        {
          id: "1656329832473606",
          title: "\u043A\u043E\u0440\u043E\u043D\u0430\u0432\u0438\u0440\u0443\u0441",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 61,
        shareCount: 7,
        commentCount: 7,
        playCount: 3101
      },
      duetInfo: {
        duetFromId: "0"
      },
      warnInfo: [
        {
          text: "\u0414\u043E\u043A\u043B\u0430\u0434\u043D\u0456\u0448\u0435 \u043F\u0440\u043E \u0432\u0430\u043A\u0446\u0438\u043D\u0438 \u043F\u0440\u043E\u0442\u0438 COVID-19",
          url: "https://covid19.gov.ua/",
          type: 2,
          lang: "uk-UA",
          key: "covid_vaccine_notice_tag"
        }
      ],
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        },
        {
          awemeId: "",
          start: 12,
          end: 19,
          hashtagName: "corona",
          hashtagId: "21068",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        },
        {
          awemeId: "",
          start: 20,
          end: 32,
          hashtagName: "coronavir\xFCs",
          hashtagId: "1656565887211526",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        },
        {
          awemeId: "",
          start: 33,
          end: 39,
          hashtagName: "\u0440\u0436\u0430\u043A\u0430",
          hashtagId: "8424650",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        },
        {
          awemeId: "",
          start: 40,
          end: 52,
          hashtagName: "\u043A\u043E\u0440\u043E\u043D\u0430\u0432\u0438\u0440\u0443\u0441",
          hashtagId: "1656329832473606",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 4,
          stickerText: ["Coronavirus"]
        },
        {
          stickerType: 9,
          stickerText: ["coronavirus"]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7021563259551485189",
      desc: "#oleg_sheff",
      createTime: 1634835094,
      video: {
        id: "7021563259551485189",
        height: 1024,
        width: 576,
        duration: 25,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/5c04b1363b5b434eafcb7fddfda19aa9~tplv-dmt-logom:tos-maliva-p-0000/5fb763441d334f69ab207dfeb79be233.image?x-expires=1637078400&x-signature=JT1mlAXRZ5IsIgCqCVk1FB0HjVU%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/15c2802a482b40c2bf7f6b23119f7df5_1634835094?x-expires=1637078400&x-signature=ChhNmReulSRA%2F9Fjaz6J8FFF%2BBo%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/106c2601f8114a918792d9a9f7a6cd44_1634835095?x-expires=1637078400&x-signature=J%2FcrNzJDcDuqQhP0%2B5UnO3s%2Fy1Y%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-pve-0068/052b6b9dc19c4b31b77624d7274a96bb/?a=1988&br=2482&bt=1241&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&expire=1637078999&ft=wUyFfFGnkag3-I&l=202111161009340101880612241F04B35D&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=amg3bDQ6ZjxzODMzNzczM0ApaTs2NzU6O2U5NzlmOGc2PGcvZGEvcjQwaGxgLS1kMTZzcy8vYV42Ll8xYWEwNTAvMF86Yw%3D%3D&signature=7a98c82c08d8a418ffb47a58ce32d1b8&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/15c2802a482b40c2bf7f6b23119f7df5_1634835094~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=1q8yKsARP65d%2Fqg1YJkL3%2FK1LZ8%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/15c2802a482b40c2bf7f6b23119f7df5_1634835094~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=IaJTUBK2JXfkui21s6jY34V9C7U%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/5c04b1363b5b434eafcb7fddfda19aa9?x-expires=1637078400&x-signature=OB8V0VKMlj8phGcMb4TYcF9MHO8%3D",
        bitrate: 1271196,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "6965407467035560709",
        title: "\u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf16-ies-music-va.tiktokcdn.com/obj/musically-maliva-obj/7005899101099346693.mp3",
        coverThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        coverMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        coverLarge: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        authorName: "\u041E\u043B\u0435\u0433",
        original: true,
        duration: 59,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 63,
        shareCount: 1,
        commentCount: 9,
        playCount: 3823
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 4,
          stickerText: [
            "\u043A\u0430\u043A \u0431\u044B",
            "\u0432\u044B\u0441\u043E\u043A\u043E",
            "\u0442\u044B",
            "\u043D\u0435 \u0432\u0437\u043B\u0435\u0442\u0430\u043B -",
            "\u043F\u043E\u043C\u043D\u0438:",
            "\u0432\u0441\u0435\u0433\u0434\u0430 \u043C\u043E\u0436\u0435\u0448\u044C \u0443\u043F\u0430\u0441\u0442\u044C ! "
          ]
        },
        {
          stickerType: 9,
          stickerText: ["\u043F\u0430\u0434\u0435\u043D\u0438\u0435 \u0438\u0437\n\u0441\u0430\u043C\u043E\u043B\u0451\u0442\u0430 \u2708 "]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7021022567871859973",
      desc: "#oleg_sheff",
      createTime: 1634709206,
      video: {
        id: "7021022567871859973",
        height: 1024,
        width: 576,
        duration: 7,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/4837e98ee5db42caa24b68b1e5845089~tplv-dmt-logom:tos-maliva-p-0000/c5791866c3da4bba82adfbfa7bf5c5fa.image?x-expires=1637078400&x-signature=757XLDfccFZWWIF3zd5d4KtlsBI%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/798758f997194e40a2cfd82d42bf9eac_1634709207?x-expires=1637078400&x-signature=HrvU079xxnGDZIAyc6HDiZrkTRA%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/f3829a512abf4d6c95c934a11c0baed5_1636489030?x-expires=1637078400&x-signature=3x874xmxcGerGiDP07TaLyydvlQ%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-ve-0068c001/55b7d73242064039bb361207b0fbba71/?a=1988&br=1568&bt=784&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&expire=1637078981&ft=wUyFfFGnkag3-I&l=202111161009340101880612241F04B35D&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=ajdzZTY6Zm10ODMzNzczM0ApO2hoaDNlaGU0Nzg7OTk4ZWdpYWNhcjQwcWtgLS1kMTZzcy9gLV81XjViMmAuMzMuMDM6Yw%3D%3D&signature=0e52566752c63627470743a24a89cec8&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/798758f997194e40a2cfd82d42bf9eac_1634709207~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=t%2FP%2FGT%2FUMZvUMoFQTLNrhD5KcAo%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/798758f997194e40a2cfd82d42bf9eac_1634709207~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=qlDFaiXQ5TR6436rNj29WkhMoV0%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/4837e98ee5db42caa24b68b1e5845089?x-expires=1637078400&x-signature=NaYPvtpFmmmi2K89arR3W4tGi34%3D",
        bitrate: 803081,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "6833286105639421954",
        title: "\u041C\u044B \u043E\u0442\u043A\u0440\u044B\u0432\u0430\u0435\u043C \u0431\u0438\u0437\u043D\u0435\u0441 (Skit)",
        playUrl: "https://sf58-ies-music-va.tiktokcdn.com/obj/tos-useast2a-ve-2774/bb03de5d85274d01902db79aeeec5e62",
        coverThumb: "https://p16-amd-va.tiktokcdn.com/img/tos-useast2a-v-2774/00eb22c3f5214ffa81684a5e5526c613~c5_100x100.jpeg",
        coverMedium: "https://p16-amd-va.tiktokcdn.com/img/tos-useast2a-v-2774/00eb22c3f5214ffa81684a5e5526c613~c5_200x200.jpeg",
        coverLarge: "https://p16-amd-va.tiktokcdn.com/img/tos-useast2a-v-2774/00eb22c3f5214ffa81684a5e5526c613~c5_720x720.jpeg",
        authorName: "SHOOVAL",
        original: false,
        duration: 60,
        album: "Cricket Deluxe (\u0422\u0438\u043A\u0422\u043E\u043A)"
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 137,
        shareCount: 22,
        commentCount: 20,
        playCount: 4239
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 4,
          stickerText: [
            "           \u0431\u0443\u0434\u0435\u043C            \n\u043F\u0440\u043E\u0434\u0430\u0432\u0430\u0442\u044C \u043C\u043E\u043B\u043E\u043A\u043E"
          ]
        },
        {
          stickerType: 9,
          stickerText: ["\u043C\u043E\u043B\u043E\u043A\u043E"]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7020358043766426885",
      desc: "#oleg_sheff",
      createTime: 1634554485,
      video: {
        id: "7020358043766426885",
        height: 864,
        width: 480,
        duration: 23,
        ratio: "480p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/832abbf7d13c454eab477e00b538e6bc~tplv-dmt-logom:tos-maliva-p-0000/219dfaca740d4d6c8e1eff3926467f23.image?x-expires=1637078400&x-signature=%2Bf2mWvrbCKjdM%2BJZc9tfNTXAlnQ%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/23e929c7c5bf42989ba39764f42ffd5e_1634554485?x-expires=1637078400&x-signature=BbsctHW78MM1sD4tJQ0bRYXW8hA%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/c4258fd4640742498cd184a253e6f265_1634554486?x-expires=1637078400&x-signature=lelhrOO1lkSiO2lKZ0ZypxbLBn8%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-ve-0068c003/4ec3e569a25a430f880349b0a7fc4bca/?a=1988&br=880&bt=440&cd=0%7C0%7C0&ch=0&cr=0&cs=0&dr=0&ds=2&er=&expire=1637078997&ft=wUyFfFGnkag3-I&l=202111161009340101880612241F04B35D&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=ams6bDQ6ZmlvODMzNzczM0ApPGZlMzplPDw2Nzc5NWY1O2ctNl8vcjRnMWpgLS1kMTZzczQ1LzRiNV4vMzZfYmJfMDU6Yw%3D%3D&signature=175efa871be305c60e6ad102b233a557&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/23e929c7c5bf42989ba39764f42ffd5e_1634554485~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=pIF8JeZDDCx6yVVPpmK8sUFc%2FNc%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/23e929c7c5bf42989ba39764f42ffd5e_1634554485~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=fBIl5Kxl1ZzaK1lOW9vgsa%2FRkbM%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/832abbf7d13c454eab477e00b538e6bc?x-expires=1637078400&x-signature=yF9eNc1kKS5tqhVsLx6QRdRhb5Y%3D",
        bitrate: 450653,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "480p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "6804970278720948225",
        title: "\u0425\u0430\u0432\u0430 \u043D\u0430\u0433\u0438\u043B\u0430",
        playUrl: "https://sf58-ies-music-va.tiktokcdn.com/obj/tos-useast2a-ve-2774/02c6d1e7488846e7b53b235c286f2102",
        coverThumb: "https://p16-amd-va.tiktokcdn.com/img/tos-useast2a-v-2774/12e1dc9804cb48afbcf859fad7de45bb~c5_100x100.jpeg",
        coverMedium: "https://p16-amd-va.tiktokcdn.com/img/tos-useast2a-v-2774/12e1dc9804cb48afbcf859fad7de45bb~c5_200x200.jpeg",
        coverLarge: "https://p16-amd-va.tiktokcdn.com/img/tos-useast2a-v-2774/12e1dc9804cb48afbcf859fad7de45bb~c5_720x720.jpeg",
        authorName: "\u0433\u0440\u0443\u043F\u043F\u0430 \u042D\u043A\u0441\u043F\u0440\u0435\u0441\u0441",
        original: false,
        duration: 60,
        album: "\u0415\u0432\u0440\u0435\u0439\u0441\u043A\u0438\u0435 \u043F\u0435\u0441\u043D\u0438"
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 262,
        shareCount: 57,
        commentCount: 57,
        playCount: 5943
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 4,
          stickerText: [
            "\u{1F447}\u043F\u043E\u043B\u044E\u0431\u0443\u0439\u0442\u0435\u0441\u044C\u{1F447}",
            "\u041E\u0442\u043A\u0443\u0434\u0430 \u0436\u0435 \u044D\u0442\u043E\u0442 \u043C\u0435\u043B\u043E\u043C\u0430\u043D ? \u{1F914}"
          ]
        },
        {
          stickerType: 9,
          stickerText: ["\u043C\u0435\u043B\u043E\u043C\u0430\u043D"]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7019938946159234309",
      desc: "#oleg_sheff \u043F\u043E\u043D\u0440\u0430\u0432\u0438\u043B\u043E\u0441\u044C - \u043F\u043E\u0434\u043F\u0438\u0448\u0438\u0441\u044C !\u270C\u{1F61C}\u{1F525}",
      createTime: 1634456906,
      video: {
        id: "7019938946159234309",
        height: 1024,
        width: 576,
        duration: 7,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/49317cdbca5b4db99eb79ce9689e7cc3_1634456907~tplv-dmt-logom:tos-maliva-p-0000/bdd5b41300d34713b3fe5271c06ac4e4.image?x-expires=1637078400&x-signature=Beby41wKWxSGMZ4SJeK5F%2BhKOVE%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/887368df2bbb4479ad82640f3588dbbc_1634456907?x-expires=1637078400&x-signature=7XXCckr9NRHAaKJmDKJjyH95rdk%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/741c26d6ca7d4eedbd9d7aaecf715a76_1634456907?x-expires=1637078400&x-signature=GjsAkCHE%2BwSz%2BIShLLjmK93R5nY%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-ve-0068c003/95230d81e2124941b70082628d210375/?a=1988&br=6010&bt=3005&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&expire=1637078981&ft=wUyFfFGnkag3-I&l=202111161009340101880612241F04B35D&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=am45eTs6Zml3ODMzNzczM0ApOWZkZzhlOWU2N2YzNzszNmdqMTRgcjRfXmlgLS1kMTZzczFeMmA2NC4vLl40YzMyNjQ6Yw%3D%3D&signature=a1f09bdeeb6562324a4a7e5a63e54e92&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/887368df2bbb4479ad82640f3588dbbc_1634456907~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=Fm1AeNtW9xfTVb6rmempSZsELQY%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/887368df2bbb4479ad82640f3588dbbc_1634456907~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=KiO3hWF%2FvCKnPHVRM82IYVwVQIk%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/49317cdbca5b4db99eb79ce9689e7cc3_1634456907?x-expires=1637078400&x-signature=%2BEuZuabimYt8%2FyobV0f6SnXwa0M%3D",
        bitrate: 3077753,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "6549560067069318144",
        title: "\u041E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf16-ies-music-va.tiktokcdn.com/obj/musically-maliva-obj/6881545390181681926.mp3",
        coverThumb: "https://p16-sign-va.tiktokcdn.com/musically-maliva-obj/1658590366678022~c5_100x100.jpeg?x-expires=1637143200&x-signature=%2B1H3bH1qz73tQK%2Bk%2BzJ4fRjB%2BII%3D",
        coverMedium: "https://p16-sign-va.tiktokcdn.com/musically-maliva-obj/1658590366678022~c5_720x720.jpeg?x-expires=1637143200&x-signature=IBA7%2Fusyy50yXl60EJy8%2Fk1Fd3Q%3D",
        coverLarge: "https://p16-sign-va.tiktokcdn.com/musically-maliva-obj/1658590366678022~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=fdA2Ku8Jrt25EREBvIA44Z7%2B2k0%3D",
        authorName: "\u{1F9DF}\u200D\u2642\uFE0FHYPERSPACE\u{1F9DF}\u200D\u2642\uFE0F",
        original: true,
        duration: 14,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 169,
        shareCount: 20,
        commentCount: 44,
        playCount: 7562
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 4,
          stickerText: [" \u0427\u0442\u043E-\u0442\u043E \u043F\u043E\u0448\u043B\u043E  \n       \u043D\u0435 \u0442\u0430\u043A! \u{1F937}\u200D\u2642\uFE0F       "]
        },
        {
          stickerType: 9,
          stickerText: ["\u0437\u0430\u043B\u0451\u0442"]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7019729663794613510",
      desc: "#oleg_sheff",
      createTime: 1634408176,
      video: {
        id: "7019729663794613510",
        height: 1024,
        width: 576,
        duration: 59,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/50add6d6f9544a3d8ad98318eda4b806_1634408179~tplv-dmt-logom:tos-maliva-p-0000/763bf4dc6b1c463cac0bd0b1a4ac2b9c.image?x-expires=1637078400&x-signature=C1z43EJEAbFZc2rDx%2FUcbNbWo3U%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/9f302fe112024281b006c660a25bfd18_1634408178?x-expires=1637078400&x-signature=FdqZeql4xG1xhru%2BsSuz4i7uziw%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/b85d382f6fa54db79ea7b0b27f60860e_1634408178?x-expires=1637078400&x-signature=cqvPh4LtAQQCLRvhw0yZtDj98CY%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-ve-0068c002/98d2e61f330a4eb6aea74665f7612ef3/?a=1988&br=2414&bt=1207&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&expire=1637079033&ft=wUyFfFGnkag3-I&l=202111161009340101880612241F04B35D&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=anI1eDs6ZmRrODMzNzczM0ApZmhoNGZkMzs0Nzg8NGc0NWdfLTRhcjRfYWlgLS1kMTZzczJfMGMwYzEwMDQwMGMtLTQ6Yw%3D%3D&signature=8a6b2e24d2b420432992885614afd3f6&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/9f302fe112024281b006c660a25bfd18_1634408178~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=rg71RCFoLqYBEZ3JvjAYIjbXnQw%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/9f302fe112024281b006c660a25bfd18_1634408178~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=E4TT9KF2Roj7TNtzRg0gsyXNGXc%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/50add6d6f9544a3d8ad98318eda4b806_1634408179?x-expires=1637078400&x-signature=nyhNKAOM8wvSzSgnCuGHOhQKa%2BQ%3D",
        bitrate: 1236192,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "6872969064512243714",
        title: '\u0412\u0430\u043B\u044C\u0441 (\u0418\u0437 \u043A/\u0444 "\u041C\u043E\u0439 \u043B\u0430\u0441\u043A\u043E\u0432\u044B\u0439 \u0438 \u043D\u0435\u0436\u043D\u044B\u0439 \u0437\u0432\u0435\u0440\u044C")',
        playUrl: "https://sf16-ies-music-va.tiktokcdn.com/obj/tos-useast2a-ve-2774/cb1ed46f963d49b78ed6aa09908080aa",
        coverThumb: "https://p16-amd-va.tiktokcdn.com/img/tos-useast2a-v-2774/8ec45828d7ce4d0b838a3dc8ea768e2a~c5_100x100.jpeg",
        coverMedium: "https://p16-amd-va.tiktokcdn.com/img/tos-useast2a-v-2774/8ec45828d7ce4d0b838a3dc8ea768e2a~c5_200x200.jpeg",
        coverLarge: "https://p16-amd-va.tiktokcdn.com/img/tos-useast2a-v-2774/8ec45828d7ce4d0b838a3dc8ea768e2a~c5_720x720.jpeg",
        authorName: "\u0413\u0440\u0443\u043F\u043F\u0430 \u043C\u043E\u0441\u043A\u043E\u0432\u0441\u043A\u043E\u0433\u043E \u043A\u0430\u043C\u0435\u0440\u043D\u043E\u0433\u043E \u0445\u043E\u0440\u0430 & \u0421\u0435\u0440\u0433\u0435\u0439 \u0421\u043A\u0440\u0438\u043F\u043A\u0430 & \u0413\u043E\u0441\u0443\u0434\u0430\u0440\u0441\u0442\u0432\u0435\u043D\u043D\u044B\u0439 \u0421\u0438\u043C\u0444\u043E\u043D\u0438\u0447\u0435\u0441\u043A\u0438\u0439 \u043E\u0440\u043A\u0435\u0441\u0442\u0440 \u043A\u0438\u043D\u0435\u043C\u0430\u0442\u043E\u0433\u0440\u0430\u0444\u0438\u0438",
        original: false,
        duration: 60,
        album: "\u0422\u043E\u043B\u044C\u043A\u043E \u043B\u044E\u0431\u043E\u0432\u044C \u043F\u0440\u0430\u0432\u0430. \u041F\u0435\u0441\u043D\u0438 \u043E \u043B\u044E\u0431\u0432\u0438"
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 6352,
        shareCount: 192,
        commentCount: 881,
        playCount: 43700
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 4,
          stickerText: ["\u043F\u043E\u0436\u0430\u0440\u043D\u044B\u0439 \n\u0441\u043F\u0430\u0441 \u043A\u043E\u0442\u0451\u043D\u043A\u0430 "]
        },
        {
          stickerType: 9,
          stickerText: ["\u0433\u0435\u0440\u043E\u0439"]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7019647031597714693",
      desc: "#oleg_sheff",
      createTime: 1634388938,
      video: {
        id: "7019647031597714693",
        height: 1024,
        width: 576,
        duration: 48,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/2a4e02003e92435da073643c13d403e5~tplv-dmt-logom:tos-maliva-p-0000/7ecff1e134ac47a9ba768d6f51b7ed59.image?x-expires=1637078400&x-signature=PbDcWbvaYPZaxwi8qawaww3oEpY%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/22c39b4b5d15452286fe8a73acb1d2df_1634388939?x-expires=1637078400&x-signature=W0P6w1NfemmInvFrthR%2FOvwMIYY%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/5202af712dca4c3380b19e1cf51c3bc3_1634388939?x-expires=1637078400&x-signature=Ea1qacxk6MKkPiqjYx8pvKXVYmU%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-ve-0068c002/a5731bd2bc1f429fa994d1e8cd411ea5/?a=1988&br=1750&bt=875&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&expire=1637079022&ft=wUyFfFGnkag3-I&l=202111161009340101880612241F04B35D&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=ajd1dDk6ZjNmODMzNzczM0ApNjQ2NDRnOjs2N2Y3ODc4M2dxaGJqcjRna2lgLS1kMTZzc2M1YjEtYmBgXi0wLjMtMzE6Yw%3D%3D&signature=4a44f9817ca1d9a5d3ecedf0dc69fcab&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/22c39b4b5d15452286fe8a73acb1d2df_1634388939~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=gLPNf0GoWmIoXifmNvwMUHtb6mg%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/22c39b4b5d15452286fe8a73acb1d2df_1634388939~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=NoTNBTb1VGNifEGIN9owA9cVhg0%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/2a4e02003e92435da073643c13d403e5?x-expires=1637078400&x-signature=zQ3PcawiZd8ETkWP5SJ%2FUxFFLR4%3D",
        bitrate: 896363,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "6965407467035560709",
        title: "\u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf16-ies-music-va.tiktokcdn.com/obj/musically-maliva-obj/7005899101099346693.mp3",
        coverThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        coverMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        coverLarge: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        authorName: "\u041E\u043B\u0435\u0433",
        original: true,
        duration: 59,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 762,
        shareCount: 186,
        commentCount: 90,
        playCount: 11100
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 4,
          stickerText: ["\u0441\u043C\u043E\u0442\u0440\u0435\u0442\u044C \n\u0434\u043E \u043A\u043E\u043D\u0446\u0430 !"]
        },
        {
          stickerType: 9,
          stickerText: ["\u043D\u0430 \u0434\u0430\u0447\u0443"]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7019520669306064134",
      desc: "#stitch \u0441 @dasha_evtukh #oleg_sheff",
      createTime: 1634359517,
      video: {
        id: "7019520669306064134",
        height: 1024,
        width: 576,
        duration: 9,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/3d9b223aef5049228477b881b1e7daac_1634359517~tplv-dmt-logom:tos-maliva-p-0000/7f03250f3e4945fc9c4d492b90fa21fa.image?x-expires=1637078400&x-signature=7h%2FgKCJNRowrtSSmfRe7x4pbmq0%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/f1afece872cb49beafa92c77ee658cd8_1634359517?x-expires=1637078400&x-signature=s4XTDideRQcqUe%2FwFKCfJcOxl6U%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/a98be07b61ec47ccaad326ba6becc275_1634359520?x-expires=1637078400&x-signature=eGVG2G%2Fd318f%2BDMXH%2FJKc1U%2BuM8%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-ve-0068c002/fb2d02ff8a72420f9d7aa6ba49b98387/?a=1988&br=2426&bt=1213&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&expire=1637078983&ft=wUyFfFGnkag3-I&l=202111161009340101880612241F04B35D&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=anJ4amQ6ZmU4ODMzNzczM0ApaTRlZDw4aDtmNzw0OjU6NWdpZy9ecjRfZWlgLS1kMTZzczNjYjMyNTRjL2IzYjE1YTI6Yw%3D%3D&signature=14fde65d3100e68b7494cb569ff41db8&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/f1afece872cb49beafa92c77ee658cd8_1634359517~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=guGyJAFqX6mNqg5q%2BtdBRBD%2BFL0%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/f1afece872cb49beafa92c77ee658cd8_1634359517~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=e4jnaveID6qiLsL%2BoadyzwTC4C8%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/3d9b223aef5049228477b881b1e7daac_1634359517?x-expires=1637078400&x-signature=ne636ty9YhH8%2B5Dt9APSXM2%2BWwM%3D",
        bitrate: 1242991,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "7019520411067108101",
        title: "\u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf16-ies-music-va.tiktokcdn.com/obj/musically-maliva-obj/7019520481648741125.mp3",
        coverThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        coverMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        coverLarge: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        authorName: "\u041E\u043B\u0435\u0433",
        original: true,
        duration: 9,
        album: ""
      },
      challenges: [
        {
          id: "8288",
          title: "stitch",
          desc: "Make the ultimate collab with your fav creators with our brand new feature, #STITCH! Just find a TikTok video you love, press share, and send it to Stitch.",
          profileThumb: "https://p16-amd-va.tiktokcdn.com/obj/musically-maliva-obj/6659e09f069c8d2a278f9054d961fb0a",
          profileMedium: "https://p16-amd-va.tiktokcdn.com/obj/musically-maliva-obj/6659e09f069c8d2a278f9054d961fb0a",
          profileLarger: "https://p16-amd-va.tiktokcdn.com/obj/musically-maliva-obj/6659e09f069c8d2a278f9054d961fb0a",
          coverThumb: "https://p16-amd-va.tiktokcdn.com/obj/musically-maliva-obj/a7edf3200385b1060776e3d8a6612840",
          coverMedium: "https://p16-amd-va.tiktokcdn.com/obj/musically-maliva-obj/a7edf3200385b1060776e3d8a6612840",
          coverLarger: "https://p16-amd-va.tiktokcdn.com/obj/musically-maliva-obj/a7edf3200385b1060776e3d8a6612840",
          isCommerce: false
        },
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 67,
        shareCount: 1,
        commentCount: 27,
        playCount: 5763
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "7019223517468183814",
          start: 10,
          end: 23,
          hashtagName: "",
          hashtagId: "",
          type: 0,
          userId: "6794019902754014213",
          isCommerce: false,
          userUniqueId: "dasha_evtukh",
          secUid: "MS4wLjABAAAAazU44g3QPtDZP5PVbagiwC0v2ej5xB6HIusDAjd_g4KR8ul6faxC6X0zbde4ecrN",
          subType: 1
        },
        {
          awemeId: "",
          start: 0,
          end: 7,
          hashtagName: "stitch",
          hashtagId: "8288",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        },
        {
          awemeId: "",
          start: 24,
          end: 35,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      effectStickers: [
        {
          name: "\u041A\u043E\u0440\u043E\u043D\u0430 \u0434\u043B\u044F \u043A\u043E\u0442\u0430",
          ID: "162933"
        }
      ],
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 4,
          stickerText: ["\u043A\u0430\u043A \u0432\u0430\u043C", "\u0442\u0430\u043A\u043E\u0439 \n\u043F\u043E\u0432\u043E\u0440\u043E\u0442 ?"]
        },
        {
          stickerType: 9,
          stickerText: ["\u044D\u0442\u043E \u044F"]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7019366920793099525",
      desc: "#oleg_sheff",
      createTime: 1634323719,
      video: {
        id: "7019366920793099525",
        height: 720,
        width: 576,
        duration: 17,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/4bd7ea820b1e4bbb8da81e7c444f0437_1634323720~tplv-dmt-logom:tos-maliva-p-0000/40f5c2e365ad4112b57ee638fdf18bee.image?x-expires=1637078400&x-signature=cHdO2WpudH%2FX9tbNgufG%2FUONOC0%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/b54c40329af64373b58f60c4fef9ccb2_1634323719?x-expires=1637078400&x-signature=4%2BHaF8sg8UVnVFxMBJIj8rwowvo%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/4b3a839b95d147d78f8b21eb858608c7_1634323720?x-expires=1637078400&x-signature=ZkIwEBHipl%2Bh5GJ1QjtZvJ3EuPI%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-ve-0068c002/545eb14a8a9a466fae1245a94d8cf93d/?a=1988&br=1040&bt=520&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&expire=1637078991&ft=wUyFfFGnkag3-I&l=202111161009340101880612241F04B35D&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=am5odmY6Zmh2ODMzNzczM0ApZ2c1aDU4ODw1N2hoNjRlNGczby1icjRnbGhgLS1kMTZzczVeMmEvYTQzXi5hNF8yYzM6Yw%3D%3D&signature=d4c66360189ff9188f2743ffb0ccb094&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/b54c40329af64373b58f60c4fef9ccb2_1634323719~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=EB1lW13ldPVds6LplkgOm8D6NbY%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/b54c40329af64373b58f60c4fef9ccb2_1634323719~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=yDs4SlRC17g%2BQ447fQugYYElIbc%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/4bd7ea820b1e4bbb8da81e7c444f0437_1634323720?x-expires=1637078400&x-signature=bWNt8dy81gxILME2Xbk2uMVfDrY%3D",
        bitrate: 533447,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "6965407467035560709",
        title: "\u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf16-ies-music-va.tiktokcdn.com/obj/musically-maliva-obj/7005899101099346693.mp3",
        coverThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        coverMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        coverLarge: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        authorName: "\u041E\u043B\u0435\u0433",
        original: true,
        duration: 59,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 582,
        shareCount: 100,
        commentCount: 81,
        playCount: 9438
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 4,
          stickerText: ["\u0431\u0435\u0437 \u0440\u0435\u043F\u0435\u0442\u0438\u0446\u0438\u0438 !", "\u0438 \u043A\u0430\u043A ?"]
        },
        {
          stickerType: 9,
          stickerText: ["\u043B\u0435\u0431\u0435\u0434\u0438\u043D\u043E\u0435  \n \u043E\u0437\u0435\u0440\u043E "]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7019160712782040325",
      desc: "#oleg_sheff",
      createTime: 1634275710,
      video: {
        id: "7019160712782040325",
        height: 688,
        width: 576,
        duration: 16,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/8ea1bf7eff8e4f8ca318b04970674750~tplv-dmt-logom:tos-maliva-p-0000/36dc9ef251064c6e8be8366ffbeddfe4.image?x-expires=1637078400&x-signature=Z0DEE4l%2B4rklzNHNk03Y8Ct87gc%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/5299ab1b33ab4d2f90352af12ee4f18f_1634275710?x-expires=1637078400&x-signature=8oTk3r0b7aOS%2F8EZyGe9kV042KE%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/9e247edecc494ac0b2085c3acd9a2055_1634275710?x-expires=1637078400&x-signature=Ltn%2BCIRNUc2tuE9aBoXY4kVMPZ4%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-ve-0068c001/32d28d6bbc3d40958018e0db13e9e909/?a=1988&br=460&bt=230&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&expire=1637078990&ft=wUyFfFGnkag3-I&l=202111161009340101880612241F04B35D&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=M2t3Nzg6ZndrODMzNzczM0ApN2g7OTM0ZWQ8N2Q4OTU3NGcwZzBzcjRfL2hgLS1kMTZzczVeYTUuLzUwMjJfMjFjMmI6Yw%3D%3D&signature=cd7b9cd824dd2fd008fe6b927bcf684e&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/5299ab1b33ab4d2f90352af12ee4f18f_1634275710~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=Z8lobwiwo8WE8THtYPe%2Fju6zN7Y%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/5299ab1b33ab4d2f90352af12ee4f18f_1634275710~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=2aoHYh5667u1mUX6ihkHWkb6vTU%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/8ea1bf7eff8e4f8ca318b04970674750?x-expires=1637078400&x-signature=eszKGD15yMwWdHJazEPiYLHC6G8%3D",
        bitrate: 236283,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "6994459782824725254",
        title: "\u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf58-ies-music-va.tiktokcdn.com/obj/musically-maliva-obj/6994459822548601605.mp3",
        coverThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        coverMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        coverLarge: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        authorName: "\u041E\u043B\u0435\u0433",
        original: true,
        duration: 53,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 168,
        shareCount: 63,
        commentCount: 24,
        playCount: 5492
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 9,
          stickerText: ["\u0442\u0440\u0435\u0437\u0432\u043E\u0441\u0442\u044C"]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7019010330676268294",
      desc: "\u041E\u0442\u0432\u0435\u0442 \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044E @girllsveta #oleg_sheff",
      createTime: 1634240694,
      video: {
        id: "7019010330676268294",
        height: 1024,
        width: 576,
        duration: 60,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/ddc00446f3d048a881c86e2dbf707f88_1634240695~tplv-dmt-logom:tos-maliva-p-0000/5b4588667f2f48929c186af947998715.image?x-expires=1637078400&x-signature=f8Oy6H4%2BPTgd4YdtoUoOljDQE1s%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/612c5c136ce047caaadd750dbae9f775_1634240695?x-expires=1637078400&x-signature=ksRsUgAgGRdY4ZIP%2Fj1ZNvsXumo%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/b72274044c474abb9ae49ff401a6d437_1634240696?x-expires=1637078400&x-signature=wIbuGDDcIBEyWHVV0nhWdpA9%2Fj0%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-pve-0068/8e738e98fb284729892360c78695535f/?a=1988&br=1672&bt=836&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&expire=1637079033&ft=wUyFfFGnkag3-I&l=202111161009340101880612241F04B35D&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=M21vOjw6Zjk7ODMzNzczM0ApODxkPGY4NjxpN2U6NDRoZ2deMWhjcjRnZGhgLS1kMTZzc141MGBeYjJiYTZjMzRgNWM6Yw%3D%3D&signature=720b4c8447be0fd79407aec0a6750bf3&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/612c5c136ce047caaadd750dbae9f775_1634240695~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=oHokHM6YebNpTVrV7JdYuISHXu8%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/612c5c136ce047caaadd750dbae9f775_1634240695~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=e4aBtjM8%2FeqS53%2FEDOHRqtRDLLY%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/ddc00446f3d048a881c86e2dbf707f88_1634240695?x-expires=1637078400&x-signature=MEkKZpHqs2J4k4ULbuyIskORbHI%3D",
        bitrate: 856300,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "6965407467035560709",
        title: "\u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf16-ies-music-va.tiktokcdn.com/obj/musically-maliva-obj/7005899101099346693.mp3",
        coverThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        coverMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        coverLarge: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        authorName: "\u041E\u043B\u0435\u0433",
        original: true,
        duration: 59,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 72,
        shareCount: 8,
        commentCount: 42,
        playCount: 5383
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 19,
          end: 30,
          hashtagName: "",
          hashtagId: "",
          type: 0,
          userId: "6913099278844462081",
          isCommerce: false,
          userUniqueId: "girllsveta",
          secUid: "MS4wLjABAAAAI1B_UFntLQHc21Oe9vJbl990ysEpflvoLNpAZnj6FffVMcGRXwk4yiAG6TBkwMzy",
          subType: 2
        },
        {
          awemeId: "",
          start: 31,
          end: 42,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 9,
          stickerText: ["\u043D\u0430\u0441 55 \u043A"]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7018794986296691973",
      desc: "#oleg_sheff",
      createTime: 1634190559,
      video: {
        id: "7018794986296691973",
        height: 1024,
        width: 576,
        duration: 7,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/92be511664e8435ca237b0096429e824?x-expires=1637078400&x-signature=eqV7D6iy84rhERBUI8IQpHFDElo%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/7dc6ac35db0e492e9f3e03380a610cb4_1634190561?x-expires=1637078400&x-signature=wB9kZmSz%2FaWcyLhehj%2FDCheXTdg%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/1655f14df04e417d81d899f4647bcf40_1634190561?x-expires=1637078400&x-signature=jA4A8feM661THlzHqZTb1y8tsHk%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-ve-0068c004/8c756b1bf27d4e16973e935f15f115e6/?a=1988&br=1590&bt=795&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&expire=1637078981&ft=wUyFfFGnkag3-I&l=202111161009340101880612241F04B35D&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=amxvOjY6ZjV2ODMzNzczM0ApOjRnOjdpNGQ2NzdkNDc3M2dzbmBicjRfNmdgLS1kMTZzczRgMl5gLTZfMTRgYDA0MC46Yw%3D%3D&signature=622ec93d6765c5864d50020b9e5be4c6&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/7dc6ac35db0e492e9f3e03380a610cb4_1634190561~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=TpkbyALgs5YgmJ%2BY08sXYzOESZk%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/7dc6ac35db0e492e9f3e03380a610cb4_1634190561~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=eqZScW5zrnXbR%2FawTEyS5oSee7s%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/92be511664e8435ca237b0096429e824?x-expires=1637078400&x-signature=eqV7D6iy84rhERBUI8IQpHFDElo%3D",
        bitrate: 814378,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "7018794593865042693",
        title: "\u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf58-ies-music-va.tiktokcdn.com/obj/musically-maliva-obj/7018794725025204997.mp3",
        coverThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        coverMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        coverLarge: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        authorName: "\u041E\u043B\u0435\u0433",
        original: true,
        duration: 7,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 96,
        shareCount: 32,
        commentCount: 19,
        playCount: 5818
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 4,
          stickerText: ["  WARNING \u26A0\uFE0F   "]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7018418568572210438",
      desc: "#oleg_sheff",
      createTime: 1634102915,
      video: {
        id: "7018418568572210438",
        height: 1024,
        width: 576,
        duration: 24,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/dff5288816e0472eae9609829bfdc261~tplv-dmt-logom:tos-maliva-p-0000/058642d246084799a0f32fafbb9921f9.image?x-expires=1637078400&x-signature=Slgk7tb2n1UGBFXHkRNnYx7G4qg%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/f7aaa52965e64d28b4dd448d843b207c_1634102916?x-expires=1637078400&x-signature=TbEbbUlixt3Ea4paEAWJ1DPace8%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/4f0262d16dd247bb85eaf7248598d7a3_1634102917?x-expires=1637078400&x-signature=FmOh74WEK8dR5WlbXq7ENUM3Lks%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-ve-0068c004/feb53579bfb847f4ae37175d9495a388/?a=1988&br=2344&bt=1172&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&expire=1637078998&ft=wUyFfFGnkag3-I&l=202111161009340101880612241F04B35D&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=amk5dDg6ZnQ5ODMzNzczM0ApZmY3PDRpOTs5NzVnOzM6OWdeYV5jcjRvcGdgLS1kMTZzczNeXi4zNF9iXjBhMzYzLzQ6Yw%3D%3D&signature=ec0a3e534ac76643aa52da7962a5a17d&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/f7aaa52965e64d28b4dd448d843b207c_1634102916~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=Oz45gvRTd6NXcCsvAD0ynoQBBY4%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/f7aaa52965e64d28b4dd448d843b207c_1634102916~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=prI41OrGlk07OsHGesQIE61jhG0%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/dff5288816e0472eae9609829bfdc261?x-expires=1637078400&x-signature=QtKjd1SOnDLEHaiHGaL1SL8O32M%3D",
        bitrate: 1200557,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "7018418283233708806",
        title: "\u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf16-ies-music-va.tiktokcdn.com/obj/musically-maliva-obj/7018418333569633030.mp3",
        coverThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        coverMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        coverLarge: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        authorName: "\u041E\u043B\u0435\u0433",
        original: true,
        duration: 24,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 137,
        shareCount: 27,
        commentCount: 22,
        playCount: 6201
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 4,
          stickerText: ["Love is ..."]
        },
        {
          stickerType: 9,
          stickerText: ["Love \u2764 "]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7018037506717306117",
      desc: "#oleg_sheff",
      createTime: 1634014192,
      video: {
        id: "7018037506717306117",
        height: 1024,
        width: 576,
        duration: 19,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/f6f1bb0771df42398b4de32ffc16b42b~tplv-dmt-logom:tos-maliva-p-0000/4043589ce8b14a4f8d07b3263634585f.image?x-expires=1637078400&x-signature=w47lcsef7FxAM11e7YKFF33Tr84%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/f914bf4d76cd43589e4136ab89b5dd91_1634014193?x-expires=1637078400&x-signature=Wmf9uCNuo9fBuhTkHCZ0zfVKIAo%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/84b2400b35974c32805cd85feeb8300e_1634014193?x-expires=1637078400&x-signature=%2BDM8ciRSS6CrkWwqCnWqI9ZD1%2Bg%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-ve-0068c003/2e28104f991b47c58e65037cb1803342/?a=1988&br=1840&bt=920&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&expire=1637078993&ft=wUyFfFGnkag3-I&l=202111161009340101880612241F04B35D&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=am1uZWQ6ZnBrODMzNzczM0ApZzwzNTkzPGQ1NzdlZGg6OGcuYDFscjQwNGZgLS1kMTZzczM0MS5hXmMtNjMuXl9eXjM6Yw%3D%3D&signature=0cc3a71d805d994165a3e5c30924c081&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/f914bf4d76cd43589e4136ab89b5dd91_1634014193~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=gEEtliMfx0hU7A5fSB5GyLue5yY%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/f914bf4d76cd43589e4136ab89b5dd91_1634014193~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=tGVW5LWlvc4yiSCdCEGui5XBjeQ%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/f6f1bb0771df42398b4de32ffc16b42b?x-expires=1637078400&x-signature=fKODwrqHeWJEn1HpAPYooQ3NO8s%3D",
        bitrate: 943002,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "6965407467035560709",
        title: "\u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf16-ies-music-va.tiktokcdn.com/obj/musically-maliva-obj/7005899101099346693.mp3",
        coverThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        coverMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        coverLarge: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        authorName: "\u041E\u043B\u0435\u0433",
        original: true,
        duration: 59,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 166,
        shareCount: 7,
        commentCount: 12,
        playCount: 6736
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 4,
          stickerText: [
            "\u044D\u0442\u043E \u043A\u0442\u043E \u0437\u0430\u043D\u044F\u043B \u043C\u043E\u0439 \u0432\u0438\u0433\u0432\u0430\u043C ?\n\u{1F920}",
            "\u044D\u0439 !!!",
            "\u0442\u044B \u0447\u0451 ???\n\u{1F621}",
            "\u0430,\n \u042D\u0422\u041E \u0422\u042B ,\n\u0431\u0435\u0448\u0435\u043D\u0430\u044F \u0440\u044B\u0441\u044C ?!\n\u{1F633}",
            "\u043D\u0438\u0447\u0451, \n\u043E\u0442\u0434\u044B\u0445\u0430\u0439 !\n\u{1F974}",
            "\u043E\u0431\u043D\u044F\u043B ! \n\u{1F644}"
          ]
        },
        {
          stickerType: 9,
          stickerText: ["\u043D\u0435\u0436\u0434\u0430\u043D\u0447\u0438\u043A"]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7017672227629845766",
      desc: "\u041E\u0442\u0432\u0435\u0442 \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044E @inetvoya #oleg_sheff #squidgame #\u0438\u0433\u0440\u0430\u0432\u043A\u0430\u043B\u044C\u043C\u0430\u0440\u0430 #squidgamenetflix",
      createTime: 1633929144,
      video: {
        id: "7017672227629845766",
        height: 1072,
        width: 576,
        duration: 10,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/25d2967c52684af2b371b5da21053512?x-expires=1637078400&x-signature=sNpe1uVrbXqcdCPY2iBWOIzBybg%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/4a578228642a4d39bcd7f9eff8b6b012_1633929146?x-expires=1637078400&x-signature=FGQB7VAAhj4apUMjlZrr0QRMte0%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/6a6a6445b79344469001fac4a080541f_1633929146?x-expires=1637078400&x-signature=qxj89q4frXGyF5zgYSIVRGyLxuw%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-ve-0068c003/0517a128a8d44c33a67ee39aca4b7e1a/?a=1988&br=1838&bt=919&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&expire=1637078984&ft=wUyFfFGnkag3-I&l=202111161009340101880612241F04B35D&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=M2VqZDs6Zjx2ODMzNzczM0ApZWVoOjc6O2U5NzQ7OzVmNmc0c2ZgcjRnY2VgLS1kMTZzcy9hYi1hMjA2XjJiNDJiXl46Yw%3D%3D&signature=cb0b36936b579c25d07b5dacd004470d&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/4a578228642a4d39bcd7f9eff8b6b012_1633929146~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=gqIL0YIC9RapQf7CAovkw%2BNHDCU%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/4a578228642a4d39bcd7f9eff8b6b012_1633929146~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=TVjOTREwAxe5MJrS9rdRySThwpE%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/25d2967c52684af2b371b5da21053512?x-expires=1637078400&x-signature=sNpe1uVrbXqcdCPY2iBWOIzBybg%3D",
        bitrate: 941061,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "6805328518310791169",
        title: "\u0426\u044B\u0433\u0430\u043D\u043E\u0447\u043A\u0430 \u0441 \u0432\u044B\u0445\u043E\u0434\u043E\u043C",
        playUrl: "https://sf58-ies-music-va.tiktokcdn.com/obj/tos-useast2a-ve-2774/6b936fed716e4018b4d732cac1bcf251",
        coverThumb: "https://p16-amd-va.tiktokcdn.com/img/tos-useast2a-v-2774/3532acae9cf44118aba4cbf523da0a12~c5_100x100.jpeg",
        coverMedium: "https://p16-amd-va.tiktokcdn.com/img/tos-useast2a-v-2774/3532acae9cf44118aba4cbf523da0a12~c5_200x200.jpeg",
        coverLarge: "https://p16-amd-va.tiktokcdn.com/img/tos-useast2a-v-2774/3532acae9cf44118aba4cbf523da0a12~c5_720x720.jpeg",
        authorName: "\u0433\u0440\u0443\u043F\u043F\u0430 \u042D\u043A\u0441\u043F\u0440\u0435\u0441\u0441",
        original: false,
        duration: 60,
        album: "\u0420\u0435\u0441\u0442\u043E\u0440\u0430\u043D\u043D\u044B\u0439 \u0425\u0438\u0442"
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        },
        {
          id: "1620595800050694",
          title: "squidgame",
          desc: "Whether you\u2019re watching plenty of fan theories or just trying to find the perfect dalgona recipe, we\u2019re here for all things #SquidGame.",
          profileThumb: "https://p16-amd-va.tiktokcdn.com/obj/musically-maliva-obj/02f531f6811cd657c67d065555806c46",
          profileMedium: "https://p16-amd-va.tiktokcdn.com/obj/musically-maliva-obj/02f531f6811cd657c67d065555806c46",
          profileLarger: "https://p16-amd-va.tiktokcdn.com/obj/musically-maliva-obj/02f531f6811cd657c67d065555806c46",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        },
        {
          id: "1708442289590273",
          title: "\u0438\u0433\u0440\u0430\u0432\u043A\u0430\u043B\u044C\u043C\u0430\u0440\u0430",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        },
        {
          id: "1672975151494150",
          title: "squidgamenetflix",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 89,
        shareCount: 6,
        commentCount: 29,
        playCount: 6559
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 19,
          end: 28,
          hashtagName: "",
          hashtagId: "",
          type: 0,
          userId: "6566090291605045254",
          isCommerce: false,
          userUniqueId: "yummy_kiss",
          secUid: "MS4wLjABAAAAb0dOs4H3YYUnfYQO2SEMnmggHFmjEMebgxAYTT62RTKXpVeqh2zajf-oECToWXhz",
          subType: 2
        },
        {
          awemeId: "",
          start: 29,
          end: 40,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        },
        {
          awemeId: "",
          start: 41,
          end: 51,
          hashtagName: "squidgame",
          hashtagId: "1620595800050694",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        },
        {
          awemeId: "",
          start: 52,
          end: 66,
          hashtagName: "\u0438\u0433\u0440\u0430\u0432\u043A\u0430\u043B\u044C\u043C\u0430\u0440\u0430",
          hashtagId: "1708442289590273",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        },
        {
          awemeId: "",
          start: 67,
          end: 84,
          hashtagName: "squidgamenetflix",
          hashtagId: "1672975151494150",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7017331614996794630",
      desc: "#oleg_sheff",
      createTime: 1633849839,
      video: {
        id: "7017331614996794630",
        height: 1024,
        width: 576,
        duration: 49,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/ceffbc5437e14567831c77de3393a83b_1633849840~tplv-dmt-logom:tos-maliva-p-0000/266df3eb31fd4fcc92fe5e1de60a70dd.image?x-expires=1637078400&x-signature=PRtNh4QnpbPdcQbYFaKl3d%2B%2FjG8%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/55d3e7e45e84493dbdb8e6fe666252c1_1633849839?x-expires=1637078400&x-signature=Khe1c%2B1q5COTr%2FI%2Fp66S26zLVGw%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/bd2dfaee4fc1489d8421ce8aa3aff6af_1633849840?x-expires=1637078400&x-signature=5fcTXXWSHCAMMficaK3PGxebs1w%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-ve-0068c003/7e3dfc070e8c4855b1850446155d9f55/?a=1988&br=2316&bt=1158&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&expire=1637079023&ft=wUyFfFGnkag3-I&l=202111161009340101880612241F04B35D&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=M2VqNTw6ZnI8ODMzNzczM0ApPDk2MzM7aGRoN2g7NjlkO2cvbWNrcjQwMGVgLS1kMTZzczE0LTIzYWEtXzQwYi9eLTI6Yw%3D%3D&signature=60e417e09831e9591d6e2a59ce089dc8&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/55d3e7e45e84493dbdb8e6fe666252c1_1633849839~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=q38i0AY4dRm09ZSldO1nJ6oad3E%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/55d3e7e45e84493dbdb8e6fe666252c1_1633849839~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=Tb2PgUOSvQVCF%2Bw5%2BTEyNTqR7aA%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/ceffbc5437e14567831c77de3393a83b_1633849840?x-expires=1637078400&x-signature=vLggOrzwbWOwK2UNBzrw60GLGMs%3D",
        bitrate: 1186802,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "7017331298360412934",
        title: "\u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf58-ies-music-va.tiktokcdn.com/obj/musically-maliva-obj/7017331380271008518.mp3",
        coverThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        coverMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        coverLarge: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        authorName: "\u041E\u043B\u0435\u0433",
        original: true,
        duration: 49,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 294,
        shareCount: 113,
        commentCount: 60,
        playCount: 6517
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 4,
          stickerText: ["\u0430 \u0432\u0430\u043C \u0441\u043B\u0430\u0431\u043E? \u{1F63A}"]
        },
        {
          stickerType: 9,
          stickerText: ["\u0430 \u0432\u0430\u043C \u0441\u043B\u0430\u0431\u043E? \u{1F63A}"]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7017084872443415813",
      desc: "#oleg_sheff",
      createTime: 1633792389,
      video: {
        id: "7017084872443415813",
        height: 1024,
        width: 576,
        duration: 37,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/b0751e3a019641f1adfeb44704d19adf~tplv-dmt-logom:tos-maliva-p-0000/abe4d08caea5454dbb914e4409273fa7.image?x-expires=1637078400&x-signature=9dJdlzcTr3mppSfNsoFUKitTLj8%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/4a52752e76884f4dba16737e62e5b032_1633792389?x-expires=1637078400&x-signature=BN%2BxmaARNN9jO9S66tTnt6XvznU%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/c3bb922a876a4e37bc2398336dc1cd33_1633792390?x-expires=1637078400&x-signature=MU%2F7DjZviy8u472DVPwwomdiA8s%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-ve-0068c002/baf865aa32944adbafb41bd84ac1763d/?a=1988&br=980&bt=490&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&expire=1637079011&ft=wUyFfFGnkag3-I&l=202111161009340101880612241F04B35D&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=ank7NGg6Zm51ODMzNzczM0ApaDg5ODk3NWQzNzw7OmU1NGdsNmBtcjRvL2RgLS1kMTZzczFjMDAxYDViX2EvLzQyLTQ6Yw%3D%3D&signature=a7e2af921aab52282ae9100cb5a7c1f5&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/4a52752e76884f4dba16737e62e5b032_1633792389~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=YRxICEzI9b2Tir52R8V%2FyzRErlc%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/4a52752e76884f4dba16737e62e5b032_1633792389~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=NR3RKC7OZauvAuyANetGrJb7a9c%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/b0751e3a019641f1adfeb44704d19adf?x-expires=1637078400&x-signature=uj3m8rhs3sUbHcexWPmQFxR6SXA%3D",
        bitrate: 502450,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "6994459782824725254",
        title: "\u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf58-ies-music-va.tiktokcdn.com/obj/musically-maliva-obj/6994459822548601605.mp3",
        coverThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        coverMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        coverLarge: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        authorName: "\u041E\u043B\u0435\u0433",
        original: true,
        duration: 53,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 233,
        shareCount: 39,
        commentCount: 33,
        playCount: 6399
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 4,
          stickerText: ["\u0441\u043E\u043B\u044C\u043D\u044B\u0439 \u043A\u043E\u043D\u0446\u0435\u0440\u0442 \n\u043B\u044F \u043C\u0438\u043D\u043E\u0440"]
        },
        {
          stickerType: 9,
          stickerText: ["\u043B\u044F \u043C\u0438\u043D\u043E\u0440"]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7017056123417038085",
      desc: "#oleg_sheff",
      createTime: 1633785695,
      video: {
        id: "7017056123417038085",
        height: 1024,
        width: 576,
        duration: 8,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/f93d13cbff134c2ab268ef667af7fc24?x-expires=1637078400&x-signature=iZ6UQM1qzN%2Fp60%2BJQdjPJywxEgM%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/b8df23f4ef0f447598879b1424318437_1633785695?x-expires=1637078400&x-signature=AHqZtzVoy1NsoOzLWZMye%2BxYJwM%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/a9cf0f63613f4c759f83287339012c0c_1633785696?x-expires=1637078400&x-signature=B2oHsAO2S%2FClfCoXObG8JVsI0uc%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-ve-0068c002/a58023e9f9bd4fe0bd4a32e423cd1d05/?a=1988&br=1292&bt=646&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&expire=1637078982&ft=wUyFfFGnkag3-I&l=202111161009340101880612241F04B35D&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=amlobzs6ZnBzODMzNzczM0ApOmc8Nmk4Ojw3N2Q8N2U8NWdpaS9mcjRfYmRgLS1kMTZzczFiLTYtY2MxYjIxLi4tLS86Yw%3D%3D&signature=4eb3107ad87e7f3e7eb3c1f9e7881b04&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/b8df23f4ef0f447598879b1424318437_1633785695~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=Y7AbZbDhK5c1zEbfhc7OLZedqh8%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/b8df23f4ef0f447598879b1424318437_1633785695~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=6NErtt37S2AkXmICSvdxBalhRuQ%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/f93d13cbff134c2ab268ef667af7fc24?x-expires=1637078400&x-signature=iZ6UQM1qzN%2Fp60%2BJQdjPJywxEgM%3D",
        bitrate: 661886,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "6965407467035560709",
        title: "\u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf16-ies-music-va.tiktokcdn.com/obj/musically-maliva-obj/7005899101099346693.mp3",
        coverThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        coverMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        coverLarge: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        authorName: "\u041E\u043B\u0435\u0433",
        original: true,
        duration: 59,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 231,
        shareCount: 61,
        commentCount: 27,
        playCount: 6767
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 4,
          stickerText: [
            "   \u043A\u043E\u0440\u043E\u043B\u044C \u0441\u043D\u043E\u0432\u0430    \n         \u0441 \u043D\u0430\u043C\u0438 !!!       \n   \u0438\u043B\u0438 \u043A\u043E\u0440\u043E\u043B\u0435\u0432\u0430 ?  "
          ]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7016996187173637382",
      desc: "#oleg_sheff",
      createTime: 1633771741,
      video: {
        id: "7016996187173637382",
        height: 1024,
        width: 576,
        duration: 19,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/d5bf5d3832624bb89e870748b0a90438~tplv-dmt-logom:tos-maliva-p-0000/79cbd6a187e34abd9ca0b9a8fc2e7c12.image?x-expires=1637078400&x-signature=9jR2kVL5KFmnk8ZBMcRKZGIqvCU%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/7b7c3d2fa6424c71872ff4c9c44ab200_1633771741?x-expires=1637078400&x-signature=K2KKV%2FjOOXhthmcBO1Hymi63Nk0%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/596f5049329b49609e45b54bd42f9096_1633771742?x-expires=1637078400&x-signature=BuQOKthkDF4ZrKRQGVlpMl3p6Kk%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-ve-0068c002/76b1bb8addae4fffa6aae9db989af66b/?a=1988&br=2880&bt=1440&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&expire=1637078993&ft=wUyFfFGnkag3-I&l=202111161009340101880612241F04B35D&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=M3U5dTc6ZjZwODMzNzczM0ApNWVnZjlmNGRoN2RpPDRlOWdrZmNvcjRfLmRgLS1kMTZzczE0MDY1NjBeXmMxNTQtLi06Yw%3D%3D&signature=64e9800a1e678d3a609fc108b91a8c3c&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/7b7c3d2fa6424c71872ff4c9c44ab200_1633771741~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=lsesJA6Cz18F4UImente3ix3Ak4%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/7b7c3d2fa6424c71872ff4c9c44ab200_1633771741~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=q%2BqUb2DACNIKbmSwNDe0dOJFyMM%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/d5bf5d3832624bb89e870748b0a90438?x-expires=1637078400&x-signature=yH6MoffBmrfp4VVZBI7XaEipYZc%3D",
        bitrate: 1475489,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "7016995909011639045",
        title: "\u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf16-ies-music-va.tiktokcdn.com/obj/musically-maliva-obj/7016995991861660422.mp3",
        coverThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        coverMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        coverLarge: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        authorName: "\u041E\u043B\u0435\u0433",
        original: true,
        duration: 19,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 382,
        shareCount: 23,
        commentCount: 44,
        playCount: 7416
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 9,
          stickerText: ["\u043C\u0430\u043C\u0430 \u043F\u0440\u0438\u0448\u043B\u0430"]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    },
    {
      id: "7016770515750718726",
      desc: "#oleg_sheff",
      createTime: 1633719196,
      video: {
        id: "7016770515750718726",
        height: 1024,
        width: 576,
        duration: 24,
        ratio: "720p",
        cover: "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/f2e1c82f3cdd4cd2bccd364459400e38~tplv-dmt-logom:tos-maliva-p-0000/afb086e654c84d5a8a8163c5f5c7990f.image?x-expires=1637078400&x-signature=VZcT3yr%2BGnanAQ24SUdiFTSgiBg%3D",
        originCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/aff32f74e31445a3b985179515d6dccd_1633719197?x-expires=1637078400&x-signature=ylWCTXf5A6dU7wk58HNu7ORavtA%3D",
        dynamicCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/8cc488ac01ba417c9174afb5b52314db_1633719197?x-expires=1637078400&x-signature=ZMbpIAyy%2B%2FYlDYTEj20qtUCwtnE%3D",
        playAddr: "https://v39-eu.tiktokcdn.com/d1184227caf13ef1dc53685996e3c40f/6193dab1/video/tos/useast2a/tos-useast2a-pve-0068/8fd9ea2ab95040e79479942caad0ad6a/?a=1233&br=1748&bt=874&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111161020070101890362000305A3F8&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=anZtOTg6ZmxxOTMzNzczM0ApOTRkZzVlZztpNzY8OTtkPGdhYWVzcjRnczVgLS1kMTZzczMwNDIyYzA1MV41MS42NjY6Yw%3D%3D&vl=&vr=%22",
        downloadAddr: "https://v16-web.tiktok.com/video/tos/useast2a/tos-useast2a-pve-0068/357945ec924d43a5840edd9a8461fab8/?a=1988&br=878&bt=439&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&expire=1637078998&ft=wUyFfFGnkag3-I&l=202111161009340101880612241F04B35D&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&policy=3&qs=0&rc=ajZtbmQ6ZnA8ODMzNzczM0ApZ2ZoaWk8aTtmNzlmaTNpaGdec3A0cjQwM2RgLS1kMTZzczIyNC1eYGAxNTA1NjNhMi46Yw%3D%3D&signature=e4931ca98a1308c00a6d41343c61018f&tk=7001503582143808518&vl=&vr=",
        shareCover: [
          "",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/aff32f74e31445a3b985179515d6dccd_1633719197~tplv-tiktok-play.jpeg?x-expires=1637078400&x-signature=o6ZdC6%2BrQT5uW0d26zvIQ14kkMY%3D",
          "https://p16-sign-va.tiktokcdn.com/tos-maliva-p-0068/aff32f74e31445a3b985179515d6dccd_1633719197~tplv-tiktokx-share-play.jpeg?x-expires=1637078400&x-signature=YKKzGLSIMg%2Fw6G7Rn5AJBp3MaI4%3D"
        ],
        reflowCover: "https://p16-sign-va.tiktokcdn.com/obj/tos-maliva-p-0068/f2e1c82f3cdd4cd2bccd364459400e38?x-expires=1637078400&x-signature=bn9fCIHyUTfAy05cKzWTVLHZNfU%3D",
        bitrate: 450034,
        encodedType: "normal",
        format: "mp4",
        videoQuality: "normal",
        encodeUserTag: "",
        codecType: "h264",
        definition: "720p"
      },
      author: {
        id: "6787631781866587141",
        uniqueId: "oleg_sheff",
        nickname: "\u041E\u043B\u0435\u0433",
        avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        avatarMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        avatarLarger: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        signature: "\u{1F525} EXCLUSIVE \u{1F525}\n\u043F\u043E\u043F\u0443\u0433\u0430\u0439 \u0416\u0410\u041A\u041E \u{1F99C}\n\u0437\u043E\u0432\u0443\u0442 \u0416\u043E\u0440\u0430 \u{1F918}\n\u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0437\u0430 \u043B\u0430\u0439\u043A\u0438 \u2764 \u0438 \u043A\u043E\u043C\u0435\u043D\u0442\u044B \u{1F4AC}",
        verified: false,
        secUid: "MS4wLjABAAAAaKbDq-1WjuYX_DPwvnAyzgPF32lo95K-8MHSrr0HD_5nQ1L-yazTLD2acOEE1En6",
        secret: false,
        ftc: false,
        relation: 0,
        openFavorite: false,
        commentSetting: 0,
        duetSetting: 0,
        stitchSetting: 0,
        privateAccount: false
      },
      music: {
        id: "7016770376919239429",
        title: "\u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0437\u0432\u0443\u043A",
        playUrl: "https://sf16-ies-music-va.tiktokcdn.com/obj/musically-maliva-obj/7016770462206233349.mp3",
        coverThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_100x100.jpeg?x-expires=1637143200&x-signature=9CiaTaf3MNXs8VJ4UbqKDhlCY8k%3D",
        coverMedium: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
        coverLarge: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_1080x1080.jpeg?x-expires=1637143200&x-signature=Z3nYLmqSSF4HJkIwoDZmp6oOODs%3D",
        authorName: "\u041E\u043B\u0435\u0433",
        original: true,
        duration: 24,
        album: ""
      },
      challenges: [
        {
          id: "1704101514523653",
          title: "oleg_sheff",
          desc: "",
          profileThumb: "",
          profileMedium: "",
          profileLarger: "",
          coverThumb: "",
          coverMedium: "",
          coverLarger: "",
          isCommerce: false
        }
      ],
      stats: {
        diggCount: 616,
        shareCount: 276,
        commentCount: 98,
        playCount: 10800
      },
      duetInfo: {
        duetFromId: "0"
      },
      originalItem: false,
      officalItem: false,
      textExtra: [
        {
          awemeId: "",
          start: 0,
          end: 11,
          hashtagName: "oleg_sheff",
          hashtagId: "1704101514523653",
          type: 1,
          userId: "",
          isCommerce: false,
          userUniqueId: "",
          secUid: "",
          subType: 0
        }
      ],
      secret: false,
      forFriend: false,
      digged: false,
      itemCommentStatus: 0,
      showNotPass: false,
      vl1: false,
      itemMute: false,
      authorStats: {
        followingCount: 305,
        followerCount: 62900,
        heartCount: 11e5,
        videoCount: 226,
        diggCount: 9426,
        heart: 11e5
      },
      privateItem: false,
      duetEnabled: true,
      stitchEnabled: true,
      shareEnabled: true,
      stickersOnItem: [
        {
          stickerType: 4,
          stickerText: [
            "        \u043E\u0431\u044B\u0447\u043D\u0430\u044F          \n     \u0436\u0438\u0437\u043D\u0435\u043D\u043D\u0430\u044F        \n         \u0441\u0438\u0442\u0443\u0430\u0446\u0438\u044F          "
          ]
        },
        {
          stickerType: 9,
          stickerText: ["\u043E\u0431\u044B\u0447\u043D\u044B\u0439 \n\u0434\u0435\u043D\u044C"]
        }
      ],
      isAd: false,
      duetDisplay: 0,
      stitchDisplay: 0
    }
  ];
  var cursor = "1633719196000";
  var hasMore = true;
  var userFeed_default = {
    statusCode,
    itemList,
    cursor,
    hasMore
  };

  // src/assets/mockData/userInfo.json
  var user = {
    avatarThumb: "https://p16-sign-va.tiktokcdn.com/tos-maliva-avt-0068/1727974373153eaef0f6f558bf217bc8~c5_720x720.jpeg?x-expires=1637143200&x-signature=4rHCslWH7Lu895CrcR5hujN4k8E%3D",
    nickname: "bellapoarch"
  };
  var stats = {
    followingCount: 82,
    followerCount: 12003004,
    heartCount: 500400300200
  };
  var userInfo_default = {
    user,
    stats
  };

  // src/services/prepareSuitableMock.js
  var ResultObject = class {
    constructor(data) {
      this.data = data;
      this.ok = true;
    }
    json() {
      return createSuccessfulPromise_default(this.data);
    }
  };
  var prepareSuitableMock = (url) => {
    if (url.includes("feed")) {
      return new ResultObject(userFeed_default.itemList);
    }
    if (url.includes("info")) {
      return new ResultObject(userInfo_default);
    }
    return new ResultObject({});
  };
  var prepareSuitableMock_default = prepareSuitableMock;

  // src/api/useFetch.js
  var apiKey = {
    my: "74204c479emsh0e2f0aab91fff7ep1421f1jsnf9869f575cc3",
    genesis: "c1257dc04cmshd888bbb072eb770p1f2b8ajsnbf16d4cd1d66"
  };
  var myAcc = false;
  var workWithMock = true;
  var useFetch = () => {
    const [isLoading, setIsLoading] = (0, import_react4.useState)(true);
    const [isError, setIsError] = (0, import_react4.useState)(false);
    const [response, setResponse] = (0, import_react4.useState)(void 0);
    const request = (0, import_react4.useCallback)(async (url, method = "GET", body = null, headers = {}) => {
      try {
        const rapidApiHeaders = {
          ...headers,
          "x-rapidapi-host": "tiktok33.p.rapidapi.com",
          "x-rapidapi-key": myAcc ? apiKey.my : apiKey.genesis
        };
        const res = workWithMock ? prepareSuitableMock_default(url) : await fetch(url, { method, body, headers: { ...headers, ...rapidApiHeaders } });
        const data = await res.json();
        if (!res.ok) {
          throw new Error(res.message || "Something went wrong");
        } else {
          setResponse(data);
        }
      } catch (e2) {
        setIsError(true);
        throw e2;
      } finally {
        setIsLoading(false);
      }
    }, []);
    return { request, response, isLoading, setIsLoading, isError, setIsError };
  };
  var useFetch_default = useFetch;

  // src/api/getTrendingFeed.js
  var getTrendingFeed = (fetch2) => {
    fetch2("https://tiktok33.p.rapidapi.com/trending/feed");
  };
  var getTrendingFeed_default = getTrendingFeed;

  // src/pages/Feed/StyledFeed.js
  var StyledFeed_default = styled_components_browser_esm_default.main`
    position: relative;
    min-height: 100vh;
    padding-top: 4vh;
    padding-bottom: 1px;
    background-color: ${({ theme }) => theme.feedPageBackground};
    box-sizing: border-box;
    transition: background-color 0.5s;

    @media (max-width: 680px) {
        padding-top: 0;
    }

    .video {
        position: relative;
        max-width: 400px;
        margin: 0 auto 24px;

        @media (max-width: 680px) {
            margin-bottom: 128px;
        }
    }

    .player {
        width: 100%;
        min-height: 400px;
        background-color: rgba(3, 3, 3, 0.1);
        border-radius: 3px;
    }

    .play-icon {
        position: absolute;
        top: 50%;
        left: 50%;
        color: #fff;
        transform: translate(-50%, -50%);
    }

    .post-description {
        position: absolute;
        bottom: 16px;
        left: 16px;
        width: 70%;
        color: #fff;
    }

    .author {
        position: absolute;
        top: 0;
        left: calc(100% + 16px);
        display: flex;
        flex-direction: column;

        @media (max-width: 680px) {
            top: calc(100% + 8px);
            left: 16px;
            flex-direction: row;
            align-items: end;
        }
    }

    .nickname {
        margin-top: 8px;
        letter-spacing: 2px;
        white-space: nowrap;

        @media (max-width: 680px) {
            margin-left: 8px;
        }
    }

    .stats {
        position: absolute;
        bottom: 0;
        left: calc(100% + 16px);
        display: flex;
        flex-direction: column;
        letter-spacing: 2px;

        @media (max-width: 680px) {
            left: auto;
            top: calc(100% + 8px);
            right: 16px;
            flex-direction: row;
        }

        svg {
            fill: ${({ theme }) => theme.filling};
        }
    }

    .comments {
        margin-top: 16px;

        @media (max-width: 680px) {
            margin-top: 0;
            margin-left: 16px;
        }
    }

    .pagination {
        position: absolute;
        bottom: 8px;
        width: 100%;

        ul {
            justify-content: center;
        }

        .MuiButtonBase-root {
            color: ${({ theme }) => theme.filling};
        }
    }

    .previous,
    .next {
        position: absolute;
        top: 0;
        bottom: 0;
        display: flex;
        align-items: center;
        justify-content: center;
        width: 160px;
        background: none;
        border: none;
        box-sizing: content-box;

        &:enabled {
            cursor: pointer;

            svg {
                fill: ${({ theme }) => theme.filling};
            }
        }

        &:hover:not(:disabled) {
            background-color: rgba(0, 0, 0, 0.1);
        }

        @media (max-width: 980px) {
            display: none;
        }
    }

    .previous {
        left: 0;

        &:hover:not(:disabled) {
            border-right: 2px solid ${({ theme }) => theme.navBorder};
        }
    }

    .next {
        right: 0;

        &:hover:not(:disabled) {
            border-left: 2px solid ${({ theme }) => theme.navBorder};
        }
    }
`;

  // src/components/common/Loader.js
  var rotate = Ue`
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
`;
  var Loader_default = styled_components_browser_esm_default.div`
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    display: inline-block;
    width: 80px;
    height: 80px;

    &:after {
        content: ' ';
        display: block;
        width: 64px;
        height: 64px;
        margin: 4px 0 0 2px;
        border-radius: 50%;
        border: 6px solid #fff;
        border-color: #fff transparent #fff transparent;
        animation: ${rotate} 1.2s linear infinite;
        transform-origin: center;
    }
`;

  // src/components/common/ErrorToast.jsx
  var import_react9 = __toESM(require_react());

  // node_modules/@mui/material/Snackbar/Snackbar.js
  var React12 = __toESM(require_react());
  var import_prop_types9 = __toESM(require_prop_types());
  var import_clsx4 = __toESM(require_clsx());
  var import_core9 = __toESM(require_node3());

  // node_modules/@mui/core/ClickAwayListener/ClickAwayListener.js
  var React4 = __toESM(require_react());
  var import_prop_types2 = __toESM(require_prop_types());
  var import_utils4 = __toESM(require_utils());
  var import_jsx_runtime4 = __toESM(require_jsx_runtime());
  function mapEventPropToEvent(eventProp) {
    return eventProp.substring(2).toLowerCase();
  }
  function clickedRootScrollbar(event, doc) {
    return doc.documentElement.clientWidth < event.clientX || doc.documentElement.clientHeight < event.clientY;
  }
  function ClickAwayListener(props) {
    const {
      children,
      disableReactTree = false,
      mouseEvent = "onClick",
      onClickAway,
      touchEvent = "onTouchEnd"
    } = props;
    const movedRef = React4.useRef(false);
    const nodeRef = React4.useRef(null);
    const activatedRef = React4.useRef(false);
    const syntheticEventRef = React4.useRef(false);
    React4.useEffect(() => {
      setTimeout(() => {
        activatedRef.current = true;
      }, 0);
      return () => {
        activatedRef.current = false;
      };
    }, []);
    const handleRef = (0, import_utils4.unstable_useForkRef)(children.ref, nodeRef);
    const handleClickAway = (0, import_utils4.unstable_useEventCallback)((event) => {
      const insideReactTree = syntheticEventRef.current;
      syntheticEventRef.current = false;
      const doc = (0, import_utils4.unstable_ownerDocument)(nodeRef.current);
      if (!activatedRef.current || !nodeRef.current || "clientX" in event && clickedRootScrollbar(event, doc)) {
        return;
      }
      if (movedRef.current) {
        movedRef.current = false;
        return;
      }
      let insideDOM;
      if (event.composedPath) {
        insideDOM = event.composedPath().indexOf(nodeRef.current) > -1;
      } else {
        insideDOM = !doc.documentElement.contains(event.target) || nodeRef.current.contains(event.target);
      }
      if (!insideDOM && (disableReactTree || !insideReactTree)) {
        onClickAway(event);
      }
    });
    const createHandleSynthetic = (handlerName) => (event) => {
      syntheticEventRef.current = true;
      const childrenPropsHandler = children.props[handlerName];
      if (childrenPropsHandler) {
        childrenPropsHandler(event);
      }
    };
    const childrenProps = {
      ref: handleRef
    };
    if (touchEvent !== false) {
      childrenProps[touchEvent] = createHandleSynthetic(touchEvent);
    }
    React4.useEffect(() => {
      if (touchEvent !== false) {
        const mappedTouchEvent = mapEventPropToEvent(touchEvent);
        const doc = (0, import_utils4.unstable_ownerDocument)(nodeRef.current);
        const handleTouchMove = () => {
          movedRef.current = true;
        };
        doc.addEventListener(mappedTouchEvent, handleClickAway);
        doc.addEventListener("touchmove", handleTouchMove);
        return () => {
          doc.removeEventListener(mappedTouchEvent, handleClickAway);
          doc.removeEventListener("touchmove", handleTouchMove);
        };
      }
      return void 0;
    }, [handleClickAway, touchEvent]);
    if (mouseEvent !== false) {
      childrenProps[mouseEvent] = createHandleSynthetic(mouseEvent);
    }
    React4.useEffect(() => {
      if (mouseEvent !== false) {
        const mappedMouseEvent = mapEventPropToEvent(mouseEvent);
        const doc = (0, import_utils4.unstable_ownerDocument)(nodeRef.current);
        doc.addEventListener(mappedMouseEvent, handleClickAway);
        return () => {
          doc.removeEventListener(mappedMouseEvent, handleClickAway);
        };
      }
      return void 0;
    }, [handleClickAway, mouseEvent]);
    return /* @__PURE__ */ (0, import_jsx_runtime4.jsx)(React4.Fragment, {
      children: /* @__PURE__ */ React4.cloneElement(children, childrenProps)
    });
  }
  true ? ClickAwayListener.propTypes = {
    children: import_utils4.elementAcceptingRef.isRequired,
    disableReactTree: import_prop_types2.default.bool,
    mouseEvent: import_prop_types2.default.oneOf(["onClick", "onMouseDown", "onMouseUp", false]),
    onClickAway: import_prop_types2.default.func.isRequired,
    touchEvent: import_prop_types2.default.oneOf(["onTouchEnd", "onTouchStart", false])
  } : void 0;
  if (true) {
    ClickAwayListener["propTypes"] = (0, import_utils4.exactProp)(ClickAwayListener.propTypes);
  }
  var ClickAwayListener_default = ClickAwayListener;

  // node_modules/@mui/material/styles/useTheme.js
  var React5 = __toESM(require_react());
  var import_system5 = __toESM(require_system());
  function useTheme() {
    const theme = (0, import_system5.useTheme)(defaultTheme_default);
    if (true) {
      React5.useDebugValue(theme);
    }
    return theme;
  }

  // node_modules/@mui/material/utils/useEventCallback.js
  var import_utils5 = __toESM(require_utils());
  var useEventCallback_default = import_utils5.unstable_useEventCallback;

  // node_modules/@mui/material/utils/capitalize.js
  var import_utils6 = __toESM(require_utils());
  var capitalize_default = import_utils6.unstable_capitalize;

  // node_modules/@mui/material/Grow/Grow.js
  var React9 = __toESM(require_react());
  var import_prop_types6 = __toESM(require_prop_types());
  var import_utils8 = __toESM(require_utils());

  // node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
  function _objectWithoutPropertiesLoose3(source, excluded) {
    if (source == null)
      return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i2;
    for (i2 = 0; i2 < sourceKeys.length; i2++) {
      key = sourceKeys[i2];
      if (excluded.indexOf(key) >= 0)
        continue;
      target[key] = source[key];
    }
    return target;
  }

  // node_modules/@babel/runtime/helpers/esm/inheritsLoose.js
  function _inheritsLoose(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    subClass.__proto__ = superClass;
  }

  // node_modules/react-transition-group/esm/Transition.js
  var import_prop_types4 = __toESM(require_prop_types());
  var import_react6 = __toESM(require_react());
  var import_react_dom = __toESM(require_react_dom());

  // node_modules/react-transition-group/esm/config.js
  var config_default = {
    disabled: false
  };

  // node_modules/react-transition-group/esm/utils/PropTypes.js
  var import_prop_types3 = __toESM(require_prop_types());
  var timeoutsShape = true ? import_prop_types3.default.oneOfType([import_prop_types3.default.number, import_prop_types3.default.shape({
    enter: import_prop_types3.default.number,
    exit: import_prop_types3.default.number,
    appear: import_prop_types3.default.number
  }).isRequired]) : null;
  var classNamesShape = true ? import_prop_types3.default.oneOfType([import_prop_types3.default.string, import_prop_types3.default.shape({
    enter: import_prop_types3.default.string,
    exit: import_prop_types3.default.string,
    active: import_prop_types3.default.string
  }), import_prop_types3.default.shape({
    enter: import_prop_types3.default.string,
    enterDone: import_prop_types3.default.string,
    enterActive: import_prop_types3.default.string,
    exit: import_prop_types3.default.string,
    exitDone: import_prop_types3.default.string,
    exitActive: import_prop_types3.default.string
  })]) : null;

  // node_modules/react-transition-group/esm/TransitionGroupContext.js
  var import_react5 = __toESM(require_react());
  var TransitionGroupContext_default = import_react5.default.createContext(null);

  // node_modules/react-transition-group/esm/Transition.js
  var UNMOUNTED = "unmounted";
  var EXITED = "exited";
  var ENTERING = "entering";
  var ENTERED = "entered";
  var EXITING = "exiting";
  var Transition = /* @__PURE__ */ function(_React$Component) {
    _inheritsLoose(Transition2, _React$Component);
    function Transition2(props, context) {
      var _this;
      _this = _React$Component.call(this, props, context) || this;
      var parentGroup = context;
      var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;
      var initialStatus;
      _this.appearStatus = null;
      if (props.in) {
        if (appear) {
          initialStatus = EXITED;
          _this.appearStatus = ENTERING;
        } else {
          initialStatus = ENTERED;
        }
      } else {
        if (props.unmountOnExit || props.mountOnEnter) {
          initialStatus = UNMOUNTED;
        } else {
          initialStatus = EXITED;
        }
      }
      _this.state = {
        status: initialStatus
      };
      _this.nextCallback = null;
      return _this;
    }
    Transition2.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {
      var nextIn = _ref.in;
      if (nextIn && prevState.status === UNMOUNTED) {
        return {
          status: EXITED
        };
      }
      return null;
    };
    var _proto = Transition2.prototype;
    _proto.componentDidMount = function componentDidMount() {
      this.updateStatus(true, this.appearStatus);
    };
    _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
      var nextStatus = null;
      if (prevProps !== this.props) {
        var status = this.state.status;
        if (this.props.in) {
          if (status !== ENTERING && status !== ENTERED) {
            nextStatus = ENTERING;
          }
        } else {
          if (status === ENTERING || status === ENTERED) {
            nextStatus = EXITING;
          }
        }
      }
      this.updateStatus(false, nextStatus);
    };
    _proto.componentWillUnmount = function componentWillUnmount() {
      this.cancelNextCallback();
    };
    _proto.getTimeouts = function getTimeouts() {
      var timeout2 = this.props.timeout;
      var exit, enter, appear;
      exit = enter = appear = timeout2;
      if (timeout2 != null && typeof timeout2 !== "number") {
        exit = timeout2.exit;
        enter = timeout2.enter;
        appear = timeout2.appear !== void 0 ? timeout2.appear : enter;
      }
      return {
        exit,
        enter,
        appear
      };
    };
    _proto.updateStatus = function updateStatus(mounting, nextStatus) {
      if (mounting === void 0) {
        mounting = false;
      }
      if (nextStatus !== null) {
        this.cancelNextCallback();
        if (nextStatus === ENTERING) {
          this.performEnter(mounting);
        } else {
          this.performExit();
        }
      } else if (this.props.unmountOnExit && this.state.status === EXITED) {
        this.setState({
          status: UNMOUNTED
        });
      }
    };
    _proto.performEnter = function performEnter(mounting) {
      var _this2 = this;
      var enter = this.props.enter;
      var appearing = this.context ? this.context.isMounting : mounting;
      var _ref2 = this.props.nodeRef ? [appearing] : [import_react_dom.default.findDOMNode(this), appearing], maybeNode = _ref2[0], maybeAppearing = _ref2[1];
      var timeouts = this.getTimeouts();
      var enterTimeout = appearing ? timeouts.appear : timeouts.enter;
      if (!mounting && !enter || config_default.disabled) {
        this.safeSetState({
          status: ENTERED
        }, function() {
          _this2.props.onEntered(maybeNode);
        });
        return;
      }
      this.props.onEnter(maybeNode, maybeAppearing);
      this.safeSetState({
        status: ENTERING
      }, function() {
        _this2.props.onEntering(maybeNode, maybeAppearing);
        _this2.onTransitionEnd(enterTimeout, function() {
          _this2.safeSetState({
            status: ENTERED
          }, function() {
            _this2.props.onEntered(maybeNode, maybeAppearing);
          });
        });
      });
    };
    _proto.performExit = function performExit() {
      var _this3 = this;
      var exit = this.props.exit;
      var timeouts = this.getTimeouts();
      var maybeNode = this.props.nodeRef ? void 0 : import_react_dom.default.findDOMNode(this);
      if (!exit || config_default.disabled) {
        this.safeSetState({
          status: EXITED
        }, function() {
          _this3.props.onExited(maybeNode);
        });
        return;
      }
      this.props.onExit(maybeNode);
      this.safeSetState({
        status: EXITING
      }, function() {
        _this3.props.onExiting(maybeNode);
        _this3.onTransitionEnd(timeouts.exit, function() {
          _this3.safeSetState({
            status: EXITED
          }, function() {
            _this3.props.onExited(maybeNode);
          });
        });
      });
    };
    _proto.cancelNextCallback = function cancelNextCallback() {
      if (this.nextCallback !== null) {
        this.nextCallback.cancel();
        this.nextCallback = null;
      }
    };
    _proto.safeSetState = function safeSetState(nextState, callback) {
      callback = this.setNextCallback(callback);
      this.setState(nextState, callback);
    };
    _proto.setNextCallback = function setNextCallback(callback) {
      var _this4 = this;
      var active = true;
      this.nextCallback = function(event) {
        if (active) {
          active = false;
          _this4.nextCallback = null;
          callback(event);
        }
      };
      this.nextCallback.cancel = function() {
        active = false;
      };
      return this.nextCallback;
    };
    _proto.onTransitionEnd = function onTransitionEnd(timeout2, handler) {
      this.setNextCallback(handler);
      var node = this.props.nodeRef ? this.props.nodeRef.current : import_react_dom.default.findDOMNode(this);
      var doesNotHaveTimeoutOrListener = timeout2 == null && !this.props.addEndListener;
      if (!node || doesNotHaveTimeoutOrListener) {
        setTimeout(this.nextCallback, 0);
        return;
      }
      if (this.props.addEndListener) {
        var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback], maybeNode = _ref3[0], maybeNextCallback = _ref3[1];
        this.props.addEndListener(maybeNode, maybeNextCallback);
      }
      if (timeout2 != null) {
        setTimeout(this.nextCallback, timeout2);
      }
    };
    _proto.render = function render() {
      var status = this.state.status;
      if (status === UNMOUNTED) {
        return null;
      }
      var _this$props = this.props, children = _this$props.children, _in = _this$props.in, _mountOnEnter = _this$props.mountOnEnter, _unmountOnExit = _this$props.unmountOnExit, _appear = _this$props.appear, _enter = _this$props.enter, _exit = _this$props.exit, _timeout = _this$props.timeout, _addEndListener = _this$props.addEndListener, _onEnter = _this$props.onEnter, _onEntering = _this$props.onEntering, _onEntered = _this$props.onEntered, _onExit = _this$props.onExit, _onExiting = _this$props.onExiting, _onExited = _this$props.onExited, _nodeRef = _this$props.nodeRef, childProps = _objectWithoutPropertiesLoose3(_this$props, ["children", "in", "mountOnEnter", "unmountOnExit", "appear", "enter", "exit", "timeout", "addEndListener", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "nodeRef"]);
      return /* @__PURE__ */ import_react6.default.createElement(TransitionGroupContext_default.Provider, {
        value: null
      }, typeof children === "function" ? children(status, childProps) : import_react6.default.cloneElement(import_react6.default.Children.only(children), childProps));
    };
    return Transition2;
  }(import_react6.default.Component);
  Transition.contextType = TransitionGroupContext_default;
  Transition.propTypes = true ? {
    nodeRef: import_prop_types4.default.shape({
      current: typeof Element === "undefined" ? import_prop_types4.default.any : function(propValue, key, componentName, location, propFullName, secret) {
        var value = propValue[key];
        return import_prop_types4.default.instanceOf(value && "ownerDocument" in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);
      }
    }),
    children: import_prop_types4.default.oneOfType([import_prop_types4.default.func.isRequired, import_prop_types4.default.element.isRequired]).isRequired,
    in: import_prop_types4.default.bool,
    mountOnEnter: import_prop_types4.default.bool,
    unmountOnExit: import_prop_types4.default.bool,
    appear: import_prop_types4.default.bool,
    enter: import_prop_types4.default.bool,
    exit: import_prop_types4.default.bool,
    timeout: function timeout(props) {
      var pt = timeoutsShape;
      if (!props.addEndListener)
        pt = pt.isRequired;
      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }
      return pt.apply(void 0, [props].concat(args));
    },
    addEndListener: import_prop_types4.default.func,
    onEnter: import_prop_types4.default.func,
    onEntering: import_prop_types4.default.func,
    onEntered: import_prop_types4.default.func,
    onExit: import_prop_types4.default.func,
    onExiting: import_prop_types4.default.func,
    onExited: import_prop_types4.default.func
  } : {};
  function noop() {
  }
  Transition.defaultProps = {
    in: false,
    mountOnEnter: false,
    unmountOnExit: false,
    appear: false,
    enter: true,
    exit: true,
    onEnter: noop,
    onEntering: noop,
    onEntered: noop,
    onExit: noop,
    onExiting: noop,
    onExited: noop
  };
  Transition.UNMOUNTED = UNMOUNTED;
  Transition.EXITED = EXITED;
  Transition.ENTERING = ENTERING;
  Transition.ENTERED = ENTERED;
  Transition.EXITING = EXITING;
  var Transition_default = Transition;

  // node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js
  function _assertThisInitialized(self2) {
    if (self2 === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self2;
  }

  // node_modules/react-transition-group/esm/TransitionGroup.js
  var import_prop_types5 = __toESM(require_prop_types());
  var import_react8 = __toESM(require_react());

  // node_modules/react-transition-group/esm/utils/ChildMapping.js
  var import_react7 = __toESM(require_react());
  function getChildMapping(children, mapFn) {
    var mapper = function mapper2(child) {
      return mapFn && (0, import_react7.isValidElement)(child) ? mapFn(child) : child;
    };
    var result = /* @__PURE__ */ Object.create(null);
    if (children)
      import_react7.Children.map(children, function(c2) {
        return c2;
      }).forEach(function(child) {
        result[child.key] = mapper(child);
      });
    return result;
  }
  function mergeChildMappings(prev, next) {
    prev = prev || {};
    next = next || {};
    function getValueForKey(key) {
      return key in next ? next[key] : prev[key];
    }
    var nextKeysPending = /* @__PURE__ */ Object.create(null);
    var pendingKeys = [];
    for (var prevKey in prev) {
      if (prevKey in next) {
        if (pendingKeys.length) {
          nextKeysPending[prevKey] = pendingKeys;
          pendingKeys = [];
        }
      } else {
        pendingKeys.push(prevKey);
      }
    }
    var i2;
    var childMapping = {};
    for (var nextKey in next) {
      if (nextKeysPending[nextKey]) {
        for (i2 = 0; i2 < nextKeysPending[nextKey].length; i2++) {
          var pendingNextKey = nextKeysPending[nextKey][i2];
          childMapping[nextKeysPending[nextKey][i2]] = getValueForKey(pendingNextKey);
        }
      }
      childMapping[nextKey] = getValueForKey(nextKey);
    }
    for (i2 = 0; i2 < pendingKeys.length; i2++) {
      childMapping[pendingKeys[i2]] = getValueForKey(pendingKeys[i2]);
    }
    return childMapping;
  }
  function getProp(child, prop, props) {
    return props[prop] != null ? props[prop] : child.props[prop];
  }
  function getInitialChildMapping(props, onExited) {
    return getChildMapping(props.children, function(child) {
      return (0, import_react7.cloneElement)(child, {
        onExited: onExited.bind(null, child),
        in: true,
        appear: getProp(child, "appear", props),
        enter: getProp(child, "enter", props),
        exit: getProp(child, "exit", props)
      });
    });
  }
  function getNextChildMapping(nextProps, prevChildMapping, onExited) {
    var nextChildMapping = getChildMapping(nextProps.children);
    var children = mergeChildMappings(prevChildMapping, nextChildMapping);
    Object.keys(children).forEach(function(key) {
      var child = children[key];
      if (!(0, import_react7.isValidElement)(child))
        return;
      var hasPrev = key in prevChildMapping;
      var hasNext = key in nextChildMapping;
      var prevChild = prevChildMapping[key];
      var isLeaving = (0, import_react7.isValidElement)(prevChild) && !prevChild.props.in;
      if (hasNext && (!hasPrev || isLeaving)) {
        children[key] = (0, import_react7.cloneElement)(child, {
          onExited: onExited.bind(null, child),
          in: true,
          exit: getProp(child, "exit", nextProps),
          enter: getProp(child, "enter", nextProps)
        });
      } else if (!hasNext && hasPrev && !isLeaving) {
        children[key] = (0, import_react7.cloneElement)(child, {
          in: false
        });
      } else if (hasNext && hasPrev && (0, import_react7.isValidElement)(prevChild)) {
        children[key] = (0, import_react7.cloneElement)(child, {
          onExited: onExited.bind(null, child),
          in: prevChild.props.in,
          exit: getProp(child, "exit", nextProps),
          enter: getProp(child, "enter", nextProps)
        });
      }
    });
    return children;
  }

  // node_modules/react-transition-group/esm/TransitionGroup.js
  var values = Object.values || function(obj) {
    return Object.keys(obj).map(function(k2) {
      return obj[k2];
    });
  };
  var defaultProps = {
    component: "div",
    childFactory: function childFactory(child) {
      return child;
    }
  };
  var TransitionGroup = /* @__PURE__ */ function(_React$Component) {
    _inheritsLoose(TransitionGroup2, _React$Component);
    function TransitionGroup2(props, context) {
      var _this;
      _this = _React$Component.call(this, props, context) || this;
      var handleExited = _this.handleExited.bind(_assertThisInitialized(_this));
      _this.state = {
        contextValue: {
          isMounting: true
        },
        handleExited,
        firstRender: true
      };
      return _this;
    }
    var _proto = TransitionGroup2.prototype;
    _proto.componentDidMount = function componentDidMount() {
      this.mounted = true;
      this.setState({
        contextValue: {
          isMounting: false
        }
      });
    };
    _proto.componentWillUnmount = function componentWillUnmount() {
      this.mounted = false;
    };
    TransitionGroup2.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {
      var prevChildMapping = _ref.children, handleExited = _ref.handleExited, firstRender = _ref.firstRender;
      return {
        children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),
        firstRender: false
      };
    };
    _proto.handleExited = function handleExited(child, node) {
      var currentChildMapping = getChildMapping(this.props.children);
      if (child.key in currentChildMapping)
        return;
      if (child.props.onExited) {
        child.props.onExited(node);
      }
      if (this.mounted) {
        this.setState(function(state) {
          var children = _extends({}, state.children);
          delete children[child.key];
          return {
            children
          };
        });
      }
    };
    _proto.render = function render() {
      var _this$props = this.props, Component = _this$props.component, childFactory2 = _this$props.childFactory, props = _objectWithoutPropertiesLoose3(_this$props, ["component", "childFactory"]);
      var contextValue = this.state.contextValue;
      var children = values(this.state.children).map(childFactory2);
      delete props.appear;
      delete props.enter;
      delete props.exit;
      if (Component === null) {
        return /* @__PURE__ */ import_react8.default.createElement(TransitionGroupContext_default.Provider, {
          value: contextValue
        }, children);
      }
      return /* @__PURE__ */ import_react8.default.createElement(TransitionGroupContext_default.Provider, {
        value: contextValue
      }, /* @__PURE__ */ import_react8.default.createElement(Component, props, children));
    };
    return TransitionGroup2;
  }(import_react8.default.Component);
  TransitionGroup.propTypes = true ? {
    component: import_prop_types5.default.any,
    children: import_prop_types5.default.node,
    appear: import_prop_types5.default.bool,
    enter: import_prop_types5.default.bool,
    exit: import_prop_types5.default.bool,
    childFactory: import_prop_types5.default.func
  } : {};
  TransitionGroup.defaultProps = defaultProps;
  var TransitionGroup_default = TransitionGroup;

  // node_modules/@mui/material/transitions/utils.js
  var reflow = (node) => node.scrollTop;
  function getTransitionProps(props, options) {
    var _style$transitionDura, _style$transitionTimi;
    const {
      timeout: timeout2,
      easing: easing2,
      style = {}
    } = props;
    return {
      duration: (_style$transitionDura = style.transitionDuration) != null ? _style$transitionDura : typeof timeout2 === "number" ? timeout2 : timeout2[options.mode] || 0,
      easing: (_style$transitionTimi = style.transitionTimingFunction) != null ? _style$transitionTimi : typeof easing2 === "object" ? easing2[options.mode] : easing2,
      delay: style.transitionDelay
    };
  }

  // node_modules/@mui/material/utils/useForkRef.js
  var import_utils7 = __toESM(require_utils());
  var useForkRef_default = import_utils7.unstable_useForkRef;

  // node_modules/@mui/material/Grow/Grow.js
  var import_jsx_runtime5 = __toESM(require_jsx_runtime());
  var _excluded8 = ["addEndListener", "appear", "children", "easing", "in", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "style", "timeout", "TransitionComponent"];
  function getScale(value) {
    return `scale(${value}, ${value ** 2})`;
  }
  var styles = {
    entering: {
      opacity: 1,
      transform: getScale(1)
    },
    entered: {
      opacity: 1,
      transform: "none"
    }
  };
  var Grow = /* @__PURE__ */ React9.forwardRef(function Grow2(props, ref) {
    const {
      addEndListener,
      appear = true,
      children,
      easing: easing2,
      in: inProp,
      onEnter,
      onEntered,
      onEntering,
      onExit,
      onExited,
      onExiting,
      style,
      timeout: timeout2 = "auto",
      TransitionComponent = Transition_default
    } = props, other = _objectWithoutPropertiesLoose2(props, _excluded8);
    const timer = React9.useRef();
    const autoTimeout = React9.useRef();
    const theme = useTheme();
    const nodeRef = React9.useRef(null);
    const foreignRef = useForkRef_default(children.ref, ref);
    const handleRef = useForkRef_default(nodeRef, foreignRef);
    const normalizedTransitionCallback = (callback) => (maybeIsAppearing) => {
      if (callback) {
        const node = nodeRef.current;
        if (maybeIsAppearing === void 0) {
          callback(node);
        } else {
          callback(node, maybeIsAppearing);
        }
      }
    };
    const handleEntering = normalizedTransitionCallback(onEntering);
    const handleEnter = normalizedTransitionCallback((node, isAppearing) => {
      reflow(node);
      const {
        duration: transitionDuration,
        delay,
        easing: transitionTimingFunction
      } = getTransitionProps({
        style,
        timeout: timeout2,
        easing: easing2
      }, {
        mode: "enter"
      });
      let duration2;
      if (timeout2 === "auto") {
        duration2 = theme.transitions.getAutoHeightDuration(node.clientHeight);
        autoTimeout.current = duration2;
      } else {
        duration2 = transitionDuration;
      }
      node.style.transition = [theme.transitions.create("opacity", {
        duration: duration2,
        delay
      }), theme.transitions.create("transform", {
        duration: duration2 * 0.666,
        delay,
        easing: transitionTimingFunction
      })].join(",");
      if (onEnter) {
        onEnter(node, isAppearing);
      }
    });
    const handleEntered = normalizedTransitionCallback(onEntered);
    const handleExiting = normalizedTransitionCallback(onExiting);
    const handleExit = normalizedTransitionCallback((node) => {
      const {
        duration: transitionDuration,
        delay,
        easing: transitionTimingFunction
      } = getTransitionProps({
        style,
        timeout: timeout2,
        easing: easing2
      }, {
        mode: "exit"
      });
      let duration2;
      if (timeout2 === "auto") {
        duration2 = theme.transitions.getAutoHeightDuration(node.clientHeight);
        autoTimeout.current = duration2;
      } else {
        duration2 = transitionDuration;
      }
      node.style.transition = [theme.transitions.create("opacity", {
        duration: duration2,
        delay
      }), theme.transitions.create("transform", {
        duration: duration2 * 0.666,
        delay: delay || duration2 * 0.333,
        easing: transitionTimingFunction
      })].join(",");
      node.style.opacity = "0";
      node.style.transform = getScale(0.75);
      if (onExit) {
        onExit(node);
      }
    });
    const handleExited = normalizedTransitionCallback(onExited);
    const handleAddEndListener = (next) => {
      if (timeout2 === "auto") {
        timer.current = setTimeout(next, autoTimeout.current || 0);
      }
      if (addEndListener) {
        addEndListener(nodeRef.current, next);
      }
    };
    React9.useEffect(() => {
      return () => {
        clearTimeout(timer.current);
      };
    }, []);
    return /* @__PURE__ */ (0, import_jsx_runtime5.jsx)(TransitionComponent, _extends3({
      appear,
      in: inProp,
      nodeRef,
      onEnter: handleEnter,
      onEntered: handleEntered,
      onEntering: handleEntering,
      onExit: handleExit,
      onExited: handleExited,
      onExiting: handleExiting,
      addEndListener: handleAddEndListener,
      timeout: timeout2 === "auto" ? null : timeout2
    }, other, {
      children: (state, childProps) => {
        return /* @__PURE__ */ React9.cloneElement(children, _extends3({
          style: _extends3({
            opacity: 0,
            transform: getScale(0.75),
            visibility: state === "exited" && !inProp ? "hidden" : void 0
          }, styles[state], style, children.props.style),
          ref: handleRef
        }, childProps));
      }
    }));
  });
  true ? Grow.propTypes = {
    addEndListener: import_prop_types6.default.func,
    appear: import_prop_types6.default.bool,
    children: import_utils8.elementAcceptingRef.isRequired,
    easing: import_prop_types6.default.oneOfType([import_prop_types6.default.shape({
      enter: import_prop_types6.default.string,
      exit: import_prop_types6.default.string
    }), import_prop_types6.default.string]),
    in: import_prop_types6.default.bool,
    onEnter: import_prop_types6.default.func,
    onEntered: import_prop_types6.default.func,
    onEntering: import_prop_types6.default.func,
    onExit: import_prop_types6.default.func,
    onExited: import_prop_types6.default.func,
    onExiting: import_prop_types6.default.func,
    style: import_prop_types6.default.object,
    timeout: import_prop_types6.default.oneOfType([import_prop_types6.default.oneOf(["auto"]), import_prop_types6.default.number, import_prop_types6.default.shape({
      appear: import_prop_types6.default.number,
      enter: import_prop_types6.default.number,
      exit: import_prop_types6.default.number
    })])
  } : void 0;
  Grow.muiSupportAuto = true;
  var Grow_default = Grow;

  // node_modules/@mui/material/SnackbarContent/SnackbarContent.js
  var React11 = __toESM(require_react());
  var import_prop_types8 = __toESM(require_prop_types());
  var import_clsx3 = __toESM(require_clsx());
  var import_core7 = __toESM(require_node3());
  var import_system7 = __toESM(require_system());

  // node_modules/@mui/material/Paper/Paper.js
  var React10 = __toESM(require_react());
  var import_prop_types7 = __toESM(require_prop_types());
  var import_clsx2 = __toESM(require_clsx());
  var import_utils10 = __toESM(require_utils());
  var import_core5 = __toESM(require_node3());
  var import_system6 = __toESM(require_system());

  // node_modules/@mui/material/Paper/paperClasses.js
  var import_core4 = __toESM(require_node3());
  function getPaperUtilityClass(slot) {
    return (0, import_core4.generateUtilityClass)("MuiPaper", slot);
  }
  var paperClasses = (0, import_core4.generateUtilityClasses)("MuiPaper", ["root", "rounded", "outlined", "elevation", "elevation0", "elevation1", "elevation2", "elevation3", "elevation4", "elevation5", "elevation6", "elevation7", "elevation8", "elevation9", "elevation10", "elevation11", "elevation12", "elevation13", "elevation14", "elevation15", "elevation16", "elevation17", "elevation18", "elevation19", "elevation20", "elevation21", "elevation22", "elevation23", "elevation24"]);

  // node_modules/@mui/material/Paper/Paper.js
  var import_jsx_runtime6 = __toESM(require_jsx_runtime());
  var _excluded9 = ["className", "component", "elevation", "square", "variant"];
  var getOverlayAlpha = (elevation) => {
    let alphaValue;
    if (elevation < 1) {
      alphaValue = 5.11916 * elevation ** 2;
    } else {
      alphaValue = 4.5 * Math.log(elevation + 1) + 2;
    }
    return (alphaValue / 100).toFixed(2);
  };
  var useUtilityClasses2 = (ownerState) => {
    const {
      square,
      elevation,
      variant,
      classes
    } = ownerState;
    const slots = {
      root: ["root", variant, !square && "rounded", variant === "elevation" && `elevation${elevation}`]
    };
    return (0, import_core5.unstable_composeClasses)(slots, getPaperUtilityClass, classes);
  };
  var PaperRoot = styled_default("div", {
    name: "MuiPaper",
    slot: "Root",
    overridesResolver: (props, styles2) => {
      const {
        ownerState
      } = props;
      return [styles2.root, styles2[ownerState.variant], !ownerState.square && styles2.rounded, ownerState.variant === "elevation" && styles2[`elevation${ownerState.elevation}`]];
    }
  })(({
    theme,
    ownerState
  }) => _extends3({
    backgroundColor: theme.palette.background.paper,
    color: theme.palette.text.primary,
    transition: theme.transitions.create("box-shadow")
  }, !ownerState.square && {
    borderRadius: theme.shape.borderRadius
  }, ownerState.variant === "outlined" && {
    border: `1px solid ${theme.palette.divider}`
  }, ownerState.variant === "elevation" && _extends3({
    boxShadow: theme.shadows[ownerState.elevation]
  }, theme.palette.mode === "dark" && {
    backgroundImage: `linear-gradient(${(0, import_system6.alpha)("#fff", getOverlayAlpha(ownerState.elevation))}, ${(0, import_system6.alpha)("#fff", getOverlayAlpha(ownerState.elevation))})`
  })));
  var Paper = /* @__PURE__ */ React10.forwardRef(function Paper2(inProps, ref) {
    const props = useThemeProps({
      props: inProps,
      name: "MuiPaper"
    });
    const {
      className,
      component = "div",
      elevation = 1,
      square = false,
      variant = "elevation"
    } = props, other = _objectWithoutPropertiesLoose2(props, _excluded9);
    const ownerState = _extends3({}, props, {
      component,
      elevation,
      square,
      variant
    });
    const classes = useUtilityClasses2(ownerState);
    if (true) {
      const theme = useTheme();
      if (theme.shadows[elevation] === void 0) {
        console.error([`MUI: The elevation provided <Paper elevation={${elevation}}> is not available in the theme.`, `Please make sure that \`theme.shadows[${elevation}]\` is defined.`].join("\n"));
      }
    }
    return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(PaperRoot, _extends3({
      as: component,
      ownerState,
      className: (0, import_clsx2.default)(classes.root, className),
      ref
    }, other));
  });
  true ? Paper.propTypes = {
    children: import_prop_types7.default.node,
    classes: import_prop_types7.default.object,
    className: import_prop_types7.default.string,
    component: import_prop_types7.default.elementType,
    elevation: (0, import_utils10.chainPropTypes)(import_utils10.integerPropType, (props) => {
      const {
        elevation,
        variant
      } = props;
      if (elevation > 0 && variant === "outlined") {
        return new Error(`MUI: Combining \`elevation={${elevation}}\` with \`variant="${variant}"\` has no effect. Either use \`elevation={0}\` or use a different \`variant\`.`);
      }
      return null;
    }),
    square: import_prop_types7.default.bool,
    sx: import_prop_types7.default.oneOfType([import_prop_types7.default.arrayOf(import_prop_types7.default.oneOfType([import_prop_types7.default.func, import_prop_types7.default.object])), import_prop_types7.default.func, import_prop_types7.default.object]),
    variant: import_prop_types7.default.oneOfType([import_prop_types7.default.oneOf(["elevation", "outlined"]), import_prop_types7.default.string])
  } : void 0;
  var Paper_default = Paper;

  // node_modules/@mui/material/SnackbarContent/snackbarContentClasses.js
  var import_core6 = __toESM(require_node3());
  function getSnackbarContentUtilityClass(slot) {
    return (0, import_core6.generateUtilityClass)("MuiSnackbarContent", slot);
  }
  var snackbarContentClasses = (0, import_core6.generateUtilityClasses)("MuiSnackbarContent", ["root", "message", "action"]);

  // node_modules/@mui/material/SnackbarContent/SnackbarContent.js
  var import_jsx_runtime7 = __toESM(require_jsx_runtime());
  var import_jsx_runtime8 = __toESM(require_jsx_runtime());
  var _excluded10 = ["action", "className", "message", "role"];
  var useUtilityClasses3 = (ownerState) => {
    const {
      classes
    } = ownerState;
    const slots = {
      root: ["root"],
      action: ["action"],
      message: ["message"]
    };
    return (0, import_core7.unstable_composeClasses)(slots, getSnackbarContentUtilityClass, classes);
  };
  var SnackbarContentRoot = styled_default(Paper_default, {
    name: "MuiSnackbarContent",
    slot: "Root",
    overridesResolver: (props, styles2) => styles2.root
  })(({
    theme
  }) => {
    const emphasis = theme.palette.mode === "light" ? 0.8 : 0.98;
    const backgroundColor = (0, import_system7.emphasize)(theme.palette.background.default, emphasis);
    return _extends3({}, theme.typography.body2, {
      color: theme.palette.getContrastText(backgroundColor),
      backgroundColor,
      display: "flex",
      alignItems: "center",
      flexWrap: "wrap",
      padding: "6px 16px",
      borderRadius: theme.shape.borderRadius,
      flexGrow: 1,
      [theme.breakpoints.up("sm")]: {
        flexGrow: "initial",
        minWidth: 288
      }
    });
  });
  var SnackbarContentMessage = styled_default("div", {
    name: "MuiSnackbarContent",
    slot: "Message",
    overridesResolver: (props, styles2) => styles2.message
  })({
    padding: "8px 0"
  });
  var SnackbarContentAction = styled_default("div", {
    name: "MuiSnackbarContent",
    slot: "Action",
    overridesResolver: (props, styles2) => styles2.action
  })({
    display: "flex",
    alignItems: "center",
    marginLeft: "auto",
    paddingLeft: 16,
    marginRight: -8
  });
  var SnackbarContent = /* @__PURE__ */ React11.forwardRef(function SnackbarContent2(inProps, ref) {
    const props = useThemeProps({
      props: inProps,
      name: "MuiSnackbarContent"
    });
    const {
      action,
      className,
      message,
      role = "alert"
    } = props, other = _objectWithoutPropertiesLoose2(props, _excluded10);
    const ownerState = props;
    const classes = useUtilityClasses3(ownerState);
    return /* @__PURE__ */ (0, import_jsx_runtime8.jsxs)(SnackbarContentRoot, _extends3({
      role,
      square: true,
      elevation: 6,
      className: (0, import_clsx3.default)(classes.root, className),
      ownerState,
      ref
    }, other, {
      children: [/* @__PURE__ */ (0, import_jsx_runtime7.jsx)(SnackbarContentMessage, {
        className: classes.message,
        ownerState,
        children: message
      }), action ? /* @__PURE__ */ (0, import_jsx_runtime7.jsx)(SnackbarContentAction, {
        className: classes.action,
        ownerState,
        children: action
      }) : null]
    }));
  });
  true ? SnackbarContent.propTypes = {
    action: import_prop_types8.default.node,
    classes: import_prop_types8.default.object,
    className: import_prop_types8.default.string,
    message: import_prop_types8.default.node,
    role: import_prop_types8.default.string,
    sx: import_prop_types8.default.oneOfType([import_prop_types8.default.arrayOf(import_prop_types8.default.oneOfType([import_prop_types8.default.func, import_prop_types8.default.object])), import_prop_types8.default.func, import_prop_types8.default.object])
  } : void 0;
  var SnackbarContent_default = SnackbarContent;

  // node_modules/@mui/material/Snackbar/snackbarClasses.js
  var import_core8 = __toESM(require_node3());
  function getSnackbarUtilityClass(slot) {
    return (0, import_core8.generateUtilityClass)("MuiSnackbar", slot);
  }
  var snackbarClasses = (0, import_core8.generateUtilityClasses)("MuiSnackbar", ["root", "anchorOriginTopCenter", "anchorOriginBottomCenter", "anchorOriginTopRight", "anchorOriginBottomRight", "anchorOriginTopLeft", "anchorOriginBottomLeft"]);

  // node_modules/@mui/material/Snackbar/Snackbar.js
  var import_jsx_runtime9 = __toESM(require_jsx_runtime());
  var _excluded11 = ["onEnter", "onExited"];
  var _excluded22 = ["action", "anchorOrigin", "autoHideDuration", "children", "className", "ClickAwayListenerProps", "ContentProps", "disableWindowBlurListener", "message", "onClose", "onMouseEnter", "onMouseLeave", "open", "resumeHideDuration", "TransitionComponent", "transitionDuration", "TransitionProps"];
  var useUtilityClasses4 = (ownerState) => {
    const {
      classes,
      anchorOrigin
    } = ownerState;
    const slots = {
      root: ["root", `anchorOrigin${capitalize_default(anchorOrigin.vertical)}${capitalize_default(anchorOrigin.horizontal)}`]
    };
    return (0, import_core9.unstable_composeClasses)(slots, getSnackbarUtilityClass, classes);
  };
  var SnackbarRoot = styled_default("div", {
    name: "MuiSnackbar",
    slot: "Root",
    overridesResolver: (props, styles2) => {
      const {
        ownerState
      } = props;
      return [styles2.root, styles2[`anchorOrigin${capitalize_default(ownerState.anchorOrigin.vertical)}${capitalize_default(ownerState.anchorOrigin.horizontal)}`]];
    }
  })(({
    theme,
    ownerState
  }) => {
    const center = _extends3({}, !ownerState.isRtl && {
      left: "50%",
      right: "auto",
      transform: "translateX(-50%)"
    }, ownerState.isRtl && {
      right: "50%",
      left: "auto",
      transform: "translateX(50%)"
    });
    return _extends3({
      zIndex: theme.zIndex.snackbar,
      position: "fixed",
      display: "flex",
      left: 8,
      right: 8,
      justifyContent: "center",
      alignItems: "center"
    }, ownerState.anchorOrigin.vertical === "top" ? {
      top: 8
    } : {
      bottom: 8
    }, ownerState.anchorOrigin.horizontal === "left" && {
      justifyContent: "flex-start"
    }, ownerState.anchorOrigin.horizontal === "right" && {
      justifyContent: "flex-end"
    }, {
      [theme.breakpoints.up("sm")]: _extends3({}, ownerState.anchorOrigin.vertical === "top" ? {
        top: 24
      } : {
        bottom: 24
      }, ownerState.anchorOrigin.horizontal === "center" && center, ownerState.anchorOrigin.horizontal === "left" && _extends3({}, !ownerState.isRtl && {
        left: 24,
        right: "auto"
      }, ownerState.isRtl && {
        right: 24,
        left: "auto"
      }), ownerState.anchorOrigin.horizontal === "right" && _extends3({}, !ownerState.isRtl && {
        right: 24,
        left: "auto"
      }, ownerState.isRtl && {
        left: 24,
        right: "auto"
      }))
    });
  });
  var Snackbar = /* @__PURE__ */ React12.forwardRef(function Snackbar2(inProps, ref) {
    const props = useThemeProps({
      props: inProps,
      name: "MuiSnackbar"
    });
    const {
      action,
      anchorOrigin: {
        vertical,
        horizontal
      } = {
        vertical: "bottom",
        horizontal: "left"
      },
      autoHideDuration = null,
      children,
      className,
      ClickAwayListenerProps,
      ContentProps,
      disableWindowBlurListener = false,
      message,
      onClose,
      onMouseEnter,
      onMouseLeave,
      open,
      resumeHideDuration,
      TransitionComponent = Grow_default,
      transitionDuration = {
        enter: duration.enteringScreen,
        exit: duration.leavingScreen
      },
      TransitionProps: {
        onEnter,
        onExited
      } = {}
    } = props, TransitionProps = _objectWithoutPropertiesLoose2(props.TransitionProps, _excluded11), other = _objectWithoutPropertiesLoose2(props, _excluded22);
    const theme = useTheme();
    const isRtl = theme.direction === "rtl";
    const ownerState = _extends3({}, props, {
      anchorOrigin: {
        vertical,
        horizontal
      },
      isRtl
    });
    const classes = useUtilityClasses4(ownerState);
    const timerAutoHide = React12.useRef();
    const [exited, setExited] = React12.useState(true);
    const handleClose = useEventCallback_default((...args) => {
      if (onClose) {
        onClose(...args);
      }
    });
    const setAutoHideTimer = useEventCallback_default((autoHideDurationParam) => {
      if (!onClose || autoHideDurationParam == null) {
        return;
      }
      clearTimeout(timerAutoHide.current);
      timerAutoHide.current = setTimeout(() => {
        handleClose(null, "timeout");
      }, autoHideDurationParam);
    });
    React12.useEffect(() => {
      if (open) {
        setAutoHideTimer(autoHideDuration);
      }
      return () => {
        clearTimeout(timerAutoHide.current);
      };
    }, [open, autoHideDuration, setAutoHideTimer]);
    const handlePause = () => {
      clearTimeout(timerAutoHide.current);
    };
    const handleResume = React12.useCallback(() => {
      if (autoHideDuration != null) {
        setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);
      }
    }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);
    const handleMouseEnter = (event) => {
      if (onMouseEnter) {
        onMouseEnter(event);
      }
      handlePause();
    };
    const handleMouseLeave = (event) => {
      if (onMouseLeave) {
        onMouseLeave(event);
      }
      handleResume();
    };
    const handleClickAway = (event) => {
      if (onClose) {
        onClose(event, "clickaway");
      }
    };
    const handleExited = (node) => {
      setExited(true);
      if (onExited) {
        onExited(node);
      }
    };
    const handleEnter = (node, isAppearing) => {
      setExited(false);
      if (onEnter) {
        onEnter(node, isAppearing);
      }
    };
    React12.useEffect(() => {
      if (!disableWindowBlurListener && open) {
        window.addEventListener("focus", handleResume);
        window.addEventListener("blur", handlePause);
        return () => {
          window.removeEventListener("focus", handleResume);
          window.removeEventListener("blur", handlePause);
        };
      }
      return void 0;
    }, [disableWindowBlurListener, handleResume, open]);
    if (!open && exited) {
      return null;
    }
    return /* @__PURE__ */ (0, import_jsx_runtime9.jsx)(ClickAwayListener_default, _extends3({
      onClickAway: handleClickAway
    }, ClickAwayListenerProps, {
      children: /* @__PURE__ */ (0, import_jsx_runtime9.jsx)(SnackbarRoot, _extends3({
        className: (0, import_clsx4.default)(classes.root, className),
        onMouseEnter: handleMouseEnter,
        onMouseLeave: handleMouseLeave,
        ownerState,
        ref
      }, other, {
        children: /* @__PURE__ */ (0, import_jsx_runtime9.jsx)(TransitionComponent, _extends3({
          appear: true,
          in: open,
          timeout: transitionDuration,
          direction: vertical === "top" ? "down" : "up",
          onEnter: handleEnter,
          onExited: handleExited
        }, TransitionProps, {
          children: children || /* @__PURE__ */ (0, import_jsx_runtime9.jsx)(SnackbarContent_default, _extends3({
            message,
            action
          }, ContentProps))
        }))
      }))
    }));
  });
  true ? Snackbar.propTypes = {
    action: import_prop_types9.default.node,
    anchorOrigin: import_prop_types9.default.shape({
      horizontal: import_prop_types9.default.oneOf(["center", "left", "right"]).isRequired,
      vertical: import_prop_types9.default.oneOf(["bottom", "top"]).isRequired
    }),
    autoHideDuration: import_prop_types9.default.number,
    children: import_prop_types9.default.element,
    classes: import_prop_types9.default.object,
    className: import_prop_types9.default.string,
    ClickAwayListenerProps: import_prop_types9.default.object,
    ContentProps: import_prop_types9.default.object,
    disableWindowBlurListener: import_prop_types9.default.bool,
    key: () => null,
    message: import_prop_types9.default.node,
    onClose: import_prop_types9.default.func,
    onMouseEnter: import_prop_types9.default.func,
    onMouseLeave: import_prop_types9.default.func,
    open: import_prop_types9.default.bool,
    resumeHideDuration: import_prop_types9.default.number,
    sx: import_prop_types9.default.oneOfType([import_prop_types9.default.arrayOf(import_prop_types9.default.oneOfType([import_prop_types9.default.func, import_prop_types9.default.object])), import_prop_types9.default.func, import_prop_types9.default.object]),
    TransitionComponent: import_prop_types9.default.elementType,
    transitionDuration: import_prop_types9.default.oneOfType([import_prop_types9.default.number, import_prop_types9.default.shape({
      appear: import_prop_types9.default.number,
      enter: import_prop_types9.default.number,
      exit: import_prop_types9.default.number
    })]),
    TransitionProps: import_prop_types9.default.object
  } : void 0;
  var Snackbar_default = Snackbar;

  // node_modules/@mui/material/Alert/Alert.js
  var React22 = __toESM(require_react());
  var import_prop_types14 = __toESM(require_prop_types());
  var import_clsx9 = __toESM(require_clsx());
  var import_core15 = __toESM(require_node3());
  var import_system10 = __toESM(require_system());

  // node_modules/@mui/material/Alert/alertClasses.js
  var import_core10 = __toESM(require_node3());
  function getAlertUtilityClass(slot) {
    return (0, import_core10.generateUtilityClass)("MuiAlert", slot);
  }
  var alertClasses = (0, import_core10.generateUtilityClasses)("MuiAlert", ["root", "action", "icon", "message", "filled", "filledSuccess", "filledInfo", "filledWarning", "filledError", "outlined", "outlinedSuccess", "outlinedInfo", "outlinedWarning", "outlinedError", "standard", "standardSuccess", "standardInfo", "standardWarning", "standardError"]);
  var alertClasses_default = alertClasses;

  // node_modules/@mui/material/IconButton/IconButton.js
  var React16 = __toESM(require_react());
  var import_prop_types13 = __toESM(require_prop_types());
  var import_clsx8 = __toESM(require_clsx());
  var import_utils13 = __toESM(require_utils());
  var import_core14 = __toESM(require_node3());
  var import_system9 = __toESM(require_system());

  // node_modules/@mui/material/ButtonBase/ButtonBase.js
  var React15 = __toESM(require_react());
  var import_prop_types12 = __toESM(require_prop_types());
  var import_clsx7 = __toESM(require_clsx());
  var import_utils12 = __toESM(require_utils());
  var import_composeClasses = __toESM(require_composeClasses2());

  // node_modules/@mui/material/utils/useIsFocusVisible.js
  var import_utils11 = __toESM(require_utils());
  var useIsFocusVisible_default = import_utils11.unstable_useIsFocusVisible;

  // node_modules/@mui/material/ButtonBase/TouchRipple.js
  var React14 = __toESM(require_react());
  var import_prop_types11 = __toESM(require_prop_types());
  var import_clsx6 = __toESM(require_clsx());
  var import_system8 = __toESM(require_system());

  // node_modules/@mui/material/ButtonBase/Ripple.js
  var React13 = __toESM(require_react());
  var import_prop_types10 = __toESM(require_prop_types());
  var import_clsx5 = __toESM(require_clsx());
  var import_jsx_runtime10 = __toESM(require_jsx_runtime());
  function Ripple(props) {
    const {
      className,
      classes,
      pulsate = false,
      rippleX,
      rippleY,
      rippleSize,
      in: inProp,
      onExited,
      timeout: timeout2
    } = props;
    const [leaving, setLeaving] = React13.useState(false);
    const rippleClassName = (0, import_clsx5.default)(className, classes.ripple, classes.rippleVisible, pulsate && classes.ripplePulsate);
    const rippleStyles = {
      width: rippleSize,
      height: rippleSize,
      top: -(rippleSize / 2) + rippleY,
      left: -(rippleSize / 2) + rippleX
    };
    const childClassName = (0, import_clsx5.default)(classes.child, leaving && classes.childLeaving, pulsate && classes.childPulsate);
    if (!inProp && !leaving) {
      setLeaving(true);
    }
    React13.useEffect(() => {
      if (!inProp && onExited != null) {
        const timeoutId = setTimeout(onExited, timeout2);
        return () => {
          clearTimeout(timeoutId);
        };
      }
      return void 0;
    }, [onExited, inProp, timeout2]);
    return /* @__PURE__ */ (0, import_jsx_runtime10.jsx)("span", {
      className: rippleClassName,
      style: rippleStyles,
      children: /* @__PURE__ */ (0, import_jsx_runtime10.jsx)("span", {
        className: childClassName
      })
    });
  }
  true ? Ripple.propTypes = {
    classes: import_prop_types10.default.object.isRequired,
    className: import_prop_types10.default.string,
    in: import_prop_types10.default.bool,
    onExited: import_prop_types10.default.func,
    pulsate: import_prop_types10.default.bool,
    rippleSize: import_prop_types10.default.number,
    rippleX: import_prop_types10.default.number,
    rippleY: import_prop_types10.default.number,
    timeout: import_prop_types10.default.number.isRequired
  } : void 0;
  var Ripple_default = Ripple;

  // node_modules/@mui/material/ButtonBase/touchRippleClasses.js
  var import_core11 = __toESM(require_node3());
  var touchRippleClasses = (0, import_core11.generateUtilityClasses)("MuiTouchRipple", ["root", "ripple", "rippleVisible", "ripplePulsate", "child", "childLeaving", "childPulsate"]);
  var touchRippleClasses_default = touchRippleClasses;

  // node_modules/@mui/material/ButtonBase/TouchRipple.js
  var import_jsx_runtime11 = __toESM(require_jsx_runtime());
  var _excluded12 = ["center", "classes", "className"];
  var _2 = (t2) => t2;
  var _t;
  var _t2;
  var _t3;
  var _t4;
  var DURATION = 550;
  var DELAY_RIPPLE = 80;
  var enterKeyframe = (0, import_system8.keyframes)(_t || (_t = _2`
  0% {
    transform: scale(0);
    opacity: 0.1;
  }

  100% {
    transform: scale(1);
    opacity: 0.3;
  }
`));
  var exitKeyframe = (0, import_system8.keyframes)(_t2 || (_t2 = _2`
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
`));
  var pulsateKeyframe = (0, import_system8.keyframes)(_t3 || (_t3 = _2`
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(0.92);
  }

  100% {
    transform: scale(1);
  }
`));
  var TouchRippleRoot = styled_default("span", {
    name: "MuiTouchRipple",
    slot: "Root",
    skipSx: true
  })({
    overflow: "hidden",
    pointerEvents: "none",
    position: "absolute",
    zIndex: 0,
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    borderRadius: "inherit"
  });
  var TouchRippleRipple = styled_default(Ripple_default, {
    name: "MuiTouchRipple",
    slot: "Ripple"
  })(_t4 || (_t4 = _2`
  opacity: 0;
  position: absolute;

  &.${0} {
    opacity: 0.3;
    transform: scale(1);
    animation-name: ${0};
    animation-duration: ${0}ms;
    animation-timing-function: ${0};
  }

  &.${0} {
    animation-duration: ${0}ms;
  }

  & .${0} {
    opacity: 1;
    display: block;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background-color: currentColor;
  }

  & .${0} {
    opacity: 0;
    animation-name: ${0};
    animation-duration: ${0}ms;
    animation-timing-function: ${0};
  }

  & .${0} {
    position: absolute;
    /* @noflip */
    left: 0px;
    top: 0;
    animation-name: ${0};
    animation-duration: 2500ms;
    animation-timing-function: ${0};
    animation-iteration-count: infinite;
    animation-delay: 200ms;
  }
`), touchRippleClasses_default.rippleVisible, enterKeyframe, DURATION, ({
    theme
  }) => theme.transitions.easing.easeInOut, touchRippleClasses_default.ripplePulsate, ({
    theme
  }) => theme.transitions.duration.shorter, touchRippleClasses_default.child, touchRippleClasses_default.childLeaving, exitKeyframe, DURATION, ({
    theme
  }) => theme.transitions.easing.easeInOut, touchRippleClasses_default.childPulsate, pulsateKeyframe, ({
    theme
  }) => theme.transitions.easing.easeInOut);
  var TouchRipple = /* @__PURE__ */ React14.forwardRef(function TouchRipple2(inProps, ref) {
    const props = useThemeProps({
      props: inProps,
      name: "MuiTouchRipple"
    });
    const {
      center: centerProp = false,
      classes = {},
      className
    } = props, other = _objectWithoutPropertiesLoose2(props, _excluded12);
    const [ripples, setRipples] = React14.useState([]);
    const nextKey = React14.useRef(0);
    const rippleCallback = React14.useRef(null);
    React14.useEffect(() => {
      if (rippleCallback.current) {
        rippleCallback.current();
        rippleCallback.current = null;
      }
    }, [ripples]);
    const ignoringMouseDown = React14.useRef(false);
    const startTimer = React14.useRef(null);
    const startTimerCommit = React14.useRef(null);
    const container = React14.useRef(null);
    React14.useEffect(() => {
      return () => {
        clearTimeout(startTimer.current);
      };
    }, []);
    const startCommit = React14.useCallback((params) => {
      const {
        pulsate: pulsate2,
        rippleX,
        rippleY,
        rippleSize,
        cb
      } = params;
      setRipples((oldRipples) => [...oldRipples, /* @__PURE__ */ (0, import_jsx_runtime11.jsx)(TouchRippleRipple, {
        classes: {
          ripple: (0, import_clsx6.default)(classes.ripple, touchRippleClasses_default.ripple),
          rippleVisible: (0, import_clsx6.default)(classes.rippleVisible, touchRippleClasses_default.rippleVisible),
          ripplePulsate: (0, import_clsx6.default)(classes.ripplePulsate, touchRippleClasses_default.ripplePulsate),
          child: (0, import_clsx6.default)(classes.child, touchRippleClasses_default.child),
          childLeaving: (0, import_clsx6.default)(classes.childLeaving, touchRippleClasses_default.childLeaving),
          childPulsate: (0, import_clsx6.default)(classes.childPulsate, touchRippleClasses_default.childPulsate)
        },
        timeout: DURATION,
        pulsate: pulsate2,
        rippleX,
        rippleY,
        rippleSize
      }, nextKey.current)]);
      nextKey.current += 1;
      rippleCallback.current = cb;
    }, [classes]);
    const start = React14.useCallback((event = {}, options = {}, cb) => {
      const {
        pulsate: pulsate2 = false,
        center = centerProp || options.pulsate,
        fakeElement = false
      } = options;
      if (event.type === "mousedown" && ignoringMouseDown.current) {
        ignoringMouseDown.current = false;
        return;
      }
      if (event.type === "touchstart") {
        ignoringMouseDown.current = true;
      }
      const element = fakeElement ? null : container.current;
      const rect = element ? element.getBoundingClientRect() : {
        width: 0,
        height: 0,
        left: 0,
        top: 0
      };
      let rippleX;
      let rippleY;
      let rippleSize;
      if (center || event.clientX === 0 && event.clientY === 0 || !event.clientX && !event.touches) {
        rippleX = Math.round(rect.width / 2);
        rippleY = Math.round(rect.height / 2);
      } else {
        const {
          clientX,
          clientY
        } = event.touches ? event.touches[0] : event;
        rippleX = Math.round(clientX - rect.left);
        rippleY = Math.round(clientY - rect.top);
      }
      if (center) {
        rippleSize = Math.sqrt((2 * rect.width ** 2 + rect.height ** 2) / 3);
        if (rippleSize % 2 === 0) {
          rippleSize += 1;
        }
      } else {
        const sizeX = Math.max(Math.abs((element ? element.clientWidth : 0) - rippleX), rippleX) * 2 + 2;
        const sizeY = Math.max(Math.abs((element ? element.clientHeight : 0) - rippleY), rippleY) * 2 + 2;
        rippleSize = Math.sqrt(sizeX ** 2 + sizeY ** 2);
      }
      if (event.touches) {
        if (startTimerCommit.current === null) {
          startTimerCommit.current = () => {
            startCommit({
              pulsate: pulsate2,
              rippleX,
              rippleY,
              rippleSize,
              cb
            });
          };
          startTimer.current = setTimeout(() => {
            if (startTimerCommit.current) {
              startTimerCommit.current();
              startTimerCommit.current = null;
            }
          }, DELAY_RIPPLE);
        }
      } else {
        startCommit({
          pulsate: pulsate2,
          rippleX,
          rippleY,
          rippleSize,
          cb
        });
      }
    }, [centerProp, startCommit]);
    const pulsate = React14.useCallback(() => {
      start({}, {
        pulsate: true
      });
    }, [start]);
    const stop = React14.useCallback((event, cb) => {
      clearTimeout(startTimer.current);
      if (event.type === "touchend" && startTimerCommit.current) {
        startTimerCommit.current();
        startTimerCommit.current = null;
        startTimer.current = setTimeout(() => {
          stop(event, cb);
        });
        return;
      }
      startTimerCommit.current = null;
      setRipples((oldRipples) => {
        if (oldRipples.length > 0) {
          return oldRipples.slice(1);
        }
        return oldRipples;
      });
      rippleCallback.current = cb;
    }, []);
    React14.useImperativeHandle(ref, () => ({
      pulsate,
      start,
      stop
    }), [pulsate, start, stop]);
    return /* @__PURE__ */ (0, import_jsx_runtime11.jsx)(TouchRippleRoot, _extends3({
      className: (0, import_clsx6.default)(classes.root, touchRippleClasses_default.root, className),
      ref: container
    }, other, {
      children: /* @__PURE__ */ (0, import_jsx_runtime11.jsx)(TransitionGroup_default, {
        component: null,
        exit: true,
        children: ripples
      })
    }));
  });
  true ? TouchRipple.propTypes = {
    center: import_prop_types11.default.bool,
    classes: import_prop_types11.default.object,
    className: import_prop_types11.default.string
  } : void 0;
  var TouchRipple_default = TouchRipple;

  // node_modules/@mui/material/ButtonBase/buttonBaseClasses.js
  var import_core12 = __toESM(require_node3());
  function getButtonBaseUtilityClass(slot) {
    return (0, import_core12.generateUtilityClass)("MuiButtonBase", slot);
  }
  var buttonBaseClasses = (0, import_core12.generateUtilityClasses)("MuiButtonBase", ["root", "disabled", "focusVisible"]);
  var buttonBaseClasses_default = buttonBaseClasses;

  // node_modules/@mui/material/ButtonBase/ButtonBase.js
  var import_jsx_runtime12 = __toESM(require_jsx_runtime());
  var import_jsx_runtime13 = __toESM(require_jsx_runtime());
  var _excluded13 = ["action", "centerRipple", "children", "className", "component", "disabled", "disableRipple", "disableTouchRipple", "focusRipple", "focusVisibleClassName", "LinkComponent", "onBlur", "onClick", "onContextMenu", "onDragLeave", "onFocus", "onFocusVisible", "onKeyDown", "onKeyUp", "onMouseDown", "onMouseLeave", "onMouseUp", "onTouchEnd", "onTouchMove", "onTouchStart", "tabIndex", "TouchRippleProps", "type"];
  var useUtilityClasses5 = (ownerState) => {
    const {
      disabled,
      focusVisible,
      focusVisibleClassName,
      classes
    } = ownerState;
    const slots = {
      root: ["root", disabled && "disabled", focusVisible && "focusVisible"]
    };
    const composedClasses = (0, import_composeClasses.default)(slots, getButtonBaseUtilityClass, classes);
    if (focusVisible && focusVisibleClassName) {
      composedClasses.root += ` ${focusVisibleClassName}`;
    }
    return composedClasses;
  };
  var ButtonBaseRoot = styled_default("button", {
    name: "MuiButtonBase",
    slot: "Root",
    overridesResolver: (props, styles2) => styles2.root
  })({
    display: "inline-flex",
    alignItems: "center",
    justifyContent: "center",
    position: "relative",
    boxSizing: "border-box",
    WebkitTapHighlightColor: "transparent",
    backgroundColor: "transparent",
    outline: 0,
    border: 0,
    margin: 0,
    borderRadius: 0,
    padding: 0,
    cursor: "pointer",
    userSelect: "none",
    verticalAlign: "middle",
    MozAppearance: "none",
    WebkitAppearance: "none",
    textDecoration: "none",
    color: "inherit",
    "&::-moz-focus-inner": {
      borderStyle: "none"
    },
    [`&.${buttonBaseClasses_default.disabled}`]: {
      pointerEvents: "none",
      cursor: "default"
    },
    "@media print": {
      colorAdjust: "exact"
    }
  });
  var ButtonBase = /* @__PURE__ */ React15.forwardRef(function ButtonBase2(inProps, ref) {
    const props = useThemeProps({
      props: inProps,
      name: "MuiButtonBase"
    });
    const {
      action,
      centerRipple = false,
      children,
      className,
      component = "button",
      disabled = false,
      disableRipple = false,
      disableTouchRipple = false,
      focusRipple = false,
      LinkComponent = "a",
      onBlur,
      onClick,
      onContextMenu,
      onDragLeave,
      onFocus,
      onFocusVisible,
      onKeyDown,
      onKeyUp,
      onMouseDown,
      onMouseLeave,
      onMouseUp,
      onTouchEnd,
      onTouchMove,
      onTouchStart,
      tabIndex = 0,
      TouchRippleProps,
      type
    } = props, other = _objectWithoutPropertiesLoose2(props, _excluded13);
    const buttonRef = React15.useRef(null);
    const rippleRef = React15.useRef(null);
    const {
      isFocusVisibleRef,
      onFocus: handleFocusVisible,
      onBlur: handleBlurVisible,
      ref: focusVisibleRef
    } = useIsFocusVisible_default();
    const [focusVisible, setFocusVisible] = React15.useState(false);
    if (disabled && focusVisible) {
      setFocusVisible(false);
    }
    React15.useImperativeHandle(action, () => ({
      focusVisible: () => {
        setFocusVisible(true);
        buttonRef.current.focus();
      }
    }), []);
    React15.useEffect(() => {
      if (focusVisible && focusRipple && !disableRipple) {
        rippleRef.current.pulsate();
      }
    }, [disableRipple, focusRipple, focusVisible]);
    function useRippleHandler(rippleAction, eventCallback, skipRippleAction = disableTouchRipple) {
      return useEventCallback_default((event) => {
        if (eventCallback) {
          eventCallback(event);
        }
        const ignore = skipRippleAction;
        if (!ignore && rippleRef.current) {
          rippleRef.current[rippleAction](event);
        }
        return true;
      });
    }
    const handleMouseDown = useRippleHandler("start", onMouseDown);
    const handleContextMenu = useRippleHandler("stop", onContextMenu);
    const handleDragLeave = useRippleHandler("stop", onDragLeave);
    const handleMouseUp = useRippleHandler("stop", onMouseUp);
    const handleMouseLeave = useRippleHandler("stop", (event) => {
      if (focusVisible) {
        event.preventDefault();
      }
      if (onMouseLeave) {
        onMouseLeave(event);
      }
    });
    const handleTouchStart = useRippleHandler("start", onTouchStart);
    const handleTouchEnd = useRippleHandler("stop", onTouchEnd);
    const handleTouchMove = useRippleHandler("stop", onTouchMove);
    const handleBlur = useRippleHandler("stop", (event) => {
      handleBlurVisible(event);
      if (isFocusVisibleRef.current === false) {
        setFocusVisible(false);
      }
      if (onBlur) {
        onBlur(event);
      }
    }, false);
    const handleFocus = useEventCallback_default((event) => {
      if (!buttonRef.current) {
        buttonRef.current = event.currentTarget;
      }
      handleFocusVisible(event);
      if (isFocusVisibleRef.current === true) {
        setFocusVisible(true);
        if (onFocusVisible) {
          onFocusVisible(event);
        }
      }
      if (onFocus) {
        onFocus(event);
      }
    });
    const isNonNativeButton = () => {
      const button = buttonRef.current;
      return component && component !== "button" && !(button.tagName === "A" && button.href);
    };
    const keydownRef = React15.useRef(false);
    const handleKeyDown = useEventCallback_default((event) => {
      if (focusRipple && !keydownRef.current && focusVisible && rippleRef.current && event.key === " ") {
        keydownRef.current = true;
        rippleRef.current.stop(event, () => {
          rippleRef.current.start(event);
        });
      }
      if (event.target === event.currentTarget && isNonNativeButton() && event.key === " ") {
        event.preventDefault();
      }
      if (onKeyDown) {
        onKeyDown(event);
      }
      if (event.target === event.currentTarget && isNonNativeButton() && event.key === "Enter" && !disabled) {
        event.preventDefault();
        if (onClick) {
          onClick(event);
        }
      }
    });
    const handleKeyUp = useEventCallback_default((event) => {
      if (focusRipple && event.key === " " && rippleRef.current && focusVisible && !event.defaultPrevented) {
        keydownRef.current = false;
        rippleRef.current.stop(event, () => {
          rippleRef.current.pulsate(event);
        });
      }
      if (onKeyUp) {
        onKeyUp(event);
      }
      if (onClick && event.target === event.currentTarget && isNonNativeButton() && event.key === " " && !event.defaultPrevented) {
        onClick(event);
      }
    });
    let ComponentProp = component;
    if (ComponentProp === "button" && (other.href || other.to)) {
      ComponentProp = LinkComponent;
    }
    const buttonProps = {};
    if (ComponentProp === "button") {
      buttonProps.type = type === void 0 ? "button" : type;
      buttonProps.disabled = disabled;
    } else {
      if (!other.href && !other.to) {
        buttonProps.role = "button";
      }
      if (disabled) {
        buttonProps["aria-disabled"] = disabled;
      }
    }
    const handleOwnRef = useForkRef_default(focusVisibleRef, buttonRef);
    const handleRef = useForkRef_default(ref, handleOwnRef);
    const [mountedState, setMountedState] = React15.useState(false);
    React15.useEffect(() => {
      setMountedState(true);
    }, []);
    const enableTouchRipple = mountedState && !disableRipple && !disabled;
    if (true) {
      React15.useEffect(() => {
        if (enableTouchRipple && !rippleRef.current) {
          console.error(["MUI: The `component` prop provided to ButtonBase is invalid.", "Please make sure the children prop is rendered in this custom component."].join("\n"));
        }
      }, [enableTouchRipple]);
    }
    const ownerState = _extends3({}, props, {
      centerRipple,
      component,
      disabled,
      disableRipple,
      disableTouchRipple,
      focusRipple,
      tabIndex,
      focusVisible
    });
    const classes = useUtilityClasses5(ownerState);
    return /* @__PURE__ */ (0, import_jsx_runtime13.jsxs)(ButtonBaseRoot, _extends3({
      as: ComponentProp,
      className: (0, import_clsx7.default)(classes.root, className),
      ownerState,
      onBlur: handleBlur,
      onClick,
      onContextMenu: handleContextMenu,
      onFocus: handleFocus,
      onKeyDown: handleKeyDown,
      onKeyUp: handleKeyUp,
      onMouseDown: handleMouseDown,
      onMouseLeave: handleMouseLeave,
      onMouseUp: handleMouseUp,
      onDragLeave: handleDragLeave,
      onTouchEnd: handleTouchEnd,
      onTouchMove: handleTouchMove,
      onTouchStart: handleTouchStart,
      ref: handleRef,
      tabIndex: disabled ? -1 : tabIndex,
      type
    }, buttonProps, other, {
      children: [children, enableTouchRipple ? /* @__PURE__ */ (0, import_jsx_runtime12.jsx)(TouchRipple_default, _extends3({
        ref: rippleRef,
        center: centerRipple
      }, TouchRippleProps)) : null]
    }));
  });
  true ? ButtonBase.propTypes = {
    action: import_utils12.refType,
    centerRipple: import_prop_types12.default.bool,
    children: import_prop_types12.default.node,
    classes: import_prop_types12.default.object,
    className: import_prop_types12.default.string,
    component: import_utils12.elementTypeAcceptingRef,
    disabled: import_prop_types12.default.bool,
    disableRipple: import_prop_types12.default.bool,
    disableTouchRipple: import_prop_types12.default.bool,
    focusRipple: import_prop_types12.default.bool,
    focusVisibleClassName: import_prop_types12.default.string,
    href: import_prop_types12.default.any,
    LinkComponent: import_prop_types12.default.elementType,
    onBlur: import_prop_types12.default.func,
    onClick: import_prop_types12.default.func,
    onContextMenu: import_prop_types12.default.func,
    onDragLeave: import_prop_types12.default.func,
    onFocus: import_prop_types12.default.func,
    onFocusVisible: import_prop_types12.default.func,
    onKeyDown: import_prop_types12.default.func,
    onKeyUp: import_prop_types12.default.func,
    onMouseDown: import_prop_types12.default.func,
    onMouseLeave: import_prop_types12.default.func,
    onMouseUp: import_prop_types12.default.func,
    onTouchEnd: import_prop_types12.default.func,
    onTouchMove: import_prop_types12.default.func,
    onTouchStart: import_prop_types12.default.func,
    sx: import_prop_types12.default.oneOfType([import_prop_types12.default.arrayOf(import_prop_types12.default.oneOfType([import_prop_types12.default.func, import_prop_types12.default.object])), import_prop_types12.default.func, import_prop_types12.default.object]),
    tabIndex: import_prop_types12.default.number,
    TouchRippleProps: import_prop_types12.default.object,
    type: import_prop_types12.default.oneOfType([import_prop_types12.default.oneOf(["button", "reset", "submit"]), import_prop_types12.default.string])
  } : void 0;
  var ButtonBase_default = ButtonBase;

  // node_modules/@mui/material/IconButton/iconButtonClasses.js
  var import_core13 = __toESM(require_node3());
  function getIconButtonUtilityClass(slot) {
    return (0, import_core13.generateUtilityClass)("MuiIconButton", slot);
  }
  var iconButtonClasses = (0, import_core13.generateUtilityClasses)("MuiIconButton", ["root", "disabled", "colorInherit", "colorPrimary", "colorSecondary", "edgeStart", "edgeEnd", "sizeSmall", "sizeMedium", "sizeLarge"]);
  var iconButtonClasses_default = iconButtonClasses;

  // node_modules/@mui/material/IconButton/IconButton.js
  var import_jsx_runtime14 = __toESM(require_jsx_runtime());
  var _excluded14 = ["edge", "children", "className", "color", "disabled", "disableFocusRipple", "size"];
  var useUtilityClasses6 = (ownerState) => {
    const {
      classes,
      disabled,
      color,
      edge,
      size
    } = ownerState;
    const slots = {
      root: ["root", disabled && "disabled", color !== "default" && `color${capitalize_default(color)}`, edge && `edge${capitalize_default(edge)}`, `size${capitalize_default(size)}`]
    };
    return (0, import_core14.unstable_composeClasses)(slots, getIconButtonUtilityClass, classes);
  };
  var IconButtonRoot = styled_default(ButtonBase_default, {
    name: "MuiIconButton",
    slot: "Root",
    overridesResolver: (props, styles2) => {
      const {
        ownerState
      } = props;
      return [styles2.root, ownerState.color !== "default" && styles2[`color${capitalize_default(ownerState.color)}`], ownerState.edge && styles2[`edge${capitalize_default(ownerState.edge)}`], styles2[`size${capitalize_default(ownerState.size)}`]];
    }
  })(({
    theme,
    ownerState
  }) => _extends3({
    textAlign: "center",
    flex: "0 0 auto",
    fontSize: theme.typography.pxToRem(24),
    padding: 8,
    borderRadius: "50%",
    overflow: "visible",
    color: theme.palette.action.active,
    transition: theme.transitions.create("background-color", {
      duration: theme.transitions.duration.shortest
    }),
    "&:hover": {
      backgroundColor: (0, import_system9.alpha)(theme.palette.action.active, theme.palette.action.hoverOpacity),
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    }
  }, ownerState.edge === "start" && {
    marginLeft: ownerState.size === "small" ? -3 : -12
  }, ownerState.edge === "end" && {
    marginRight: ownerState.size === "small" ? -3 : -12
  }), ({
    theme,
    ownerState
  }) => _extends3({}, ownerState.color === "inherit" && {
    color: "inherit"
  }, ownerState.color !== "inherit" && ownerState.color !== "default" && {
    color: theme.palette[ownerState.color].main,
    "&:hover": {
      backgroundColor: (0, import_system9.alpha)(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    }
  }, ownerState.size === "small" && {
    padding: 5,
    fontSize: theme.typography.pxToRem(18)
  }, ownerState.size === "large" && {
    padding: 12,
    fontSize: theme.typography.pxToRem(28)
  }, {
    [`&.${iconButtonClasses_default.disabled}`]: {
      backgroundColor: "transparent",
      color: theme.palette.action.disabled
    }
  }));
  var IconButton = /* @__PURE__ */ React16.forwardRef(function IconButton2(inProps, ref) {
    const props = useThemeProps({
      props: inProps,
      name: "MuiIconButton"
    });
    const {
      edge = false,
      children,
      className,
      color = "default",
      disabled = false,
      disableFocusRipple = false,
      size = "medium"
    } = props, other = _objectWithoutPropertiesLoose2(props, _excluded14);
    const ownerState = _extends3({}, props, {
      edge,
      color,
      disabled,
      disableFocusRipple,
      size
    });
    const classes = useUtilityClasses6(ownerState);
    return /* @__PURE__ */ (0, import_jsx_runtime14.jsx)(IconButtonRoot, _extends3({
      className: (0, import_clsx8.default)(classes.root, className),
      centerRipple: true,
      focusRipple: !disableFocusRipple,
      disabled,
      ref,
      ownerState
    }, other, {
      children
    }));
  });
  true ? IconButton.propTypes = {
    children: (0, import_utils13.chainPropTypes)(import_prop_types13.default.node, (props) => {
      const found = React16.Children.toArray(props.children).some((child) => /* @__PURE__ */ React16.isValidElement(child) && child.props.onClick);
      if (found) {
        return new Error(["MUI: You are providing an onClick event listener to a child of a button element.", "Prefer applying it to the IconButton directly.", "This guarantees that the whole <button> will be responsive to click events."].join("\n"));
      }
      return null;
    }),
    classes: import_prop_types13.default.object,
    className: import_prop_types13.default.string,
    color: import_prop_types13.default.oneOfType([import_prop_types13.default.oneOf(["inherit", "default", "primary", "secondary", "error", "info", "success", "warning"]), import_prop_types13.default.string]),
    disabled: import_prop_types13.default.bool,
    disableFocusRipple: import_prop_types13.default.bool,
    disableRipple: import_prop_types13.default.bool,
    edge: import_prop_types13.default.oneOf(["end", "start", false]),
    size: import_prop_types13.default.oneOfType([import_prop_types13.default.oneOf(["small", "medium", "large"]), import_prop_types13.default.string]),
    sx: import_prop_types13.default.oneOfType([import_prop_types13.default.arrayOf(import_prop_types13.default.oneOfType([import_prop_types13.default.func, import_prop_types13.default.object])), import_prop_types13.default.func, import_prop_types13.default.object])
  } : void 0;
  var IconButton_default = IconButton;

  // node_modules/@mui/material/internal/svg-icons/SuccessOutlined.js
  var React17 = __toESM(require_react());
  var import_jsx_runtime15 = __toESM(require_jsx_runtime());
  var SuccessOutlined_default = createSvgIcon(/* @__PURE__ */ (0, import_jsx_runtime15.jsx)("path", {
    d: "M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z"
  }), "SuccessOutlined");

  // node_modules/@mui/material/internal/svg-icons/ReportProblemOutlined.js
  var React18 = __toESM(require_react());
  var import_jsx_runtime16 = __toESM(require_jsx_runtime());
  var ReportProblemOutlined_default = createSvgIcon(/* @__PURE__ */ (0, import_jsx_runtime16.jsx)("path", {
    d: "M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z"
  }), "ReportProblemOutlined");

  // node_modules/@mui/material/internal/svg-icons/ErrorOutline.js
  var React19 = __toESM(require_react());
  var import_jsx_runtime17 = __toESM(require_jsx_runtime());
  var ErrorOutline_default = createSvgIcon(/* @__PURE__ */ (0, import_jsx_runtime17.jsx)("path", {
    d: "M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
  }), "ErrorOutline");

  // node_modules/@mui/material/internal/svg-icons/InfoOutlined.js
  var React20 = __toESM(require_react());
  var import_jsx_runtime18 = __toESM(require_jsx_runtime());
  var InfoOutlined_default = createSvgIcon(/* @__PURE__ */ (0, import_jsx_runtime18.jsx)("path", {
    d: "M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z"
  }), "InfoOutlined");

  // node_modules/@mui/material/internal/svg-icons/Close.js
  var React21 = __toESM(require_react());
  var import_jsx_runtime19 = __toESM(require_jsx_runtime());
  var Close_default = createSvgIcon(/* @__PURE__ */ (0, import_jsx_runtime19.jsx)("path", {
    d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
  }), "Close");

  // node_modules/@mui/material/Alert/Alert.js
  var import_jsx_runtime20 = __toESM(require_jsx_runtime());
  var import_jsx_runtime21 = __toESM(require_jsx_runtime());
  var _CloseIcon;
  var _excluded15 = ["action", "children", "className", "closeText", "color", "icon", "iconMapping", "onClose", "role", "severity", "variant"];
  var useUtilityClasses7 = (ownerState) => {
    const {
      variant,
      color,
      severity,
      classes
    } = ownerState;
    const slots = {
      root: ["root", `${variant}${capitalize_default(color || severity)}`, `${variant}`],
      icon: ["icon"],
      message: ["message"],
      action: ["action"]
    };
    return (0, import_core15.unstable_composeClasses)(slots, getAlertUtilityClass, classes);
  };
  var AlertRoot = styled_default(Paper_default, {
    name: "MuiAlert",
    slot: "Root",
    overridesResolver: (props, styles2) => {
      const {
        ownerState
      } = props;
      return [styles2.root, styles2[ownerState.variant], styles2[`${ownerState.variant}${capitalize_default(ownerState.color || ownerState.severity)}`]];
    }
  })(({
    theme,
    ownerState
  }) => {
    const getColor = theme.palette.mode === "light" ? import_system10.darken : import_system10.lighten;
    const getBackgroundColor = theme.palette.mode === "light" ? import_system10.lighten : import_system10.darken;
    const color = ownerState.color || ownerState.severity;
    return _extends3({}, theme.typography.body2, {
      borderRadius: theme.shape.borderRadius,
      backgroundColor: "transparent",
      display: "flex",
      padding: "6px 16px"
    }, color && ownerState.variant === "standard" && {
      color: getColor(theme.palette[color].light, 0.6),
      backgroundColor: getBackgroundColor(theme.palette[color].light, 0.9),
      [`& .${alertClasses_default.icon}`]: {
        color: theme.palette.mode === "dark" ? theme.palette[color].main : theme.palette[color].light
      }
    }, color && ownerState.variant === "outlined" && {
      color: getColor(theme.palette[color].light, 0.6),
      border: `1px solid ${theme.palette[color].light}`,
      [`& .${alertClasses_default.icon}`]: {
        color: theme.palette.mode === "dark" ? theme.palette[color].main : theme.palette[color].light
      }
    }, color && ownerState.variant === "filled" && {
      color: "#fff",
      fontWeight: theme.typography.fontWeightMedium,
      backgroundColor: theme.palette.mode === "dark" ? theme.palette[color].dark : theme.palette[color].main
    });
  });
  var AlertIcon = styled_default("div", {
    name: "MuiAlert",
    slot: "Icon",
    overridesResolver: (props, styles2) => styles2.icon
  })({
    marginRight: 12,
    padding: "7px 0",
    display: "flex",
    fontSize: 22,
    opacity: 0.9
  });
  var AlertMessage = styled_default("div", {
    name: "MuiAlert",
    slot: "Message",
    overridesResolver: (props, styles2) => styles2.message
  })({
    padding: "8px 0"
  });
  var AlertAction = styled_default("div", {
    name: "MuiAlert",
    slot: "Action",
    overridesResolver: (props, styles2) => styles2.action
  })({
    display: "flex",
    alignItems: "flex-start",
    padding: "4px 0 0 16px",
    marginLeft: "auto",
    marginRight: -8
  });
  var defaultIconMapping = {
    success: /* @__PURE__ */ (0, import_jsx_runtime20.jsx)(SuccessOutlined_default, {
      fontSize: "inherit"
    }),
    warning: /* @__PURE__ */ (0, import_jsx_runtime20.jsx)(ReportProblemOutlined_default, {
      fontSize: "inherit"
    }),
    error: /* @__PURE__ */ (0, import_jsx_runtime20.jsx)(ErrorOutline_default, {
      fontSize: "inherit"
    }),
    info: /* @__PURE__ */ (0, import_jsx_runtime20.jsx)(InfoOutlined_default, {
      fontSize: "inherit"
    })
  };
  var Alert = /* @__PURE__ */ React22.forwardRef(function Alert2(inProps, ref) {
    const props = useThemeProps({
      props: inProps,
      name: "MuiAlert"
    });
    const {
      action,
      children,
      className,
      closeText = "Close",
      color,
      icon,
      iconMapping = defaultIconMapping,
      onClose,
      role = "alert",
      severity = "success",
      variant = "standard"
    } = props, other = _objectWithoutPropertiesLoose2(props, _excluded15);
    const ownerState = _extends3({}, props, {
      color,
      severity,
      variant
    });
    const classes = useUtilityClasses7(ownerState);
    return /* @__PURE__ */ (0, import_jsx_runtime21.jsxs)(AlertRoot, _extends3({
      role,
      square: true,
      elevation: 0,
      ownerState,
      className: (0, import_clsx9.default)(classes.root, className),
      ref
    }, other, {
      children: [icon !== false ? /* @__PURE__ */ (0, import_jsx_runtime20.jsx)(AlertIcon, {
        ownerState,
        className: classes.icon,
        children: icon || iconMapping[severity] || defaultIconMapping[severity]
      }) : null, /* @__PURE__ */ (0, import_jsx_runtime20.jsx)(AlertMessage, {
        ownerState,
        className: classes.message,
        children
      }), action != null ? /* @__PURE__ */ (0, import_jsx_runtime20.jsx)(AlertAction, {
        className: classes.action,
        children: action
      }) : null, action == null && onClose ? /* @__PURE__ */ (0, import_jsx_runtime20.jsx)(AlertAction, {
        ownerState,
        className: classes.action,
        children: /* @__PURE__ */ (0, import_jsx_runtime20.jsx)(IconButton_default, {
          size: "small",
          "aria-label": closeText,
          title: closeText,
          color: "inherit",
          onClick: onClose,
          children: _CloseIcon || (_CloseIcon = /* @__PURE__ */ (0, import_jsx_runtime20.jsx)(Close_default, {
            fontSize: "small"
          }))
        })
      }) : null]
    }));
  });
  true ? Alert.propTypes = {
    action: import_prop_types14.default.node,
    children: import_prop_types14.default.node,
    classes: import_prop_types14.default.object,
    className: import_prop_types14.default.string,
    closeText: import_prop_types14.default.string,
    color: import_prop_types14.default.oneOfType([import_prop_types14.default.oneOf(["error", "info", "success", "warning"]), import_prop_types14.default.string]),
    icon: import_prop_types14.default.node,
    iconMapping: import_prop_types14.default.shape({
      error: import_prop_types14.default.node,
      info: import_prop_types14.default.node,
      success: import_prop_types14.default.node,
      warning: import_prop_types14.default.node
    }),
    onClose: import_prop_types14.default.func,
    role: import_prop_types14.default.string,
    severity: import_prop_types14.default.oneOf(["error", "info", "success", "warning"]),
    sx: import_prop_types14.default.oneOfType([import_prop_types14.default.arrayOf(import_prop_types14.default.oneOfType([import_prop_types14.default.func, import_prop_types14.default.object])), import_prop_types14.default.func, import_prop_types14.default.object]),
    variant: import_prop_types14.default.oneOfType([import_prop_types14.default.oneOf(["filled", "outlined", "standard"]), import_prop_types14.default.string])
  } : void 0;
  var Alert_default = Alert;

  // src/components/common/ErrorToast.jsx
  var ErrorToast = function({ open }) {
    return /* @__PURE__ */ import_react9.default.createElement(Snackbar_default, {
      open,
      autoHideDuration: 3e4
    }, /* @__PURE__ */ import_react9.default.createElement(Alert_default, {
      severity: "error"
    }, "Unfortunately funny videos couldn't be loaded :(", /* @__PURE__ */ import_react9.default.createElement("br", null), "Great opportunity to do smth useful!"));
  };
  var ErrorToast_default = ErrorToast;

  // src/components/Navigation/index.jsx
  var import_react10 = __toESM(require_react());

  // node_modules/@mui/material/Pagination/Pagination.js
  var React29 = __toESM(require_react());
  var import_prop_types16 = __toESM(require_prop_types());
  var import_clsx11 = __toESM(require_clsx());
  var import_core19 = __toESM(require_node3());
  var import_utils15 = __toESM(require_utils());

  // node_modules/@mui/material/Pagination/paginationClasses.js
  var import_core16 = __toESM(require_node3());
  function getPaginationUtilityClass(slot) {
    return (0, import_core16.generateUtilityClass)("MuiPagination", slot);
  }
  var paginationClasses = (0, import_core16.generateUtilityClasses)("MuiPagination", ["root", "ul", "outlined", "text"]);

  // node_modules/@mui/material/usePagination/usePagination.js
  var import_utils14 = __toESM(require_utils());
  var _excluded16 = ["boundaryCount", "componentName", "count", "defaultPage", "disabled", "hideNextButton", "hidePrevButton", "onChange", "page", "showFirstButton", "showLastButton", "siblingCount"];
  function usePagination(props = {}) {
    const {
      boundaryCount = 1,
      componentName = "usePagination",
      count = 1,
      defaultPage = 1,
      disabled = false,
      hideNextButton = false,
      hidePrevButton = false,
      onChange: handleChange,
      page: pageProp,
      showFirstButton = false,
      showLastButton = false,
      siblingCount = 1
    } = props, other = _objectWithoutPropertiesLoose2(props, _excluded16);
    const [page, setPageState] = (0, import_utils14.unstable_useControlled)({
      controlled: pageProp,
      default: defaultPage,
      name: componentName,
      state: "page"
    });
    const handleClick = (event, value) => {
      if (!pageProp) {
        setPageState(value);
      }
      if (handleChange) {
        handleChange(event, value);
      }
    };
    const range = (start, end) => {
      const length = end - start + 1;
      return Array.from({
        length
      }, (_3, i2) => start + i2);
    };
    const startPages = range(1, Math.min(boundaryCount, count));
    const endPages = range(Math.max(count - boundaryCount + 1, boundaryCount + 1), count);
    const siblingsStart = Math.max(Math.min(page - siblingCount, count - boundaryCount - siblingCount * 2 - 1), boundaryCount + 2);
    const siblingsEnd = Math.min(Math.max(page + siblingCount, boundaryCount + siblingCount * 2 + 2), endPages.length > 0 ? endPages[0] - 2 : count - 1);
    const itemList2 = [
      ...showFirstButton ? ["first"] : [],
      ...hidePrevButton ? [] : ["previous"],
      ...startPages,
      ...siblingsStart > boundaryCount + 2 ? ["start-ellipsis"] : boundaryCount + 1 < count - boundaryCount ? [boundaryCount + 1] : [],
      ...range(siblingsStart, siblingsEnd),
      ...siblingsEnd < count - boundaryCount - 1 ? ["end-ellipsis"] : count - boundaryCount > boundaryCount ? [count - boundaryCount] : [],
      ...endPages,
      ...hideNextButton ? [] : ["next"],
      ...showLastButton ? ["last"] : []
    ];
    const buttonPage = (type) => {
      switch (type) {
        case "first":
          return 1;
        case "previous":
          return page - 1;
        case "next":
          return page + 1;
        case "last":
          return count;
        default:
          return null;
      }
    };
    const items = itemList2.map((item) => {
      return typeof item === "number" ? {
        onClick: (event) => {
          handleClick(event, item);
        },
        type: "page",
        page: item,
        selected: item === page,
        disabled,
        "aria-current": item === page ? "true" : void 0
      } : {
        onClick: (event) => {
          handleClick(event, buttonPage(item));
        },
        type: item,
        page: buttonPage(item),
        selected: false,
        disabled: disabled || item.indexOf("ellipsis") === -1 && (item === "next" || item === "last" ? page >= count : page <= 1)
      };
    });
    return _extends3({
      items
    }, other);
  }

  // node_modules/@mui/material/PaginationItem/PaginationItem.js
  var React28 = __toESM(require_react());
  var import_prop_types15 = __toESM(require_prop_types());
  var import_clsx10 = __toESM(require_clsx());
  var import_core18 = __toESM(require_node3());
  var import_system11 = __toESM(require_system());

  // node_modules/@mui/material/PaginationItem/paginationItemClasses.js
  var import_core17 = __toESM(require_node3());
  function getPaginationItemUtilityClass(slot) {
    return (0, import_core17.generateUtilityClass)("MuiPaginationItem", slot);
  }
  var paginationItemClasses = (0, import_core17.generateUtilityClasses)("MuiPaginationItem", ["root", "page", "sizeSmall", "sizeLarge", "text", "textPrimary", "textSecondary", "outlined", "outlinedPrimary", "outlinedSecondary", "rounded", "ellipsis", "firstLast", "previousNext", "focusVisible", "disabled", "selected", "icon"]);
  var paginationItemClasses_default = paginationItemClasses;

  // node_modules/@mui/material/internal/svg-icons/FirstPage.js
  var React24 = __toESM(require_react());
  var import_jsx_runtime22 = __toESM(require_jsx_runtime());
  var FirstPage_default = createSvgIcon(/* @__PURE__ */ (0, import_jsx_runtime22.jsx)("path", {
    d: "M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z"
  }), "FirstPage");

  // node_modules/@mui/material/internal/svg-icons/LastPage.js
  var React25 = __toESM(require_react());
  var import_jsx_runtime23 = __toESM(require_jsx_runtime());
  var LastPage_default = createSvgIcon(/* @__PURE__ */ (0, import_jsx_runtime23.jsx)("path", {
    d: "M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z"
  }), "LastPage");

  // node_modules/@mui/material/internal/svg-icons/NavigateBefore.js
  var React26 = __toESM(require_react());
  var import_jsx_runtime24 = __toESM(require_jsx_runtime());
  var NavigateBefore_default = createSvgIcon(/* @__PURE__ */ (0, import_jsx_runtime24.jsx)("path", {
    d: "M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"
  }), "NavigateBefore");

  // node_modules/@mui/material/internal/svg-icons/NavigateNext.js
  var React27 = __toESM(require_react());
  var import_jsx_runtime25 = __toESM(require_jsx_runtime());
  var NavigateNext_default = createSvgIcon(/* @__PURE__ */ (0, import_jsx_runtime25.jsx)("path", {
    d: "M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
  }), "NavigateNext");

  // node_modules/@mui/material/PaginationItem/PaginationItem.js
  var import_jsx_runtime26 = __toESM(require_jsx_runtime());
  var import_jsx_runtime27 = __toESM(require_jsx_runtime());
  var _excluded17 = ["className", "color", "component", "components", "disabled", "page", "selected", "shape", "size", "type", "variant"];
  var overridesResolver = (props, styles2) => {
    const {
      ownerState
    } = props;
    return [styles2.root, styles2[ownerState.variant], styles2[`size${capitalize_default(ownerState.size)}`], ownerState.variant === "text" && styles2[`text${capitalize_default(ownerState.color)}`], ownerState.variant === "outlined" && styles2[`outlined${capitalize_default(ownerState.color)}`], ownerState.shape === "rounded" && styles2.rounded, ownerState.type === "page" && styles2.page, (ownerState.type === "start-ellipsis" || ownerState.type === "end-ellipsis") && styles2.ellipsis, (ownerState.type === "previous" || ownerState.type === "next") && styles2.previousNext, (ownerState.type === "first" || ownerState.type === "last") && styles2.firstLast];
  };
  var useUtilityClasses8 = (ownerState) => {
    const {
      classes,
      color,
      disabled,
      selected,
      size,
      shape,
      type,
      variant
    } = ownerState;
    const slots = {
      root: ["root", `size${capitalize_default(size)}`, variant, shape, color !== "standard" && `${variant}${capitalize_default(color)}`, disabled && "disabled", selected && "selected", {
        page: "page",
        first: "firstLast",
        last: "firstLast",
        "start-ellipsis": "ellipsis",
        "end-ellipsis": "ellipsis",
        previous: "previousNext",
        next: "previousNext"
      }[type]],
      icon: ["icon"]
    };
    return (0, import_core18.unstable_composeClasses)(slots, getPaginationItemUtilityClass, classes);
  };
  var PaginationItemEllipsis = styled_default("div", {
    name: "MuiPaginationItem",
    slot: "Root",
    overridesResolver
  })(({
    theme,
    ownerState
  }) => _extends3({}, theme.typography.body2, {
    borderRadius: 32 / 2,
    textAlign: "center",
    boxSizing: "border-box",
    minWidth: 32,
    padding: "0 6px",
    margin: "0 3px",
    color: theme.palette.text.primary,
    height: "auto",
    [`&.${paginationItemClasses_default.disabled}`]: {
      opacity: theme.palette.action.disabledOpacity
    }
  }, ownerState.size === "small" && {
    minWidth: 26,
    borderRadius: 26 / 2,
    margin: "0 1px",
    padding: "0 4px"
  }, ownerState.size === "large" && {
    minWidth: 40,
    borderRadius: 40 / 2,
    padding: "0 10px",
    fontSize: theme.typography.pxToRem(15)
  }));
  var PaginationItemPage = styled_default(ButtonBase_default, {
    name: "MuiPaginationItem",
    slot: "Root",
    overridesResolver
  })(({
    theme,
    ownerState
  }) => _extends3({}, theme.typography.body2, {
    borderRadius: 32 / 2,
    textAlign: "center",
    boxSizing: "border-box",
    minWidth: 32,
    height: 32,
    padding: "0 6px",
    margin: "0 3px",
    color: theme.palette.text.primary,
    [`&.${paginationItemClasses_default.focusVisible}`]: {
      backgroundColor: theme.palette.action.focus
    },
    [`&.${paginationItemClasses_default.disabled}`]: {
      opacity: theme.palette.action.disabledOpacity
    },
    transition: theme.transitions.create(["color", "background-color"], {
      duration: theme.transitions.duration.short
    }),
    "&:hover": {
      backgroundColor: theme.palette.action.hover,
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    },
    [`&.${paginationItemClasses_default.selected}`]: {
      backgroundColor: theme.palette.action.selected,
      "&:hover": {
        backgroundColor: (0, import_system11.alpha)(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),
        "@media (hover: none)": {
          backgroundColor: theme.palette.action.selected
        }
      },
      [`&.${paginationItemClasses_default.focusVisible}`]: {
        backgroundColor: (0, import_system11.alpha)(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)
      },
      [`&.${paginationItemClasses_default.disabled}`]: {
        opacity: 1,
        color: theme.palette.action.disabled,
        backgroundColor: theme.palette.action.selected
      }
    }
  }, ownerState.size === "small" && {
    minWidth: 26,
    height: 26,
    borderRadius: 26 / 2,
    margin: "0 1px",
    padding: "0 4px"
  }, ownerState.size === "large" && {
    minWidth: 40,
    height: 40,
    borderRadius: 40 / 2,
    padding: "0 10px",
    fontSize: theme.typography.pxToRem(15)
  }, ownerState.shape === "rounded" && {
    borderRadius: theme.shape.borderRadius
  }), ({
    theme,
    ownerState
  }) => _extends3({}, ownerState.variant === "text" && {
    [`&.${paginationItemClasses_default.selected}`]: _extends3({}, ownerState.color !== "standard" && {
      color: theme.palette[ownerState.color].contrastText,
      backgroundColor: theme.palette[ownerState.color].main,
      "&:hover": {
        backgroundColor: theme.palette[ownerState.color].dark,
        "@media (hover: none)": {
          backgroundColor: theme.palette[ownerState.color].main
        }
      },
      [`&.${paginationItemClasses_default.focusVisible}`]: {
        backgroundColor: theme.palette[ownerState.color].dark
      }
    }, {
      [`&.${paginationItemClasses_default.disabled}`]: {
        color: theme.palette.action.disabled
      }
    })
  }, ownerState.variant === "outlined" && {
    border: `1px solid ${theme.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)"}`,
    [`&.${paginationItemClasses_default.selected}`]: _extends3({}, ownerState.color !== "standard" && {
      color: theme.palette[ownerState.color].main,
      border: `1px solid ${(0, import_system11.alpha)(theme.palette[ownerState.color].main, 0.5)}`,
      backgroundColor: (0, import_system11.alpha)(theme.palette[ownerState.color].main, theme.palette.action.activatedOpacity),
      "&:hover": {
        backgroundColor: (0, import_system11.alpha)(theme.palette[ownerState.color].main, theme.palette.action.activatedOpacity + theme.palette.action.focusOpacity),
        "@media (hover: none)": {
          backgroundColor: "transparent"
        }
      },
      [`&.${paginationItemClasses_default.focusVisible}`]: {
        backgroundColor: (0, import_system11.alpha)(theme.palette[ownerState.color].main, theme.palette.action.activatedOpacity + theme.palette.action.focusOpacity)
      }
    }, {
      [`&.${paginationItemClasses_default.disabled}`]: {
        borderColor: theme.palette.action.disabledBackground,
        color: theme.palette.action.disabled
      }
    })
  }));
  var PaginationItemPageIcon = styled_default("div", {
    name: "MuiPaginationItem",
    slot: "Icon",
    overridesResolver: (props, styles2) => styles2.icon
  })(({
    theme,
    ownerState
  }) => _extends3({
    fontSize: theme.typography.pxToRem(20),
    margin: "0 -8px"
  }, ownerState.size === "small" && {
    fontSize: theme.typography.pxToRem(18)
  }, ownerState.size === "large" && {
    fontSize: theme.typography.pxToRem(22)
  }));
  var PaginationItem = /* @__PURE__ */ React28.forwardRef(function PaginationItem2(inProps, ref) {
    const props = useThemeProps({
      props: inProps,
      name: "MuiPaginationItem"
    });
    const {
      className,
      color = "standard",
      component,
      components = {
        first: FirstPage_default,
        last: LastPage_default,
        next: NavigateNext_default,
        previous: NavigateBefore_default
      },
      disabled = false,
      page,
      selected = false,
      shape = "circular",
      size = "medium",
      type = "page",
      variant = "text"
    } = props, other = _objectWithoutPropertiesLoose2(props, _excluded17);
    const ownerState = _extends3({}, props, {
      color,
      disabled,
      selected,
      shape,
      size,
      type,
      variant
    });
    const theme = useTheme();
    const classes = useUtilityClasses8(ownerState);
    const normalizedIcons = theme.direction === "rtl" ? {
      previous: components.next || NavigateNext_default,
      next: components.previous || NavigateBefore_default,
      last: components.first || FirstPage_default,
      first: components.last || LastPage_default
    } : {
      previous: components.previous || NavigateBefore_default,
      next: components.next || NavigateNext_default,
      first: components.first || FirstPage_default,
      last: components.last || LastPage_default
    };
    const Icon = normalizedIcons[type];
    return type === "start-ellipsis" || type === "end-ellipsis" ? /* @__PURE__ */ (0, import_jsx_runtime26.jsx)(PaginationItemEllipsis, {
      ref,
      ownerState,
      className: (0, import_clsx10.default)(classes.root, className),
      children: "\u2026"
    }) : /* @__PURE__ */ (0, import_jsx_runtime27.jsxs)(PaginationItemPage, _extends3({
      ref,
      ownerState,
      component,
      disabled,
      className: (0, import_clsx10.default)(classes.root, className)
    }, other, {
      children: [type === "page" && page, Icon ? /* @__PURE__ */ (0, import_jsx_runtime26.jsx)(PaginationItemPageIcon, {
        as: Icon,
        ownerState,
        className: classes.icon
      }) : null]
    }));
  });
  true ? PaginationItem.propTypes = {
    children: import_prop_types15.default.node,
    classes: import_prop_types15.default.object,
    className: import_prop_types15.default.string,
    color: import_prop_types15.default.oneOfType([import_prop_types15.default.oneOf(["primary", "secondary", "standard"]), import_prop_types15.default.string]),
    component: import_prop_types15.default.elementType,
    components: import_prop_types15.default.shape({
      first: import_prop_types15.default.elementType,
      last: import_prop_types15.default.elementType,
      next: import_prop_types15.default.elementType,
      previous: import_prop_types15.default.elementType
    }),
    disabled: import_prop_types15.default.bool,
    page: import_prop_types15.default.node,
    selected: import_prop_types15.default.bool,
    shape: import_prop_types15.default.oneOf(["circular", "rounded"]),
    size: import_prop_types15.default.oneOfType([import_prop_types15.default.oneOf(["small", "medium", "large"]), import_prop_types15.default.string]),
    sx: import_prop_types15.default.oneOfType([import_prop_types15.default.arrayOf(import_prop_types15.default.oneOfType([import_prop_types15.default.func, import_prop_types15.default.object])), import_prop_types15.default.func, import_prop_types15.default.object]),
    type: import_prop_types15.default.oneOf(["end-ellipsis", "first", "last", "next", "page", "previous", "start-ellipsis"]),
    variant: import_prop_types15.default.oneOfType([import_prop_types15.default.oneOf(["outlined", "text"]), import_prop_types15.default.string])
  } : void 0;
  var PaginationItem_default = PaginationItem;

  // node_modules/@mui/material/Pagination/Pagination.js
  var import_jsx_runtime28 = __toESM(require_jsx_runtime());
  var _excluded18 = ["boundaryCount", "className", "color", "count", "defaultPage", "disabled", "getItemAriaLabel", "hideNextButton", "hidePrevButton", "onChange", "page", "renderItem", "shape", "showFirstButton", "showLastButton", "siblingCount", "size", "variant"];
  var useUtilityClasses9 = (ownerState) => {
    const {
      classes,
      variant
    } = ownerState;
    const slots = {
      root: ["root", variant],
      ul: ["ul"]
    };
    return (0, import_core19.unstable_composeClasses)(slots, getPaginationUtilityClass, classes);
  };
  var PaginationRoot = styled_default("nav", {
    name: "MuiPagination",
    slot: "Root",
    overridesResolver: (props, styles2) => {
      const {
        ownerState
      } = props;
      return [styles2.root, styles2[ownerState.variant]];
    }
  })({});
  var PaginationUl = styled_default("ul", {
    name: "MuiPagination",
    slot: "Ul",
    overridesResolver: (props, styles2) => styles2.ul
  })({
    display: "flex",
    flexWrap: "wrap",
    alignItems: "center",
    padding: 0,
    margin: 0,
    listStyle: "none"
  });
  function defaultGetAriaLabel(type, page, selected) {
    if (type === "page") {
      return `${selected ? "" : "Go to "}page ${page}`;
    }
    return `Go to ${type} page`;
  }
  var Pagination = /* @__PURE__ */ React29.forwardRef(function Pagination2(inProps, ref) {
    const props = useThemeProps({
      props: inProps,
      name: "MuiPagination"
    });
    const {
      boundaryCount = 1,
      className,
      color = "standard",
      count = 1,
      defaultPage = 1,
      disabled = false,
      getItemAriaLabel = defaultGetAriaLabel,
      hideNextButton = false,
      hidePrevButton = false,
      renderItem = (item) => /* @__PURE__ */ (0, import_jsx_runtime28.jsx)(PaginationItem_default, _extends3({}, item)),
      shape = "circular",
      showFirstButton = false,
      showLastButton = false,
      siblingCount = 1,
      size = "medium",
      variant = "text"
    } = props, other = _objectWithoutPropertiesLoose2(props, _excluded18);
    const {
      items
    } = usePagination(_extends3({}, props, {
      componentName: "Pagination"
    }));
    const ownerState = _extends3({}, props, {
      boundaryCount,
      color,
      count,
      defaultPage,
      disabled,
      getItemAriaLabel,
      hideNextButton,
      hidePrevButton,
      renderItem,
      shape,
      showFirstButton,
      showLastButton,
      siblingCount,
      size,
      variant
    });
    const classes = useUtilityClasses9(ownerState);
    return /* @__PURE__ */ (0, import_jsx_runtime28.jsx)(PaginationRoot, _extends3({
      "aria-label": "pagination navigation",
      className: (0, import_clsx11.default)(classes.root, className),
      ownerState,
      ref
    }, other, {
      children: /* @__PURE__ */ (0, import_jsx_runtime28.jsx)(PaginationUl, {
        className: classes.ul,
        ownerState,
        children: items.map((item, index2) => /* @__PURE__ */ (0, import_jsx_runtime28.jsx)("li", {
          children: renderItem(_extends3({}, item, {
            color,
            "aria-label": getItemAriaLabel(item.type, item.page, item.selected),
            shape,
            size,
            variant
          }))
        }, index2))
      })
    }));
  });
  true ? Pagination.propTypes = {
    boundaryCount: import_utils15.integerPropType,
    classes: import_prop_types16.default.object,
    className: import_prop_types16.default.string,
    color: import_prop_types16.default.oneOfType([import_prop_types16.default.oneOf(["primary", "secondary", "standard"]), import_prop_types16.default.string]),
    count: import_utils15.integerPropType,
    defaultPage: import_utils15.integerPropType,
    disabled: import_prop_types16.default.bool,
    getItemAriaLabel: import_prop_types16.default.func,
    hideNextButton: import_prop_types16.default.bool,
    hidePrevButton: import_prop_types16.default.bool,
    onChange: import_prop_types16.default.func,
    page: import_utils15.integerPropType,
    renderItem: import_prop_types16.default.func,
    shape: import_prop_types16.default.oneOf(["circular", "rounded"]),
    showFirstButton: import_prop_types16.default.bool,
    showLastButton: import_prop_types16.default.bool,
    siblingCount: import_utils15.integerPropType,
    size: import_prop_types16.default.oneOfType([import_prop_types16.default.oneOf(["small", "medium", "large"]), import_prop_types16.default.string]),
    sx: import_prop_types16.default.oneOfType([import_prop_types16.default.arrayOf(import_prop_types16.default.oneOfType([import_prop_types16.default.func, import_prop_types16.default.object])), import_prop_types16.default.func, import_prop_types16.default.object]),
    variant: import_prop_types16.default.oneOfType([import_prop_types16.default.oneOf(["outlined", "text"]), import_prop_types16.default.string])
  } : void 0;
  var Pagination_default = Pagination;

  // src/components/Navigation/index.jsx
  var import_ArrowBackIos = __toESM(require_ArrowBackIos());
  var import_ArrowForwardIos = __toESM(require_ArrowForwardIos());
  var Navigation = function({ pagesCount, currentPage, setCurrentPage }) {
    return /* @__PURE__ */ import_react10.default.createElement(import_react10.default.Fragment, null, /* @__PURE__ */ import_react10.default.createElement(Pagination_default, {
      className: "pagination",
      shape: "rounded",
      count: pagesCount,
      page: currentPage,
      onChange: (e2, value) => setCurrentPage(value)
    }), /* @__PURE__ */ import_react10.default.createElement("nav", null, /* @__PURE__ */ import_react10.default.createElement("button", {
      type: "button",
      className: "previous",
      onClick: () => setCurrentPage(currentPage - 1),
      disabled: currentPage <= 1
    }, /* @__PURE__ */ import_react10.default.createElement(import_ArrowBackIos.default, {
      fontSize: "large"
    })), /* @__PURE__ */ import_react10.default.createElement("button", {
      type: "button",
      className: "next",
      onClick: () => setCurrentPage(currentPage + 1),
      disabled: currentPage >= pagesCount
    }, /* @__PURE__ */ import_react10.default.createElement(import_ArrowForwardIos.default, {
      fontSize: "large"
    }))));
  };
  var Navigation_default = Navigation;

  // src/pages/Feed/index.jsx
  var Feed = function() {
    const [currentPage, setCurrentPage] = (0, import_react11.useState)(1);
    const [isPaused, setIsPaused] = (0, import_react11.useState)(false);
    const {
      request,
      response: posts = [],
      isError,
      isLoading,
      setIsLoading
    } = useFetch_default();
    (0, import_react11.useEffect)(() => {
      getTrendingFeed_default(request);
    }, []);
    (0, import_react11.useEffect)(() => {
      setIsPaused(false);
      setIsLoading(true);
    }, [currentPage]);
    const handlePausePlay = ({ target }) => {
      if (target.readyState < 3) {
        return;
      }
      if (target.paused) {
        target.play();
        setIsPaused(false);
      } else {
        target.pause();
        setIsPaused(true);
      }
    };
    const post = posts[currentPage - 1] || {};
    return /* @__PURE__ */ import_react11.default.createElement(StyledFeed_default, null, /* @__PURE__ */ import_react11.default.createElement("article", {
      className: "video"
    }, /* @__PURE__ */ import_react11.default.createElement("video", {
      src: post.video?.playAddr,
      className: "player",
      controls: false,
      autoPlay: true,
      loop: true,
      playsInline: true,
      onClick: handlePausePlay,
      onPlaying: () => setIsLoading(false),
      onWaiting: () => setIsLoading(true)
    }), isLoading && /* @__PURE__ */ import_react11.default.createElement(Loader_default, null), isPaused && /* @__PURE__ */ import_react11.default.createElement(import_PlayArrow.default, {
      className: "play-icon",
      fontSize: "large"
    }), /* @__PURE__ */ import_react11.default.createElement("p", {
      className: "post-description"
    }, post.desc), /* @__PURE__ */ import_react11.default.createElement(Link, {
      className: "author",
      to: post.author?.uniqueId || "/"
    }, /* @__PURE__ */ import_react11.default.createElement(Avatar_default, {
      src: post.author?.avatarThumb,
      alt: post.author?.nickname,
      sx: { width: 56, height: 56 }
    }), /* @__PURE__ */ import_react11.default.createElement("p", {
      className: "nickname"
    }, post.author?.nickname)), /* @__PURE__ */ import_react11.default.createElement("section", {
      className: "stats"
    }, /* @__PURE__ */ import_react11.default.createElement("div", {
      className: "likes"
    }, /* @__PURE__ */ import_react11.default.createElement(import_FavoriteBorder.default, null), /* @__PURE__ */ import_react11.default.createElement("p", null, post.stats?.diggCount)), /* @__PURE__ */ import_react11.default.createElement("div", {
      className: "comments"
    }, /* @__PURE__ */ import_react11.default.createElement(import_ChatBubbleOutline.default, null), /* @__PURE__ */ import_react11.default.createElement("p", null, post.stats?.commentCount)))), /* @__PURE__ */ import_react11.default.createElement(Navigation_default, {
      pagesCount: posts.length,
      currentPage,
      setCurrentPage
    }), /* @__PURE__ */ import_react11.default.createElement(ErrorToast_default, {
      open: isError
    }));
  };
  var Feed_default = Feed;

  // src/pages/Profile/index.jsx
  var import_react13 = __toESM(require_react());

  // src/api/getUserFeed.js
  var getUserFeed = (fetch2, userId) => {
    fetch2(`https://tiktok33.p.rapidapi.com/user/info/${userId}`);
  };
  var getUserFeed_default = getUserFeed;

  // src/pages/Profile/StyledProfile.js
  var StyledProfile_default = styled_components_browser_esm_default.main`
    position: relative;
    min-height: 100vh;
    background-color: ${({ theme }) => theme.profilePageBackground};
    transition: background-color 0.5s;

    .user-info {
        max-width: 500px;
        margin: 0 auto;
        padding: 16px;
    }

    .avatar {
        margin: 0 auto;
    }

    .stats {
        display: flex;
        margin: 16px 0;

        div {
            flex: 1 0 0;
            padding: 20px 0;
            text-align: center;

            &:not(:first-of-type) {
                border-left: 1px solid lightgrey;
            }
        }

        p {
            letter-spacing: 2px;

            &:nth-of-type(2) {
                font-weight: 700;
            }
        }
    }

    .video-grid {
        position: relative;
        max-width: 500px;
        margin: 0 auto;
    }

    .link {
        position: fixed;
        top: 0;
        left: 0;
        bottom: 0;
        width: 160px;
        cursor: pointer;

        @media (max-width: 980px) {
            display: none;
        }

        &:hover {
            background-color: rgba(0, 0, 0, 0.1);
            border-right: 2px solid ${({ theme }) => theme.navBorder};
        }

        p {
            position: absolute;
            left: 50%;
            top: 50%;
            text-transform: uppercase;
            letter-spacing: 2px;
            transform: translate(-50%, -50%) rotate(-90deg);
            transform-origin: center;
        }
    }

    .link-mobile {
        display: none;

        @media (max-width: 980px) {
            position: absolute;
            top: 0;
            left: 0;
            display: block;
            padding: 16px 32px;
            text-transform: uppercase;
            letter-spacing: 2px;

            &:hover {
                border-right: 2px solid lightgrey;
                border-bottom: 2px solid lightgrey;
            }
        }
    }
`;

  // src/components/VideoGrid/index.jsx
  var import_react12 = __toESM(require_react());

  // src/components/VideoGrid/StyledVideoGrid.js
  var StyledVideoGrid_default = styled_components_browser_esm_default.section`
    display: flex;
    align-items: center;
    justify-content: space-between;
    flex-wrap: wrap;

    .flex-item {
        position: relative;
        flex-basis: 32%;
        border-radius: 4px;
    }

    .image {
        width: 100%;
        min-height: 100px;
    }

    .play-count {
        position: absolute;
        top: 8px;
        left: 0;
        right: 0;
        text-align: center;
        letter-spacing: 2px;
        background-color: rgba(255, 255, 255, 0.4);
    }
`;

  // src/api/getUserInfo.js
  var getUserInfo = (fetch2, userId) => {
    fetch2(`https://tiktok33.p.rapidapi.com/user/feed/${userId}`);
  };
  var getUserInfo_default = getUserInfo;

  // src/components/VideoGrid/index.jsx
  var VideoGrid = function({ setIsError }) {
    const { userId } = useParams();
    const {
      request,
      response: videos = [],
      isLoading,
      isError
    } = useFetch_default();
    (0, import_react12.useEffect)(() => {
      getUserInfo_default(request, userId);
    }, []);
    if (isError) {
      setIsError(true);
    }
    return /* @__PURE__ */ import_react12.default.createElement(StyledVideoGrid_default, {
      className: "video-grid"
    }, videos.map(({ id, video, stats: stats2, desc }) => /* @__PURE__ */ import_react12.default.createElement("div", {
      key: id,
      className: "flex-item"
    }, /* @__PURE__ */ import_react12.default.createElement("img", {
      className: "image",
      src: video?.cover,
      alt: `TikTuk: ${desc}`
    }), /* @__PURE__ */ import_react12.default.createElement("p", {
      className: "play-count"
    }, stats2?.playCount))), isLoading && /* @__PURE__ */ import_react12.default.createElement(Loader_default, null));
  };
  var VideoGrid_default = VideoGrid;

  // src/pages/Profile/index.jsx
  var Profile = function() {
    const { userId } = useParams();
    const {
      request,
      response: { user: user2 = {}, stats: stats2 = {} } = {},
      isError,
      setIsError
    } = useFetch_default();
    (0, import_react13.useEffect)(() => {
      getUserFeed_default(request, userId);
    }, [userId]);
    return /* @__PURE__ */ import_react13.default.createElement(StyledProfile_default, null, /* @__PURE__ */ import_react13.default.createElement("section", {
      className: "user-info"
    }, /* @__PURE__ */ import_react13.default.createElement(Avatar_default, {
      className: "avatar",
      src: user2.avatarThumb,
      alt: user2.nickname,
      sx: { width: 100, height: 100 }
    }), /* @__PURE__ */ import_react13.default.createElement("div", {
      className: "stats"
    }, /* @__PURE__ */ import_react13.default.createElement("div", null, /* @__PURE__ */ import_react13.default.createElement("p", null, "following"), /* @__PURE__ */ import_react13.default.createElement("p", null, stats2.followingCount)), /* @__PURE__ */ import_react13.default.createElement("div", null, /* @__PURE__ */ import_react13.default.createElement("p", null, "followers"), /* @__PURE__ */ import_react13.default.createElement("p", null, stats2.followerCount)), /* @__PURE__ */ import_react13.default.createElement("div", null, /* @__PURE__ */ import_react13.default.createElement("p", null, "likes"), /* @__PURE__ */ import_react13.default.createElement("p", null, stats2.heartCount)))), /* @__PURE__ */ import_react13.default.createElement(VideoGrid_default, {
      setIsError
    }), /* @__PURE__ */ import_react13.default.createElement(Link, {
      className: "link",
      to: "/"
    }, /* @__PURE__ */ import_react13.default.createElement("p", null, "Feed")), /* @__PURE__ */ import_react13.default.createElement(Link, {
      className: "link-mobile",
      to: "/"
    }, "Feed"), /* @__PURE__ */ import_react13.default.createElement(ErrorToast_default, {
      open: isError
    }));
  };
  var Profile_default = Profile;

  // src/assets/styles/index.js
  var styles_default = We`
    html {
        font-family: Arial, Helvetica, sans-serif;
    }

    body {
        line-height: 1.5;
        color: ${({ theme }) => theme.filling};
        transition: color 0.3s;
    }

    a {
        text-decoration: none;
        color: inherit;
    }
`;

  // node_modules/@mui/material/Switch/Switch.js
  var React37 = __toESM(require_react());
  var import_prop_types18 = __toESM(require_prop_types());
  var import_clsx13 = __toESM(require_clsx());
  var import_utils18 = __toESM(require_utils());
  var import_core23 = __toESM(require_node3());
  var import_system12 = __toESM(require_system());

  // node_modules/@mui/material/internal/SwitchBase.js
  var React36 = __toESM(require_react());
  var import_prop_types17 = __toESM(require_prop_types());
  var import_clsx12 = __toESM(require_clsx());
  var import_utils17 = __toESM(require_utils());
  var import_core21 = __toESM(require_node3());

  // node_modules/@mui/material/utils/useControlled.js
  var import_utils16 = __toESM(require_utils());
  var useControlled_default = import_utils16.unstable_useControlled;

  // node_modules/@mui/material/FormControl/useFormControl.js
  var React35 = __toESM(require_react());

  // node_modules/@mui/material/FormControl/FormControlContext.js
  var React34 = __toESM(require_react());
  var FormControlContext = /* @__PURE__ */ React34.createContext();
  if (true) {
    FormControlContext.displayName = "FormControlContext";
  }
  var FormControlContext_default = FormControlContext;

  // node_modules/@mui/material/FormControl/useFormControl.js
  function useFormControl() {
    return React35.useContext(FormControlContext_default);
  }

  // node_modules/@mui/material/internal/switchBaseClasses.js
  var import_core20 = __toESM(require_node3());
  function getSwitchBaseUtilityClass(slot) {
    return (0, import_core20.generateUtilityClass)("PrivateSwitchBase", slot);
  }
  var switchBaseClasses = (0, import_core20.generateUtilityClasses)("PrivateSwitchBase", ["root", "checked", "disabled", "input", "edgeStart", "edgeEnd"]);

  // node_modules/@mui/material/internal/SwitchBase.js
  var import_jsx_runtime29 = __toESM(require_jsx_runtime());
  var import_jsx_runtime30 = __toESM(require_jsx_runtime());
  var _excluded19 = ["autoFocus", "checked", "checkedIcon", "className", "defaultChecked", "disabled", "disableFocusRipple", "edge", "icon", "id", "inputProps", "inputRef", "name", "onBlur", "onChange", "onFocus", "readOnly", "required", "tabIndex", "type", "value"];
  var useUtilityClasses10 = (ownerState) => {
    const {
      classes,
      checked,
      disabled,
      edge
    } = ownerState;
    const slots = {
      root: ["root", checked && "checked", disabled && "disabled", edge && `edge${capitalize_default(edge)}`],
      input: ["input"]
    };
    return (0, import_core21.unstable_composeClasses)(slots, getSwitchBaseUtilityClass, classes);
  };
  var SwitchBaseRoot = styled_default(ButtonBase_default, {
    skipSx: true
  })(({
    ownerState
  }) => _extends3({
    padding: 9,
    borderRadius: "50%"
  }, ownerState.edge === "start" && {
    marginLeft: ownerState.size === "small" ? -3 : -12
  }, ownerState.edge === "end" && {
    marginRight: ownerState.size === "small" ? -3 : -12
  }));
  var SwitchBaseInput = styled_default("input", {
    skipSx: true
  })({
    cursor: "inherit",
    position: "absolute",
    opacity: 0,
    width: "100%",
    height: "100%",
    top: 0,
    left: 0,
    margin: 0,
    padding: 0,
    zIndex: 1
  });
  var SwitchBase = /* @__PURE__ */ React36.forwardRef(function SwitchBase2(props, ref) {
    const {
      autoFocus,
      checked: checkedProp,
      checkedIcon,
      className,
      defaultChecked,
      disabled: disabledProp,
      disableFocusRipple = false,
      edge = false,
      icon,
      id,
      inputProps,
      inputRef,
      name,
      onBlur,
      onChange,
      onFocus,
      readOnly,
      required,
      tabIndex,
      type,
      value
    } = props, other = _objectWithoutPropertiesLoose2(props, _excluded19);
    const [checked, setCheckedState] = useControlled_default({
      controlled: checkedProp,
      default: Boolean(defaultChecked),
      name: "SwitchBase",
      state: "checked"
    });
    const muiFormControl = useFormControl();
    const handleFocus = (event) => {
      if (onFocus) {
        onFocus(event);
      }
      if (muiFormControl && muiFormControl.onFocus) {
        muiFormControl.onFocus(event);
      }
    };
    const handleBlur = (event) => {
      if (onBlur) {
        onBlur(event);
      }
      if (muiFormControl && muiFormControl.onBlur) {
        muiFormControl.onBlur(event);
      }
    };
    const handleInputChange = (event) => {
      if (event.nativeEvent.defaultPrevented) {
        return;
      }
      const newChecked = event.target.checked;
      setCheckedState(newChecked);
      if (onChange) {
        onChange(event, newChecked);
      }
    };
    let disabled = disabledProp;
    if (muiFormControl) {
      if (typeof disabled === "undefined") {
        disabled = muiFormControl.disabled;
      }
    }
    const hasLabelFor = type === "checkbox" || type === "radio";
    const ownerState = _extends3({}, props, {
      checked,
      disabled,
      disableFocusRipple,
      edge
    });
    const classes = useUtilityClasses10(ownerState);
    return /* @__PURE__ */ (0, import_jsx_runtime30.jsxs)(SwitchBaseRoot, _extends3({
      component: "span",
      className: (0, import_clsx12.default)(classes.root, className),
      centerRipple: true,
      focusRipple: !disableFocusRipple,
      disabled,
      tabIndex: null,
      role: void 0,
      onFocus: handleFocus,
      onBlur: handleBlur,
      ownerState,
      ref
    }, other, {
      children: [/* @__PURE__ */ (0, import_jsx_runtime29.jsx)(SwitchBaseInput, _extends3({
        autoFocus,
        checked: checkedProp,
        defaultChecked,
        className: classes.input,
        disabled,
        id: hasLabelFor && id,
        name,
        onChange: handleInputChange,
        readOnly,
        ref: inputRef,
        required,
        ownerState,
        tabIndex,
        type
      }, type === "checkbox" && value === void 0 ? {} : {
        value
      }, inputProps)), checked ? checkedIcon : icon]
    }));
  });
  true ? SwitchBase.propTypes = {
    autoFocus: import_prop_types17.default.bool,
    checked: import_prop_types17.default.bool,
    checkedIcon: import_prop_types17.default.node.isRequired,
    classes: import_prop_types17.default.object,
    className: import_prop_types17.default.string,
    defaultChecked: import_prop_types17.default.bool,
    disabled: import_prop_types17.default.bool,
    disableFocusRipple: import_prop_types17.default.bool,
    edge: import_prop_types17.default.oneOf(["end", "start", false]),
    icon: import_prop_types17.default.node.isRequired,
    id: import_prop_types17.default.string,
    inputProps: import_prop_types17.default.object,
    inputRef: import_utils17.refType,
    name: import_prop_types17.default.string,
    onBlur: import_prop_types17.default.func,
    onChange: import_prop_types17.default.func,
    onFocus: import_prop_types17.default.func,
    readOnly: import_prop_types17.default.bool,
    required: import_prop_types17.default.bool,
    sx: import_prop_types17.default.object,
    tabIndex: import_prop_types17.default.oneOfType([import_prop_types17.default.number, import_prop_types17.default.string]),
    type: import_prop_types17.default.string.isRequired,
    value: import_prop_types17.default.any
  } : void 0;
  var SwitchBase_default = SwitchBase;

  // node_modules/@mui/material/Switch/switchClasses.js
  var import_core22 = __toESM(require_node3());
  function getSwitchUtilityClass(slot) {
    return (0, import_core22.generateUtilityClass)("MuiSwitch", slot);
  }
  var switchClasses = (0, import_core22.generateUtilityClasses)("MuiSwitch", ["root", "edgeStart", "edgeEnd", "switchBase", "colorPrimary", "colorSecondary", "sizeSmall", "sizeMedium", "checked", "disabled", "input", "thumb", "track"]);
  var switchClasses_default = switchClasses;

  // node_modules/@mui/material/Switch/Switch.js
  var import_jsx_runtime31 = __toESM(require_jsx_runtime());
  var import_jsx_runtime32 = __toESM(require_jsx_runtime());
  var _excluded20 = ["className", "color", "edge", "size", "sx"];
  var useUtilityClasses11 = (ownerState) => {
    const {
      classes,
      edge,
      size,
      color,
      checked,
      disabled
    } = ownerState;
    const slots = {
      root: ["root", edge && `edge${capitalize_default(edge)}`, `size${capitalize_default(size)}`],
      switchBase: ["switchBase", `color${capitalize_default(color)}`, checked && "checked", disabled && "disabled"],
      thumb: ["thumb"],
      track: ["track"],
      input: ["input"]
    };
    const composedClasses = (0, import_core23.unstable_composeClasses)(slots, getSwitchUtilityClass, classes);
    return _extends3({}, classes, composedClasses);
  };
  var SwitchRoot = styled_default("span", {
    name: "MuiSwitch",
    slot: "Root",
    overridesResolver: (props, styles2) => {
      const {
        ownerState
      } = props;
      return [styles2.root, ownerState.edge && styles2[`edge${capitalize_default(ownerState.edge)}`], styles2[`size${capitalize_default(ownerState.size)}`]];
    }
  })(({
    ownerState
  }) => _extends3({
    display: "inline-flex",
    width: 34 + 12 * 2,
    height: 14 + 12 * 2,
    overflow: "hidden",
    padding: 12,
    boxSizing: "border-box",
    position: "relative",
    flexShrink: 0,
    zIndex: 0,
    verticalAlign: "middle",
    "@media print": {
      colorAdjust: "exact"
    }
  }, ownerState.edge === "start" && {
    marginLeft: -8
  }, ownerState.edge === "end" && {
    marginRight: -8
  }, ownerState.size === "small" && {
    width: 40,
    height: 24,
    padding: 7,
    [`& .${switchClasses_default.thumb}`]: {
      width: 16,
      height: 16
    },
    [`& .${switchClasses_default.switchBase}`]: {
      padding: 4,
      [`&.${switchClasses_default.checked}`]: {
        transform: "translateX(16px)"
      }
    }
  }));
  var SwitchSwitchBase = styled_default(SwitchBase_default, {
    name: "MuiSwitch",
    slot: "SwitchBase",
    overridesResolver: (props, styles2) => {
      const {
        ownerState
      } = props;
      return [styles2.switchBase, {
        [`& .${switchClasses_default.input}`]: styles2.input
      }, ownerState.color !== "default" && styles2[`color${capitalize_default(ownerState.color)}`]];
    }
  })(({
    theme
  }) => ({
    position: "absolute",
    top: 0,
    left: 0,
    zIndex: 1,
    color: theme.palette.mode === "light" ? theme.palette.common.white : theme.palette.grey[300],
    transition: theme.transitions.create(["left", "transform"], {
      duration: theme.transitions.duration.shortest
    }),
    [`&.${switchClasses_default.checked}`]: {
      transform: "translateX(20px)"
    },
    [`&.${switchClasses_default.disabled}`]: {
      color: theme.palette.mode === "light" ? theme.palette.grey[100] : theme.palette.grey[600]
    },
    [`&.${switchClasses_default.checked} + .${switchClasses_default.track}`]: {
      opacity: 0.5
    },
    [`&.${switchClasses_default.disabled} + .${switchClasses_default.track}`]: {
      opacity: theme.palette.mode === "light" ? 0.12 : 0.2
    },
    [`& .${switchClasses_default.input}`]: {
      left: "-100%",
      width: "300%"
    }
  }), ({
    theme,
    ownerState
  }) => _extends3({
    "&:hover": {
      backgroundColor: (0, import_system12.alpha)(theme.palette.action.active, theme.palette.action.hoverOpacity),
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    }
  }, ownerState.color !== "default" && {
    [`&.${switchClasses_default.checked}`]: {
      color: theme.palette[ownerState.color].main,
      "&:hover": {
        backgroundColor: (0, import_system12.alpha)(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),
        "@media (hover: none)": {
          backgroundColor: "transparent"
        }
      },
      [`&.${switchClasses_default.disabled}`]: {
        color: theme.palette.mode === "light" ? (0, import_system12.lighten)(theme.palette[ownerState.color].main, 0.62) : (0, import_system12.darken)(theme.palette[ownerState.color].main, 0.55)
      }
    },
    [`&.${switchClasses_default.checked} + .${switchClasses_default.track}`]: {
      backgroundColor: theme.palette[ownerState.color].main
    }
  }));
  var SwitchTrack = styled_default("span", {
    name: "MuiSwitch",
    slot: "Track",
    overridesResolver: (props, styles2) => styles2.track
  })(({
    theme
  }) => ({
    height: "100%",
    width: "100%",
    borderRadius: 14 / 2,
    zIndex: -1,
    transition: theme.transitions.create(["opacity", "background-color"], {
      duration: theme.transitions.duration.shortest
    }),
    backgroundColor: theme.palette.mode === "light" ? theme.palette.common.black : theme.palette.common.white,
    opacity: theme.palette.mode === "light" ? 0.38 : 0.3
  }));
  var SwitchThumb = styled_default("span", {
    name: "MuiSwitch",
    slot: "Thumb",
    overridesResolver: (props, styles2) => styles2.thumb
  })(({
    theme
  }) => ({
    boxShadow: theme.shadows[1],
    backgroundColor: "currentColor",
    width: 20,
    height: 20,
    borderRadius: "50%"
  }));
  var Switch = /* @__PURE__ */ React37.forwardRef(function Switch2(inProps, ref) {
    const props = useThemeProps({
      props: inProps,
      name: "MuiSwitch"
    });
    const {
      className,
      color = "primary",
      edge = false,
      size = "medium",
      sx
    } = props, other = _objectWithoutPropertiesLoose2(props, _excluded20);
    const ownerState = _extends3({}, props, {
      color,
      edge,
      size
    });
    const classes = useUtilityClasses11(ownerState);
    const icon = /* @__PURE__ */ (0, import_jsx_runtime31.jsx)(SwitchThumb, {
      className: classes.thumb,
      ownerState
    });
    return /* @__PURE__ */ (0, import_jsx_runtime32.jsxs)(SwitchRoot, {
      className: (0, import_clsx13.default)(classes.root, className),
      sx,
      ownerState,
      children: [/* @__PURE__ */ (0, import_jsx_runtime31.jsx)(SwitchSwitchBase, _extends3({
        type: "checkbox",
        icon,
        checkedIcon: icon,
        ref,
        ownerState
      }, other, {
        classes: _extends3({}, classes, {
          root: classes.switchBase
        })
      })), /* @__PURE__ */ (0, import_jsx_runtime31.jsx)(SwitchTrack, {
        className: classes.track,
        ownerState
      })]
    });
  });
  true ? Switch.propTypes = {
    checked: import_prop_types18.default.bool,
    checkedIcon: import_prop_types18.default.node,
    classes: import_prop_types18.default.object,
    className: import_prop_types18.default.string,
    color: import_prop_types18.default.oneOfType([import_prop_types18.default.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), import_prop_types18.default.string]),
    defaultChecked: import_prop_types18.default.bool,
    disabled: import_prop_types18.default.bool,
    disableRipple: import_prop_types18.default.bool,
    edge: import_prop_types18.default.oneOf(["end", "start", false]),
    icon: import_prop_types18.default.node,
    id: import_prop_types18.default.string,
    inputProps: import_prop_types18.default.object,
    inputRef: import_utils18.refType,
    onChange: import_prop_types18.default.func,
    required: import_prop_types18.default.bool,
    size: import_prop_types18.default.oneOfType([import_prop_types18.default.oneOf(["medium", "small"]), import_prop_types18.default.string]),
    sx: import_prop_types18.default.oneOfType([import_prop_types18.default.arrayOf(import_prop_types18.default.oneOfType([import_prop_types18.default.func, import_prop_types18.default.object])), import_prop_types18.default.func, import_prop_types18.default.object]),
    value: import_prop_types18.default.any
  } : void 0;
  var Switch_default = Switch;

  // src/components/ThemeSwitch/index.js
  var sunImage = `url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" height="20" width="20" viewBox="0 0 20 20"><path fill="    ${encodeURIComponent("#fff")}    " d="M4.2 2.5l-.7 1.8-1.8.7 1.8.7.7 1.8.6-1.8L6.7 5l-1.9-.7-.6-1.8zm15 8.3a6.7 6.7 0 11-6.6-6.6 5.8 5.8 0 006.6 6.6z"/></svg>')`;
  var moonImage = `url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" height="20" width="20" viewBox="0 0 20 20"><path fill="    ${encodeURIComponent("#fff")}    " d="M9.305 1.667V3.75h1.389V1.667h-1.39zm-4.707 1.95l-.982.982L5.09 6.072l.982-.982-1.473-1.473zm10.802 0L13.927 5.09l.982.982 1.473-1.473-.982-.982zM10 5.139a4.872 4.872 0 00-4.862 4.86A4.872 4.872 0 0010 14.862 4.872 4.872 0 0014.86 10 4.872 4.872 0 0010 5.139zm0 1.389A3.462 3.462 0 0113.471 10a3.462 3.462 0 01-3.473 3.472A3.462 3.462 0 016.527 10 3.462 3.462 0 0110 6.528zM1.665 9.305v1.39h2.083v-1.39H1.666zm14.583 0v1.39h2.084v-1.39h-2.084zM5.09 13.928L3.616 15.4l.982.982 1.473-1.473-.982-.982zm9.82 0l-.982.982 1.473 1.473.982-.982-1.473-1.473zM9.305 16.25v2.083h1.389V16.25h-1.39z"/></svg>')`;
  var ThemeSwitch = styled_components_browser_esm_default(Switch_default)`
    height: 34px;
    padding: 7px;

    && {
        width: 66px;
        position: absolute;
        top: 48px;
        left: 16px;
        z-index: 1;

        @media (min-width: 980px) {
            top: 24px;
            left: 170px;
        }
    }

    .MuiSwitch-switchBase {
        margin: 1px;
        padding: 0;
        transform: translateX(6px);

        &.Mui-checked {
            color: #fff;
            transform: translateX(26px);
            
            .MuiSwitch-thumb::before {
                background-image: ${sunImage};
            }

            & + .MuiSwitch-track {
                opacity: 1;
                background-color: ${({ theme }) => theme.mode === "dark" ? "#8796a5" : "#aab4be"};
            }
        }
    }

    .MuiSwitch-thumb {
        background-color: ${({ theme }) => theme.mode === "dark" ? "rgb(156, 39, 176)" : "#001e3c"};
        width: 32px;
        height: 32px;

        &::before {
            content: '';
            position: absolute;
            width: 100%;
            height: 100%;
            left: 0;
            top: 0;
            background-repeat: no-repeat;
            background-position: center;
            background-image: ${moonImage};
        }
    }

    .MuiSwitch-track {
        opacity: 1;
        background-color: ${({ theme }) => theme.mode === "dark" ? "#8796a5" : "#aab4be"};
        border-radius: 10px;
    }
`;
  var ThemeSwitch_default = ThemeSwitch;

  // src/hooks/useTheme.js
  var import_react14 = __toESM(require_react());

  // src/assets/styles/theme.js
  var theme_default = {
    light: {
      mode: "light",
      feedPageBackground: "beige",
      profilePageBackground: "#f9f7fc",
      filling: "#363537",
      navBorder: "grey"
    },
    dark: {
      mode: "dark",
      feedPageBackground: "#363537",
      profilePageBackground: "#363537",
      filling: "#fafafa",
      navBorder: "rgb(156, 39, 176)"
    }
  };

  // src/hooks/useTheme.js
  var useTheme2 = (initialTheme) => {
    let approvedInitialTheme = initialTheme;
    if (initialTheme !== "light" && initialTheme !== "dark") {
      approvedInitialTheme = "light";
    }
    const [theme, setTheme] = (0, import_react14.useState)(approvedInitialTheme);
    const applyTheme = (newTheme) => {
      window.localStorage.setItem("theme", newTheme);
      setTheme(newTheme);
    };
    const toggleTheme = () => applyTheme(theme === "light" ? "dark" : "light");
    return { theme: theme_default[theme], toggleTheme, isDark: theme === "dark" };
  };
  var useTheme_default = useTheme2;

  // src/components/App/index.jsx
  var App = function() {
    const { theme, toggleTheme, isDark } = useTheme_default(window.localStorage.getItem("theme") || "light");
    return /* @__PURE__ */ import_react15.default.createElement(Fe, {
      theme
    }, /* @__PURE__ */ import_react15.default.createElement(styles_default, null), /* @__PURE__ */ import_react15.default.createElement(ThemeSwitch_default, {
      onClick: toggleTheme,
      sx: { m: 1 },
      checked: isDark
    }), /* @__PURE__ */ import_react15.default.createElement(HashRouter, null, /* @__PURE__ */ import_react15.default.createElement(Routes, null, /* @__PURE__ */ import_react15.default.createElement(Route, {
      path: "/",
      element: /* @__PURE__ */ import_react15.default.createElement(Feed_default, null)
    }), /* @__PURE__ */ import_react15.default.createElement(Route, {
      path: "/:userId",
      element: /* @__PURE__ */ import_react15.default.createElement(Profile_default, null)
    }), /* @__PURE__ */ import_react15.default.createElement(Route, {
      path: "*",
      element: /* @__PURE__ */ import_react15.default.createElement(Navigate, {
        to: "/"
      })
    }))));
  };
  var App_default = App;

  // src/index.jsx
  import_react_dom2.default.render(/* @__PURE__ */ import_react16.default.createElement(import_react16.default.StrictMode, null, /* @__PURE__ */ import_react16.default.createElement(App_default, null)), document.getElementById("root"));
})();
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
/**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */
/**
 * React Router DOM v6.0.2
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
/**
 * React Router v6.0.2
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
/** @license MUI v5.0.0-alpha.54
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/** @license MUI v5.1.0
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/** @license React v0.20.2
 * scheduler-tracing.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/** @license React v0.20.2
 * scheduler.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/** @license React v17.0.2
 * react-dom.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/** @license React v17.0.2
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/** @license React v17.0.2
 * react-jsx-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/** @license React v17.0.2
 * react.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
